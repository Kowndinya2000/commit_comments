    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Update jsonpickle version in dev-requirements (#702)
    
    That should fix readthedocs
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    Update pymongo version (#687)
    
    * Update pymongo version
    
    Use Collection#count_documents instead of Cursor#count. Also upgrade
    custom mocks to new mongomock code.
    
    * Add debug logging to queue observer
    
    * Remove dead code and don't use fstring
    
    * Remove fstrings for real
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Making boto3 optional. (#648)
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Make pymongo optional again (#519)
    
    * Make pymongo optional again
    
    * Add test for running without optional deps
    
    * Add new tox env to travis
    
    * Add cpuinfo back in
    update dependencies to safer version of SQLAlchemy
    
    see https://nvd.nist.gov/vuln/detail/CVE-2019-7548
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    added colorama to dev-requirements.txt
    
    needed to fix readthedocs build
    Make pytest 4.3 work
    
    Remove the outdated py dependency and avoid calling fixtures directly.
    Don't fail CI because of coverage
    
    Also update pytest version
    upgraded to newer pyyaml version (due to security alert)
    
    In PyYAML before 4.1, the yaml.load() API could execute arbitrary code. In other words, yaml.safe_load is not used.
    Keep track of the last character of self.cout in FileStorageObserver
    when self.save_cout is called (#383)
    meta-data was off
    removed dependency on six
    fixed dependencies
    optimized dependencies and tox and travis build
    Update dev requirements
    added jsonpickle to dev-requirements
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    adjusted usage of temporary files in tests to also run on windows
    attempt to set up windows CI with appveyor
    added MIT license as a LICENSE.txt file
    Minor Patch release
    Update release date in HISTORY.rst
    Added draft for the 0.8 release HISTORY entry. (#674)
    
    * Added draft for the 0.8 release HISTORY entry.
    
    * list pathlib as internal change, and mention pep8 precommit hook
    Release 0.7.5
    
    This is the final release to support Python 2.7
    Bugfix release 0.7.4
    major bugfix release 0.7.3
    bumped version number and updated history
    updated history
    updated History and bumped version number
    fixed a problem with utf-8 symbols in stdout
    
    fixes #176
    return with exit code 1 if failed
    
    fixes #175
    updated version number and History and added a few credits
    fixed a problem with propagating config docs from ingredients
    
    fixes #140
    added feature for capturing ENVIRONMENT variables as part of host info
    
    fixes #160
    added storing intermediate results to heatbeat event
    added commandline option for changing the name
    added priority to observers
    preparation for the 0.7 beta1 release
    updated documentation
    added an option to always print the configuration first
    updated HISTORY and added a new WIP chapter to docs
    made tinydb dependency optional
    adapted signature to deal with annotations and kw_only arguments. Fixes #118
    added jsonpickle dependency
    release 0.6.10
    
    * added documentation for interactive mode and captured out filter
    * updated history
    * changed version number
    added interactive=True flag to ingredients and experiments
    (cherry picked from commit 3573886)
    first beta for 0.7 release
    tidied up capturing a bit
    refactoring and tidying up
    refactored handling of commandline options
    allow passing unparsed command-line string to ex.run_commandline
    added a format specifier to DB entries
    added explicit (but optional) name to artifacts
    
    fixes #95
    fixed some examples and documentation to reflect name being optional
    added interactive=True flag to ingredients and experiments
    fixed problem with adjusting the loglevels
    Bugfix release 0.6.9
    
    fixed two issues that were introduced in 0.6.8
    added a more helpful message when using -m/-mongo_db and the pymongo package is missing
    updated history
    bumped version number and updated HISTORY
    updated history
    Bugfix release 0.6.9
    
    fixed two issues that were introduced in 0.6.8
    added a more helpful message when using -m/-mongo_db and the pymongo package is missing
    updated history
    bumped version number and updated HISTORY
    updated history
    hotfix release
    bump the version number
    added some documentation for custom flags and updated the history
    bugfix release 0.6.5
    added history information
    bugfix release 0.6.3
    bugfix release 0.6.2
    further improved the error-handling of the MongoObserver. fixes #83
    updated HISTORY and overhauled documentation for experiment and configuration
    changed default prefix for Mongo Collections and made it configuarable via command-line
    unified some spellings and added more api-documentation
    updated the history
    added new features to changelog
    added bugfix to changelog
    updated history and adjusted version number
    config entries that are unchanged through config updates are no longer marked as modified by print_config
    added a warning for ignored attempts to overwrite ingredients. fixes #52
    added HISTORY.rst
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    Some cleanup in the setup.py (#666)
    
    * Some cleanup in the setup.py
    
    * Added requirements to the manifest.
    Making boto3 optional. (#648)
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Make pymongo optional again (#519)
    
    * Make pymongo optional again
    
    * Add test for running without optional deps
    
    * Add new tox env to travis
    
    * Add cpuinfo back in
    Bug-fixes (#496)
    
    * Added missing pymongo dependency
    
    * Fixed broken tests.
    
    * exit() is only defined when running interactively in terminal, sys.exit is better.
    
    * Update tests/test_dependencies.py
    
    Revert hash
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    use colorama
    
    Should work on 256 and 16 color terminals.
    
    [Colorama](https://pypi.org/project/colorama/) has no dependencies and
    works on both 2.7 and 3.3+, so we should be good ;)
    meta-data was off
    removed dependency on six
    fixed dependencies
    optimized dependencies and tox and travis build
    Some cleanup in the setup.py (#666)
    
    * Some cleanup in the setup.py
    
    * Added requirements to the manifest.
    small fix in README
    updated setup.py, README and MANIFEST
    set up tox testing and fixed some setup and python 3 issues
    removed unnecessary 'setup.py test' support because it was breaking a lot
    removed unnecessary 'setup.py test' support because it was breaking a lot
    added a Makefile
    Update black to stable version (#688)
    Test against release version of tf 2 (#678)
    
    * Use tf 2.0 release
    
    * Include testing of optional
    
    * Add test against gpu
    Removed boto as dependency. (#662)
    
    Removed boto as mandatory dependency.
    Added a check for pre-commit in the CI and added flake8 in the pre-commit hook. (#645)
    
    * Added a check for pre-commit.
    
    * Changed ubuntu version.
    
    * Used python 3
    
    * Format.
    
    * Used py36
    
    * Useless line.
    
    * Added the flake8 pre-commit
    
    * Added some other plugins.
    
    * Put more args in the config file.
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Test against tf2 rc0 (#613)
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added the test for the import error. (#547)
    
    * Added the test for the import error.
    
    * Enabled observers's tests.
    
    * Better error message.
    
    * Fixed imports in tests.
    
    * Fix pep8
    
    * Pep8 again
    
    * Changed import.
    Add more tests for tf (#539)
    
    * More tests for tf
    
    * Fix flake8 errors
    
    * Beautify
    
    * Fix flake8 errors again
    Make pymongo optional again (#519)
    
    * Make pymongo optional again
    
    * Add test for running without optional deps
    
    * Add new tox env to travis
    
    * Add cpuinfo back in
    removed lots of py2 compatibility code
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    Make coveralls conditional the tox way
    Try passing all env variables
    Make pytest 4.3 work
    
    Remove the outdated py dependency and avoid calling fixtures directly.
    Change dir to try to fix error
    Don't fail CI because of coverage
    
    Also update pytest version
    Changed version to enable installation from git+https style pip url
    ignore W504 in setup.cfg
    fix flake8 errors & warnings
    use colorama
    
    Should work on 256 and 16 color terminals.
    
    [Colorama](https://pypi.org/project/colorama/) has no dependencies and
    works on both 2.7 and 3.3+, so we should be good ;)
    meta-data was off
    fd stdout capturing now starts tee in new subprocess group to avoid problems with KeyboardInterrupts
    
    fixes #149
    some build fixes
    optimized dependencies and tox and travis build
    fourth attempt to fix travis python3.5 build
    second attempt to fix travis python3.5 build
    added python 3.5 testing to tox, travis and appveyor
    made tinydb dependency optional
    Attempt to fix tox test running
    added jsonpickle dependency
    release 0.6.10
    
    * added documentation for interactive mode and captured out filter
    * updated history
    * changed version number
    first beta for 0.7 release
    added documentation for the FileStorageObserver and refactored it slightly
    some tidying up
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    removed pep8 tests from tox and travis because they randomly fail and are already covered by flake8 tests
    removed pep8 tests from tox and travis because they randomly fail and are already covered by flake8 tests
    trying to fix the coveralls integration
    fixed dependency name for pyyaml
    added test for PickleNumpyArrays SONManipulator
    pep8 fixes and skip tests if pymongo is missing
    added missing dependencies for coverage env in tox
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    fixed tests
    fixed python3 compatibility of non_unicode_repr
    added pep8 and coverage environments to tox and travis
    added flake8 to tox and fixed detected problems
    changed behaviour of named config scopes again to reuse chained execution code.
    fixed the tests
    removed dependence on blessings. fixes #27
    made pymongo dependency optional. fixes #31
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    removed jinja2 dependency
    removing traces of sperment
    added new tox dependencies
    WIP: migrating to py.test
    set up tox testing and fixed some setup and python 3 issues
    Make stale time longer (#484)
    
    30 days were admittedly a bit optimistic
    Exempt some labels from stalebot (#423)
    
    I think stalebot is best used for questions that are answered and not
    closed. For issues that are given labels and therefore are accepted as
    significant by maintainers, we should not just close them. Therefore
    most labels are exempt now.
    Add stalebot integration
    
    As some issue tend to become stale or are simply abandoned I propose to
    add the stalebot integration https://github.com/probot/stale. This still
    requires the app to be activated under https://github.com/apps/stale.
    removed lots of py2 compatibility code
    added missing donotimport file for test_utils
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Removed get_version_heuristics (#594)
    
    * Removed get_version_heuristics
    
    * Removed unused variable.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added an azure pipeline configuration file. (#575)
    
    Added an azure pipeline configuration file.
    Bug-fixes (#496)
    
    * Added missing pymongo dependency
    
    * Fixed broken tests.
    
    * exit() is only defined when running interactively in terminal, sys.exit is better.
    
    * Update tests/test_dependencies.py
    
    Revert hash
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    removed lots of py2 compatibility code
    Support custom experiment base directory
    added host_info to queued events
    (needed for the python version)
    added mainfile to experiment info
    changed json format of dependencies
    more dependency tests to reach full coverage
    made the checking for local sources stricter eliminating some false positives.
    
    fixes #85
    more documentation for named updates
    changed default prefix for Mongo Collections and made it configuarable via command-line
    sorted imports using isort
    very basic resource handling
    fixed tests
    documented example for randomness and fixed tests
    Further testing of the dependencies module
    WIP: collect dependencies and sources of ingredients pass them to observer
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    Bug-fixes (#496)
    
    * Added missing pymongo dependency
    
    * Fixed broken tests.
    
    * exit() is only defined when running interactively in terminal, sys.exit is better.
    
    * Update tests/test_dependencies.py
    
    Revert hash
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    removed lots of py2 compatibility code
    removed stray print() statement
    speed up tests by deactivating GPU info
    made stdout capture mode configurable and set the windows default to python-only
    adapted signature to deal with annotations and kw_only arguments. Fixes #118
    tested and fixed SqlObserver
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    fixed the tests
    fixed example discovery
    MissingDependencyMock is now callable
    sorted imports using isort
    fixed tests
    documented example for randomness and fixed tests
    refactored example test generation using the pytest_generate_tests hook
    Fix save_config command (Fixes #747) (#765)
    
    * Fix save_config command (Fixes #747)
    
    * Add testcase for save_config
    
    * Deepcopy config in save_config. Fixes #756 and #757
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    use colorama
    
    Should work on 256 and 16 color terminals.
    
    [Colorama](https://pypi.org/project/colorama/) has no dependencies and
    works on both 2.7 and 3.3+, so we should be good ;)
    Add a generic gathering function to Ingredient
    
     - each gathering function now uses traverse_ingredients
     - each gathering function now raises a CircularDependencyError when a circular dependency is present
     - each generator function with signature (self, ingredient) can be turned into a gathering function by using a simple decorator
     - the path (prefix) of the experiment is removed from the names of the gathered items
       - the argument hide_path in print_named_configs is now obsolete
    Add command print_named_configs
    cosmetic refactoring
    Prettify docstring config printing
    fixed tests for ConfigEntry and PathEntry
    refactored and documented commands.py
    sorted imports using isort
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    WIP: collect dependencies and sources of ingredients pass them to observer
    refactored config modifications and fixed problem with displaying seed modifications
    added a Makefile
    more command tests
    refactored and tested print_config command
    Add more tests for tf (#539)
    
    * More tests for tf
    
    * Fix flake8 errors
    
    * Beautify
    
    * Fix flake8 errors again
    removed lots of py2 compatibility code
    Remove MissingDependencyMock. (#451)
    cosmetic refactoring
    fixed some pep8 and flake8 errors
    refactored optional and added more tests
    Fixed the circular imports. (#640)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    workaround the inability of docopt to deal with spaces in program names
    
    Docopt cannot handle spaces in the program name of the usage, even if escaped or quoted.
    Therefore we generate an internal_usage, that uses 'dummy' as the program name for parsing, and use the normal usage only for printing the help.
    
    fixes #271
    refactored handling of commandline options
    changed name of disable-suspicious-warnings arg to force
    added an option to disable suspicious changes warnings
    added beat_interval option and refactored commandline options a bit
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    fixed the tests
    more documentation for named updates
    changed default prefix for Mongo Collections and made it configuarable via command-line
    sorted imports using isort
    pep8 fixes
    changed path handling to make meta-experiment feasible. fixes #22
    fixed the tests for the changed commandline interface
    added some tests for utils and simplified a bit
    added log level flag. fixes #4
    refactored help treatment
    refactored argparser
    improved and simplified _convert_value
    factored out _convert_value function and added tests
    added basic implementation of help command
    simplified update parsing
    fixed lots of issues
    finished port to docopt
    WIP port to docopt
    refactored argparsing a bit
    added test for get_config_updates and improved it
    changed #!/usr/bin/python to #!/usr/bin/env python
    improved argparser tests
    WIP: change command line interface
    WIP: migrating to py.test
    set up tox testing and fixed some setup and python 3 issues
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Make format_filtered_stacktrace accept only default, always and never
    Improve coverage
    Python 2 compatibility
    Adjust tests to new error classes
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed deprecated ex.run_command
    removed lots of py2 compatibility code
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    Fixed named config overwrite for ingredients #281
    
    Adds config_update of subrunning Scaffolds to fixed when running ConfigScope. Fixes #281
    add test for multiple nested configs
    added test case for multiple named configs
    WIP: make named configs affect ingredients
    some refactoring and documenting
    more ingredient tests and some refactoring
    refurbished ingredients a bit
    sorted imports using isort
    moved config stuff to own package
    added a bit of documentation
    added rudimentary add_artifact function
    running experiments now returns the run instance
    pep8 fixes
    renamed module to ingredient. fixes #49
    fixed use of scaffolding and return type of ex.run()
    added some tests for utils and simplified a bit
    fixed hashbang python line
    capture no longer adds function directly to module
    fixed some tests
    made experiment a module
    very basic module implementation
    Added a check for pre-commit in the CI and added flake8 in the pre-commit hook. (#645)
    
    * Added a check for pre-commit.
    
    * Changed ubuntu version.
    
    * Used python 3
    
    * Format.
    
    * Used py36
    
    * Useless line.
    
    * Added the flake8 pre-commit
    
    * Added some other plugins.
    
    * Put more args in the config file.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    Add command print_named_configs
    fixed a problem with propagating config docs from ingredients
    
    fixes #140
    switched to jsonpickle based encoding. Solves #111
    changed json format of dependencies
    some style fixes
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    added add_named_config() method to add named configurations from dicts and files
    modified interface of add_config() to also cover adding config_files
    adjusted usage of temporary files in tests to also run on windows
    a couple of pep8 and flake8 fixes
    factored out ingredient to own file and finished testing it
    more ingredient tests
    more ingredient tests
    more ingredient tests and some refactoring
    added some tests for Ingredient
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Add test for empty metrics queue
    Simplify metrics logging: remove Sacred Message Queue
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    Add log_scalar method to Run and Experiment
    Rename x and y to steps and values
    
    Rename the two variables in the metrics collection to be consistend
    with the rest of the Metrics API
    Rename timestep to step
    Rename tests
    Prepare metrics data for storing into DB
    Add test for log_scalar_metric
    Add message queue for storing metrics (accuracy, loss etc)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    disabled the randomly failing stdout capturing test.
    
    Issue #289 still remains unresolved, but until I find a way to reproduce or
    fix this problem I want the tests to pass, so I am disabling this test for now.
    Add option to add metadata to artifacts
    
    A dict with custom metadata can now be added to artifacts. This only has
    an effect for the MongoObserver. The metadata will appear in the
    `.metadata` attribute of the file like objects retrieved with pymongo
    from gridfs.
    TST: Adds flush after run
    TST: Small fix
    TST: Fix
    potentially fixed the "heartbeat doesn't exit" bug
    
    (cherry picked from commit df16de0)
    fixed a copy and paste error
    some more test fixing
    more skipping fd capture mode under windows
    skip fd capture test under windows
    added a test for stdout capturing and fixed two problems with the windows tests
    added priority to observers
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    restructured stdout capturing such that the final capture always contains everything
    skipping both captured_out_filter tests on windows
    
    no idea why this test randomly fails under windows.
    disabled pytest capturing for the captured_out filter tests
    simplified captured out implementation hopefully also fixing the problems with windows
    Added facility to apply a filter function to captured output.
    added a base-class for custom interrupts and made TimeoutInterrupt inherit from it.
    
    also added some tests
    cross platform support and some refactoring of output capturing
    WIP: improve captured out handling
    added explicit (but optional) name to artifacts
    
    fixes #95
    added _id to runs that is set by the first observer
    fixed some tests
    added meta_info
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    fixed also the tests
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    fixed another tempfile problem
    adjusted usage of temporary files in tests to also run on windows
    added pre-run hooks and renamed a bit
    WIP: whetlab ingredient
    added test for PickleNumpyArrays SONManipulator
    added tests for run
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Use logging.basicConfig for logger setup
    WIP: improve captured out handling
    fixed some examples and documentation to reflect name being optional
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    some style fixes
    started explicitly testing experiment
    factored out ingredient to own file and finished testing it
    more ingredient tests
    more ingredient tests and some refactoring
    more test for the mongo observer
    WIP: testing observers
    Further testing of the dependencies module
    refactored example test generation using the pytest_generate_tests hook
    WIP: added example documentation to docs
    WIP: Better example documentation and testing
    WIP: Automatically test examples
    Do not convert carriage returns to newlines in captured output (#714)
    
    * Do not convert carriage returns to newlines in open files
    
    For Python 3, opening the captured output file should not convert \r into \n. See this issue: https://github.com/IDSIA/sacred/issues/673
    
    * Backwards compatibility of newline treatment with Python 2
    
    Also add test
    
    * Flush JSON writes in FileObserver
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Put back the code to get libc.
    Forgot to remove the import.
    Put the libc loading in the test.
    
    It's not needed on the user side,
    so let's not add complexity there.
    removed lots of py2 compatibility code
    disabled the randomly failing stdout capturing test.
    
    Issue #289 still remains unresolved, but until I find a way to reproduce or
    fix this problem I want the tests to pass, so I am disabling this test for now.
    potentially fixed stdout capture problem
    some more test fixing
    more skipping fd capture mode under windows
    fd stdout capturing now starts tee in new subprocess group to avoid problems with KeyboardInterrupts
    
    fixes #149
    refactored and patched stdout capturing and added a commandline-option
    Adapt test suite since tee_output_fd does not return the final output
    made stdout capture mode configurable and set the windows default to python-only
    removed lots of py2 compatibility code
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    some refactoring and pep8 fixes
    optimized dependencies and tox and travis build
    fixed host_info name collision problem
    made the host_info mechanism modular to allow for easy addition of custom host_info.
    
    should help with #112
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    added rudimentary pandas serializer
    added serializer test for tuples
    refactored handling config values
    Removed iter_path_split (#593)
    Removed module_is_imported as it is unused. (#592)
    
    * Removed module_is_imported as it is unused.
    
    * Removed unused import.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Using pathlib to simplify is_local_source. (#559)
    
    Using pathlib to simplify is_local_source.
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    proper handling of subpaths in named config evaluation of config updates
    
    fixes #297
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    Output filter must preserve only the last carriage return to parse output by chunk
    Fix test suite failure since parse output by chunk
    made stdout capture mode configurable and set the windows default to python-only
    added some more flushes in the hopes of fixing the random failures on travis and appveyor
    skip the experiment filter_captured_out test on windows.
    
    (no idea why it fails, but the same test for the run in test_run.py works)
    For some reason the line printed by libc.puts() randomly doesn't appear on windows. Skipping for now.
    added flush to tee test
    
    hopefully this will fix the random failures on windows
    different approach to circumvent pytests capturing to interfere with the tee test.
    
    hopefully this will also work on windows
    Add manually_sorted_keys parameter to iterate_flattened_separately
    Added facility to apply a filter function to captured output.
    some tidying up
    cross platform support and some refactoring of output capturing
    tidied up capturing a bit
    fixed a few test problems and achieved pypy compatibility
    added beat_interval option and refactored commandline options a bit
    some refactoring and documenting
    sorted imports using isort
    WIP: collect dependencies and sources of ingredients pass them to observer
    refactored and tested print_config command
    pep8 fixes
    fixed the tests
    flatten config updates before usage. fixes #48
    extracted is_prefix method
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    added some tests for utils and simplified a bit
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    regression test for exception in gather_sources
    
    see pull request #410
    log the final result
    more dependency tests to reach full coverage
    sorted imports using isort
    Further testing of the dependencies module
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    [API change] New way to create command line options. (#572)
    
    Changed API for creating command line options
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added test cases and a fix for Issue #409.  (#505)
    
    * Added test cases and a fix for issue-409. Recursively fill in the result with preset after setting in the conf
    
    * Added a user level interface test case
    
    * Removed reference to the issue
    removed lots of py2 compatibility code
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    add tests
    Adjust tests to new error classes
    BUG: Fixes #325
    BUG: Fixes #326
    don't collect empty config updates for ingredients
    
    fixes #290
    
    thanks @thequilo
    Handle empty dicts in config updates and named dicts.
    
    fixes #262
    refactored and patched stdout capturing and added a commandline-option
    consider nonexisting prefixes to be empty dicts instead of None
    
    fixes #153
    restructured stdout capturing such that the final capture always contains everything
    skipping both captured_out_filter tests on windows
    
    no idea why this test randomly fails under windows.
    fixed the skipif
    skip the experiment filter_captured_out test on windows.
    
    (no idea why it fails, but the same test for the run in test_run.py works)
    disabled pytest capturing for the captured_out filter tests
    added option_hook
    Added facility to apply a filter function to captured output.
    added very basic test for named configs
    tested and fixed captured function prefix handling for fail on unused config
    some pep8 fixes
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    added very basic test for named configs
    tested and fixed captured function prefix handling for fail on unused config
    some pep8 fixes
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    started explicitly testing experiment
    Support custom experiment base directory
    Support custom experiment base directory
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    stflow Rename and reorganise tests
    +log_summary_writer annotation, which looks for new tf.train.SummaryWriter instances
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Better import error message tinydb observer. (#554)
    
    * Better error message tinydb.
    
    * Made the separation for tinyfs.
    
    * Finished fixing imports.
    
    * Fixed imports.
    Added the test for the import error. (#547)
    
    * Added the test for the import error.
    
    * Enabled observers's tests.
    
    * Better error message.
    
    * Fixed imports in tests.
    
    * Fix pep8
    
    * Pep8 again
    
    * Changed import.
    Used new cli for tinydb. (#658)
    Remove .create() in tinydbobserver (#602)
    
    * Changed the api.
    
    * Changed call in test.
    
    * Changed the doc.
    
    * Missing parenthesis.
    
    * Forgot return.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Better import error message tinydb observer. (#554)
    
    * Better error message tinydb.
    
    * Made the separation for tinyfs.
    
    * Finished fixing imports.
    
    * Fixed imports.
    added host_info to queued events
    (needed for the python version)
    fixed relative path problem in tinydb tests
    added storing intermediate results to heatbeat event
    simplified captured out implementation hopefully also fixing the problems with windows
    made tinydb dependency optional
    Fix build on Python 2.7
    
    Needed to add additonal code for textwrap.indent and serialisation of BufferReader that were python 2 and 3 compatible.
    Add more tests to bump coverage
    Fix typo in test names
    Add tests for new file handle serialisation
    Change setting of base dir location for TinDbObserser
    Add more tests for tinydb command line option
    Add tests for tinyDb command line option
    Tidy code and fix import name in tests
    Fix trailing space
    Add absolute_import form __future__ for py27 compatability
    Attempt to fix build by renaming module
    Tidy code for flake8
    Attempt to fix tox test running
    Tidy up code and imports
    Add test for random run_id creation
    Boost test coverage to 100% for tindb observer
    Port remaining tests from mongo observer
    Add more tests
    Add JSON serialisation to numpy, pandas and datetime objects
    Initial implimentation of tinydb observer pre test
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Removed boto as dependency. (#662)
    
    Removed boto as mandatory dependency.
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    Update pymongo version (#687)
    
    * Update pymongo version
    
    Use Collection#count_documents instead of Cursor#count. Also upgrade
    custom mocks to new mongomock code.
    
    * Add debug logging to queue observer
    
    * Remove dead code and don't use fstring
    
    * Remove fstrings for real
    Removed create in QueuedMongoObserver (#604)
    Removed create in mongo observer. (#603)
    
    * Removed create in mongo.
    
    * formatting.
    
    * Forgot return statement.
    Ensure waiting for observers (#590)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    minor cleanup
    removed lots of py2 compatibility code
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    Make failed mongo observer dump configurable (#462)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Make mongo observer dump dir configurable
    
    * Fix py27 and flake8 warnings
    
    * Fix some py27 errors and move mock to own file
    
    * Make Python 2 compatible
    Fix some typos (#460)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Replace asserst with ValueErrors
    
    Also add tests for those
    
    * Fix syntax error
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Add content-type detection for aritifacts
    
    For the mongo oberserver the content-type will be automatically added to
    the artifacts metadata based on the filename as detected by Python's
    mimetypes library. This should enable appropriate rendering of artifacts
    in tools like sacredboard.
    made mongo test py27 and py36 compatible
    fixed some tests
    Fix tests for mongo observer
    added storing intermediate results to heatbeat event
    Rename x and y to steps and values
    
    Rename the two variables in the metrics collection to be consistend
    with the rest of the Metrics API
    Rename id to run_id
    Rename timestep to step
    Let log_metrics accept linearized metrics instead of events
    Improve and comment test_log_metrics
    Fix referencing metrics from the info dictionary
    (mongodb)
    Store metrics data into MongoDB & tests
    new beta release
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    refactored handling config values
    optimized dependencies and tox and travis build
    simplified captured out implementation hopefully also fixing the problems with windows
    cross platform support and some refactoring of output capturing
    refactoring and tidying up
    refactored observer tests
    allow passing unparsed command-line string to ex.run_commandline
    added explicit (but optional) name to artifacts
    
    fixes #95
    added _id to runs that is set by the first observer
    fixed some tests and observer interface problems
    fixed some tests
    added meta_info
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    fixed a few test problems and achieved pypy compatibility
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    fixed the tests
    added test for PickleNumpyArrays SONManipulator
    added a minimal tests for artifact and resource events and a small fix
    pep8 fixes and skip tests if pymongo is missing
    further improved the error-handling of the MongoObserver. fixes #83
    undid splitting of host, experiment and run collections
    sorted imports using isort
    fixed some pep8 and other testing issues
    updated setup.py
    more test for the mongo observer
    WIP: testing observers
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Make pytest 4.3 work
    
    Remove the outdated py dependency and avoid calling fixtures directly.
    fixed relative path problem in tinydb tests
    added storing intermediate results to heatbeat event
    simplified captured out implementation hopefully also fixing the problems with windows
    made tinydb dependency optional
    Tidy code for flak8
    Refine tests for TinyDbReader
    Add tests for TinyDbReader
    Add outline for tests for tinydb reader
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Fixing the silent overwritting of important files. (#647)
    
    Fix the silent overwriting of important files in the FileStorageObserver.
    Removed create from FileStorageObserver. (#605)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Remove __ne__ as it is already defined. (#531)
    
    * Removed __ne__ as it is already defined.
    
    * Sacred doesn't support pathlib well yet.
    Avoid file-observer fail to make run-dir for wrong listdir results (#503)
    
    * Increase number of allowed fails of dir creation
    
    100 fails occure  quickly if douzens of workers try to create directories.
    In practice about 1% of the runs of about 30-40 workers ended because of this.
    
    * Add random sleeps to break symmetry on fail of run dir creation
    
    * Reduce line length
    
    * Again shrink line length
    
    * Increase id without checking after fail creating dir
    
    * Remove unused imports
    
    * Test creating run directory for wrong listdir result
    
    * Make more pythonic
    
    * Call listdir compatible to python 3.5
    
    * Separate started event creates rundir tests
    minor cleanup
    removed lots of py2 compatibility code
    FileObserver setup concurrent-safe (#473)
    
    * Create file storage directories concurrent-safe
    
    * File storage uses same method to make run directory for start and queue events
    
    * Remove newline
    
    * Remove trailing whitespace
    
    * Remove trailing whitespace and unused import
    
    * Use fallback of os.makedirs for python 2
    
    * Fix typo
    
    * Test coverage also for python2
    
    * Test make run directory can raise file exist error
    
    * Skip test with unittest.mock if unsupported python version
    
    * Improve readability of max call
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Replace unittest.mock by pytest.monkeypatch
    
    * Separate creation of next run dir to new method
    
    * Revert "Test coverage also for python2"
    
    This reverts commit 025c66af9d4ed1dccdfd26b73f965062cfb927aa.
    
    * Import python 2 fallback of file exists error
    
    * FileExistsError fallback requires argument
    
    * Avoid pylint errors when redefining builtins
    
    * Shorten lines
    
    * Move race condition catch to outer function when creating run dir
    fixed backwards compatibility of cout writing
    
    python 2.7 does not support an encoding argument to open().
    Keep track of the last character of self.cout in FileStorageObserver
    when self.save_cout is called (#383)
    Keep track of the last character of self.cout in FileStorageObserver
    when self.save_cout is called (#383)
    BUG: Fixes #329
    Added test cases for logging metrics
    added storing intermediate results to heatbeat event
    fixed file storage observer
    refactored handling config values
    some fixes for the windows tests
    simplified captured out implementation hopefully also fixing the problems with windows
    switched to jsonpickle based encoding. Solves #111
    first beta for 0.7 release
    some tidying up
    cross platform support and some refactoring of output capturing
    refactoring and tidying up
    changed behaviour of FileStorageObserver for storage of sources
    
    also added some tests and changed source-paths to be relative in general
    added tests for the FileStorageObserver and changed behaviour of resource_event
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    added storing intermediate results to heatbeat event
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    refactored observer tests
    added explicit (but optional) name to artifacts
    
    fixes #95
    added _id to runs that is set by the first observer
    fixed some tests and observer interface problems
    added TimeoutInterrupt
    
    TODO: Document this feature
    added TimeoutInterrupt
    
    TODO: Document this feature
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    removed unused DebugObserver and improved coverage
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Update pymongo version (#687)
    
    * Update pymongo version
    
    Use Collection#count_documents instead of Cursor#count. Also upgrade
    custom mocks to new mongomock code.
    
    * Add debug logging to queue observer
    
    * Remove dead code and don't use fstring
    
    * Remove fstrings for real
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed defaults arguments in super. (#564)
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    Make failed mongo observer dump configurable (#462)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Make mongo observer dump dir configurable
    
    * Fix py27 and flake8 warnings
    
    * Fix some py27 errors and move mock to own file
    
    * Make Python 2 compatible
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    Add option to pass a collection prefix to MongoObserver (#704)
    
    * Add 'collection_prefix' for MongoObserver constructor arguments.
    Runs are stored in collection PREFIX_runs, metrics in PREFIX_metrics.
    Deprecated argument 'collection' to MongoObserver.
    See Sacred issue #700.
    
    * Add blacklist check for metrics collection name.
    
    * Fix collection name blacklist check.
    
    * Ensure backward compatibility for creating MongoObservers with only
    a collection name.
    
    Add tests for creating MongoObservers with/without collection_prefix.
    
    * pre-commit reformatting
    Update pymongo version (#687)
    
    * Update pymongo version
    
    Use Collection#count_documents instead of Cursor#count. Also upgrade
    custom mocks to new mongomock code.
    
    * Add debug logging to queue observer
    
    * Remove dead code and don't use fstring
    
    * Remove fstrings for real
    Removed create in mongo observer. (#603)
    
    * Removed create in mongo.
    
    * formatting.
    
    * Forgot return statement.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    minor cleanup
    removed lots of py2 compatibility code
    Make failed mongo observer dump configurable (#462)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Make mongo observer dump dir configurable
    
    * Fix py27 and flake8 warnings
    
    * Fix some py27 errors and move mock to own file
    
    * Make Python 2 compatible
    Fix some typos (#460)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Replace asserst with ValueErrors
    
    Also add tests for those
    
    * Fix syntax error
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Add content-type detection for aritifacts
    
    For the mongo oberserver the content-type will be automatically added to
    the artifacts metadata based on the filename as detected by Python's
    mimetypes library. This should enable appropriate rendering of artifacts
    in tools like sacredboard.
    made mongo test py27 and py36 compatible
    fixed some tests
    Fix tests for mongo observer
    added storing intermediate results to heatbeat event
    Rename x and y to steps and values
    
    Rename the two variables in the metrics collection to be consistend
    with the rest of the Metrics API
    Rename id to run_id
    Rename timestep to step
    Let log_metrics accept linearized metrics instead of events
    Improve and comment test_log_metrics
    Fix referencing metrics from the info dictionary
    (mongodb)
    Store metrics data into MongoDB & tests
    new beta release
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    refactored handling config values
    optimized dependencies and tox and travis build
    simplified captured out implementation hopefully also fixing the problems with windows
    cross platform support and some refactoring of output capturing
    refactoring and tidying up
    refactored observer tests
    allow passing unparsed command-line string to ex.run_commandline
    added explicit (but optional) name to artifacts
    
    fixes #95
    added _id to runs that is set by the first observer
    fixed some tests and observer interface problems
    fixed some tests
    added meta_info
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    fixed a few test problems and achieved pypy compatibility
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    fixed the tests
    added test for PickleNumpyArrays SONManipulator
    added a minimal tests for artifact and resource events and a small fix
    pep8 fixes and skip tests if pymongo is missing
    further improved the error-handling of the MongoObserver. fixes #83
    undid splitting of host, experiment and run collections
    sorted imports using isort
    fixed some pep8 and other testing issues
    updated setup.py
    more test for the mongo observer
    WIP: testing observers
    Implement Git Integration for SqlObserver (#735) (#741)
    
    * add SQL tables "repository" and "experiments_repositories" for tracking Git info
    
    * remove duplicate experiment-repository pairs
    
    * fix code style
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    [API change]  Getting rid of the create method for observers (#601)
    
    * Clean version of deleting the create method for observers.
    
    * Used a more descriptive, but less funny docstring.
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Added comment.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added the test for the import error. (#547)
    
    * Added the test for the import error.
    
    * Enabled observers's tests.
    
    * Better error message.
    
    * Fixed imports in tests.
    
    * Fix pep8
    
    * Pep8 again
    
    * Changed import.
    removed lots of py2 compatibility code
    fixed some tests
    added storing intermediate results to heatbeat event
    fix sql_observer tests on windows
    some build fixes
    simplified captured out implementation hopefully also fixing the problems with windows
    switched to jsonpickle based encoding. Solves #111
    first beta for 0.7 release
    some tidying up
    tested and fixed SqlObserver
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    refactored observer tests
    fixed tests
    WIP: added __init__ to examples directory so autodoc can find it on rtd
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    [API change]  Getting rid of the create method for observers (#601)
    
    * Clean version of deleting the create method for observers.
    
    * Used a more descriptive, but less funny docstring.
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Added comment.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added the test for the import error. (#547)
    
    * Added the test for the import error.
    
    * Enabled observers's tests.
    
    * Better error message.
    
    * Fixed imports in tests.
    
    * Fix pep8
    
    * Pep8 again
    
    * Changed import.
    Ensure waiting for observers (#590)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    Use new CLI for mongo (#639)
    
    * Changed cli for mongo and avoided circular imports.
    
    * Fixed some imports.
    
    * Fix flake8
    
    * Fixed imports for testing.
    
    * Fixed the circular imports.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    some refactoring and pep8 fixes
    added overwrite option to mongodb cmdline
    added priority to observers
    optimized dependencies and tox and travis build
    refactored observer tests
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed tests
    Further testing of the dependencies module
    removed lots of py2 compatibility code
    regression test for exception in gather_sources
    
    see pull request #410
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Further testing of the dependencies module
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    stflow Rename and reorganise tests
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    stflow Rename and reorganise tests
    +log_summary_writer annotation, which looks for new tf.train.SummaryWriter instances
    Add more tests for tf (#539)
    
    * More tests for tf
    
    * Fix flake8 errors
    
    * Beautify
    
    * Fix flake8 errors again
    refactored the way import tf is done.
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    Extend stflow tests to check for multiple LogFileWriter annotations
    
    Check that sections of code annotated by LogFileWriter more than once don't capture the FileWriter twice
    Update documentation
    Rename LogSummaryWriter to LogFileWriter. Use tf.summary.FileWriter instead of tf.train.SummaryWriter
    
    tensorflow.train.SummaryWriter has been depracated. Users should use tensorflow.summary.FileWriter instead
    This change reflects it.
    stflow Rename and reorganise tests
    Make LogSummaryWriter compatible with Python 2.7
    Extend LogSummaryWriter test with raising an exception inside the context manager
    Use LogSummaryWriter both as context manager and decorator
    
    updated tests and documentation
    typo in documentation + code style
    
    code style
    + useless(?) return result in wrapper
    
    code style
    
    omg code style
    +log_summary_writer documentation in docs and added a test for annotated methods
    +log_summary_writer annotation, which looks for new tf.train.SummaryWriter instances
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed FallbackDict implementation. (#552)
    
    * Removed FallbackDict implementation.
    
    * Small fix.
    removed lots of py2 compatibility code
    moved config tests to separate folder
    added tests for FallbackDict
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    moved config tests to separate folder
    sorted imports using isort
    moved config stuff to own package
    fixed an issue with DogmaticDicts nested in DogmaticLists
    fixed distribution of config_updates and logging
    extracted custom_containers file
    split test_config_scope file
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    moved config tests to separate folder
    pep8 fixes
    adjusted DogmaticDict to handle fixed + fallback merges
    sorted imports using isort
    moved config stuff to own package
    refactored some functions and tests
    pep8 fixes
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    turned DogmaticDict fallback into property and added check
    fixed distribution of config_updates and logging
    extracted custom_containers file
    removing traces of sperment
    split test_config_scope file
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed problem with relative filepaths of sources
    
    fixes #187
    fixed captured function test
    added tests for captured functions
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    test_load_config_file: fix for windows
    test_load_config_file_exception_msg_invalid_ext: Remove redundant file opening
    add test for invalid ext in load_config_file
    adjusted usage of temporary files in tests to also run on windows
    moved config tests to separate folder
    sorted imports using isort
    moved config stuff to own package
    fixed tests
    refactored config_file handling and tested it
    ReadOnlyDict/List pickle compatibility and serialization tests (#737)
    
    * Convert ReadOnly{Dict,List} to proxy, supporting pickle
    
    * Fix linting
    
    * custom_containers: JSON and Pickle compatibility
    
    * We actually only need __reduce__ for pickle
    
    * Rename params
    
    * Remove dangling comment
    
    * Make CI happy (lint, f-string, black)
    
    * Address review comments
    
    * ReadOnlyContainer: Remove self.message attribute
    
    * Address comments
    
    Co-authored-by: Adam Gleave <adam@gleave.me>
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Use sorted comparison on dicts to avoid py35 error (#507)
    Add copy/deepcopy to read only containers (#500)
    
    * Add copy and deepcopy methods to read only dict
    
    * Add copy and deepcopy methods to ReadOnlyList
    
    * Fix flake8 error
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    Add support for trailing comments in config scope definition (#699)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    filter config comments that belong to an IDE or linter
    switched to jsonpickle based encoding. Solves #111
    tested and improved config comment extraction
    fixed some pep8 and flake8 errors
    moved config tests to separate folder
    sorted imports using isort
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    moved config stuff to own package
    normalization of config keys and forcing them to be strings
    refactored optional library usage, observers and randomness
    refactored ConfigScope and ConfigDict to return their result instead of being dicts.
    fixes #71
    fixed indentation error in ConfigScopes and added some tests
    pep8 fixes
    some pylint fixes to improve code quality
    tested, refactored and fixed chained config scope evaluation. fixes #63
    refactored, fixed and tested ConfigScope
    fixed distribution of config_updates and logging
    extracted custom_containers file
    very basic module implementation
    added handling for seed and rnd
    undogmatized config_scope
    added typechange logging
    split test_config_scope file
    added test for added_values and fixed ConfigScope
    changed #!/usr/bin/python to #!/usr/bin/env python
    WIP: migrating to py.test: finished test_config_scope
    WIP: migrating to py.test: more conversion
    WIP: migrating to py.test: ConfigScope tests
    set up tox testing and fixed some setup and python 3 issues
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added test cases and a fix for Issue #409.  (#505)
    
    * Added test cases and a fix for issue-409. Recursively fill in the result with preset after setting in the conf
    
    * Added a user level interface test case
    
    * Removed reference to the issue
    removed lots of py2 compatibility code
    fixed the tests
    switched to jsonpickle based encoding. Solves #111
    added overwrite option to MongoObserver
    added overwrite option to MongoObserver
    some minor fixes
    moved config tests to separate folder
    sorted imports using isort
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    refactored config more
    moved config stuff to own package
    refactored optional library usage, observers and randomness
    refactored ConfigScope and ConfigDict to return their result instead of being dicts.
    fixes #71
    some more tests for ConfigDict and some refactoring
    added support for configuration dictionaries in experiments
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added test cases and a fix for Issue #409.  (#505)
    
    * Added test cases and a fix for issue-409. Recursively fill in the result with preset after setting in the conf
    
    * Added a user level interface test case
    
    * Removed reference to the issue
    removed lots of py2 compatibility code
    moved config tests to separate folder
    sorted imports using isort
    refactored config more
    moved config stuff to own package
    WIP: collect dependencies and sources of ingredients pass them to observer
    refactored ConfigScope and ConfigDict to return their result instead of being dicts.
    fixes #71
    pep8 fixes
    some pylint fixes to improve code quality
    fixed behaviour of empty ConfigScope chains. fixes #50
    tested, refactored and fixed chained config scope evaluation. fixes #63
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed some pep8 and flake8 errors
    moved config tests to separate folder
    fixed tests
    WIP: added __init__ to examples directory so autodoc can find it on rtd
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    moved config tests to separate folder
    sorted imports using isort
    moved config stuff to own package
    WIP: collect dependencies and sources of ingredients pass them to observer
    pep8 fixes
    some pylint fixes to improve code quality
    refactored, fixed and tested ConfigScope
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    Renaming test file; (#537)
    Unicode isn't used anymore in py3. (#535)
    Moved last function from py2 to py3 (#527)
    
    * Moved last function from py2 to py3
    
    * Corrected the string value.
    Transfered tests from py2 to py3. (#526)
    Moved some tests to the py3 file.
    Adjust tests to new error classes
    adapted signature to deal with annotations and kw_only arguments. Fixes #118
    attempt to fix the build
    
    (cherry picked from commit 365aa13)
    attempt to fix the build
    log the final result
    moved config tests to separate folder
    sorted imports using isort
    moved config stuff to own package
    refactored some functions and tests
    pep8 fixes
    changed #!/usr/bin/python to #!/usr/bin/env python
    WIP: leverage the power of parametrize
    removed unneccesary class
    finished migration to pytest
    set up tox testing and fixed some setup and python 3 issues
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed problem with numpy values in configuration
    [API change] New way to create command line options. (#572)
    
    Changed API for creating command line options
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Simplified the _format_command_usage function. (#599)
    
    * Simplified the _format_command_usage function.
    
    * Removed unused import.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed pipe which was there for backward compatibility. (#545)
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    workaround the inability of docopt to deal with spaces in program names
    
    Docopt cannot handle spaces in the program name of the usage, even if escaped or quoted.
    Therefore we generate an internal_usage, that uses 'dummy' as the program name for parsing, and use the normal usage only for printing the help.
    
    fixes #271
    better error messages on misspelled commands and added a get_usage() method.
    
    fixes #226
    some flake8 fixes
    converted FileObserver to consequtive integer ids
    refactored to make better use of SETTINGS
    fixed dependencies
    refactored handling config values
    refactored handling of commandline options
    switched to numpy style docstrings
    redocumented arg_parser
    some style fixes
    added docs to arg_parser.py
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    slight refactoring of CommandLineOptions
    fixed the tests
    refactored the way command-line options are defined and used
    more documentation for named updates
    changed default prefix for Mongo Collections and made it configuarable via command-line
    added docstring checker to flake8 and fixed errors
    MongoObserver now saves all sources to database as separate files (if they are not already there yet)
    unified some spellings and added more api-documentation
    fixed tests
    added post-mortem debugging
    
    fixes #13
    conditioned stacktrace filtering on being non-sacred
    
     fixes #65
    WIP: collect dependencies and sources of ingredients pass them to observer
    WIP: loading config files
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    added named_configs feature
    added commands of ingredients to Usage. fixes #54
    remove some whitespace in "with config=update" commandline statements
    changed path handling to make meta-experiment feasible. fixes #22
    turned main into a command under the hood. fixes #21
    renamed MongoDBReporter to MongoObserver
    catch SyntaxErrors while parsing commandline values. Fixes #30
    optimized imports
    WIP: Change module structure to explicit packaging
    added log level flag. fixes #4
    fixed tests
    refactored help treatment
    refactored argparser
    improved and simplified _convert_value
    factored out _convert_value function and added tests
    made float handling more python like
    removed jinja2 dependency
    allow for plain help
    added basic implementation of help command
    added very basic implementation of print_config method
    simplified update parsing
    fixed lots of issues
    finished port to docopt
    WIP port to docopt
    WIP: Pump up the command line interface
    refactored argparsing a bit
    added test for get_config_updates and improved it
    changed #!/usr/bin/python to #!/usr/bin/env python
    improved argparser tests
    WIP: change command line interface
    renamed project to sacred
    refactored regex a bit
    improved arg parsing for adding a mongo db
    hacked in option to only print config and exit
    fixed mongodb issue
    lots of details and added an example
    added arg_parser to experiment
    Revert renaming of command line option unobserved (#689)
    
    Options seems to have been accidentially renamed.
    Used the new API for the help. (#659)
    Added new cli for force option. (#660)
    
    Added new cli for force option.
    Used new cli for priority. (#656)
    
    Used new cli for priority.
    Used new cli for pdb. (#657)
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Used new cli interface for beat interval option. (#625)
    Used the new CLI for NameOption. (#629)
    Used new cli for git option. (#649)
    
    * Used new cli for git option.
    
    * Fix Flake8
    Use new cli for CommentOption (#624)
    
    * Used the new API for comment_option.
    
    * Added the comment to the default cli options.
    Used new CLI for CaptureOption (#630)
    Used new CLI for some default options. (#626)
    
    * Used new cli for some defaut functions.
    
    * Flake8
    
    * Removed the force changed.
    Used the new CLI for PrintConfigOption. (#628)
    
    * Used the new CLI for PrintConfigOption.
    
    * Some imports reorganisation.
    Small patch to get around docopt bug. (#638)
    Fixed the circular imports. (#640)
    [API change] New way to create command line options. (#572)
    
    Changed API for creating command line options
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Simpler organisation to propagate the import errors in command line options. (#556)
    
    * Simpler organisation to propagate the import errors.
    
    * Silence flake8
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    evaluate log-level option earlier to allow silencing config warnings
    some flake8 fixes
    removed dependency on six
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    refactored and patched stdout capturing and added a commandline-option
    beta 3 release
    added commandline option for changing the name
    corrected type in EnforceCleanOption
    
    for consistency with ingredient.collect_repositories
    updated documentation
    For some reason the line printed by libc.puts() randomly doesn't appear on windows. Skipping for now.
    added an option to always print the configuration first
    some tidying up
    refactored handling of commandline options
    WIP: Prototype of Git integration
    added meta_info
    added queue flag to support only queueing runs
    changed name of disable-suspicious-warnings arg to force
    added an option to disable suspicious changes warnings
    pep8 and flake8 fixes
    pep8 and flake8 fixes
    added queue flag to support only queueing runs
    split debugging mode into two flags -d and -D
    
    the first disables stacktrace filtering and allows usage with ipython --pdb
    the second one automatically starts a pdb post-mortem debugger in case of an exception
    added some documentation
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    renamed execute to apply and only call it when the flag is actually set
    only call CommandLineOptions when they are set
    added beat_interval option and refactored commandline options a bit
    some refactoring and documenting
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    slight refactoring of CommandLineOptions
    fixed the tests
    refactored the way command-line options are defined and used
    Fix save_config command (Fixes #747) (#765)
    
    * Fix save_config command (Fixes #747)
    
    * Add testcase for save_config
    
    * Deepcopy config in save_config. Fixes #756 and #757
    Fix #712 (#719)
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Removed unused function. (#588)
    
    * Removed unused function.
    
    * Removed unused import.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    minor cleanup
    removed lots of py2 compatibility code
    fix flake8 errors & warnings
    use colorama
    
    Should work on 256 and 16 color terminals.
    
    [Colorama](https://pypi.org/project/colorama/) has no dependencies and
    works on both 2.7 and 3.3+, so we should be good ;)
    Add a generic gathering function to Ingredient
    
     - each gathering function now uses traverse_ingredients
     - each gathering function now raises a CircularDependencyError when a circular dependency is present
     - each generator function with signature (self, ingredient) can be turned into a gathering function by using a simple decorator
     - the path (prefix) of the experiment is removed from the names of the gathered items
       - the argument hide_path in print_named_configs is now obsolete
    Add command print_named_configs
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    Remove extraneous newline for flake8
    potentially fixed the "heartbeat doesn't exit" bug
    
    (cherry picked from commit df16de0)
    updated documentation
    fix flake8 errors
    added save_config command
    Prettify docstring config printing
    Make flake8 fixes
    some tidying up
    WIP: Prototype of Git integration
    WIP: feature: add documentation to config entries
    refactored and documented commands.py
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    unified some spellings and added more api-documentation
    fixed tests
    conditioned stacktrace filtering on being non-sacred
    
     fixes #65
    added print_dependencies command
    refactored config modifications and fixed problem with displaying seed modifications
    more command tests
    fixed python3 compatibility of non_unicode_repr
    refactored and tested print_config command
    pep8 fixes
    more  pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    documented the commandline. fixes #42
    removed dependence on blessings. fixes #27
    WIP: splitting
    WIP: document experiment
    optimized imports
    fixed tracking of updated modules for print_config. Fixes #26
    added some examples and the first bit of documentation
    fixed print_config
    fixed hashbang python line
    WIP: Change module structure to explicit packaging
    improved config printing
    lots of fixes
    moved captured functions to wrapt
    sort keys in print_config
    some updates bugfixing
    refactored help treatment
    added some warnings about param updates
    some bugfixes
    added basic implementation of help command
    improved print_config command
    improved print_config command
    added very basic implementation of print_config method
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Remove decorator in ingredient.py (#560)
    
    * Removed decorator in ingredient
    
    * Removed _gather.
    
    * Fixed stuff.
    
    * Used simpler inheritance.
    
    * Removed unused import.
    
    * Unused import.
    
    * Lines endings
    
    * Black
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Add types hints for ingredients and experiment (#543)
    
    * Added types hints for ingredients and experiment.
    
    * Corrected the type. Iterable -> Sequence.
    
    * Used Pathlike.
    
    * Revert "Used Pathlike."
    
    This reverts commit 20162acf61838eabb368625d605a918e4b9c203b.
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed usage of deprecated inspect.getargspec
    removed lots of py2 compatibility code
    Add improved exception handling
    Fix doc errors
    Add a generic gathering function to Ingredient
    
     - each gathering function now uses traverse_ingredients
     - each gathering function now raises a CircularDependencyError when a circular dependency is present
     - each generator function with signature (self, ingredient) can be turned into a gathering function by using a simple decorator
     - the path (prefix) of the experiment is removed from the names of the gathered items
       - the argument hide_path in print_named_configs is now obsolete
    Add command print_named_configs
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    some pep8 fixes
    Fix typo in _add_named_config
    Support custom experiment base directory
    many fixes of the dependency discovery
    some refactoring and pep8 fixes
    refactored discovery of dependencies and sources
    added some docs
    pep fixes and fixed a copy&paste error
    added mainfile to experiment info
    optimized dependencies and tox and travis build
    better error messages when defining an experiment in interactive environment without a name.
    added interactive=True flag to ingredients and experiments
    (cherry picked from commit 3573886)
    some tidying up
    refactoring and tidying up
    changed behaviour of FileStorageObserver for storage of sources
    
    also added some tests and changed source-paths to be relative in general
    refactored handling of commandline options
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    fixed storage of repository for mongo
    WIP: Prototype of Git integration
    added interactive=True flag to ingredients and experiments
    changed json format of dependencies
    removed the doc-string from the experiment info
    added meta_info
    changed name of disable-suspicious-warnings arg to force
    added an option to disable suspicious changes warnings
    minor refactorings
    pep8 and flake8 fixes
    minor refactorings
    pep8 and flake8 fixes
    renamed kwarg named_configs_to_use to named_configs in Experiment.run_command
    
    This is to make it consistent with the signature of Experiment.run
    some style fixes
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    some refactoring and documenting
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    refactored the way command-line options are defined and used
    added add_named_config() method to add named configurations from dicts and files
    modified interface of add_config() to also cover adding config_files
    some documentation fixes
    a couple of pep8 and flake8 fixes
    factored out ingredient to own file and finished testing it
    fixed some pep8 and flake8 errors
    more ingredient tests and some refactoring
    added some tests for Ingredient
    added pre-run hooks and renamed a bit
    changed to config_hook mechanism to not use ConfigScopes
    WIP: whetlab ingredient
    pep8 fixes
    WIP: first working version of config_hooks
    first draft of a pre_run feature
    refurbished ingredients a bit
    removed unused DebugObserver and improved coverage
    added more documentation for Run
    made the checking for local sources stricter eliminating some false positives.
    
    fixes #85
    more docstrings
    WIP fixing the fail-behaviour of Observers
    more observers documentation and some docs about automatic global seeding
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    refactored config more
    moved config stuff to own package
    WIP: testing observers
    added a bit of documentation
    added rudimentary add_artifact function
    very basic resource handling
    added methods for manually adding dependencies
    running experiments now returns the run instance
    unified some spellings and added more api-documentation
    added post-mortem debugging
    
    fixes #13
    documented example for randomness and fixed tests
    added print_dependencies command
    WIP: collect dependencies and sources of ingredients pass them to observer
    extracted dependencies module
    WIP: loading config files
    added some documentation for the new add_config method.
    added support for configuration dictionaries in experiments
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    fixed the tests
    added named_configs to ex.run() interface
    added check to replace .pyc file with .py file as mainfile. fixes #60
    changed format to save dependencies from dict to list of tuples. should fix #59
    added optional prefix to capture and command
    added named_configs feature
    slightly refactored create_run
    WIP: API-doc
    WIP: API-documentation
    documented observers. fixes #43
    added commands of ingredients to Usage. fixes #54
    added stacktrace-pruning to command-execution. fixes #55
    added commands to ingredients. fixes #46
    fixed the caller_global extraction
    changed path handling to make meta-experiment feasible. fixes #22
    turned main into a command under the hood. fixes #21
    refactored and improved dependency scanning
    renamed module to ingredient. fixes #49
    cleaned up events
    added custom stacktrace printing to run_commandline. fixes #16
    fixed use of scaffolding and return type of ex.run()
    WIP: splitting
    WIP: document experiment
    renamed prefix to path
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    optimized imports
    simplified Module.modules and removed TODOS
    some logging tweaks
    changed calling of commands to use dependency injection for the run
    reworked configuration setup and fixed some issues
    reworked distribution of config_updates
    renaming
    WIP: Change module structure to explicit packaging
    made submodule config readonly and replaced duplicate config entries with a pointer value
    made seed generation optional
    lots of fixes
    capture no longer adds function directly to module
    fixed some tests
    WIP: finish up modularization
    moved functionality to run
    WIP: submodule runners
    WIP subrunners and stuff
    WIP: ModuleRunner
    made experiment a module
    very basic module implementation
    hack to give access to info
    WIP: Modularize experiment
    added handling for seed and rnd
    moved captured functions to wrapt
    fixed created_event call
    tiedied up a bit
    heavy refactoring
    simplified events
    moved experiment.info outside of experiment.description again
    added a scan for dependencies . fixes #14
    added log level flag. fixes #4
    refactored and fixed and added DebugObserver
    added output capturing and also added it to the db entry
    made _emit_info_updated auto repeat every 30sec and added a heartbeat field to db entry
    extracted _warn_about_suspicious_changes method
    fixed stacktrace pruning but lost python3 compatibility
    some updates bugfixing
    refactored help treatment
    added some warnings about param updates
    removed jinja2 dependency
    some bugfixes
    allow for plain help
    fixed help for captured functions
    added basic implementation of help command
    improved print_config command
    added very basic implementation of print_config method
    fixed lots of issues
    finished port to docopt
    WIP port to docopt
    WIP: Pump up the command line interface
    refactored argparsing a bit
    changed #!/usr/bin/python to #!/usr/bin/env python
    fixed bug in command handling
    WIP: Command Interface
    refactored run
    portable way of raising with traceback
    WIP: change command line interface
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    cleaned up ConfigScope and switched to regex for finding the function def
    hacked in option to only print config and exit
    improved exception handling
    slightly simplified interface
    add explicit reset function to experiment and a way of calling with config updates via run
    first attempt for multiple configs
    added a print for the final result
    added automain decorator
    added basic logging capabilities
    lots of details and added an example
    added arg_parser to experiment
    added mongo observer
    added basic experiment implementation
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    fixed numpy deprecation warning
    
    DeprecationWarning: np.asscalar(a) is deprecated since NumPy v1.16, use a.item() instead
    Allow the `step` parameter of `log_scalar` to have a numpy integer type.
    added type-normalization to metrics logger
    
    should fix #279
    Simplify metrics logging: remove Sacred Message Queue
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    Add log_scalar method to Run and Experiment
    Add docstrings
    Rename x and y to steps and values
    
    Rename the two variables in the metrics collection to be consistend
    with the rest of the Metrics API
    Fix codestyle
    Rename timestep to step
    Store metrics data into MongoDB & tests
    Prepare metrics data for storing into DB
    Add test for log_scalar_metric
    Add message queue for storing metrics (accuracy, loss etc)
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Handle missing brand key (#512)
    
    * Handle missing brand key
    
    On some machines the brand key may not be available, causing an unnecessary crash
    
    * Simplify cpu info patch
    removed lots of py2 compatibility code
    fixed some flake8 errors
    fix flake8 errors & warnings
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    Changed behavior to first try old way of getting CPU info and then fallback to py-cpuinfo, since the latter takes ~1sec.
    capturing cpu name failed on Oracle Grid Engine (should fix #263)
    some flake8 fixes
    added feature for capturing ENVIRONMENT variables as part of host info
    
    fixes #160
    speed up tests by deactivating GPU info
    converted FileObserver to consequtive integer ids
    refactored to make better use of SETTINGS
    updated HISTORY and added a new WIP chapter to docs
    two small pep8 fixes
    some fixes for the windows tests
    added gpu information (if possible) to the host_info
    fixed a bug in extending the PATH env-variable that caused a failure in capturing the stdout
    adapted signature to deal with annotations and kw_only arguments. Fixes #118
    fixed problem with SQL observer autoincrement and removed an obsolete entry in host_info.__all__
    host_info was still being used in host_info.py
    fixed one more type
    fixed host_info name collision problem
    made the host_info mechanism modular to allow for easy addition of custom host_info.
    
    should help with #112
    removed cpu_count and python_compiler from host_info
    minor refactorings and added some docs to host_info
    more ingredient tests
    sorted imports using isort
    MongoObserver now saves all sources to database as separate files (if they are not already there yet)
    unified some spellings and added more api-documentation
    fixed tests
    conditioned stacktrace filtering on being non-sacred
    
     fixes #65
    extracted dependencies module
    removed faulty shell=True parameter from subprocess.check_output call
    Fix parameters to subprocess
    removed faulty shell=True parameter from subprocess.check_output call
    Fix parameters to subprocess
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    fixed the tests
    refactored and improved dependency scanning
    WIP: document experiment
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    added a scan for dependencies . fixes #14
    changed #!/usr/bin/python to #!/usr/bin/env python
    renamed project to sacred
    added host info to MongoDB observer
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    refactored discovery of dependencies and sources
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    added feature for capturing ENVIRONMENT variables as part of host info
    
    fixes #160
    added storing intermediate results to heatbeat event
    refactored and patched stdout capturing and added a commandline-option
    made stdout capture mode configurable and set the windows default to python-only
    refactored to make better use of SETTINGS
    filter config comments that belong to an IDE or linter
    reorganization and pep8
    WIP: refactor configuration
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    Update black to stable version (#688)
    Removed some docopt use. (#669)
    Used new cli for tinydb. (#658)
    Used the new API for the help. (#659)
    Added new cli for force option. (#660)
    
    Added new cli for force option.
    Used new cli for priority. (#656)
    
    Used new cli for priority.
    Used new cli for pdb. (#657)
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Use new cli file storage (#641)
    
    * Fixed the circular imports.
    
    * Used new CLI for file_storage.
    
    * Added the file_storge option to the list of default options.
    Use new CLI for mongo (#639)
    
    * Changed cli for mongo and avoided circular imports.
    
    * Fixed some imports.
    
    * Fix flake8
    
    * Fixed imports for testing.
    
    * Fixed the circular imports.
    Use new CLI for S3 (#642)
    
    * Fixed the circular imports.
    
    * Used new cli for S3 option.
    
    * No blank line allowed after function docstring.
    Used new cli interface for beat interval option. (#625)
    Used the new CLI for NameOption. (#629)
    Used new cli for git option. (#649)
    
    * Used new cli for git option.
    
    * Fix Flake8
    Use new cli for CommentOption (#624)
    
    * Used the new API for comment_option.
    
    * Added the comment to the default cli options.
    Used new CLI for CaptureOption (#630)
    Used new CLI for some default options. (#626)
    
    * Used new cli for some defaut functions.
    
    * Flake8
    
    * Removed the force changed.
    Used the new CLI for PrintConfigOption. (#628)
    
    * Used the new CLI for PrintConfigOption.
    
    * Some imports reorganisation.
    Use new cli for sql (#643)
    
    * Fixed the circular imports.
    
    * Used the new cli for sql.
    Fixed the circular imports. (#640)
    [API change] New way to create command line options. (#572)
    
    Changed API for creating command line options
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    Remove decorator in ingredient.py (#560)
    
    * Removed decorator in ingredient
    
    * Removed _gather.
    
    * Fixed stuff.
    
    * Used simpler inheritance.
    
    * Removed unused import.
    
    * Unused import.
    
    * Lines endings
    
    * Black
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Adding more types to experiment (#550)
    
    removing useless return.
    Add types hints for ingredients and experiment (#543)
    
    * Added types hints for ingredients and experiment.
    
    * Corrected the type. Iterable -> Sequence.
    
    * Used Pathlike.
    
    * Revert "Used Pathlike."
    
    This reverts commit 20162acf61838eabb368625d605a918e4b9c203b.
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    Bug-fixes (#496)
    
    * Added missing pymongo dependency
    
    * Fixed broken tests.
    
    * exit() is only defined when running interactively in terminal, sys.exit is better.
    
    * Update tests/test_dependencies.py
    
    Revert hash
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    fix call to run from run_commandline
    
    options were accidentally passed into the new info parameter.
    This should fix the problem with failing example tests because of an ignored loglevel.
    fix typo in docstring
    removed deprecated ex.run_command
    removed lots of py2 compatibility code
    expose info kwarg in sacred.experiment.Experiment.run
    Fix flake8 error
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Improve coverage
    Add improved exception handling
    Add a generic gathering function to Ingredient
    
     - each gathering function now uses traverse_ingredients
     - each gathering function now raises a CircularDependencyError when a circular dependency is present
     - each generator function with signature (self, ingredient) can be turned into a gathering function by using a simple decorator
     - the path (prefix) of the experiment is removed from the names of the gathered items
       - the argument hide_path in print_named_configs is now obsolete
    added fallback dummy name to get_usage()
    
    fixes #341
    Add option to add metadata to artifacts
    
    A dict with custom metadata can now be added to artifacts. This only has
    an effect for the MongoObserver. The metadata will appear in the
    `.metadata` attribute of the file like objects retrieved with pymongo
    from gridfs.
    Add command print_named_configs
    evaluate log-level option earlier to allow silencing config warnings
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    workaround the inability of docopt to deal with spaces in program names
    
    Docopt cannot handle spaces in the program name of the usage, even if escaped or quoted.
    Therefore we generate an internal_usage, that uses 'dummy' as the program name for parsing, and use the normal usage only for printing the help.
    
    fixes #271
    Support custom experiment base directory
    some refactoring and pep8 fixes
    better error messages on misspelled commands and added a get_usage() method.
    
    fixes #226
    init default_command to None, which leads to better errors
    some flake8 fixes
    return with exit code 1 if failed
    
    fixes #175
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    Add log_scalar method to Run and Experiment
    Added add_resource method
    add open mode to resources
    added command and options to meta_info
    added save_config command
    optimized dependencies and tox and travis build
    added some more flushes in the hopes of fixing the random failures on travis and appveyor
    added option_hook
    better error messages when defining an experiment in interactive environment without a name.
    added interactive=True flag to ingredients and experiments
    (cherry picked from commit 3573886)
    Added facility to apply a filter function to captured output.
    refactored handling of commandline options
    allow passing unparsed command-line string to ex.run_commandline
    added explicit (but optional) name to artifacts
    
    fixes #95
    made name parameter for experiment optional
    added interactive=True flag to ingredients and experiments
    improved error-message when using @ex.automain in interactive mode
    added meta_info
    changed name of disable-suspicious-warnings arg to force
    added an option to disable suspicious changes warnings
    pep8 and flake8 fixes
    pep8 and flake8 fixes
    split debugging mode into two flags -d and -D
    
    the first disables stacktrace filtering and allows usage with ipython --pdb
    the second one automatically starts a pdb post-mortem debugger in case of an exception
    renamed kwarg named_configs_to_use to named_configs in Experiment.run_command
    
    This is to make it consistent with the signature of Experiment.run
    minor refactorings and added some docs to host_info
    some style fixes
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    renamed execute to apply and only call it when the flag is actually set
    only call CommandLineOptions when they are set
    fixed a few test problems and achieved pypy compatibility
    added beat_interval option and refactored commandline options a bit
    some refactoring and documenting
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    slight refactoring of CommandLineOptions
    refactored the way command-line options are defined and used
    some documentation fixes
    a couple of pep8 and flake8 fixes
    factored out ingredient to own file and finished testing it
    fixed some pep8 and flake8 errors
    more ingredient tests and some refactoring
    added some tests for Ingredient
    added pre-run hooks and renamed a bit
    changed to config_hook mechanism to not use ConfigScopes
    WIP: whetlab ingredient
    pep8 fixes
    WIP: first working version of config_hooks
    first draft of a pre_run feature
    refurbished ingredients a bit
    removed unused DebugObserver and improved coverage
    added more documentation for Run
    made the checking for local sources stricter eliminating some false positives.
    
    fixes #85
    more docstrings
    WIP fixing the fail-behaviour of Observers
    more observers documentation and some docs about automatic global seeding
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    refactored config more
    moved config stuff to own package
    WIP: testing observers
    added a bit of documentation
    added rudimentary add_artifact function
    very basic resource handling
    added methods for manually adding dependencies
    running experiments now returns the run instance
    unified some spellings and added more api-documentation
    added post-mortem debugging
    
    fixes #13
    documented example for randomness and fixed tests
    added print_dependencies command
    WIP: collect dependencies and sources of ingredients pass them to observer
    extracted dependencies module
    WIP: loading config files
    added some documentation for the new add_config method.
    added support for configuration dictionaries in experiments
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    fixed the tests
    added named_configs to ex.run() interface
    added check to replace .pyc file with .py file as mainfile. fixes #60
    changed format to save dependencies from dict to list of tuples. should fix #59
    added optional prefix to capture and command
    added named_configs feature
    slightly refactored create_run
    WIP: API-doc
    WIP: API-documentation
    documented observers. fixes #43
    added commands of ingredients to Usage. fixes #54
    added stacktrace-pruning to command-execution. fixes #55
    added commands to ingredients. fixes #46
    fixed the caller_global extraction
    changed path handling to make meta-experiment feasible. fixes #22
    turned main into a command under the hood. fixes #21
    refactored and improved dependency scanning
    renamed module to ingredient. fixes #49
    cleaned up events
    added custom stacktrace printing to run_commandline. fixes #16
    fixed use of scaffolding and return type of ex.run()
    WIP: splitting
    WIP: document experiment
    renamed prefix to path
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    optimized imports
    simplified Module.modules and removed TODOS
    some logging tweaks
    changed calling of commands to use dependency injection for the run
    reworked configuration setup and fixed some issues
    reworked distribution of config_updates
    renaming
    WIP: Change module structure to explicit packaging
    made submodule config readonly and replaced duplicate config entries with a pointer value
    made seed generation optional
    lots of fixes
    capture no longer adds function directly to module
    fixed some tests
    WIP: finish up modularization
    moved functionality to run
    WIP: submodule runners
    WIP subrunners and stuff
    WIP: ModuleRunner
    made experiment a module
    very basic module implementation
    hack to give access to info
    WIP: Modularize experiment
    added handling for seed and rnd
    moved captured functions to wrapt
    fixed created_event call
    tiedied up a bit
    heavy refactoring
    simplified events
    moved experiment.info outside of experiment.description again
    added a scan for dependencies . fixes #14
    added log level flag. fixes #4
    refactored and fixed and added DebugObserver
    added output capturing and also added it to the db entry
    made _emit_info_updated auto repeat every 30sec and added a heartbeat field to db entry
    extracted _warn_about_suspicious_changes method
    fixed stacktrace pruning but lost python3 compatibility
    some updates bugfixing
    refactored help treatment
    added some warnings about param updates
    removed jinja2 dependency
    some bugfixes
    allow for plain help
    fixed help for captured functions
    added basic implementation of help command
    improved print_config command
    added very basic implementation of print_config method
    fixed lots of issues
    finished port to docopt
    WIP port to docopt
    WIP: Pump up the command line interface
    refactored argparsing a bit
    changed #!/usr/bin/python to #!/usr/bin/env python
    fixed bug in command handling
    WIP: Command Interface
    refactored run
    portable way of raising with traceback
    WIP: change command line interface
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    cleaned up ConfigScope and switched to regex for finding the function def
    hacked in option to only print config and exit
    improved exception handling
    slightly simplified interface
    add explicit reset function to experiment and a way of calling with config updates via run
    first attempt for multiple configs
    added a print for the final result
    added automain decorator
    added basic logging capabilities
    lots of details and added an example
    added arg_parser to experiment
    added mongo observer
    added basic experiment implementation
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed numpy deprecation warning
    
    DeprecationWarning: np.asscalar(a) is deprecated since NumPy v1.16, use a.item() instead
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    fixed two test issues
    added rudimentary pandas serializer
    reorganization and pep8
    refactored handling config values
    WIP: refactor configuration
    Make flake8 fixes
    adapted signature to deal with annotations and kw_only arguments. Fixes #118
    switched to jsonpickle based encoding. Solves #111
    Terminate tee subproc if wait TimeoutExpired (#740)
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    Do not convert carriage returns to newlines in captured output (#714)
    
    * Do not convert carriage returns to newlines in open files
    
    For Python 3, opening the captured output file should not convert \r into \n. See this issue: https://github.com/IDSIA/sacred/issues/673
    
    * Backwards compatibility of newline treatment with Python 2
    
    Also add test
    
    * Flush JSON writes in FileObserver
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    minor cleanup
    removed lots of py2 compatibility code
    Fix exceptions when no tee available (#461)
    improved error reporting for unknown capture modes.
    ENH: Tees directly to temporary file
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    Fix seeking in multi-byte locales
    
    The length of the string returned by read doesn't necessarily match
    the number of bytes read from the buffer in multi-byte locales. Using
    tell() ensures the right byte position is stored.
    made SQL session thread-local to avoid problems with sqlite
    
    fixes #275
    potentially fixed stdout capture problem
    added AttributeError to list of expected exceptions for fd_stdout_capturing
    added a test for stdout capturing and fixed two problems with the windows tests
    fd stdout capturing now starts tee in new subprocess group to avoid problems with KeyboardInterrupts
    
    fixes #149
    refactored and patched stdout capturing and added a commandline-option
    Adapt test suite since tee_output_fd does not return the final output
    moved FileNotFoundError back to utils
    made stdout capture mode configurable and set the windows default to python-only
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Removed has_libc (#591)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    refactored the way import tf is done.
    Put back the code to get libc.
    Removed some unused optional features.
    removed lots of py2 compatibility code
    Remove MissingDependencyMock. (#451)
    some refactoring and pep8 fixes
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    also set the tensorflow seed if it is imported
    
    fixes #178
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    add telegram observer.
    Revert "Feature/tf integration"
    remove empty line at the end of optional.py
    +log_summary_writer annotation, which looks for new tf.train.SummaryWriter instances
    polishing SlackObserver
    fix flake8 errors
    optimized dependencies and tox and travis build
    fixed typo in tinydb-serialization
    made tinydb dependency optional
    cross platform support and some refactoring of output capturing
    WIP: Prototype of Git integration
    added optional template rendering to flatfile observer
    first version of SQL Observer
    (cherry picked from commit 0cad2b4)
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    removed residue of whetlab
    refactored optional and added more tests
    MissingDependencyMock is now callable
    fixed some pep8 and other testing issues
    WIP: testing observers
    refactored optional library usage, observers and randomness
    Added functions to the interface to avoid checks. (#598)
    Ensure waiting for observers (#590)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Adding more types to experiment (#550)
    
    removing useless return.
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    Make failed mongo observer dump configurable (#462)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Make mongo observer dump dir configurable
    
    * Fix py27 and flake8 warnings
    
    * Fix some py27 errors and move mock to own file
    
    * Make Python 2 compatible
    Fix flake8 error
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Add option to add metadata to artifacts
    
    A dict with custom metadata can now be added to artifacts. This only has
    an effect for the MongoObserver. The metadata will appear in the
    `.metadata` attribute of the file like objects retrieved with pymongo
    from gridfs.
    Bugfix release 0.7.4
    Run now handles BaseExceptions as failures to also include SystemExit
    
    fixes #301
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    TST: Small fix
    TST: Fix
    initialize captured_out to empty string to ensure it is never None
    
    Hopefully addresses #266
    Update run.py
    Fix utf-8 decode problem (issue 176)
    potentially fixed the "heartbeat doesn't exit" bug
    
    (cherry picked from commit df16de0)
    potentially fixed stdout capture problem
    added host_info to queued events
    (needed for the python version)
    some flake8 fixes
    fixed a problem with utf-8 symbols in stdout
    
    fixes #176
    Simplify metrics logging: remove Sacred Message Queue
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    Add log_scalar method to Run and Experiment
    added storing intermediate results to heatbeat event
    fd stdout capturing now starts tee in new subprocess group to avoid problems with KeyboardInterrupts
    
    fixes #149
    Cleanup
    refactored and patched stdout capturing and added a commandline-option
    made stdout capture mode configurable and set the windows default to python-only
    Parse captured output by chunks to save memory from large outputs
    Let log_metrics accept linearized metrics instead of events
    Fix referencing metrics from the info dictionary
    (mongodb)
    Store metrics data into MongoDB & tests
    Add message queue for storing metrics (accuracy, loss etc)
    Update add_artifact docstring
    Changed default artifact name to filename instead of relative path
    Added add_resource method
    added priority to observers
    add open mode to resources
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    completed the collected_information docs
    restructured stdout capturing such that the final capture always contains everything
    added some more flushes in the hopes of fixing the random failures on travis and appveyor
    moved adding the queue_time from within the MongoObserver to the Run
    two small pep8 fixes
    added documentation for the optional features of sacred including git integration
    simplified captured out implementation hopefully also fixing the problems with windows
    fixed a typo
    Added facility to apply a filter function to captured output.
    some tidying up
    added a base-class for custom interrupts and made TimeoutInterrupt inherit from it.
    
    also added some tests
    tested and fixed SqlObserver
    cross platform support and some refactoring of output capturing
    WIP: improve captured out handling
    added queue events to sql and filestorage observers
    added explicit (but optional) name to artifacts
    
    fixes #95
    added _id to runs that is set by the first observer
    fixed that one annoying pep8 failure
    attempt to fix #101
    added meta_info
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    changed name of disable-suspicious-warnings arg to force
    added an option to disable suspicious changes warnings
    added the command that was run to the DB entry
    pep8 and flake8 fixes
    pep8 and flake8 fixes
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    split debugging mode into two flags -d and -D
    
    the first disables stacktrace filtering and allows usage with ipython --pdb
    the second one automatically starts a pdb post-mortem debugger in case of an exception
    some style fixes
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    added a warning if a run is unobserved (and not in debug mode).
    
    fixes #92
    hotfix for observer issue
    added beat_interval option and refactored commandline options a bit
    added some doc and small refactorings
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    log the final result
    added pre-run hooks and renamed a bit
    fixed unhashable type MongoObserver error
    WIP: whetlab ingredient
    tidied up run a bit
    removed unused DebugObserver and improved coverage
    added tests for run
    added more documentation for Run
    hotfix final call to the observers
    pep8 fixes and skip tests if pymongo is missing
    WIP fixing the fail-behaviour of Observers
    more documentation for named updates
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    normalization of config keys and forcing them to be strings
    more test for the mongo observer
    WIP: testing observers
    refactored optional library usage, observers and randomness
    added rudimentary add_artifact function
    very basic resource handling
    unified some spellings and added more api-documentation
    fixed bug where sometimes captured output would not be saved to the database
    more  pylint fixes to improve code quality
    documented and ironed out logging. fixes #44
    cleaned up events
    added custom stacktrace printing to run_commandline. fixes #16
    WIP: splitting
    extracted is_prefix method
    renamed prefix to path
    added some tests for utils and simplified a bit
    optimized imports
    fixed tracking of updated modules for print_config. Fixes #26
    simplified Module.modules and removed TODOS
    small fixes to fixtures
    solved the problem for captured functions
    
    FIXME: might be very inefficient
    some logging tweaks
    changed calling of commands to use dependency injection for the run
    fixed distribution of config_updates and logging
    fixed print_config
    reworked configuration setup and fixed some issues
    reworked distribution of config_updates
    changed iterate_flattened_keys to iterate over (key, value) pairs instead
    renaming
    extracted custom_containers file
    fixed hashbang python line
    WIP: Change module structure to explicit packaging
    made submodule config readonly and replaced duplicate config entries with a pointer value
    some comments
    made seed generation optional
    lots of fixes
    fixed some tests
    WIP: finish up modularization
    moved functionality to run
    WIP: submodule runners
    WIP subrunners and stuff
    WIP: ModuleRunner
    made experiment a module
    very basic module implementation
    added handling for seed and rnd
    moved captured functions to wrapt
    heavy refactoring
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    refactored the way import tf is done.
    removed lots of py2 compatibility code
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    Fix for tensorflow seeding 2 (#453)
    Add controlled randomness for pytorch
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    some refactoring and pep8 fixes
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    also set the tensorflow seed if it is imported
    
    fixes #178
    optimized dependencies and tox and travis build
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    some style fixes
    fixed a few test problems and achieved pypy compatibility
    sorted imports using isort
    fixed some pep8 and other testing issues
    refactored optional library usage, observers and randomness
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    some tidying up
    WIP: improve captured out handling
    [API change] New way to create command line options. (#572)
    
    Changed API for creating command line options
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    fix import of stflow
    reorganization and pep8
    added check for equals sign in config keys
    WIP: refactor configuration
    fixed host_info name collision problem
    made the host_info mechanism modular to allow for easy addition of custom host_info.
    
    should help with #112
    added some documentation
    refactored the way command-line options are defined and used
    factored out ingredient to own file and finished testing it
    added docstring checker to flake8 and fixed errors
    added flake8 to tox and fixed detected problems
    fixed the tests
    fixed the caller_global extraction
    added __about__ file for better version handling.
    
     see this for inspiration
    http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/
    
    and see this issue for more info:
    https://github.com/audreyr/cookiecutter-pypackage/issues/1
    put Experiment back into sacred namespace
    optimized imports
    very basic module implementation
    bump version number
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    Fix ConfigError tracking when raised in config scope (#733)
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Simplify iterate_flattened_separately (#597)
    
    * Simplified the iterate_flattened_separately.
    
    * Fixed formatting.
    
    * Mitigated name conflicts.
    
    * Fixed small bug.
    
    * even clearer.
    Removed unused import. (#600)
    Removed iter_path_split (#593)
    Removed module_is_imported as it is unused. (#592)
    
    * Removed module_is_imported as it is unused.
    
    * Removed unused import.
    Ensure waiting for observers (#590)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Using pathlib to simplify is_local_source. (#559)
    
    Using pathlib to simplify is_local_source.
    Add types hints for ingredients and experiment (#543)
    
    * Added types hints for ingredients and experiment.
    
    * Corrected the type. Iterable -> Sequence.
    
    * Used Pathlike.
    
    * Revert "Used Pathlike."
    
    This reverts commit 20162acf61838eabb368625d605a918e4b9c203b.
    Add more tests for tf (#539)
    
    * More tests for tf
    
    * Fix flake8 errors
    
    * Beautify
    
    * Fix flake8 errors again
    Used pyupgrade with --py3-plus. [2/2] (#518)
    
    * Used pyupgrade --py3-plus
    
    * pep8
    removed lots of py2 compatibility code
    Make failed mongo observer dump configurable (#462)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Make mongo observer dump dir configurable
    
    * Fix py27 and flake8 warnings
    
    * Fix some py27 errors and move mock to own file
    
    * Make Python 2 compatible
    Fixed #445: Incompatibility with `tensorflow-gpu` (#464)
    
    * Fix: Failing to read the version of import package `tensorflow` if distribution package `tensorflow-gpu` was installed. Solving by actually importing the package and retrieving the version string.
    
    * Replaced `__import__()` with `importlib.module_import()`.
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    Make format_filtered_stacktrace accept only default, always and never
    Use logging.basicConfig for logger setup
    Add SignatureError
    fix flake8 errors & warnings
    Workaround that provides FileExistsError for Python 2
    Improve coverage
    Python 2 compatibility
    Add improved exception handling
    Fix doc errors
    Bugfix release 0.7.4
    proper handling of subpaths in named config evaluation of config updates
    
    fixes #297
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    Handle empty dicts in config updates and named dicts.
    
    fixes #262
    some pep8 fixes
    potentially fixed the "heartbeat doesn't exit" bug
    
    (cherry picked from commit df16de0)
    Fix #225
    Fix #225
    Fix #225
    some refactoring and pep8 fixes
    some flake8 fixes
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    added an __all__ file to utils
    added a test for stdout capturing and fixed two problems with the windows tests
    Output filter must preserve only the last carriage return to parse output by chunk
    Fix test suite failure since parse output by chunk
    moved FileNotFoundError back to utils
    made stdout capture mode configurable and set the windows default to python-only
    consider nonexisting prefixes to be empty dicts instead of None
    
    fixes #153
    Fix previous commit regression where captured output with empty lines did raise exception
    Parse captured output by chunks to save memory from large outputs
    made sure file descriptors are tidied up correctly in tee_output
    
    possibly fixes #134
    added a timeout to tee_stdout and tee_stderr processes to avoid deadlock
    fixed a problem with MongoDB observer and non-integer dict-keys
    converted FileObserver to consequtive integer ids
    restructured stdout capturing such that the final capture always contains everything
    added some more flushes in the hopes of fixing the random failures on travis and appveyor
    some fixes for the windows tests
    added some documentation for the custom interrupts
    Add manually_sorted_keys parameter to iterate_flattened_separately
    Added facility to apply a filter function to captured output.
    made the host_info mechanism modular to allow for easy addition of custom host_info.
    
    should help with #112
    added py2 compatible FileNotFoundError
    some tidying up
    added a base-class for custom interrupts and made TimeoutInterrupt inherit from it.
    
    also added some tests
    cross platform support and some refactoring of output capturing
    tidied up capturing a bit
    WIP: improve captured out handling
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    allow config entries to start with underscores
    added TimeoutInterrupt
    
    TODO: Document this feature
    fixed problem with adjusting the loglevels
    pep8 and flake8 fixes
    some pep8 fixes
    pep8 and flake8 fixes
    some pep8 fixes
    allow config entries to start with underscores
    added TimeoutInterrupt
    
    TODO: Document this feature
    split debugging mode into two flags -d and -D
    
    the first disables stacktrace filtering and allows usage with ipython --pdb
    the second one automatically starts a pdb post-mortem debugger in case of an exception
    added some attributes to Tee object to make pdb post mortem debugging work
    some style fixes
    fixed a few test problems and achieved pypy compatibility
    added beat_interval option and refactored commandline options a bit
    some refactoring and documenting
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    a couple of pep8 and flake8 fixes
    factored out ingredient to own file and finished testing it
    pep8 fixes and skip tests if pymongo is missing
    WIP fixing the fail-behaviour of Observers
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    refactored optional library usage, observers and randomness
    unified some spellings and added more api-documentation
    conditioned stacktrace filtering on being non-sacred
    
     fixes #65
    WIP: collect dependencies and sources of ingredients pass them to observer
    added support for configuration dictionaries in experiments
    refactored config modifications and fixed problem with displaying seed modifications
    config entries that are unchanged through config updates are no longer marked as modified by print_config
    refactored and tested print_config command
    more  pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    documented randomness and added an example. fixes #45
    added commands to ingredients. fixes #46
    changed path handling to make meta-experiment feasible. fixes #22
    added custom stacktrace printing to run_commandline. fixes #16
    flatten config updates before usage. fixes #48
    extracted is_prefix method
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    added some tests for utils and simplified a bit
    optimized imports
    fixed tracking of updated modules for print_config. Fixes #26
    remove pylstm specific InfoUpdater
    fixed distribution of config_updates and logging
    fixed print_config
    reworked distribution of config_updates
    changed iterate_flattened_keys to iterate over (key, value) pairs instead
    extracted custom_containers file
    WIP: Change module structure to explicit packaging
    updated the InfoUpdater
    added handling for seed and rnd
    moved experiment.info outside of experiment.description again
    bugfix for the logging flag
    added output capturing and also added it to the db entry
    fixed stacktrace pruning but lost python3 compatibility
    refactored argparser
    removing traces of sperment
    removed new raise_with_traceback function from traceback
    changed #!/usr/bin/python to #!/usr/bin/env python
    added __name__ to InfoUpdater
    portable way of raising with traceback
    renamed project to sacred
    changed naming of the monitor result entry to remove the forbidden period
    made passing monitors to InfoUpdater more convenient.
    added basic logging capabilities
    added InfoUpdater monitor to utils
    Made git at import time optional (#724)
    
    * Made git at import time optional
    
     - sacred couldn't be imported when git executable is missing
    
    * ran pre-commit
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Removed get_version_heuristics (#594)
    
    * Removed get_version_heuristics
    
    * Removed unused variable.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Using pathlib to simplify is_local_source. (#559)
    
    Using pathlib to simplify is_local_source.
    Used pathlib parts instead of custom function. (#536)
    
    * Used pathlib parts instead of custom function.
    
    * Used list to keep old behavior.
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    if getattr -> hasattr (#449)
    
    * if getattr -> hasattr
    
    * Undo changes and added comment.
    fix exception with compiled pybind11 extension
    
    Not attempting to collect c++ sources, just making sure everything else
    still works. The exception was:
    
    TypeError: expected str, bytes or os.PathLike object, not NoneType
    fix flake8 errors & warnings
    Add pyd libs to dependencies.
    Allow dependencies to be compiled libraries.
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    TST: Fix
    capture ValueError exception when git repo is empty
    Support custom experiment base directory
    fixed a error when running interactively
    many fixes of the dependency discovery
    some refactoring and pep8 fixes
    refactored discovery of dependencies and sources
    some flake8 fixes
    added some docs to dependencies.py
    extended error handling for determining package versions
    
    fixes #191
    cosmetic refactoring
    added mainfile to experiment info
    explicitly blacklist __main__ module
    
    (cherry picked from commit a7f988b)
    explicitly blacklist __main__ module
    optimized dependencies and tox and travis build
    added interactive=True flag to ingredients and experiments
    (cherry picked from commit 3573886)
    changed behaviour of FileStorageObserver for storage of sources
    
    also added some tests and changed source-paths to be relative in general
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    WIP: Prototype of Git integration
    added interactive=True flag to ingredients and experiments
    added (warned) support for running sacred in interactive mode
    (cherry picked from commit f590871)
    added (warned) support for running sacred in interactive mode
    changed json format of dependencies
    minor refactorings
    minor refactorings
    fixed an error that occurs if a module doesn't have a __file__ attribute
    fixed problem with mod_path being None sometimes
    more dependency tests to reach full coverage
    made the checking for local sources stricter eliminating some false positives.
    
    fixes #85
    add numpy as dependency if present even if not imported by experiment.
    
    fixes #76
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    very basic resource handling
    unified some spellings and added more api-documentation
    conditioned stacktrace filtering on being non-sacred
    
     fixes #65
    added print_dependencies command
    Further testing of the dependencies module
    WIP: collect dependencies and sources of ingredients pass them to observer
    WIP: Automatically test examples
    WIP: Package dependencies
    extracted dependencies module
    removed faulty shell=True parameter from subprocess.check_output call
    Fix parameters to subprocess
    removed faulty shell=True parameter from subprocess.check_output call
    Fix parameters to subprocess
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    fixed the tests
    refactored and improved dependency scanning
    WIP: document experiment
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    added a scan for dependencies . fixes #14
    changed #!/usr/bin/python to #!/usr/bin/env python
    renamed project to sacred
    added host info to MongoDB observer
    Minor Patch release
    Added draft for the 0.8 release HISTORY entry. (#674)
    
    * Added draft for the 0.8 release HISTORY entry.
    
    * list pathlib as internal change, and mention pep8 precommit hook
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Release 0.7.5
    
    This is the final release to support Python 2.7
    Changed version to enable installation from git+https style pip url
    Bugfix release 0.7.4
    major bugfix release 0.7.3
    bumped version number and updated history
    updated History and bumped version number
    updated version number and History and added a few credits
    fourth beta release
    beta 3 release
    new beta release
    preparation for the 0.7 beta1 release
    release 0.6.10
    
    * added documentation for interactive mode and captured out filter
    * updated history
    * changed version number
    first beta for 0.7 release
    Bugfix release 0.6.9
    
    fixed two issues that were introduced in 0.6.8
    bumped version number and updated HISTORY
    Bugfix release 0.6.9
    
    fixed two issues that were introduced in 0.6.8
    bumped version number and updated HISTORY
    added some documentation
    hotfix release
    bump the version number
    bugfix release 0.6.5
    bumped version number
    bugfix release 0.6.3
    bugfix release 0.6.2
    adjusted the version number
    changed all links to new repository location at IDSIA/sacred
    changed version number to 0.6
    added docstring checker to flake8 and fixed errors
    WIP: collect dependencies and sources of ingredients pass them to observer
    some PEP8 fixes
    some PEP8 fixes
    updated history and adjusted version number
    added a wheel
    added flake8 to tox and fixed detected problems
    updated docs
    updated setup.py, README and MANIFEST
    bumped version number
    added __about__ file for better version handling.
    
     see this for inspiration
    http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/
    
    and see this issue for more info:
    https://github.com/audreyr/cookiecutter-pypackage/issues/1
    ReadOnlyDict/List pickle compatibility and serialization tests (#737)
    
    * Convert ReadOnly{Dict,List} to proxy, supporting pickle
    
    * Fix linting
    
    * custom_containers: JSON and Pickle compatibility
    
    * We actually only need __reduce__ for pickle
    
    * Rename params
    
    * Remove dangling comment
    
    * Make CI happy (lint, f-string, black)
    
    * Address review comments
    
    * ReadOnlyContainer: Remove self.message attribute
    
    * Address comments
    
    Co-authored-by: Adam Gleave <adam@gleave.me>
    Distribute prefixes correctly only to sub-ingredients (Fixes #768) (#769)
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    Ignore folders that have the same name as a named_config
    Add improved exception handling
    BUG: Fixes #326
    proper handling of subpaths in named config evaluation of config updates
    
    fixes #297
    don't collect empty config updates for ingredients
    
    fixes #290
    
    thanks @thequilo
    add an optional _log entry available during the config
    
    fixes #234
    evaluate log-level option earlier to allow silencing config warnings
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    Fixed named config overwrite for ingredients #281
    
    Adds config_update of subrunning Scaffolds to fixed when running ConfigScope. Fixes #281
    Allow setting the config docstring from config updates and named configs.
    
    fixes #270
    some pep8 fixes
    add test for multiple nested configs
    correctly calculate _config
    pep8
    create_scaffolding raise exception when pathes aren't unique
    changed the way named configs are handled
    shallow-copy the list of observers when creating a run
    
    fixes #190
    fixed bug where setting seed=0 was ignored
    consider nonexisting prefixes to be empty dicts instead of None
    
    fixes #153
    WIP: make named configs affect ingredients
    attempt to fix the build
    
    (cherry picked from commit 365aa13)
    ignore typechanges from None to something even in print_config and not just for warnings
    
    (cherry picked from commit f537ba8)
    ignore typechanges from None to something even in print_config and not just for warnings
    Update initialize.py
    
    Bugfix: bracked was missing
    Update initialize.py
    
    isinstance(type_old, type(None)) is always false
    type_old is type(None) checks if the type is NoneType
    Added facility to apply a filter function to captured output.
    refactoring and tidying up
    changed behaviour of FileStorageObserver for storage of sources
    
    also added some tests and changed source-paths to be relative in general
    changed name of disable-suspicious-warnings arg to force
    added an option to disable suspicious changes warnings
    Bugfix release 0.6.9
    
    fixed two issues that were introduced in 0.6.8
    tested and fixed captured function prefix handling for fail on unused config
    bugfix for named configs
    minor refactorings
    some pep8 fixes
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    WIP: fail if adding an unused config entry
    Bugfix release 0.6.9
    
    fixed two issues that were introduced in 0.6.8
    tested and fixed captured function prefix handling for fail on unused config
    bugfix for named configs
    minor refactorings
    some pep8 fixes
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    WIP: fail if adding an unused config entry
    renamed kwarg named_configs_to_use to named_configs in Experiment.run_command
    
    This is to make it consistent with the signature of Experiment.run
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    more ingredient tests and some refactoring
    pep8 fixes and changed badges around a bit
    fixed config modification problem where some modifications could be displayed as added
    (cherry picked from commit 847ac88)
    fixed config modification problem where some modifications could be displayed as added
    added pre-run hooks and renamed a bit
    changed to config_hook mechanism to not use ConfigScopes
    WIP: whetlab ingredient
    run config hook uses the now correct fallback handling
    WIP config hook
    WIP: first working version of config_hooks
    first draft of a pre_run feature
    refurbished ingredients a bit
    more docstrings
    sorted imports using isort
    fixed some pep8 and other testing issues
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    refactored config more
    moved config stuff to own package
    WIP: testing observers
    refactored optional library usage, observers and randomness
    added methods for manually adding dependencies
    unified some spellings and added more api-documentation
    fixed tests
    ignore summaries of named configs.
    
    fixes #68
    added print_dependencies command
    WIP: collect dependencies and sources of ingredients pass them to observer
    WIP: loading config files
    refactored ConfigScope and ConfigDict to return their result instead of being dicts.
    fixes #71
    refactored config modifications and fixed problem with displaying seed modifications
    Seeds now are generated only after config is done.
    
    This fixes some inconsistencies with seeds and named configs. But note that now ConfigScopes do not have access to the seed anymore.
    config entries that are unchanged through config updates are no longer marked as modified by print_config
    added a warning for ignored attempts to overwrite ingredients. fixes #52
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    changed behaviour of named config scopes again to reuse chained execution code.
    added special handling for updates to 'seed'. fixes #61
    fixed behaviour of empty ConfigScope chains. fixes #50
    tested, refactored and fixed chained config scope evaluation. fixes #63
    fixed the tests
    changed named_config handling a bit.
    
    - Order is now reversed: first ones now have priority
    - their changes are reported as config modifications
    added documentation for the new features
    only report values as added if they are added in all config scopes. fixes #58
    added optional prefix to capture and command
    added named_configs feature
    slightly refactored create_run
    turned scaffolding into a dictionary
    documented randomness and added an example. fixes #45
    documented and ironed out logging. fixes #44
    added commands to ingredients. fixes #46
    changed path handling to make meta-experiment feasible. fixes #22
    turned main into a command under the hood. fixes #21
    renamed module to ingredient. fixes #49
    cleaned up events
    added custom stacktrace printing to run_commandline. fixes #16
    flatten config updates before usage. fixes #48
    fixed use of scaffolding and return type of ex.run()
    WIP: splitting
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed the backport; (#544)
    refactored the way import tf is done.
    Fixed #445: Incompatibility with TensorFlow 2 (#456)
    
    * Fixed #445: The PR #453 didn't actually fix it. Declared also two new test environments with TensorFlow 1 and 2.
    
    * Dropping Python 3.4 from Travic CI and AppVeyor. Python 3.4 support has been deprecated. Also not supported by a newer version of `pandas` that is required if using a newer vesion of `numpy` that is required if using `tensorflow`.
    
    * Added a conditional import of `tensorflow` for a backward compatibility with version `1.12` and older. Included also a depracation warning for TF version `1.12` and older.
    
    * Fixed code formatting.
    
    * Added tests for the new functions in `utils`.
    
    * Set an older TF version for the `tensorflow-1` test environment.
    
    * Added `packaging` as a new install requirement to `setup.py`.
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    Rename LogSummaryWriter to LogFileWriter. Use tf.summary.FileWriter instead of tf.train.SummaryWriter
    
    tensorflow.train.SummaryWriter has been depracated. Users should use tensorflow.summary.FileWriter instead
    This change reflects it.
    Fix flake8 complain
    Add sacred.stflow to packages
    Make LogSummaryWriter compatible with Python 2.7
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    if getattr -> hasattr (#449)
    
    * if getattr -> hasattr
    
    * Undo changes and added comment.
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    Extend stflow tests to check for multiple LogFileWriter annotations
    
    Check that sections of code annotated by LogFileWriter more than once don't capture the FileWriter twice
    Update documentation
    Fix flake8 complain
    Add sacred.stflow to packages
    Make LogSummaryWriter compatible with Python 2.7
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Revert "Feature/tf integration"
    Rename LogSummaryWriter to LogFileWriter. Use tf.summary.FileWriter instead of tf.train.SummaryWriter
    
    tensorflow.train.SummaryWriter has been depracated. Users should use tensorflow.summary.FileWriter instead
    This change reflects it.
    Fix flake8 complain
    Add sacred.stflow to packages
    Make LogSummaryWriter compatible with Python 2.7
    Fix typo on slack observer. (#614)
    Made the slack observer from_config method simpler. (#606)
    
    simplified slack from_config method and init methods
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed code duplication.
    removed lots of py2 compatibility code
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    added priority to observers
    flake8 fix
    Fix for SlackObserver from_config method.
    added documentation for slack observer
    completed the collected_information docs
    polishing SlackObserver
    first prototype of SlackObserver
    Do not convert carriage returns to newlines in captured output (#714)
    
    * Do not convert carriage returns to newlines in open files
    
    For Python 3, opening the captured output file should not convert \r into \n. See this issue: https://github.com/IDSIA/sacred/issues/673
    
    * Backwards compatibility of newline treatment with Python 2
    
    Also add test
    
    * Flush JSON writes in FileObserver
    Fixing the silent overwritting of important files. (#647)
    
    Fix the silent overwriting of important files in the FileStorageObserver.
    Use new cli file storage (#641)
    
    * Fixed the circular imports.
    
    * Used new CLI for file_storage.
    
    * Added the file_storge option to the list of default options.
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Removed create from FileStorageObserver. (#605)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Some more attributes are Paths now. (#558)
    
    * Added pathlib to more stuff.
    
    * Some more attributes use pathlib.
    
    * Fixed json serialization issue;
    
    * Fix pep8
    
    * Update sacred/observers/file_storage.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Update sacred/observers/file_storage.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Revert "Update sacred/observers/file_storage.py"
    
    This reverts commit 73a8d0ef7bff9e8b3d06c1d0f3da869e01807c07.
    
    * Revert "Update sacred/observers/file_storage.py"
    
    This reverts commit 7d3f263b80be33d5226320bd85c8e6b7a3d596e3.
    Moving more slowly to pathlib (#549)
    
    * Started moving to pathlib.
    
    * Finished converting create to pathlib.
    Remove __ne__ as it is already defined. (#531)
    
    * Removed __ne__ as it is already defined.
    
    * Sacred doesn't support pathlib well yet.
    Avoid file-observer fail to make run-dir for wrong listdir results (#503)
    
    * Increase number of allowed fails of dir creation
    
    100 fails occure  quickly if douzens of workers try to create directories.
    In practice about 1% of the runs of about 30-40 workers ended because of this.
    
    * Add random sleeps to break symmetry on fail of run dir creation
    
    * Reduce line length
    
    * Again shrink line length
    
    * Increase id without checking after fail creating dir
    
    * Remove unused imports
    
    * Test creating run directory for wrong listdir result
    
    * Make more pythonic
    
    * Call listdir compatible to python 3.5
    
    * Separate started event creates rundir tests
    minor cleanup
    removed lots of py2 compatibility code
    FileObserver setup concurrent-safe (#473)
    
    * Create file storage directories concurrent-safe
    
    * File storage uses same method to make run directory for start and queue events
    
    * Remove newline
    
    * Remove trailing whitespace
    
    * Remove trailing whitespace and unused import
    
    * Use fallback of os.makedirs for python 2
    
    * Fix typo
    
    * Test coverage also for python2
    
    * Test make run directory can raise file exist error
    
    * Skip test with unittest.mock if unsupported python version
    
    * Improve readability of max call
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Replace unittest.mock by pytest.monkeypatch
    
    * Separate creation of next run dir to new method
    
    * Revert "Test coverage also for python2"
    
    This reverts commit 025c66af9d4ed1dccdfd26b73f965062cfb927aa.
    
    * Import python 2 fallback of file exists error
    
    * FileExistsError fallback requires argument
    
    * Avoid pylint errors when redefining builtins
    
    * Shorten lines
    
    * Move race condition catch to outer function when creating run dir
    fixed backwards compatibility of cout writing
    
    python 2.7 does not support an encoding argument to open().
    Reset `cout_write_cursor` at each call of `started_event`
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Keep track of the last character of self.cout in FileStorageObserver
    when self.save_cout is called (#383)
    Keep track of the last character of self.cout in FileStorageObserver
    when self.save_cout is called (#383)
    fix flake8 errors & warnings
    Workaround that provides FileExistsError for Python 2
    Fix ResourceWarning: Unclosed file
    Add metadata argument to non mongo observers
    BUG: Fixes #329
    STY: Fixes flake8
    Added metric log saving for FileStorage observer
    fixed bug in filestorage directory creation
    
    fixes problem with #285
    fix race condition in FileStorageObserver
    added host_info to queued events
    (needed for the python version)
    fixed an encoding error in FileStorageObserver writing to cout.txt
    fixed a problem with utf-8 symbols in stdout
    
    fixes #176
    added storing intermediate results to heatbeat event
    added priority to observers
    converted FileObserver to consequtive integer ids
    refactored handling config values
    simplified captured out implementation hopefully also fixing the problems with windows
    switched to jsonpickle based encoding. Solves #111
    added py2 compatible FileNotFoundError
    added documentation for the FileStorageObserver and refactored it slightly
    some tidying up
    cross platform support and some refactoring of output capturing
    refactoring and tidying up
    changed behaviour of FileStorageObserver for storage of sources
    
    also added some tests and changed source-paths to be relative in general
    added tests for the FileStorageObserver and changed behaviour of resource_event
    added queue events to sql and filestorage observers
    renamed FlatfileObserver to FileStorageObserver
    added explicit (but optional) name to artifacts
    
    fixes #95
    small template fix
    added optional template rendering to flatfile observer
    some adjustments to flatfile observer
    added very rudimentary flatfile observer
    Update pymongo version (#687)
    
    * Update pymongo version
    
    Use Collection#count_documents instead of Cursor#count. Also upgrade
    custom mocks to new mongomock code.
    
    * Add debug logging to queue observer
    
    * Remove dead code and don't use fstring
    
    * Remove fstrings for real
    Add documentation for queue observer (#677)
    
    * Add documentaton for queue observer
    
    * Add class docstring
    
    * Fix pymongo import
    
    * Add usecase
    
    * Specify a bit more
    Ensure waiting for observers (#590)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Remove __ne__ as it is already defined. (#531)
    
    * Removed __ne__ as it is already defined.
    
    * Sacred doesn't support pathlib well yet.
    removed lots of py2 compatibility code
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed defaults arguments in super. (#564)
    Better import error message tinydb observer. (#554)
    
    * Better error message tinydb.
    
    * Made the separation for tinyfs.
    
    * Finished fixing imports.
    
    * Fixed imports.
    Added functions to the interface to avoid checks. (#598)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    Removed code duplication.
    removed lots of py2 compatibility code
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Add metadata argument to non mongo observers
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    added host_info to queued events
    (needed for the python version)
    added storing intermediate results to heatbeat event
    added priority to observers
    simplified captured out implementation hopefully also fixing the problems with windows
    cross platform support and some refactoring of output capturing
    added queue events to sql and filestorage observers
    added explicit (but optional) name to artifacts
    
    fixes #95
    added _id to runs that is set by the first observer
    fixed some tests and observer interface problems
    fixed the started_event interface
    added meta_info
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    added the command that was run to the DB entry
    pep8 and flake8 fixes
    pep8 and flake8 fixes
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    removed unused DebugObserver and improved coverage
    more documentation for named updates
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    more test for the mongo observer
    WIP: testing observers
    refactored optional library usage, observers and randomness
    Removed boto as dependency. (#662)
    
    Removed boto as mandatory dependency.
    Use new CLI for S3 (#642)
    
    * Fixed the circular imports.
    
    * Used new cli for S3 option.
    
    * No blank line allowed after function docstring.
    Making boto3 optional. (#648)
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Removed boto as dependency. (#662)
    
    Removed boto as mandatory dependency.
    Use new CLI for S3 (#642)
    
    * Fixed the circular imports.
    
    * Used new cli for S3 option.
    
    * No blank line allowed after function docstring.
    Making boto3 optional. (#648)
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Used new cli for tinydb. (#658)
    Remove .create() in tinydbobserver (#602)
    
    * Changed the api.
    
    * Changed call in test.
    
    * Changed the doc.
    
    * Missing parenthesis.
    
    * Forgot return.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    Simpler organisation to propagate the import errors in command line options. (#556)
    
    * Simpler organisation to propagate the import errors.
    
    * Silence flake8
    Better import error message tinydb observer. (#554)
    
    * Better error message tinydb.
    
    * Made the separation for tinyfs.
    
    * Finished fixing imports.
    
    * Fixed imports.
    Remove __ne__ as it is already defined. (#531)
    
    * Removed __ne__ as it is already defined.
    
    * Sacred doesn't support pathlib well yet.
    PEP8
    Removed duplicated code in tinydb_hashfs.py
    removed lots of py2 compatibility code
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Add metadata argument to non mongo observers
    Added a reset of db_run_id to started_event to fix #327.
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    added host_info to queued events
    (needed for the python version)
    fixed problem with relative filepaths of sources
    
    fixes #187
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    added storing intermediate results to heatbeat event
    simplified captured out implementation hopefully also fixing the problems with windows
    Fix build on Python 2.7
    
    Needed to add additonal code for textwrap.indent and serialisation of BufferReader that were python 2 and 3 compatible.
    Tidy code for flake8
    Tidy code for flak8
    Add tests for TinyDbReader
    Add outline for tests for tinydb reader
    Add TinyDbReader class to extract info from observer
    Add tests for new file handle serialisation
    Allow for file object serialisation to hashfs
    Change setting of base dir location for TinDbObserser
    Tidy code for flake8
    Add commandline interface to tinydb observer
    Tidy code and fix import name in tests
    Fix setting data types in Serializers for missing libraries
    Fix trailing space
    Add absolute_import form __future__ for py27 compatability
    Attempt to fix build by renaming module
    Add __sacred__ variable
    Tidy doc strings for flake8
    Tidy code for flake8
    Attempt to fix tox test running
    Tidy up code and imports
    Boost test coverage to 100% for tindb observer
    Port remaining tests from mongo observer
    Add more tests
    Add JSON serialisation to numpy, pandas and datetime objects
    Initial implimentation of tinydb observer pre test
    Use new cli for sql (#643)
    
    * Fixed the circular imports.
    
    * Used the new cli for sql.
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    [API change]  Getting rid of the create method for observers (#601)
    
    * Clean version of deleting the create method for observers.
    
    * Used a more descriptive, but less funny docstring.
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Added comment.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Simpler organisation to propagate the import errors in command line options. (#556)
    
    * Simpler organisation to propagate the import errors.
    
    * Silence flake8
    Added the test for the import error. (#547)
    
    * Added the test for the import error.
    
    * Enabled observers's tests.
    
    * Better error message.
    
    * Fixed imports in tests.
    
    * Fix pep8
    
    * Pep8 again
    
    * Changed import.
    Remove __ne__ as it is already defined. (#531)
    
    * Removed __ne__ as it is already defined.
    
    * Sacred doesn't support pathlib well yet.
    Simplified the logic in the sql observer.
    removed lots of py2 compatibility code
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    Add metadata argument to non mongo observers
    fixes to sql.py to get postgres working
    TST: Fix
    made SQL session thread-local to avoid problems with sqlite
    
    fixes #275
    added host_info to queued events
    (needed for the python version)
    added a lock to the SQLObserver.
    
    should fix #188
    split the run_id from the primary key.
    
    should fix #192
    fixed problem with relative filepaths of sources
    
    fixes #187
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    added storing intermediate results to heatbeat event
    added priority to observers
    refactored handling config values
    simplified captured out implementation hopefully also fixing the problems with windows
    Make flake8 fixes
    switched to jsonpickle based encoding. Solves #111
    fixed problem with SQL observer autoincrement and removed an obsolete entry in host_info.__all__
    added py2 compatible FileNotFoundError
    first beta for 0.7 release
    added documentation for the SqlObserver and refactored it a bit
    some tidying up
    tested and fixed SqlObserver
    cross platform support and some refactoring of output capturing
    added queue events to sql and filestorage observers
    added explicit (but optional) name to artifacts
    
    fixes #95
    first working version of SQL observer
    first version of SQL Observer
    (cherry picked from commit 0cad2b4)
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Add documentation for queue observer (#677)
    
    * Add documentaton for queue observer
    
    * Add class docstring
    
    * Fix pymongo import
    
    * Add usecase
    
    * Specify a bit more
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    add telegram observer.
    polishing SlackObserver
    made tinydb dependency optional
    Add TinyDbReader to observers init
    Add commandline interface to tinydb observer
    some tidying up
    renamed FlatfileObserver to FileStorageObserver
    added very rudimentary flatfile observer
    first working version of SQL observer
    first version of SQL Observer
    (cherry picked from commit 0cad2b4)
    added a more helpful message when using -m/-mongo_db and the pymongo package is missing
    added a more helpful message when using -m/-mongo_db and the pymongo package is missing
    removed unused DebugObserver and improved coverage
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    refactored optional library usage, observers and randomness
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed code duplication.
    add started_text to config options for telegram observer
    removed lots of py2 compatibility code
    fixed some flake8 errors
    fix linting errors
    Add proxy support to Telegram observer.
    fix dependency import analogue to other spots in same file
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    pep fixes and fixed a copy&paste error
    added priority to TelegramObserver and made the started_event optional
    further cleanup.
    keeping a single bot object now, instead of creating it every time.
    fix flake8 complaints
    add telegram observer.
    Add option to pass a collection prefix to MongoObserver (#704)
    
    * Add 'collection_prefix' for MongoObserver constructor arguments.
    Runs are stored in collection PREFIX_runs, metrics in PREFIX_metrics.
    Deprecated argument 'collection' to MongoObserver.
    See Sacred issue #700.
    
    * Add blacklist check for metrics collection name.
    
    * Fix collection name blacklist check.
    
    * Ensure backward compatibility for creating MongoObservers with only
    a collection name.
    
    Add tests for creating MongoObservers with/without collection_prefix.
    
    * pre-commit reformatting
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    Update pymongo version (#687)
    
    * Update pymongo version
    
    Use Collection#count_documents instead of Cursor#count. Also upgrade
    custom mocks to new mongomock code.
    
    * Add debug logging to queue observer
    
    * Remove dead code and don't use fstring
    
    * Remove fstrings for real
    Add documentation for queue observer (#677)
    
    * Add documentaton for queue observer
    
    * Add class docstring
    
    * Fix pymongo import
    
    * Add usecase
    
    * Specify a bit more
    Use new CLI for mongo (#639)
    
    * Changed cli for mongo and avoided circular imports.
    
    * Fixed some imports.
    
    * Fix flake8
    
    * Fixed imports for testing.
    
    * Fixed the circular imports.
    Removed create in QueuedMongoObserver (#604)
    Removed create in mongo observer. (#603)
    
    * Removed create in mongo.
    
    * formatting.
    
    * Forgot return statement.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Simpler organisation to propagate the import errors in command line options. (#556)
    
    * Simpler organisation to propagate the import errors.
    
    * Silence flake8
    Remove __ne__ as it is already defined. (#531)
    
    * Removed __ne__ as it is already defined.
    
    * Sacred doesn't support pathlib well yet.
    Make pymongo optional again (#519)
    
    * Make pymongo optional again
    
    * Add test for running without optional deps
    
    * Add new tox env to travis
    
    * Add cpuinfo back in
    removed lots of py2 compatibility code
    Add queue based observer (#471)
    
    * Add draft for queue based observer
    
    * Wait for processing intstead of put back
    
    * Reformat a bit
    
    * Make mongo observer more robust against failure
    
    When cooperating with the queue observer
    
    * Make retry interval configurable
    
    * Add create method to QueuedMongoObserver
    
    * Add Queue compabitible mongo observer
    
    * Remove print debug statements
    
    * Different queue import for py27
    
    * Fix flake8 error
    
    * Fix more flake errors and deletegate __ne__
    
    * Remove unused import
    
    * Remove reimport
    
    * Fix python 2 error
    Make failed mongo observer dump configurable (#462)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Make mongo observer dump dir configurable
    
    * Fix py27 and flake8 warnings
    
    * Fix some py27 errors and move mock to own file
    
    * Make Python 2 compatible
    Fix some typos (#460)
    
    * Fix some typos
    
    In comments and forbidden collections
    
    * Replace asserst with ValueErrors
    
    Also add tests for those
    
    * Fix syntax error
    Fix flake8 error
    Use update_one instead of replace_one in mongo observer.
    
    Replace_one rewrites the whole record. This will overwrite changes made
    by other applications such as omniboard (see
    vivekratnavel/omniboard#39).
    Using update_one only updates entries without creating a new record.
    
    In final_save, a save api call is made. I am not sure if here the update
    command covers all edge cases.
    Attach content-type directly to gridfs object
    
    GridFS offers a special attribute to attach a content-type to a file.
    This commit introduces an extra arugment to add artifact to put the
    content-type into. If the content-type is not set manually it is
    automatically detected. However, this behavior makes more sense then
    reserving a field in the artifacts metadata for the content-type. This
    change has only an effect on the MongoObserver.
    fix flake8 errors & warnings
    Fix flake8 warnings
    Enforce consistent mimetypes on windows
    use numpy aware comparisons to check for changed config entries.
    
    fixes #344
    Add content-type detection for aritifacts
    
    For the mongo oberserver the content-type will be automatically added to
    the artifacts metadata based on the filename as detected by Python's
    mimetypes library. This should enable appropriate rendering of artifacts
    in tools like sacredboard.
    Add option to add metadata to artifacts
    
    A dict with custom metadata can now be added to artifacts. This only has
    an effect for the MongoObserver. The metadata will appear in the
    `.metadata` attribute of the file like objects retrieved with pymongo
    from gridfs.
    added a sanity check to prevent passing both client and url to MongoObserver.
    
    see #269
    add option to pass existing MongoClient instance to MongoObserver
    
    The point of this is to allow one to avoid creating redundant instances of MongoClient
    Potentially fixed Mongo-Observer ID Creation not Thread/Process Safe (issue 244)
    potentially fixed the "heartbeat doesn't exit" bug
    
    (cherry picked from commit df16de0)
    fixed a problem with MongoObserver overwrite
    added host_info to queued events
    (needed for the python version)
    some refactoring and pep8 fixes
    added overwrite option to mongodb cmdline
    also serialize intermediate results saved in heartbeat event
    changed way optional imports are handled
    
    actual import is now delayed until usage for many modules
    fix exception on _id lookup
    
    The insert method was attempting to check for the presence of the _id key by comparing dict['_id'] to None. This raised a KeyError, however. dict.get('_id') is the correct way to perform the check.
    Fix line break in mongo.py
    added storing intermediate results to heatbeat event
    Add docstrings
    Rename x and y to steps and values
    
    Rename the two variables in the metrics collection to be consistend
    with the rest of the Metrics API
    Fix codestyle
    Rename id to run_id
    Add 'metrics' to Mongo collection name blacklist
    Let log_metrics accept linearized metrics instead of events
    Fix referencing metrics from the info dictionary
    (mongodb)
    Store metrics data into MongoDB & tests
    Prepare metrics data for storing into DB
    Add message queue for storing metrics (accuracy, loss etc)
    added priority to observers
    queued_event now also uses insert to ensure an int _id
    fixed typo
    Added flattening for results (to handle returned numpy arrays)
    fixed a problem with MongoDB observer and non-integer dict-keys
    changed mongoObserver to use consecutive integer ids
    refactored handling config values
    moved adding the queue_time from within the MongoObserver to the Run
    simplified captured out implementation hopefully also fixing the problems with windows
    switched to jsonpickle based encoding. Solves #111
    cross platform support and some refactoring of output capturing
    refactoring and tidying up
    added queue events to sql and filestorage observers
    added a format specifier to DB entries
    added explicit (but optional) name to artifacts
    
    fixes #95
    changed the MongoDB layout
    added _id to runs that is set by the first observer
    fixed some tests and observer interface problems
    fixed the started_event interface
    added meta_info
    added overwrite option to MongoObserver
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    added the command that was run to the DB entry
    added queue flag to support only queueing runs
    minor refactorings
    pep8 and flake8 fixes
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    minor refactorings
    pep8 and flake8 fixes
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added overwrite option to MongoObserver
    added queue flag to support only queueing runs
    added TimeoutInterrupt
    
    TODO: Document this feature
    got rid of a few old-style string formatting (%)
    some style fixes
    renamed execute to apply and only call it when the flag is actually set
    added beat_interval option and refactored commandline options a bit
    some refactoring and documenting
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    slight refactoring of CommandLineOptions
    fixed the tests
    refactored the way command-line options are defined and used
    added test for PickleNumpyArrays SONManipulator
    added a minimal tests for artifact and resource events and a small fix
    hotfix: MongoObserver raised KeyError in artifact_event
    further improved the error-handling of the MongoObserver. fixes #83
    WIP fixing the fail-behaviour of Observers
    changed default prefix for Mongo Collections and made it configuarable via command-line
    corrected and added some documentation
    undid splitting of host, experiment and run collections
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    more test for the mongo observer
    WIP: testing observers
    WIP
    refactored optional library usage, observers and randomness
    Implement Git Integration for SqlObserver (#735) (#741)
    
    * add SQL tables "repository" and "experiments_repositories" for tracking Git info
    
    * remove duplicate experiment-repository pairs
    
    * fix code style
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Added the test for the import error. (#547)
    
    * Added the test for the import error.
    
    * Enabled observers's tests.
    
    * Better error message.
    
    * Fixed imports in tests.
    
    * Fix pep8
    
    * Pep8 again
    
    * Changed import.
    Use jsonpickle handlders for numpy and pandas (#695)
    
    * Use jsonpickle handlders for numpy and pandas
    
    * Pin moto version
    
    * Upgrade windows image
    
    * Package our own mimetypes
    
    * Use pkg_utils to find resource file
    
    * Also add mimetypes file
    ReadOnlyDict/List pickle compatibility and serialization tests (#737)
    
    * Convert ReadOnly{Dict,List} to proxy, supporting pickle
    
    * Fix linting
    
    * custom_containers: JSON and Pickle compatibility
    
    * We actually only need __reduce__ for pickle
    
    * Rename params
    
    * Remove dangling comment
    
    * Make CI happy (lint, f-string, black)
    
    * Address review comments
    
    * ReadOnlyContainer: Remove self.message attribute
    
    * Address comments
    
    Co-authored-by: Adam Gleave <adam@gleave.me>
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed defaults arguments in super. (#564)
    Removed FallbackDict implementation. (#552)
    
    * Removed FallbackDict implementation.
    
    * Small fix.
    fix make_read_only for custom list, dict and tuple (#510)
    Add copy/deepcopy to read only containers (#500)
    
    * Add copy and deepcopy methods to read only dict
    
    * Add copy and deepcopy methods to ReadOnlyList
    
    * Fix flake8 error
    minor cleanup
    removed lots of py2 compatibility code
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    use numpy aware comparisons to check for changed config entries.
    
    fixes #344
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    removed unintended call from DogmaticDict.get()
    
    fixes #257
    ignore typechanges from None to something even in print_config and not just for warnings
    
    (cherry picked from commit f537ba8)
    ignore typechanges from None to something even in print_config and not just for warnings
    pep8 and flake8 fixes
    pep8 and flake8 fixes
    added None type to simplify type dictionary and added fallback to type_changed method
    added None type to SIMPLIFY_TYPE dict
    adjusted DogmaticDict to handle fixed + fallback merges
    added back setslice and delslice to DogmaticList for python 2.7 compatibility
    refurbished ingredients a bit
    added tests for FallbackDict
    small fix to ensure type simplification also works if some of the numpy types are unavailable.
    
    This was necessary because pypy numpy did not have float128.
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    refactored config more
    moved config stuff to own package
    refactored optional library usage, observers and randomness
    unified some spellings and added more api-documentation
    config entries that are unchanged through config updates are no longer marked as modified by print_config
    added a warning for ignored attempts to overwrite ingredients. fixes #52
    refactored some functions and tests
    changed special **config for _config and optimized performance of _rnd and _seed
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    fixed reference to numpy bool datatype which is called 'bool_' instead of 'bool'
    ignore minor typechanges. fixes #33
    added custom stacktrace printing to run_commandline. fixes #16
    fixed an issue with DogmaticDicts nested in DogmaticLists
    optimized imports
    fixed tracking of updated modules for print_config. Fixes #26
    turned DogmaticDict fallback into property and added check
    fixed distribution of config_updates and logging
    reworked configuration setup and fixed some issues
    extracted custom_containers file
    changed the way config scope handles presets. They now have to appear in the signature
    made experiment a module
    very basic module implementation
    added handling for seed and rnd
    moved captured functions to wrapt
    some updates bugfixing
    made errors inside of evals more readable
    improved print_config command
    undogmatized config_scope
    added typechange logging
    added test for added_values and fixed ConfigScope
    fixed handling of *new* config entries through commandline
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    changed semantics of DogmaticList to be immutable
    renamed blocking_dictify to dogmatize and have it use DogmaticLists also
    added DogmaticList
    updated BlockingDict and renamed it
    changed semantics of BlockingDict
    can't access a fixed value before trying to set it anymore
    added a check against using a non-initialized ConfigScope
    cleaned up ConfigScope and switched to regex for finding the function def
    fixed ConfigScopeTests
    first attempt for multiple configs
    lots of details and added an example
    BlockingDict now handles fixed dictionaryies recursively
    upgraded config_scope to new and fancy function decorator version
    initial version
    Fix ConfigError tracking when raised in config scope (#733)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed FallbackDict implementation. (#552)
    
    * Removed FallbackDict implementation.
    
    * Small fix.
    removed lots of py2 compatibility code
    Add improved exception handling
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    Allow captured functions to be called normal code
    
    This change enables non-experiment code to call captured functions.
    When loading the configuration of a runned experiment this is
    useful:
    
    ```
    from my_experiment import load_model
    config = load_config()   # load config
    
    model = load_model(**config)  # creates model with saved config
    ```
    got rid of a few old-style string formatting (%)
    Support using @ex.capture on methods.
    
    When constructing arguments for a bound method invocation, the first
    argument of the signature ('self') should be ignored, as it is passed
    automatically.
    sorted imports using isort
    moved config stuff to own package
    refactored optional library usage, observers and randomness
    changed special **config for _config and optimized performance of _rnd and _seed
    more  pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    added optional prefix to capture and command
    documented randomness and added an example. fixes #45
    documented and ironed out logging. fixes #44
    added custom stacktrace printing to run_commandline. fixes #16
    WIP: document experiment
    optimized imports
    changed calling of commands to use dependency injection for the run
    extracted custom_containers file
    added handling for seed and rnd
    readded the magic log parameter
    moved captured functions to wrapt
    heavy refactoring
    removed current stacktrace pruning because there is no Python3 compatible way of doing it
    fixed stacktrace pruning but lost python3 compatibility
    changed #!/usr/bin/python to #!/usr/bin/env python
    portable way of raising with traceback
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    improved exception handling
    added basic logging capabilities
    lots of details and added an example
    added basic experiment implementation
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    Added test cases and a fix for Issue #409.  (#505)
    
    * Added test cases and a fix for issue-409. Recursively fill in the result with preset after setting in the conf
    
    * Added a user level interface test case
    
    * Removed reference to the issue
    removed lots of py2 compatibility code
    sorted imports using isort
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    refactored config more
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    added save_config command
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    refactored config more
    moved config stuff to own package
    fixed tests
    WIP: added __init__ to examples directory so autodoc can find it on rtd
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    Unicode isn't used anymore in py3. (#535)
    removed lots of py2 compatibility code
    Add SignatureError
    Add improved exception handling
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    fixed a problem where kwargs might get modified
    adapted signature to deal with annotations and kw_only arguments. Fixes #118
    pep8 and flake8 fixes
    pep8 and flake8 fixes
    some style fixes
    fixed tiny flake8 error
    
     D202  No blank lines allowed after function docstring (found 1)
    Support using @ex.capture on methods.
    
    When constructing arguments for a bound method invocation, the first
    argument of the signature ('self') should be ignored, as it is passed
    automatically.
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    moved config stuff to own package
    unified some spellings and added more api-documentation
    refactored some functions and tests
    fixed indentation error in ConfigScopes and added some tests
    changed special **config for _config and optimized performance of _rnd and _seed
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    added custom stacktrace printing to run_commandline. fixes #16
    fixed reporting of missing parameters. Fixes #29
    readded the magic log parameter
    **kwargs in captured methods now receive all the config
    changed #!/usr/bin/python to #!/usr/bin/env python
    renamed project to sacred
    initial version
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed numpy deprecation warning
    
    DeprecationWarning: np.asscalar(a) is deprecated since NumPy v1.16, use a.item() instead
    BUG: Fixes #325
    some refactoring and pep8 fixes
    some flake8 fixes
    cosmetic refactoring
    fixed a problem with MongoDB observer and non-integer dict-keys
    refactored to make better use of SETTINGS
    reorganization and pep8
    added check for equals sign in config keys
    fixed the tests
    WIP: refactor configuration
    optimized dependencies and tox and travis build
    switched to jsonpickle based encoding. Solves #111
    migrated from six to future
    
    This was done to avoid clashes with old versions of the system-installed six package
    fixed bug in normalize numpy
    pep8 and flake8 fixes
    fixed bug in normalize numpy
    pep8 and flake8 fixes
    fixed problem with numpy values in configuration
    some minor fixes
    sorted imports using isort
    refactored config more
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    removed lots of py2 compatibility code
    fix yaml deprecation warning
    
    YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.
    Better error message for yaml missing. (#450)
    
    * Added a better error message.
    
    * Simplified code.
    
    * Typo.
    
    * Typo
    get_handler: fix line lenght
    Apply JarnoRFB review
    
    Co-Authored-By: boeddeker <boeddeker@users.noreply.github.com>
    improve get_handler exception
    registered .yml extension for yaml config files
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    added documentation for slack observer
    fix flake8 errors
    added save_config command
    Make flake8 fixes
    switched to jsonpickle based encoding. Solves #111
    sorted imports using isort
    moved config stuff to own package
    refactored optional library usage, observers and randomness
    unified some spellings and added more api-documentation
    fixed tests
    conditioned stacktrace filtering on being non-sacred
    
     fixes #65
    refactored config_file handling and tested it
    WIP: loading config files
    support optional trailing comma (#764)
    Fix ConfigError tracking when raised in config scope (#733)
    Fix flake8 and black errors (#766)
    
    * Fix black errors
    
    * Fix flake8 errors
    
    * Update OSX version in azure pipline
    Add support for trailing comments in config scope definition (#699)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed object subclassing. (#562)
    
    Removed object subclassing.
    removed lots of py2 compatibility code
    fix flake8 errors & warnings
    Copy docstring of decorated function to ConfigScope
    changed detection of sacred internals for stacktrace filtering
    
    now relies on __name__ starting with 'sacred' instead of an explicitly set __sacred__=True.
    
    see also #286
    replaced call to deprecated inspect.getargspec()
    
    fixes #216
    refactored to make better use of SETTINGS
    fixed two test issues
    filter config comments that belong to an IDE or linter
    fixed a bug with config entry documentation discovery
    some tidying up
    tested and improved config comment extraction
    WIP: feature: add documentation to config entries
    add more helpful error when adding a return or yield statement to a config scope and mentioned it in the docs
    
    fixes #96
    add more helpful error when adding a return or yield statement to a config scope and mentioned it in the docs
    
    fixes #96
    some style fixes
    adjusted DogmaticDict to handle fixed + fallback merges
    sorted imports using isort
    added docstring checker to flake8 and fixed errors
    fixed some pep8 and other testing issues
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    refactored config more
    moved config stuff to own package
    normalization of config keys and forcing them to be strings
    refactored optional library usage, observers and randomness
    fixed tests
    extracted dependencies module
    refactored ConfigScope and ConfigDict to return their result instead of being dicts.
    fixes #71
    some more tests for ConfigDict and some refactoring
    added support for configuration dictionaries in experiments
    config entries that are unchanged through config updates are no longer marked as modified by print_config
    added a warning for ignored attempts to overwrite ingredients. fixes #52
    fixed indentation error in ConfigScopes and added some tests
    more  pylint fixes to improve code quality
    some pylint fixes to improve code quality
    added flake8 to tox and fixed detected problems
    fixed behaviour of empty ConfigScope chains. fixes #50
    tested, refactored and fixed chained config scope evaluation. fixes #63
    refactored, fixed and tested ConfigScope
    explicitly check for numpy bool in json-serializability check
    added custom stacktrace printing to run_commandline. fixes #16
    make tox tests pass. Removed python 3.2 compatibility because of the wrapt package.
    fixed distribution of config_updates and logging
    reworked configuration setup and fixed some issues
    extracted custom_containers file
    changed the way config scope handles presets. They now have to appear in the signature
    made experiment a module
    very basic module implementation
    added handling for seed and rnd
    moved captured functions to wrapt
    some updates bugfixing
    made errors inside of evals more readable
    improved print_config command
    undogmatized config_scope
    added typechange logging
    added test for added_values and fixed ConfigScope
    fixed handling of *new* config entries through commandline
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    changed semantics of DogmaticList to be immutable
    renamed blocking_dictify to dogmatize and have it use DogmaticLists also
    added DogmaticList
    updated BlockingDict and renamed it
    changed semantics of BlockingDict
    can't access a fixed value before trying to set it anymore
    added a check against using a non-initialized ConfigScope
    cleaned up ConfigScope and switched to regex for finding the function def
    fixed ConfigScopeTests
    first attempt for multiple configs
    lots of details and added an example
    BlockingDict now handles fixed dictionaryies recursively
    upgraded config_scope to new and fancy function decorator version
    initial version
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Removed defaults arguments in super. (#564)
    removed lots of py2 compatibility code
    fixed a problem with propagating config docs from ingredients
    
    fixes #140
    WIP: feature: add documentation to config entries
    fixed config modification problem where some modifications could be displayed as added
    (cherry picked from commit 847ac88)
    fixed config modification problem where some modifications could be displayed as added
    sorted imports using isort
    fixed some pep8 and other testing issues
    unified ConfigSummary and ConfigModifications
    
    fixes #77
    refactored config more
    added some documentation for the custom interrupts
    WIP: first working version of config_hooks
    Fix typo in docs (#715)
    
    Fix typo Line 97
    MonogDB -> MongoDB
    Fix typo and formatting in docs (#670)
    added explanation for omniboard (#653)
    
    improved explanation for omniboard regarding the binding with mongo.
    Added a small section about installing mongodb with docker locally. (#454)
    
    * Added a small section about installing mongodb with docker.
    
    * Added a link to the docker example.
    Add examples comparing maagic and less magic usage
    
    Two examples describing how to avoid magic sacred idioms, if one does
    not want to use them.
    Add docker setup documentation
    changed all links to new repository location at IDSIA/sacred
    unified some spellings and added more api-documentation
    documented example for randomness and fixed tests
    WIP: added example documentation to docs
    updated documentation
    added some documentation for the custom interrupts
    made the host_info mechanism modular to allow for easy addition of custom host_info.
    
    should help with #112
    added more documentation for Run
    unified some spellings and added more api-documentation
    added some documentation for the new add_config method.
    WIP: API-doc
    api-doc stub
    Fixed indentation typo that was preventing running (#728)
    
    Moved the if condition to it's right indentation so the sample can be copied and ran.
    Add documentation about turning off output capture (#676)
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    [API Change] Changed the way host information is collected. (#569)
    
    * Changed the way informations were collected.
    
    * Added a test
    
    * Changed name.
    
    * Changed name.
    
    * Update sacred/experiment.py
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Fixed function call.
    
    * Changed type.
    
    * Fixed pep8
    
    * I think it works.
    
    * Fixed tests.
    
    * Lines enfings
    
    * Lines endings
    
    * Updated the docs.
    
    * Added a test for the warning.
    mention that the FileStorage Observer also collects metrics.
    fix small doc mishaps
    Removed outdated line in the documentation following commit
    1b826b3822e6bdcce56e8eb2a2a040d997b79e21 (Issue #279)
    fixed typo
    had tiny typo
    
    failde -> failed
    Fix method iname in the doc
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    added feature for capturing ENVIRONMENT variables as part of host info
    
    fixes #160
    updated docs and added documentation for settings
    Fix description for metrics API
    Rename x and y to steps and values
    
    Rename the two variables in the metrics collection to be consistend
    with the rest of the Metrics API
    Add note: a metric value must be a Python native type
    Add the Metrics API to the documentation
    switched to always storing UTC times
    
    mostly because of these problems:
    http://stackoverflow.com/q/4530069
    http://api.mongodb.com/python/current/examples/datetimes.html
    
    fixes #127
    added command and options to meta_info
    updated documentation
    completed the collected_information docs
    updated documentation
    updated HISTORY and added a new WIP chapter to docs
    sphinx quickstart
    unified some spellings and added more api-documentation
    WIP: document the commandline
    documented and ironed out logging. fixes #44
    consistency fixes and completed the experiment section. fixes #32
    WIP: document experiment
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    minor typo edits
    added feature for capturing ENVIRONMENT variables as part of host info
    
    fixes #160
    updated docs and added documentation for settings
    [API change] Making git information gathering enabled by default with GitPython as mandatory dependency.  (#595)
    
    Make git information gathering enabled by default and added GitPython as mandatory dependency.
    Fix typo (#585)
    added documentation for the optional features of sacred including git integration
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    Modify the Metrics API as requested
    https://github.com/chovanecm/sacred/issues/4
    Revert "Feature/tf integration"
    Update documentation for stflow
    Rename LogSummaryWriter to LogFileWriter. Use tf.summary.FileWriter instead of tf.train.SummaryWriter
    
    tensorflow.train.SummaryWriter has been depracated. Users should use tensorflow.summary.FileWriter instead
    This change reflects it.
    Update documentation
    Use LogSummaryWriter both as context manager and decorator
    
    updated tests and documentation
    typo in documentation + code style
    
    code style
    + useless(?) return result in wrapper
    
    code style
    
    omg code style
    +log_summary_writer documentation in docs and added a test for annotated methods
    Update randomness.rst (#635)
    
    missing torch et tensorflow seed setting.
    more observers documentation and some docs about automatic global seeding
    documented randomness and added an example. fixes #45
    consistency fixes and completed the experiment section. fixes #32
    renamed module to ingredient. fixes #49
    even more documentation. lots of stubs
    Add documentation for docstring format (#619)
    
    * Add documentation for docstring format.
    
    Also adapt docstrings in experiment file.
    
    * Flx flake8 errors
    
    * Add style check to ci and adapt docstrings
    
    * Install checker in tox
    
    * Fix generator annotation
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    release 0.6.10
    
    * added documentation for interactive mode and captured out filter
    * updated history
    * changed version number
    changed the MongoDB layout
    fixing the RTD documentation build
    fixing the RTD documentation build
    some style fixes
    added some documentation for custom flags and updated the history
    WIP: adjusted conf.py script to make it work with rtd
    WIP: added example documentation to docs
    some PEP8 fixes
    some PEP8 fixes
    pep8 fixes
    api-doc stub
    tiny fixes to conf.py
    added __about__ file for better version handling.
    
     see this for inspiration
    http://www.jeffknupp.com/blog/2013/08/16/open-sourcing-a-python-project-the-right-way/
    
    and see this issue for more info:
    https://github.com/audreyr/cookiecutter-pypackage/issues/1
    more documentation
    sphinx quickstart
    Removed create in mongo observer. (#603)
    
    * Removed create in mongo.
    
    * formatting.
    
    * Forgot return statement.
    Fix errors in experiment.rst
    Typo
    
    Just fixed a minor typo
    updated docs and added documentation for settings
    added command and options to meta_info
    completed the collected_information docs
    updated documentation
    updated HISTORY and added a new WIP chapter to docs
    added some documentation for the custom interrupts
    added some docs for queueing runs
    Remove a docs paragraph about loglevel argument in Experiment.run().
    
    It was removed in 69e14da. Now just use the `-l` CLI argument.
    Fix syntax errors in the docs example.
    
    Missing colons in function definitions.
    release 0.6.10
    
    * added documentation for interactive mode and captured out filter
    * updated history
    * changed version number
    fixed some examples and documentation to reflect name being optional
    added some documentation for debugging
    added some documentation for debugging
    updated HISTORY and overhauled documentation for experiment and configuration
    corrected and added some documentation
    unified some spellings and added more api-documentation
    added a Makefile
    mentioned the Run object in the docs. Fixes #39
    consistency fixes and completed the experiment section. fixes #32
    WIP: continued documentation
    WIP: continue documenting experiment
    WIP: document experiment
    Add a list for projects using sacred (#424)
    
    A list like that should help users to discover common usage patterns and
    demonstrate how many cool projects sacred has enabled.
    fixing typo
    Revert "Revert "Feature/tf integration""
    
    This reverts commit 4e05a17a1e14bea1fbe629e948fb9c014505fbdd.
    
    # Conflicts:
    #       sacred/optional.py
    updated docs and added documentation for settings
    Revert "Feature/tf integration"
    +log_summary_writer documentation in docs and added a test for annotated methods
    updated documentation
    refactored handling config values
    added documentation for the optional features of sacred including git integration
    WIP: first working version of config_hooks
    unified some spellings and added more api-documentation
    WIP: added example documentation to docs
    WIP: API-doc
    finished documenting ingredients. fixes #53
    api-doc stub
    WIP: documenting ingredients
    documented observers. fixes #43
    consistency fixes and completed the experiment section. fixes #32
    WIP: document experiment
    even more documentation. lots of stubs
    more docu
    added some examples and the first bit of documentation
    sphinx quickstart
    Add code block annotation
    
    The code did not show up properly formatted without the annotation.
    Add documentation for config hooks
    
    as discussed in issue
    updated documentation
    documentation stub for hooks
    unified some spellings and added more api-documentation
    finished documenting ingredients. fixes #53
    WIP: documenting ingredients
    Google Cloud Storage observer (#686)
    
    * Add Google Cloud Storage observer
    
    * Update dev requirements for google-cloud-storage
    
    * Fix testpath and accomodate flake8 checks
    
    * Run black on repository
    
    * Update observers readme
    
    * Move tmpfile to conftest; update gcs_observer tests
    
    * Unreference tmpfile
    Add documentation for queue observer (#677)
    
    * Add documentaton for queue observer
    
    * Add class docstring
    
    * Fix pymongo import
    
    * Add usecase
    
    * Specify a bit more
    Made the slack observer from_config method simpler. (#606)
    
    simplified slack from_config method and init methods
    Removed create from FileStorageObserver. (#605)
    S3 FileObserver (#542)
    
    * Add implementation of directory saving
    
    * basic tests for s3 observer
    
    * remove unused imports
    
    * fix format string
    
    * Add boto3 to requirements for testing purposes
    
    * fix flake8 issues and add moto for test mocking
    
    * hopefully fix issue with google compute engine
    
    * give up and install google-compute-engine
    
    * add default location
    
    * add decode utf to enforce python 3.5 compatibility
    
    * Clean up and add more tests
    
    * fix format string
    
    * flake8 fixes
    
    * remove recursive artifacts
    
    * remove newline
    
    * add more test coverage
    
    * change observer name, refactor list_s3_subdirs to have an explicit bucket exists method
    
    * add ability to pass in region, and error on Observer creation if region is not either passed in or set in config file
    
    * fix error handling
    
    * fix comment
    
    * fix flake8 issues
    
    * explicitly set region in tests
    
    * start to write s3observer docs
    
    * add requirement in tox file
    
    * black reformatting
    
    * pass in region for tests
    
    * remove use of os.path.join to get around issues with windows paths
    
    * more black reformatting
    
    * remove comma because of  python 3.5 syntax error
    
    * fix black project toml, update s3_join method, fix tests to use s3_join
    
    * reformat for black modulo mongo comma issue
    
    * fix s3_join calls to not pass in list
    
    * changes to mongo
    
    * fix py35 issues
    
    * sync py35 error cases with master
    
    * add new lines at end of files
    
    * sync offending black files with master
    
    * remove final newline
    
    * add end quotations to  pyproject.toml
    
    * remove Z from test name
    
    * fix string line breaks
    
    * remove create method and update docs accordingly
    
    * remove create method from s3 tests
    
    * clean up docs
    
    * fix black issue in test_s3_observer, worried this will annoy flake8
    Remove .create() in tinydbobserver (#602)
    
    * Changed the api.
    
    * Changed call in test.
    
    * Changed the doc.
    
    * Missing parenthesis.
    
    * Forgot return.
    Removed create in mongo observer. (#603)
    
    * Removed create in mongo.
    
    * formatting.
    
    * Forgot return statement.
    [API change]  Getting rid of the create method for observers (#601)
    
    * Clean version of deleting the create method for observers.
    
    * Used a more descriptive, but less funny docstring.
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    
    * Added comment.
    Mention Neptune observer in the README and the docs. (#584)
    
    * added neptune observer and docs
    
    * added utf info at the top, updated docs
    
    * fixed formatting
    
    * updated docs
    
    * added neptune to imports
    
    * fixed typo
    
    * moved import inside Observer class, dropped neptune from dev dependencies
    
    * Added Neptune Observer
    
    * Added Neptune Observer
    
    * added Neptune information to readme
    
    * black formatted
    
    * update documentaion, dropped NeptuneObserver code
    
    * dropped neptune docstring reference
    
    * Update README.rst
    
    Co-Authored-By: Gabriel de Marmiesse <gabrieldemarmiesse@gmail.com>
    
    * Update docs/observers.rst
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    Added a small section about installing mongodb with docker locally. (#454)
    
    * Added a small section about installing mongodb with docker.
    
    * Added a link to the docker example.
    Add proxy support to Telegram observer.
    Added a missing comma
    
    In the Slack Observer example, there was a comma missing in the `slack.json` file. If one copies it directly then it would lead to an error. Sorry for the micro-edits. I could not thank you guys more for developing this. Sacred is a life saver.
    updated docs and added documentation for settings
    add command to install telegram library to documentation.
    added priority to observers
    add telegram observer.
    added documentation for slack observer
    updated documentation
    added documentation for the optional features of sacred including git integration
    added some documentation for named artifacts
    added some docs for queueing runs
    made tinydb dependency optional
    Update dos for TinyDbOberver and TinyDbReader
    added documentation for the SqlObserver and refactored it a bit
    added documentation for the FileStorageObserver and refactored it slightly
    changed the MongoDB layout
    added _id to runs that is set by the first observer
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added documentation for unobserved flag
    added Pandas SON Manipulator and changed numpy SON Manipulator
    
    also added tests and docs
    added documentation for unobserved flag
    refactored the commandline options to affect the run instead of the experiment.
    
     also added a comment option
    more observers documentation and some docs about automatic global seeding
    extended observer docs
    added a bit of documentation
    unified some spellings and added more api-documentation
    mentioned the Run object in the docs. Fixes #39
    documented observers. fixes #43
    WIP: document the commandline
    consistency fixes and completed the experiment section. fixes #32
    added stubs for observer docu
    Add a list for projects using sacred (#424)
    
    A list like that should help users to discover common usage patterns and
    demonstrate how many cool projects sacred has enabled.
    [API change] New way to create command line options. (#572)
    
    Changed API for creating command line options
    Fixed a typo in an example code (#551)
    fix small doc mishaps
    Add documentation for command print_named_configs
    List elements not possible to change
    updated docs and added documentation for settings
    added commandline option for changing the name
    added priority to observers
    updated documentation
    completed the collected_information docs
    updated documentation
    refactored handling config values
    added documentation for the optional features of sacred including git integration
    added docs for the other observer flags
    added some docs for queueing runs
    added documentation for unobserved flag
    added some documentation for debugging
    added documentation for unobserved flag
    added some documentation for debugging
    added unobserved keyword to commands and added a --unobserved flag to the commandline.
    
    fixes #93
    added some documentation for custom flags and updated the history
    fixed the tests
    more documentation for named updates
    unified some spellings and added more api-documentation
    documented the commandline. fixes #42
    WIP: document the commandline
    even more documentation. lots of stubs
    unified some spellings and added more api-documentation
    sphinx quickstart
    update quickstart.rst
    updated documentation
    Update quickstart.rst
    
    Taking capitalisation into account, to better link to the code example of Our First Configuration.
    changed the MongoDB layout
    changed all links to new repository location at IDSIA/sacred
    corrected and added some documentation
    unified some spellings and added more api-documentation
    updated docs
    consistency fixes and completed the experiment section. fixes #32
    added stubs for observer docu
    even more documentation. lots of stubs
    added some examples and the first bit of documentation
    Make config read only (#472)
    
    * Add custom read only containers and use them for the config storage
    
    * Flake8, python2.7 compatibility and testcases for read-only containers
    Fix: some typos
    example config_update fixed
    
    after passing a=23 a/2 equals 11.5, not 5
    refactored to make better use of SETTINGS
    added command and options to meta_info
    filter config comments that belong to an IDE or linter
    added a small notice about docstrings in configs
    updated documentation
    updated documentation
    add_config_file does not exist
    
    It seems instances of Experiment don't have method `add_config_file()`, although stated in this doc. The `add_config()` methods implements to functionality in the example.
    add more helpful error when adding a return or yield statement to a config scope and mentioned it in the docs
    
    fixes #96
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    add more helpful error when adding a return or yield statement to a config scope and mentioned it in the docs
    
    fixes #96
    added a small test for fail on unused configs and fixed it a bit.
    
    also added a bit of documentation
    some documentation fixes
    updated HISTORY and overhauled documentation for experiment and configuration
    corrected and added some documentation
    unified some spellings and added more api-documentation
    changed behaviour of named config scopes again to reuse chained execution code.
    changed named_config handling a bit.
    
    - Order is now reversed: first ones now have priority
    - their changes are reported as config modifications
    added documentation for the new features
    WIP: documenting ingredients
    consistency fixes and completed the experiment section. fixes #32
    renamed module to ingredient. fixes #49
    even more documentation. lots of stubs
    more documentation
    more docu
    Add reference to incense in README
    Mention Neptune observer in the README and the docs. (#584)
    
    * added neptune observer and docs
    
    * added utf info at the top, updated docs
    
    * fixed formatting
    
    * updated docs
    
    * added neptune to imports
    
    * fixed typo
    
    * moved import inside Observer class, dropped neptune from dev dependencies
    
    * Added Neptune Observer
    
    * Added Neptune Observer
    
    * added Neptune information to readme
    
    * black formatted
    
    * update documentaion, dropped NeptuneObserver code
    
    * dropped neptune docstring reference
    
    * Update README.rst
    
    Co-Authored-By: Gabriel de Marmiesse <gabrieldemarmiesse@gmail.com>
    
    * Update docs/observers.rst
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    added Frontends and Related Projects to the readme
    Update README with Omniboard frontend
    Mention Neptune observer in the README and the docs. (#584)
    
    * added neptune observer and docs
    
    * added utf info at the top, updated docs
    
    * fixed formatting
    
    * updated docs
    
    * added neptune to imports
    
    * fixed typo
    
    * moved import inside Observer class, dropped neptune from dev dependencies
    
    * Added Neptune Observer
    
    * Added Neptune Observer
    
    * added Neptune information to readme
    
    * black formatted
    
    * update documentaion, dropped NeptuneObserver code
    
    * dropped neptune docstring reference
    
    * Update README.rst
    
    Co-Authored-By: Gabriel de Marmiesse <gabrieldemarmiesse@gmail.com>
    
    * Update docs/observers.rst
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    New Sacredboard screenshot
    forgot to add sacredboard screenshot
    added documentation for slack observer
    added documentation for slack observer
    added Frontends and Related Projects to the readme
    Mention Neptune observer in the README and the docs. (#584)
    
    * added neptune observer and docs
    
    * added utf info at the top, updated docs
    
    * fixed formatting
    
    * updated docs
    
    * added neptune to imports
    
    * fixed typo
    
    * moved import inside Observer class, dropped neptune from dev dependencies
    
    * Added Neptune Observer
    
    * Added Neptune Observer
    
    * added Neptune information to readme
    
    * black formatted
    
    * update documentaion, dropped NeptuneObserver code
    
    * dropped neptune docstring reference
    
    * Update README.rst
    
    Co-Authored-By: Gabriel de Marmiesse <gabrieldemarmiesse@gmail.com>
    
    * Update docs/observers.rst
    
    Co-Authored-By: Rüdiger Busche <ruedigerbusche@web.de>
    added documentation for the SqlObserver and refactored it a bit
    Update README with Omniboard frontend
    Add reference to incense in README
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Used pyupgrade with --py3-plus. [1/2] (#517)
    
    * Used pyupgrade with --py3-plus.
    
    * Revert some changes to make the review easier.
    
    * Pep8
    
    * fix pep8
    removed lots of py2 compatibility code
    Added facility to apply a filter function to captured output.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed a problem with propagating config docs from ingredients
    
    fixes #140
    WIP: make named configs affect ingredients
    WIP: fail if adding an unused config entry
    WIP: fail if adding an unused config entry
    got rid of a few old-style string formatting (%)
    some style fixes
    some minor fixes
    WIP: collect dependencies and sources of ingredients pass them to observer
    pep8 fixes
    WIP: documenting ingredients
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    WIP: improve captured out handling
    fixed some examples and documentation to reflect name being optional
    added a warning if a run is unobserved (and not in debug mode).
    
    fixes #92
    unified some spellings and added more api-documentation
    WIP: added example documentation to docs
    WIP: Better example documentation and testing
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    WIP: improve captured out handling
    fixed some examples and documentation to reflect name being optional
    changed the MongoDB layout
    added a warning if a run is unobserved (and not in debug mode).
    
    fixes #92
    unified some spellings and added more api-documentation
    WIP: added example documentation to docs
    WIP: Better example documentation and testing
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    some minor fixes
    unified some spellings and added more api-documentation
    Seeds now are generated only after config is done.
    
    This fixes some inconsistencies with seeds and named configs. But note that now ConfigScopes do not have access to the seed anymore.
    some pylint fixes to improve code quality
    consistency fixes and completed the experiment section. fixes #32
    renamed module to ingredient. fixes #49
    added some tests for utils and simplified a bit
    solved the problem for captured functions
    
    FIXME: might be very inefficient
    more docu
    fixed distribution of config_updates and logging
    reworked configuration setup and fixed some issues
    improved modular example
    fixed hashbang python line
    changed the way config scope handles presets. They now have to appear in the signature
    made submodule config readonly and replaced duplicate config entries with a pointer value
    made seed generation optional
    WIP: finish up modularization
    WIP: ModuleRunner
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Add documentation for command print_named_configs
    added some docs to dependencies.py
    some pep8 fixes
    some pep8 fixes
    split debugging mode into two flags -d and -D
    
    the first disables stacktrace filtering and allows usage with ipython --pdb
    the second one automatically starts a pdb post-mortem debugger in case of an exception
    some style fixes
    Seeds now are generated only after config is done.
    
    This fixes some inconsistencies with seeds and named configs. But note that now ConfigScopes do not have access to the seed anymore.
    pep8 fixes
    some pylint fixes to improve code quality
    changed named_config handling a bit.
    
    - Order is now reversed: first ones now have priority
    - their changes are reported as config modifications
    added named_configs feature
    added stacktrace-pruning to command-execution. fixes #55
    documented the commandline. fixes #42
    added some examples and the first bit of documentation
    removed lots of py2 compatibility code
    fixed tests
    WIP: added __init__ to examples directory so autodoc can find it on rtd
    changed #!/usr/bin/python to #!/usr/bin/env python
    set up tox testing and fixed some setup and python 3 issues
    renamed project to sacred
    set version number to 0.2
    added InfoUpdater monitor to utils
    lots of details and added an example
    added basic experiment implementation
    upgraded config_scope to new and fancy function decorator version
    added setup.py
    initial version
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    reverted accidental change to example 03
    add an optional _log entry available during the config
    
    fixes #234
    fixed the tests
    WIP: refactor configuration
    attempt to fix the build
    
    (cherry picked from commit 365aa13)
    attempt to fix the build
    fixed one more type
    WIP: improve captured out handling
    fixed some examples and documentation to reflect name being optional
    WIP: feature: add documentation to config entries
    some style fixes
    added a warning if a run is unobserved (and not in debug mode).
    
    fixes #92
    unified some spellings and added more api-documentation
    WIP: added example documentation to docs
    WIP: Better example documentation and testing
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    WIP: improve captured out handling
    added a warning if a run is unobserved (and not in debug mode).
    
    fixes #92
    unified some spellings and added more api-documentation
    WIP: added example documentation to docs
    WIP: Better example documentation and testing
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    Fix a typo.
    fixed some examples and documentation to reflect name being optional
    first working version of SQL observer
    added a warning if a run is unobserved (and not in debug mode).
    
    fixes #92
    WIP: added example documentation to docs
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    some PEP8 fixes
    some PEP8 fixes
    documented and ironed out logging. fixes #44
    Removed create from FileStorageObserver. (#605)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Add examples comparing maagic and less magic usage
    
    Two examples describing how to avoid magic sacred idioms, if one does
    not want to use them.
    Removed create from FileStorageObserver. (#605)
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    Add examples comparing maagic and less magic usage
    
    Two examples describing how to avoid magic sacred idioms, if one does
    not want to use them.
    Use black to format code (#579)
    
    * Add black
    
    Format the code, add precommit hook and ci check.
    
    * Add contributor instructtions for pre-commit hook
    
    * Invoke black check in CI
    
    * Fix ci errors
    
    * Fix py35 errors introduced by black
    
    * Fix py35 errors by switching to black master
    
    * Use black from master also in ci
    
    * Format remaining files with new black version
    
    * Add black badge to readme
    removed lots of py2 compatibility code
    fixed tests
    documented example for randomness and fixed tests
    Add docker setup documentation
    Add docker setup documentation
    Add docker setup documentation
