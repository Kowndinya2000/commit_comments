    Move ordereddict to requirements
    
    Need ordereddict in the requirements as it is used at run time by the
    yaml parsing code not just a test time.
    
    Change-Id: Ic41e7adb5a06ed319f6201a13b9f7391fc245853
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Argparse is required for JJB to parse arguments
    
    Move argparse requirement from tests to install requirements as it is
    required when using JJB.
    
    Change-Id: If503ebfe790c904f77ef45b59ea909a2577db5cd
    tests for JJB command processing
    
    Add a few tests for JJB command processing.  This is just to get
    started I'm hoping more will come.
    
    Change-Id: Iff964af025f6a3d7ba4acd91b1e0242285a11bc3
    Add tox "coverage" target
    
    Change-Id: I577d62e016a550ea30671837a0a426165984e982
    Add hacking to requirements
    
    Solely for the transitive dependencies.  Ignore errors from hacking
    as do the other openstack-infra python projects.
    
    Change-Id: Ib5953c31a5380f9f57c7f79e1ce0699aef5eb629
    Migrate to pbr
    
    I found out pbr to be a bit nicer when it comes to edit files. AFAIK
    most OpenStack project are using it, so I guess Jenkins Job Builder can
    be pbr based as well.o
    
    Basically:
    * moved everything from setup.py to setup.cfg
    * sorted entries while at it
    * require pbr module using the same version limits used by Zuul
    * enable pbr.warnerrors
    * testenv.usedevelop = True or build_sphinx can not find entry points
    * move requirement files to root of repository (we had them in /tools/)
    
    Change-Id: I44ee8910ad4fe4eebb7337951efa31baff4281fe
    Pin Sphinx to <1.2
    
    1.2 was just released and has a bug that causes builds to fail with
    the error:
    
      error: 'source_dir' must be a directory name (got `...doc/source`)
    
    See: http://bugs.python.org/issue19570
    and: https://bitbucket.org/birkenfeld/sphinx/pull-request/193/builddoc-shouldnt-fail-on-unicode-paths/diff
    
    Change-Id: I902db0d94200692f6737827645030be82bfb9e62
    Add usage info to JJB documentation
    
    Display the usage info for JJB and add it to the
    sphinx docs.
    
    Fixes bug 1221944
    
    Change-Id: I5b36cca7a836b009bfb0ca880abbccd4477de307
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Remove setuptools-git from setup.py.
    
    Put it in test-requires so it's there when we build a tarball.
    Change-Id: I8a5adec74beeb397e71e17030338a8051fe6fb0b
    Reviewed-on: https://review.openstack.org/19885
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Depend on python-jenkins 0.4.1 or later
    
    Change I1cae480a9a341ec2f6062904c962530dfce95057 introduced a
    dependency on the jenkins.Jenkins.get_plugins_info method, which was
    not added to python-jenkins until 0.4.1.
    
    Change-Id: Iedbe85d2dadfbb5a87a5f704649c7d30031a21a7
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Move ordereddict to requirements
    
    Need ordereddict in the requirements as it is used at run time by the
    yaml parsing code not just a test time.
    
    Change-Id: Ic41e7adb5a06ed319f6201a13b9f7391fc245853
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Argparse is required for JJB to parse arguments
    
    Move argparse requirement from tests to install requirements as it is
    required when using JJB.
    
    Change-Id: If503ebfe790c904f77ef45b59ea909a2577db5cd
    Add tox "coverage" target
    
    Change-Id: I577d62e016a550ea30671837a0a426165984e982
    Migrate to pbr
    
    I found out pbr to be a bit nicer when it comes to edit files. AFAIK
    most OpenStack project are using it, so I guess Jenkins Job Builder can
    be pbr based as well.o
    
    Basically:
    * moved everything from setup.py to setup.cfg
    * sorted entries while at it
    * require pbr module using the same version limits used by Zuul
    * enable pbr.warnerrors
    * testenv.usedevelop = True or build_sphinx can not find entry points
    * move requirement files to root of repository (we had them in /tools/)
    
    Change-Id: I44ee8910ad4fe4eebb7337951efa31baff4281fe
    Add test to determine whether XML output has changed.
    
    Change-Id: I5e0b76e195a1b412d180484ce1ddd3e9159d7779
    Reviewed-on: https://review.openstack.org/12286
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    reference tests as examples
    
    Remove samples and reference the tests as examples instead.
    
    We don't need these samples for two reasons:
    1. It is already duplicated in either JJB tests or documentation.
    2. We don't test these samples so they may become outdated (some already have).
    
    Change-Id: If1ba6cc8a675091e740fa254951bb8fcbcee6903
    Do not output XML if job name not specified ('pipeline', 'trigger-builds')
    
    Done in order to enable specifying build pipelines at the project level.
    Pipelines are built using the 'pipeline' plugin or the 'trigger-builds'
    plugin.  The downstream job to be executed is specified at the project
    level, and substituted into the template.  Ignoring definitions where
    the downstream job is blank allows the pipeline to be easily terminated.
    
    Also adding a samples/ directory, which currently contains an example of
    pipeline creation, together with a new tools/run-compare-xml-samples.sh
    to run the before/after test on the samples.
    
    Change-Id: Icc324d1485e22db7824ad784890db48eb3e48f8f
    Reviewed-on: https://review.openstack.org/13706
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Switch to new project-config repo
    
    Change the comparison script to use the new project-config repo created
    due to a reorganization of the puppet modules and JJB config used for
    openstack infrastructure.
    
    Change-Id: Icbe8ddc7fcc6af9cc11d664e01ab6fd52ef8d288
    Adding ability to specify the JDK to use.  This change moves the top level config from builder.py into a separate file called general.py.  This change also moves the assigned node work as well as the log rotator work into the general.py file.  This change also adds the ability to specify the JDK for the build to use.
    
    Change-Id: I0e2b43d889593e01d6ad0761960c93472990af1e
    Reviewed-on: https://review.openstack.org/16983
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Simplify the xml test paths.
    
    Make it easier to invoke the tox environments from another project
    (eg, openstack-ci-puppet).
    
    Change-Id: I88305c8edb79bb6e944eb35f5e39c84827807f11
    Reviewed-on: https://review.openstack.org/12451
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fix early exit from compare test.
    
    Change-Id: I5a871026f2bf7757b7e3e46278391b41e90c5674
    Reviewed-on: https://review.openstack.org/12289
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add test to determine whether XML output has changed.
    
    Change-Id: I5e0b76e195a1b412d180484ce1ddd3e9159d7779
    Reviewed-on: https://review.openstack.org/12286
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Stop referring to openstack/openstack-ci-puppet.
    
    The openstack/openstack-ci-puppet repo moved and became
    openstack-infra/config. Remove references to openstack-ci-puppet and
    replace them with references to openstack-infra/config.
    
    Change-Id: I75e7797995b894b6053901dbcfa351404048ea7c
    Reviewed-on: https://review.openstack.org/23227
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Remove example config.
    
    Change test.sh to expect a config directory, symlinked to
    config files outside of this project.
    
    Change-Id: I84067b494bd8e9ce28c9e74c3556ec78000d83e8
    Reviewed-on: https://review.openstack.org/11161
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Changes to builders/publishers.
    
    Make the following changes to builders and publishers in service
    of being able to handle this job:
    
      http://paste.openstack.org/show/18541/
    
    * Allow builders to have attributes
    * Add a generic shell script builder
    * Make the 'project' job attribute optional
      (no link to github will be made in that case)
    * Combine all separate publishers into one publisher module
      so that jobs may have more than one publisher
    * Name the section that lists publishers "post_build_actions"
      to be consistent with the web UI
    * Allow publishers to have attributes
    * Add an archive artifacts publisher
    * Add a parameterized build trigger publisher
    * Add a parameterized build_trigger builder
    * Add wrappers
    * Add a build timeout wrapper
    * Add a timstamp wrapper
    
    Also, make the following small improvements:
    
    * The 'disabled' attribute of a job is optional, defaults to false.
    * Add a script to verify XML output is the same before and after
      a change to the job filler (test.sh)
    
    Change-Id: Icf2228494e431f5bf0a5f051f63842f12f6f92f1
    Do not output XML if job name not specified ('pipeline', 'trigger-builds')
    
    Done in order to enable specifying build pipelines at the project level.
    Pipelines are built using the 'pipeline' plugin or the 'trigger-builds'
    plugin.  The downstream job to be executed is specified at the project
    level, and substituted into the template.  Ignoring definitions where
    the downstream job is blank allows the pipeline to be easily terminated.
    
    Also adding a samples/ directory, which currently contains an example of
    pipeline creation, together with a new tools/run-compare-xml-samples.sh
    to run the before/after test on the samples.
    
    Change-Id: Icc324d1485e22db7824ad784890db48eb3e48f8f
    Reviewed-on: https://review.openstack.org/13706
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Simplify the xml test paths.
    
    Make it easier to invoke the tox environments from another project
    (eg, openstack-ci-puppet).
    
    Change-Id: I88305c8edb79bb6e944eb35f5e39c84827807f11
    Reviewed-on: https://review.openstack.org/12451
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fix early exit from compare test.
    
    Change-Id: I5a871026f2bf7757b7e3e46278391b41e90c5674
    Reviewed-on: https://review.openstack.org/12289
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add test to determine whether XML output has changed.
    
    Change-Id: I5e0b76e195a1b412d180484ce1ddd3e9159d7779
    Reviewed-on: https://review.openstack.org/12286
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add jenkins-jobs command line tool.
    
    So that jenkins-jobs can be easily run for testing from the source
    dir without installation.
    
    Change-Id: Iabba59ad32ccd4b79eb8934e53c6d747110a06b0
    Reviewed-on: https://review.openstack.org/26259
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Implement recursive search for test fixtures.
    
    This allows hierarchical organization of test scenarios which I consider an
    improvement over the current setup.
    
    Change-Id: I079bfa984832e991712099e0ed353d7c2470dc5b
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Use mock in a Python 3.4 compatible way
    
    Related to https://code.google.com/p/mock/issues/detail?id=234
    
    Change-Id: I85549fdba7b9cb575850a12d52e1ffb0d2dba8c0
    Start libification of jjb
    
    Allow the expansion of the jjb template language yaml into a list before
    generating xml. This will allow others to consume the template parts of
    jjb without forcing them to be tied to xml.
    
    Change-Id: Ifd99151f8246eb817194adc2180189f739ccf742
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    Fix method name call when files cannot be found
    
    Change-Id: I0e2b11979383ec2353509046b6a77199533058d8
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Make logger available during tests
    
    If any tests exercise code paths that emit logs, a warning is
    displayed:
    
      No handlers could be found for logger "jenkins_jobs.modules.NAME"
    
    Set up a logger with default configuration in the base test
    class.  Now any logs will be displayed on the console.
    
    Change-Id: Ib36afd5d96ff8e7fed110b6bedb6e281aac584f8
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Fix string continuation exception
    
    Python does not concatenate strings before performing
    substitutions. Make sure that python sees the error message
    as a single string.
    
    Change-Id: Ib0561f93c76239b93000885250b3fa15ccaeb937
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for Slave Utilization plugin
    
    Change-Id: I4243fddf2f08a09671757b503fae2a890f2d820e
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Added support for least load plugin.
    
    Change-Id: I0c0c9a23e97101f34f144f63e8f9a81f1ac172f9
    Added support for Builds chain fingerprinter
    
    Change-Id: I11429534a82587e7cbbd987ecce148b07a5ace47
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Added support for least load plugin.
    
    Change-Id: I0c0c9a23e97101f34f144f63e8f9a81f1ac172f9
    Add support for Copy Artifact project copy permissions
    
    Since 1.30, Copy Artifact supports specifing the projects that are allowed
    to copy artifacts for a given project in the general job properties.
    
    Change-Id: I5a9de21f449e98d08ec9303d55021d6a661257d4
    ZMQ Event Publisher plugin support added
    
    This is a Jenkins plugin that will publish Jenkins Job run events
    (start, complete, finish) to a ZMQ PUB socket.
    
    Change-Id: Id238033796e6905e18a777fc85c789ff6cf4f59d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add support for batch_tasks.
    
    Change-Id: I6cb6050322f07e90eadff88acab61c9ed66221fe
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Add support for Slave Utilization plugin
    
    Change-Id: I4243fddf2f08a09671757b503fae2a890f2d820e
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Heavy Job Plugin support added
    
    This plugin allows you to define "weight" on each job,
    and making each job consume that many executors
    
    Change-Id: Iee49229b0d3c909f320caa9bd6c1ebb6bc37ddcb
    Add support for batch_tasks.
    
    Change-Id: I6cb6050322f07e90eadff88acab61c9ed66221fe
    Add support for Copy Artifact project copy permissions
    
    Since 1.30, Copy Artifact supports specifing the projects that are allowed
    to copy artifacts for a given project in the general job properties.
    
    Change-Id: I5a9de21f449e98d08ec9303d55021d6a661257d4
    Added support for least load plugin.
    
    Change-Id: I0c0c9a23e97101f34f144f63e8f9a81f1ac172f9
    ZMQ Event Publisher plugin support added
    
    This is a Jenkins plugin that will publish Jenkins Job run events
    (start, complete, finish) to a ZMQ PUB socket.
    
    Change-Id: Id238033796e6905e18a777fc85c789ff6cf4f59d
    Add support for Slave Utilization plugin
    
    Change-Id: I4243fddf2f08a09671757b503fae2a890f2d820e
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    authorization property: add extended read support
    
    This authorization requires the extended read permission plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Read+Permission+Plugin
    
    Include test for the authorization properties.
    
    Change-Id: I9364524398f4e3f0d6ccccd88d5046e7504e2123
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    Added support for Builds chain fingerprinter
    
    Change-Id: I11429534a82587e7cbbd987ecce148b07a5ace47
    Added support for least load plugin.
    
    Change-Id: I0c0c9a23e97101f34f144f63e8f9a81f1ac172f9
    Heavy Job Plugin support added
    
    This plugin allows you to define "weight" on each job,
    and making each job consume that many executors
    
    Change-Id: Iee49229b0d3c909f320caa9bd6c1ebb6bc37ddcb
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Add support for Slave Utilization plugin
    
    Change-Id: I4243fddf2f08a09671757b503fae2a890f2d820e
    authorization property: add extended read support
    
    This authorization requires the extended read permission plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Read+Permission+Plugin
    
    Include test for the authorization properties.
    
    Change-Id: I9364524398f4e3f0d6ccccd88d5046e7504e2123
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Implements wrapper for ownership plugin.
    
    This wrapper sets "Inject ownership variables into environment"
    
    Change-Id: Ib8a37c1a5cd3c6ec35d7fb25fddee82fdeb76aaa
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Adds credentials-binding plugin support to wrappers
    
    Add support for configuring the credentials binding plugin.
    The credentials binding plugin can be found at
    https://wiki.jenkins-ci.org/display/JENKINS/Credentials+Binding+Plugin
    
    Change-Id: I94fef65f3960f3b357d1a1a4f3f25dfecb739164
    Add 'Job Log Logger' wrapper
    
    The Job Log Logger plugin writes the Jenkins job log to the underlying Jenkins
    log system in addition to the normal build log.
    
    Change-Id: I17b73ade974edf3d7a2d1e08c4e4c584dbe32c51
    Add 'Job Log Logger' wrapper
    
    Change-Id: I17b73ade974edf3d7a2d1e08c4e4c584dbe32c51
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    Add 'Job Log Logger' wrapper
    
    The Job Log Logger plugin writes the Jenkins job log to the underlying Jenkins
    log system in addition to the normal build log.
    
    Change-Id: I17b73ade974edf3d7a2d1e08c4e4c584dbe32c51
    Add 'Job Log Logger' wrapper
    
    Change-Id: I17b73ade974edf3d7a2d1e08c4e4c584dbe32c51
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    Adding feature to specify the user id for jenkins user credentials
    
    This feature allows one to specify the user id for the jenkins
    ssh-agent-credentials in the wrappers section of the yaml file.
    Also providing yaml and corresponding xml files for testing.
    
    Change-Id: I6c19945450c6ef55fead72c32594adb5a9b807c6
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Adds credentials-binding plugin support to wrappers
    
    Add support for configuring the credentials binding plugin.
    The credentials binding plugin can be found at
    https://wiki.jenkins-ci.org/display/JENKINS/Credentials+Binding+Plugin
    
    Change-Id: I94fef65f3960f3b357d1a1a4f3f25dfecb739164
    Add support for xvnc
    
    Change-Id: I9af116a410e11da47178abd982035760b9a3195d
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    Added support for Ci Skip Plugin
    
    Change-Id: I033a3dcb46b4a6c8be49ba63150afa05b4622831
    Add support for M2 repository cleanup plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/M2+Repository+Cleanup+Plugin
    
    Change-Id: Ic45c3dde022e2e84b5b31d960d76c8ef1972ee05
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    Adding feature to specify the user id for jenkins user credentials
    
    This feature allows one to specify the user id for the jenkins
    ssh-agent-credentials in the wrappers section of the yaml file.
    Also providing yaml and corresponding xml files for testing.
    
    Change-Id: I6c19945450c6ef55fead72c32594adb5a9b807c6
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    Adding feature to specify the user id for jenkins user credentials
    
    This feature allows one to specify the user id for the jenkins
    ssh-agent-credentials in the wrappers section of the yaml file.
    Also providing yaml and corresponding xml files for testing.
    
    Change-Id: I6c19945450c6ef55fead72c32594adb5a9b807c6
    adding support for the custom tools plugin
    
    Change-Id: I9a85a88927c7fc37bbf443295c3ef7a5f6feda50
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Add support for multiple port allocations
    
    Change-Id: I156bccebdd392cd4a912599b5a2c815587e77134
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    Added support for Ci Skip Plugin
    
    Change-Id: I033a3dcb46b4a6c8be49ba63150afa05b4622831
    Add MongoDB plugin support
    
    Change-Id: I54dd77fb9697445b41b033347bc39eeef3b0f00b
    Add MongoDB plugin support
    
    Change-Id: I54dd77fb9697445b41b033347bc39eeef3b0f00b
    adding support for the custom tools plugin
    
    Change-Id: I9a85a88927c7fc37bbf443295c3ef7a5f6feda50
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Add support for M2 repository cleanup plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/M2+Repository+Cleanup+Plugin
    
    Change-Id: Ic45c3dde022e2e84b5b31d960d76c8ef1972ee05
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add MongoDB plugin support
    
    Change-Id: I54dd77fb9697445b41b033347bc39eeef3b0f00b
    Add support for the Jenkins Environment Script plugin.
    
    Change-Id: Ia941b3426dd474f0f7d5ddaf9f40a44f7fdbc711
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    add support for EnvInject mask password params option
    
    Added support for EnvInject mask password params option
    Added unit test to cover inject_passwords in wrappers module
    
    Change-Id: Ic6eb44cc6946f3f4636212868b6665dbde853c40
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Add support for M2 repository cleanup plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/M2+Repository+Cleanup+Plugin
    
    Change-Id: Ic45c3dde022e2e84b5b31d960d76c8ef1972ee05
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add support for multiple port allocations
    
    Change-Id: I156bccebdd392cd4a912599b5a2c815587e77134
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    Add MongoDB plugin support
    
    Change-Id: I54dd77fb9697445b41b033347bc39eeef3b0f00b
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    Support Matrix Tie Parent Plugin in wrappers
    
    Change-Id: I9c55ed443496bf4573969f83750c46bd678290a7
    wrappers: fixed locks for empty collection
    
    it caused "Locks" checkbox to be checked, and it picked up first lock
    from selectbox as default.
    
    Change-Id: I13fdf104c6c32b783fb539f8947e3e071cb9788c
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    Support Matrix Tie Parent Plugin in wrappers
    
    Change-Id: I9c55ed443496bf4573969f83750c46bd678290a7
    Adding feature to specify the user id for jenkins user credentials
    
    This feature allows one to specify the user id for the jenkins
    ssh-agent-credentials in the wrappers section of the yaml file.
    Also providing yaml and corresponding xml files for testing.
    
    Change-Id: I6c19945450c6ef55fead72c32594adb5a9b807c6
    Add support for multiple port allocations
    
    Change-Id: I156bccebdd392cd4a912599b5a2c815587e77134
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    wrappers: fixed locks for empty collection
    
    it caused "Locks" checkbox to be checked, and it picked up first lock
    from selectbox as default.
    
    Change-Id: I13fdf104c6c32b783fb539f8947e3e071cb9788c
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    Add support for the Jenkins Environment Script plugin.
    
    Change-Id: Ia941b3426dd474f0f7d5ddaf9f40a44f7fdbc711
    Add support for xvnc
    
    Change-Id: I9af116a410e11da47178abd982035760b9a3195d
    Add support for M2 repository cleanup plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/M2+Repository+Cleanup+Plugin
    
    Change-Id: Ic45c3dde022e2e84b5b31d960d76c8ef1972ee05
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    Create one parameters wrapper tag for all release params
    
    Ensure only one parameterDefinitions XML tag is created for the entire
    set of parameters instead of one per parameter.
    
    Add a test case to show the correct behaviour with more than one
    parameter defined and update the docstring to use the yaml test case as
    an exmaple. While updating the docstring add missing default values for
    arguments.
    
    Change-Id: Ife8f2535117d355d845d5d72dd9e6e6669a6b9df
    Implements wrapper for ownership plugin.
    
    This wrapper sets "Inject ownership variables into environment"
    
    Change-Id: Ib8a37c1a5cd3c6ec35d7fb25fddee82fdeb76aaa
    add support for EnvInject mask password params option
    
    Added support for EnvInject mask password params option
    Added unit test to cover inject_passwords in wrappers module
    
    Change-Id: Ic6eb44cc6946f3f4636212868b6665dbde853c40
    Create one parameters wrapper tag for all release params
    
    Ensure only one parameterDefinitions XML tag is created for the entire
    set of parameters instead of one per parameter.
    
    Add a test case to show the correct behaviour with more than one
    parameter defined and update the docstring to use the yaml test case as
    an exmaple. While updating the docstring add missing default values for
    arguments.
    
    Change-Id: Ife8f2535117d355d845d5d72dd9e6e6669a6b9df
    wrappers: fixed locks for empty collection
    
    it caused "Locks" checkbox to be checked, and it picked up first lock
    from selectbox as default.
    
    Change-Id: I13fdf104c6c32b783fb539f8947e3e071cb9788c
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    wrappers: fixed locks for empty collection
    
    it caused "Locks" checkbox to be checked, and it picked up first lock
    from selectbox as default.
    
    Change-Id: I13fdf104c6c32b783fb539f8947e3e071cb9788c
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    Add support for multiple port allocations
    
    Change-Id: I156bccebdd392cd4a912599b5a2c815587e77134
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Add support for Gerrit Trigger Comment Contains Expression
    
    Change-Id: I229c7fc2fac540a6fe3209221ca01dcf6dd068df
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for new patchset-created exclude fields
    
    New exclude features added to Gerrit Trigger plugin version 2.12.0.
    
    Exclude Features:
      - Drafts
      - Trivial Rebase
      - No Code Change
    
    This patch still supports the old trigger non-dict format yaml config:
    
            - patchset-created-event
    
    Using the old configuration (non-dict) works in the new Gerrit Trigger
    v2.12.0 as well as the previous versions.
    
    In addition the newer configuration (dict) format also works in old
    <2.12.0 and new >2.12.0 versions of Gerrit Trigger.
    
    Added additional unit tests to verify old and new formats working.
    
    Change-Id: I923b0be47085dc50da48f5ed271a13eae7e1dfa0
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    Allow configuration of Topics for Gerrit trigger
    
    Gerrit trigger in addition to project name, branch and
    file-path also supports when-to-trigger limitation
    based on topic of the change, this adds support for that.
    
    Change-Id: Icfcb3f02903a61294d23dd53308287a67927c777
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for reverse build trigger
    
    Change-Id: I06d9969df0e9edfca2a2b433e2a13e3bc10c8b2c
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add cron and ignore-post-commit-hooks arguments to pollscm
    
    Argument cron replaces current syntax of:
     - pollscm: "* * * * *"
    with:
     - pollscm:
         cron: "* * * * *"
    
    The old syntax is still supported but will log a deprecation
    warning.  The new syntax allows supporting additional arguments.
    
    Argument ignore-post-commit-hooks adds new boolean element
    ignorePostCommitHooks.
    
    Change-Id: I2b0d892545b9969bc9a143962447826e727e2ba9
    BugFix: pollscm trigger docs & unittests
    
    Change-Id: Icb70e45dbdce1434329ae0167367a5497920c8d5
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add script trigger.
    
    Change-Id: I191f8f444f810cf4fe1fb9475aafc747e5dff68d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add Gitlab Merge Request trigger
    
    Change-Id: Ic068cf7e89be76f0f9e9187caf628fa49d7bd7fd
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Add support for new patchset-created exclude fields
    
    New exclude features added to Gerrit Trigger plugin version 2.12.0.
    
    Exclude Features:
      - Drafts
      - Trivial Rebase
      - No Code Change
    
    This patch still supports the old trigger non-dict format yaml config:
    
            - patchset-created-event
    
    Using the old configuration (non-dict) works in the new Gerrit Trigger
    v2.12.0 as well as the previous versions.
    
    In addition the newer configuration (dict) format also works in old
    <2.12.0 and new >2.12.0 versions of Gerrit Trigger.
    
    Added additional unit tests to verify old and new formats working.
    
    Change-Id: I923b0be47085dc50da48f5ed271a13eae7e1dfa0
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Allow configuration of Topics for Gerrit trigger
    
    Gerrit trigger in addition to project name, branch and
    file-path also supports when-to-trigger limitation
    based on topic of the change, this adds support for that.
    
    Change-Id: Icfcb3f02903a61294d23dd53308287a67927c777
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add cron and ignore-post-commit-hooks arguments to pollscm
    
    Argument cron replaces current syntax of:
     - pollscm: "* * * * *"
    with:
     - pollscm:
         cron: "* * * * *"
    
    The old syntax is still supported but will log a deprecation
    warning.  The new syntax allows supporting additional arguments.
    
    Argument ignore-post-commit-hooks adds new boolean element
    ignorePostCommitHooks.
    
    Change-Id: I2b0d892545b9969bc9a143962447826e727e2ba9
    BugFix: pollscm trigger docs & unittests
    
    Change-Id: Icb70e45dbdce1434329ae0167367a5497920c8d5
    Add support for new patchset-created exclude fields
    
    New exclude features added to Gerrit Trigger plugin version 2.12.0.
    
    Exclude Features:
      - Drafts
      - Trivial Rebase
      - No Code Change
    
    This patch still supports the old trigger non-dict format yaml config:
    
            - patchset-created-event
    
    Using the old configuration (non-dict) works in the new Gerrit Trigger
    v2.12.0 as well as the previous versions.
    
    In addition the newer configuration (dict) format also works in old
    <2.12.0 and new >2.12.0 versions of Gerrit Trigger.
    
    Added additional unit tests to verify old and new formats working.
    
    Change-Id: I923b0be47085dc50da48f5ed271a13eae7e1dfa0
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    Allow configuration of Topics for Gerrit trigger
    
    Gerrit trigger in addition to project name, branch and
    file-path also supports when-to-trigger limitation
    based on topic of the change, this adds support for that.
    
    Change-Id: Icfcb3f02903a61294d23dd53308287a67927c777
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Add support for new patchset-created exclude fields
    
    New exclude features added to Gerrit Trigger plugin version 2.12.0.
    
    Exclude Features:
      - Drafts
      - Trivial Rebase
      - No Code Change
    
    This patch still supports the old trigger non-dict format yaml config:
    
            - patchset-created-event
    
    Using the old configuration (non-dict) works in the new Gerrit Trigger
    v2.12.0 as well as the previous versions.
    
    In addition the newer configuration (dict) format also works in old
    <2.12.0 and new >2.12.0 versions of Gerrit Trigger.
    
    Added additional unit tests to verify old and new formats working.
    
    Change-Id: I923b0be47085dc50da48f5ed271a13eae7e1dfa0
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Allow configuration of Topics for Gerrit trigger
    
    Gerrit trigger in addition to project name, branch and
    file-path also supports when-to-trigger limitation
    based on topic of the change, this adds support for that.
    
    Change-Id: Icfcb3f02903a61294d23dd53308287a67927c777
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Enable whitelisted-orgs-as-admins for ghprb trigger
    
    Adds support for having all members of a
    whitelisted organization automatically have
    admin rights for the github pull request builder
    trigger.  Details on this functionality can be found
    at https://wiki.jenkins-ci.org/display/JENKINS/
    GitHub+pull+request+builder+plugin
    
    Change-Id: Ieca5a789a79d1ad91783fcd4608d26a8d6d61878
    Enable whitelisting branches with pull request builder
    
    Adds support for specifiying the specific branches that will be
    monitored by the github pull request builder.  Details on this
    functionality can be found at
    https://wiki.jenkins-ci.org/display/JENKINS/
    GitHub+pull+request+builder+plugin
    
    Change-Id: If98ce3ca037d3ce33506cf1ffea372e7c18eefda
    Fix GitHub pull request builder plugin support
    
    Change-Id: Iac1d06be91b641f7fccfe2255247443363ba2e80
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for reverse build trigger
    
    Change-Id: I06d9969df0e9edfca2a2b433e2a13e3bc10c8b2c
    Add support for URLTrigger plugin
    
    Change-Id: Ibc96b3ecd65afb27398328f2b6220c32a800f3e6
    BugFix: pollscm trigger docs & unittests
    
    Change-Id: Icb70e45dbdce1434329ae0167367a5497920c8d5
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Add support for Gerrit Trigger Comment Contains Expression
    
    Change-Id: I229c7fc2fac540a6fe3209221ca01dcf6dd068df
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add Gitlab Merge Request trigger
    
    Change-Id: Ic068cf7e89be76f0f9e9187caf628fa49d7bd7fd
    Add script trigger.
    
    Change-Id: I191f8f444f810cf4fe1fb9475aafc747e5dff68d
    Enable whitelisted-orgs-as-admins for ghprb trigger
    
    Adds support for having all members of a
    whitelisted organization automatically have
    admin rights for the github pull request builder
    trigger.  Details on this functionality can be found
    at https://wiki.jenkins-ci.org/display/JENKINS/
    GitHub+pull+request+builder+plugin
    
    Change-Id: Ieca5a789a79d1ad91783fcd4608d26a8d6d61878
    Enable whitelisting branches with pull request builder
    
    Adds support for specifiying the specific branches that will be
    monitored by the github pull request builder.  Details on this
    functionality can be found at
    https://wiki.jenkins-ci.org/display/JENKINS/
    GitHub+pull+request+builder+plugin
    
    Change-Id: If98ce3ca037d3ce33506cf1ffea372e7c18eefda
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Fix GitHub pull request builder plugin support
    
    Change-Id: Iac1d06be91b641f7fccfe2255247443363ba2e80
    Add support for URLTrigger plugin
    
    Change-Id: Ibc96b3ecd65afb27398328f2b6220c32a800f3e6
    Use mock in a Python 3.4 compatible way
    
    Related to https://code.google.com/p/mock/issues/detail?id=234
    
    Change-Id: I85549fdba7b9cb575850a12d52e1ffb0d2dba8c0
    Reorganize tests/cmd
    
    This commit reorganizes the 'cmd' tests by subcommand.
    
    Previously the multipath test was using an actual fixture directory
    which actually made the fixtures directory somewhat unusable by other
    tests since with an upcoming change (get_plugins_version) fixtures
    directories may also contain YAML that doesn't contain JJB data.
    
    Change-Id: I4c3866e1e0769512b40e1790e40affedb13953a2
    add test for globbed parameters feature
    
    add a test to verify commmand processing of the globbed parameters
    feature to delete jobs.
    
    Change-Id: Ib13a2c644388ac65cb1af5728019912d6452d852
    fix delete job command and add tests
    
    change I126751e3 introduced recursive file definition feature however it broke
    the ability to delete jobs.  This changes fixes it and adds a few tests for it.
    
    This was the error when trying to delete a job:
    
    (py27)~/jenkins-job-builder$ jenkins-jobs --conf jenkins_jobs.ini delete myjob
    INFO:root:Deleting jobs in [myjob]
    Traceback (most recent call last):
      File "/jenkins-job-builder/.tox/py27/bin/jenkins-jobs", line 10, in <module>
        sys.exit(main())
      File "/jenkins-job-builder/jenkins_jobs/cmd.py", line 122, in main
        execute(options, config)
      File "/jenkins-job-builder/jenkins_jobs/cmd.py", line 207, in execute
        builder.delete_job(job, options.path)
      File "/jenkins-job-builder/jenkins_jobs/builder.py", line 611, in delete_job
        self.load_files(fn)
      File "/jenkins-job-builder/jenkins_jobs/builder.py", line 576, in load_files
        if os.path.isdir(path):
      File "/jenkins-job-builder/.tox/py27/lib/python2.7/genericpath.py", line 41,
        in isdir st = os.stat(s)
    TypeError: coercing to Unicode: need string or buffer, NoneType found
    
    Closes-Bug: #1349634
    Change-Id: Ib87fa497d80ba33470c049f875658a3878afb664
    Accept list of paths in 'path' arg.
    
    This adds the behavior of splitting the path positional argument on colons then
    processing each resulting string the same way that the path was being processed
    previous to this commit.
    
    * Adds a unit test to validate correct `path` parsing.
    * Adds a unit test to validate correct `path` parsing in the recursive case.
    * Documents the new behavior.
    
    Change-Id: I0f465e02077569352cd276a8366ead5bab0eb117
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Added recursive option
    
    Now you can organize your yaml files into subdirectories and apply them
    all just passing --recursive option or adding the proper configuration
    file option.
    
    In adding support for multiple paths the Builder.load_files method was
    reworked to be backward compatible with individual paths or file-like
    objects, while also now handling being passed a list of paths or
    file-like objects to be parsed.
    
    Change-Id: I126751e347622716c592c6ed1a57b8acb7bf79a4
    Allow `test` command to use conf files
    
    It should be possible to run the `test` command with a custom config.
    This allows examination of the XML outputted where config settings can
    change the outputted XML. Otherwise any non-default config values will
    only be used when running the `update` comand.
    
    Add a simple test to confirm that the custom url that is unlikely to
    ever be a valid default value is returned when the command is set to
    `test` and a custom config is specified.
    
    Change-Id: I193e83314a35943406bff5b182f20693edd640ba
    tests for JJB command processing
    
    Add a few tests for JJB command processing.  This is just to get
    started I'm hoping more will come.
    
    Change-Id: Iff964af025f6a3d7ba4acd91b1e0242285a11bc3
    tests for JJB command processing
    
    Add a few tests for JJB command processing.  This is just to get
    started I'm hoping more will come.
    
    Change-Id: Iff964af025f6a3d7ba4acd91b1e0242285a11bc3
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Support excludes when recursively processing paths
    
    Include an additional option to exclude some paths/patterns from being
    included in the search to allow a complex hierarchy of directories to be
    referenced under a single path. Provide support to allow the user to
    specify patterns, relative and/or absolute path references.
    
    Implements support for excluding based on absolute path, relative path
    and based on simple shell globing patterns.
    
    Change-Id: I236b364c268fd2bf5511a2c6d9a1c87914f3b086
    add test for globbed parameters feature
    
    add a test to verify commmand processing of the globbed parameters
    feature to delete jobs.
    
    Change-Id: Ib13a2c644388ac65cb1af5728019912d6452d852
    tests for JJB command processing
    
    Add a few tests for JJB command processing.  This is just to get
    started I'm hoping more will come.
    
    Change-Id: Iff964af025f6a3d7ba4acd91b1e0242285a11bc3
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Allow `test` command to use conf files
    
    It should be possible to run the `test` command with a custom config.
    This allows examination of the XML outputted where config settings can
    change the outputted XML. Otherwise any non-default config values will
    only be used when running the `update` comand.
    
    Add a simple test to confirm that the custom url that is unlikely to
    ever be a valid default value is returned when the command is set to
    `test` and a custom config is specified.
    
    Change-Id: I193e83314a35943406bff5b182f20693edd640ba
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    tests for JJB command processing
    
    Add a few tests for JJB command processing.  This is just to get
    started I'm hoping more will come.
    
    Change-Id: Iff964af025f6a3d7ba4acd91b1e0242285a11bc3
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Support excludes when recursively processing paths
    
    Include an additional option to exclude some paths/patterns from being
    included in the search to allow a complex hierarchy of directories to be
    referenced under a single path. Provide support to allow the user to
    specify patterns, relative and/or absolute path references.
    
    Implements support for excluding based on absolute path, relative path
    and based on simple shell globing patterns.
    
    Change-Id: I236b364c268fd2bf5511a2c6d9a1c87914f3b086
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Use mock in a Python 3.4 compatible way
    
    Related to https://code.google.com/p/mock/issues/detail?id=234
    
    Change-Id: I85549fdba7b9cb575850a12d52e1ffb0d2dba8c0
    Reorganize tests/cmd
    
    This commit reorganizes the 'cmd' tests by subcommand.
    
    Previously the multipath test was using an actual fixture directory
    which actually made the fixtures directory somewhat unusable by other
    tests since with an upcoming change (get_plugins_version) fixtures
    directories may also contain YAML that doesn't contain JJB data.
    
    Change-Id: I4c3866e1e0769512b40e1790e40affedb13953a2
    Reorganize tests/cmd
    
    This commit reorganizes the 'cmd' tests by subcommand.
    
    Previously the multipath test was using an actual fixture directory
    which actually made the fixtures directory somewhat unusable by other
    tests since with an upcoming change (get_plugins_version) fixtures
    directories may also contain YAML that doesn't contain JJB data.
    
    Change-Id: I4c3866e1e0769512b40e1790e40affedb13953a2
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Use mock in a Python 3.4 compatible way
    
    Related to https://code.google.com/p/mock/issues/detail?id=234
    
    Change-Id: I85549fdba7b9cb575850a12d52e1ffb0d2dba8c0
    Reorganize tests/cmd
    
    This commit reorganizes the 'cmd' tests by subcommand.
    
    Previously the multipath test was using an actual fixture directory
    which actually made the fixtures directory somewhat unusable by other
    tests since with an upcoming change (get_plugins_version) fixtures
    directories may also contain YAML that doesn't contain JJB data.
    
    Change-Id: I4c3866e1e0769512b40e1790e40affedb13953a2
    Use open() instead of file()
    
    The later isn't supported in Python3
    
    Change-Id: I44e9e7d21d59a82648a5a78a0ebcae8f0317bb6f
    Use mock in a Python 3.4 compatible way
    
    Related to https://code.google.com/p/mock/issues/detail?id=234
    
    Change-Id: I85549fdba7b9cb575850a12d52e1ffb0d2dba8c0
    Write cache to file on CacheStorage object delete
    
    Use a destructor to write out the cache to file when the cache object
    object goes out of scope, which will typically be on exit.
    
    This ensures that the CacheStorage class behaviour is fully
    encapsulated and doesn't require a caller to be aware to ensure the
    cache is saved when finished. Although it may still do so.
    
    Take care to preserve a references to any required modules since python
    does not guarantee that any global modules will not be unloaded before
    the destructor is called.
    
    Change-Id: I2b066ceff5e23a725132569df85c004cd58b367a
    Write cache to file on CacheStorage object delete
    
    Use a destructor to write out the cache to file when the cache object
    object goes out of scope, which will typically be on exit.
    
    This ensures that the CacheStorage class behaviour is fully
    encapsulated and doesn't require a caller to be aware to ensure the
    cache is saved when finished. Although it may still do so.
    
    Take care to preserve a references to any required modules since python
    does not guarantee that any global modules will not be unloaded before
    the destructor is called.
    
    Change-Id: I2b066ceff5e23a725132569df85c004cd58b367a
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Allow multiple node selection for 'node' parameter
    
    Change-Id: I6690e5fcfe5169e2fdb6815cfde95e607abb5c42
    Add 'node' parameter to 'parameters'
    
    This parameter defines a list of nodes where this job could potentially
    be executed on. Nodes can be choosen from list of current available nodes.
    Currently it trasforms to single-selection dropdown to choose a slave for execution.
    
    Change-Id: I5379d20b94e3b33360ea8f842e3b4237b491addb
    Move extended-choice support to parameters module
    
    This patch fixes support for the extended choice plugin in the
    parameter module so that it can nicely coexist with the other
    parameters.  This leaves the existing extended choice plugin code in the
    properties module, but removes the documentation from that location and
    adds a deprecation warning.  This patch also provides parity with the
    existing functionality under the properties module.
    
    Change-Id: Ibace4284fc1bd391948917979a4223bd3007dff4
    Closes-Bug: #1361335
    Allow multiple node selection for 'node' parameter
    
    Change-Id: I6690e5fcfe5169e2fdb6815cfde95e607abb5c42
    Add 'node' parameter to 'parameters'
    
    This parameter defines a list of nodes where this job could potentially
    be executed on. Nodes can be choosen from list of current available nodes.
    Currently it trasforms to single-selection dropdown to choose a slave for execution.
    
    Change-Id: I5379d20b94e3b33360ea8f842e3b4237b491addb
    Added support for Extended Choice Parameter plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Choice+Parameter+plugin
    based on https://github.com/rozky/jenkins-job-builder
    
    Change-Id: If179619da5e795a1649168e133ca25b5f9f7b187
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Allow multiple node selection for 'node' parameter
    
    Change-Id: I6690e5fcfe5169e2fdb6815cfde95e607abb5c42
    Add 'node' parameter to 'parameters'
    
    This parameter defines a list of nodes where this job could potentially
    be executed on. Nodes can be choosen from list of current available nodes.
    Currently it trasforms to single-selection dropdown to choose a slave for execution.
    
    Change-Id: I5379d20b94e3b33360ea8f842e3b4237b491addb
    Add support for the matrix-combinations plugin
    
    This plugin allows a user to choose which matrix combinations
    they want to run, as opposed to the default behaviour where
    jenkins runs all combinations
    
    Requires the Jenkins Matrix Combinations Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/Matrix+Combinations+Plugin
    
    Change-Id: I13205c81aa11523a4c3fc373820eb74863d0c7ca
    Add support for build parameter of type "Run"
    
    Defines a run parameter for parametrized build, where users can pick a
    single run of another project. The absolute url of this run will be
    exposed as an environment variable.
    
    Change-Id: I86bc3109b00259f9fe3dcf7ab9d72cb1f22fadc2
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for build parameter of type "Run"
    
    Defines a run parameter for parametrized build, where users can pick a
    single run of another project. The absolute url of this run will be
    exposed as an environment variable.
    
    Change-Id: I86bc3109b00259f9fe3dcf7ab9d72cb1f22fadc2
    Move extended-choice support to parameters module
    
    This patch fixes support for the extended choice plugin in the
    parameter module so that it can nicely coexist with the other
    parameters.  This leaves the existing extended choice plugin code in the
    properties module, but removes the documentation from that location and
    adds a deprecation warning.  This patch also provides parity with the
    existing functionality under the properties module.
    
    Change-Id: Ibace4284fc1bd391948917979a4223bd3007dff4
    Closes-Bug: #1361335
    Added support for Extended Choice Parameter plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Choice+Parameter+plugin
    based on https://github.com/rozky/jenkins-job-builder
    
    Change-Id: If179619da5e795a1649168e133ca25b5f9f7b187
    Allow multiple node selection for 'node' parameter
    
    Change-Id: I6690e5fcfe5169e2fdb6815cfde95e607abb5c42
    Add 'node' parameter to 'parameters'
    
    This parameter defines a list of nodes where this job could potentially
    be executed on. Nodes can be choosen from list of current available nodes.
    Currently it trasforms to single-selection dropdown to choose a slave for execution.
    
    Change-Id: I5379d20b94e3b33360ea8f842e3b4237b491addb
    Move extended-choice support to parameters module
    
    This patch fixes support for the extended choice plugin in the
    parameter module so that it can nicely coexist with the other
    parameters.  This leaves the existing extended choice plugin code in the
    properties module, but removes the documentation from that location and
    adds a deprecation warning.  This patch also provides parity with the
    existing functionality under the properties module.
    
    Change-Id: Ibace4284fc1bd391948917979a4223bd3007dff4
    Closes-Bug: #1361335
    Added support for Extended Choice Parameter plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Choice+Parameter+plugin
    based on https://github.com/rozky/jenkins-job-builder
    
    Change-Id: If179619da5e795a1649168e133ca25b5f9f7b187
    Add support for the matrix-combinations plugin
    
    This plugin allows a user to choose which matrix combinations
    they want to run, as opposed to the default behaviour where
    jenkins runs all combinations
    
    Requires the Jenkins Matrix Combinations Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/Matrix+Combinations+Plugin
    
    Change-Id: I13205c81aa11523a4c3fc373820eb74863d0c7ca
    Implement recursive search for test fixtures.
    
    This allows hierarchical organization of test scenarios which I consider an
    improvement over the current setup.
    
    Change-Id: I079bfa984832e991712099e0ed353d7c2470dc5b
    Use mock in a Python 3.4 compatible way
    
    Related to https://code.google.com/p/mock/issues/detail?id=234
    
    Change-Id: I85549fdba7b9cb575850a12d52e1ffb0d2dba8c0
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Test defaults honors project variables
    
    The defaults can make use of variables passed by the project and I am
    taking advantage of that feature in my templates.
    
    With 70ed2236 / https://review.openstack.org/#/c/85336/ there is a
    regression which cause the test to fail although it pass with parent
    commit d833015.
    
    Change-Id: I57d023657eec4f6f8f29980100185fcfd7e77b1f
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    matrix project: add support for dynamic axis
    
    This axis requires the dynamic axis plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/DynamicAxis+Plugin
    
    All the dynamic axis plugin settings are in the core project:
    
    <matrix-project>
      <axes>
        <ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
          <name>config</name>
          <values>
            <string>config_list</string>
          </values>
          <varName>config_list</varName>
          <axisValues>
            <string>default</string>
          </axisValues>
        </ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
      </axes>
    
    The plugin sets 2 values: axis name and variable name.
    The axisValue element is hardcoded to 'default' in the plugin, so we do
    the same in Jenkins job builder.
    
    The matrix project supports multiple axes configuration, including dynamic
    axis.
    
    Tests added for:
     * dynamic axis (by itself)
     * multiple axes (dynamic and user-defined axes)
    
    Tested on Jenkins LTS (1.554.2) with both the plugin installed and not
    installed. The plugin is properly ignored in the latter case.
    
    Change-Id: I36310bc512fd873fec4bd5f42937689fd178536e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Fix wrong casing in JDKAxis <name> tag
    
    If value is written in uppercase letters, Jenkins converts it to
    lowercase the next time the job configuration is saved.
    
      <hudson.matrix.JDKAxis>
        <name>JDK</name>
    
    is changed to:
    
      <hudson.matrix.JDKAxis>
        <name>jdk</name>
    
    As a result build URLs will change:
    
    http://host/job/matrix_build/JDK=Java-7/1/
    
    to:
    
    http://host/job/matrix_build/jdk=Java-7/2/
    
    Change-Id: Ia3018327c6dbffb2bb828dcc494559e57a1b6ad8
    Add support for JDK axis
    
    Axis that selects available JDKs. JDK axis has the same XML
    structure as other axes; only the element name changes.
    
    The matrix project support was split out of core Jenkins into the
    'Matrix Project Plugin', so update the docstring to mention that
    this plugin is required.
    
    Tested on Jenkins ver. 1.565.2 with Matrix Project Plugin 1.4.
    
    Change-Id: I6b9d243810833bd3d31535439cc48768db5a6598
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    matrix project: add support for dynamic axis
    
    This axis requires the dynamic axis plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/DynamicAxis+Plugin
    
    All the dynamic axis plugin settings are in the core project:
    
    <matrix-project>
      <axes>
        <ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
          <name>config</name>
          <values>
            <string>config_list</string>
          </values>
          <varName>config_list</varName>
          <axisValues>
            <string>default</string>
          </axisValues>
        </ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
      </axes>
    
    The plugin sets 2 values: axis name and variable name.
    The axisValue element is hardcoded to 'default' in the plugin, so we do
    the same in Jenkins job builder.
    
    The matrix project supports multiple axes configuration, including dynamic
    axis.
    
    Tests added for:
     * dynamic axis (by itself)
     * multiple axes (dynamic and user-defined axes)
    
    Tested on Jenkins LTS (1.554.2) with both the plugin installed and not
    installed. The plugin is properly ignored in the latter case.
    
    Change-Id: I36310bc512fd873fec4bd5f42937689fd178536e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    Add support for JDK axis
    
    Axis that selects available JDKs. JDK axis has the same XML
    structure as other axes; only the element name changes.
    
    The matrix project support was split out of core Jenkins into the
    'Matrix Project Plugin', so update the docstring to mention that
    this plugin is required.
    
    Tested on Jenkins ver. 1.565.2 with Matrix Project Plugin 1.4.
    
    Change-Id: I6b9d243810833bd3d31535439cc48768db5a6598
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    matrix project: add support for dynamic axis
    
    This axis requires the dynamic axis plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/DynamicAxis+Plugin
    
    All the dynamic axis plugin settings are in the core project:
    
    <matrix-project>
      <axes>
        <ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
          <name>config</name>
          <values>
            <string>config_list</string>
          </values>
          <varName>config_list</varName>
          <axisValues>
            <string>default</string>
          </axisValues>
        </ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
      </axes>
    
    The plugin sets 2 values: axis name and variable name.
    The axisValue element is hardcoded to 'default' in the plugin, so we do
    the same in Jenkins job builder.
    
    The matrix project supports multiple axes configuration, including dynamic
    axis.
    
    Tests added for:
     * dynamic axis (by itself)
     * multiple axes (dynamic and user-defined axes)
    
    Tested on Jenkins LTS (1.554.2) with both the plugin installed and not
    installed. The plugin is properly ignored in the latter case.
    
    Change-Id: I36310bc512fd873fec4bd5f42937689fd178536e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Add support for Config File Provider to Maven Project module
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Iecadfd6265100720d1d0b08d3cf57a510999f89d
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    project_maven: allow to set private repository
    
    The values map to these GUI choices
    
     * default            -> Default
     * local-to-executor  -> Local to the executor
     * local-to-workspace -> Local to the workspace
    
    This is on the project level what the similar option is on the builder
    level.
    
    Change-Id: I90ee3385ee12a46b5ab1eb26e3af1bdbfc36946a
    project_maven: Don't require artifact-id and group-id
    
    Jenkins will determine the values from the pom automatically so there's
    no need to require them.
    
    Change-Id: Ic1c9c26a05e335fd78a92fe4316ecc88b3f209b9
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    Add Maven project option run-post-steps
    
    run-post-steps takes one of (success, failure, unstable) and defines
    under what build states the post build steps will run.
    
    Existing behavior is not changed (default of failure).
    
    Change-Id: I5011f6f4510066aee3ea0a667d17e773b7eec162
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    Add Maven project option run-post-steps
    
    run-post-steps takes one of (success, failure, unstable) and defines
    under what build states the post build steps will run.
    
    Existing behavior is not changed (default of failure).
    
    Change-Id: I5011f6f4510066aee3ea0a667d17e773b7eec162
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    add support for python and tox matrix project axis
    
    Change-Id: I89ffc04faed02fd72c934b44b6832bd1f11d8f2e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    matrix project: add support for dynamic axis
    
    This axis requires the dynamic axis plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/DynamicAxis+Plugin
    
    All the dynamic axis plugin settings are in the core project:
    
    <matrix-project>
      <axes>
        <ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
          <name>config</name>
          <values>
            <string>config_list</string>
          </values>
          <varName>config_list</varName>
          <axisValues>
            <string>default</string>
          </axisValues>
        </ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
      </axes>
    
    The plugin sets 2 values: axis name and variable name.
    The axisValue element is hardcoded to 'default' in the plugin, so we do
    the same in Jenkins job builder.
    
    The matrix project supports multiple axes configuration, including dynamic
    axis.
    
    Tests added for:
     * dynamic axis (by itself)
     * multiple axes (dynamic and user-defined axes)
    
    Tested on Jenkins LTS (1.554.2) with both the plugin installed and not
    installed. The plugin is properly ignored in the latter case.
    
    Change-Id: I36310bc512fd873fec4bd5f42937689fd178536e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    use {obj:key} as a way to pass an object and not only strings to templates
    
    As mentioned at the mail list[0]:
    
    "So I need another way how to pass a *list* as data structure from
    the defaults/project down to the job-template definition, similar to
    what can be done with "{variable}" for strings."
    
    [0] http://lists.openstack.org/pipermail/openstack-infra/2014-February/000799.html
    
    Closes-Bug: 1281038
    Change-Id: I5b04ddb52e537fedd2d05795e91011afd92f2295
    Add Maven project option run-post-steps
    
    run-post-steps takes one of (success, failure, unstable) and defines
    under what build states the post build steps will run.
    
    Existing behavior is not changed (default of failure).
    
    Change-Id: I5011f6f4510066aee3ea0a667d17e773b7eec162
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    matrix project: add support for dynamic axis
    
    This axis requires the dynamic axis plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/DynamicAxis+Plugin
    
    All the dynamic axis plugin settings are in the core project:
    
    <matrix-project>
      <axes>
        <ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
          <name>config</name>
          <values>
            <string>config_list</string>
          </values>
          <varName>config_list</varName>
          <axisValues>
            <string>default</string>
          </axisValues>
        </ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
      </axes>
    
    The plugin sets 2 values: axis name and variable name.
    The axisValue element is hardcoded to 'default' in the plugin, so we do
    the same in Jenkins job builder.
    
    The matrix project supports multiple axes configuration, including dynamic
    axis.
    
    Tests added for:
     * dynamic axis (by itself)
     * multiple axes (dynamic and user-defined axes)
    
    Tested on Jenkins LTS (1.554.2) with both the plugin installed and not
    installed. The plugin is properly ignored in the latter case.
    
    Change-Id: I36310bc512fd873fec4bd5f42937689fd178536e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    use {obj:key} as a way to pass an object and not only strings to templates
    
    As mentioned at the mail list[0]:
    
    "So I need another way how to pass a *list* as data structure from
    the defaults/project down to the job-template definition, similar to
    what can be done with "{variable}" for strings."
    
    [0] http://lists.openstack.org/pipermail/openstack-infra/2014-February/000799.html
    
    Closes-Bug: 1281038
    Change-Id: I5b04ddb52e537fedd2d05795e91011afd92f2295
    Support additional features in Build Flow project
    
    * Allow requiring a workspace.
    * Allow running a DSL script from file.
    * Adding job parameters documentation.
    
    Change-Id: Ida71e40df3dd440d956b91005d932915bdb3d4f7
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Add support for Config File Provider to Maven Project module
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Iecadfd6265100720d1d0b08d3cf57a510999f89d
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    project_maven: allow to set private repository
    
    The values map to these GUI choices
    
     * default            -> Default
     * local-to-executor  -> Local to the executor
     * local-to-workspace -> Local to the workspace
    
    This is on the project level what the similar option is on the builder
    level.
    
    Change-Id: I90ee3385ee12a46b5ab1eb26e3af1bdbfc36946a
    project_maven: Don't require artifact-id and group-id
    
    Jenkins will determine the values from the pom automatically so there's
    no need to require them.
    
    Change-Id: Ic1c9c26a05e335fd78a92fe4316ecc88b3f209b9
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    add support for python and tox matrix project axis
    
    Change-Id: I89ffc04faed02fd72c934b44b6832bd1f11d8f2e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Add Maven project option run-post-steps
    
    run-post-steps takes one of (success, failure, unstable) and defines
    under what build states the post build steps will run.
    
    Existing behavior is not changed (default of failure).
    
    Change-Id: I5011f6f4510066aee3ea0a667d17e773b7eec162
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    tests: Allow to test project parameters
    
    So far it wasn't possible to test the prameters of the
    project itself. While If7b749dae7631e8714a9416dfbd82d2443c0302c
    already made the job creation consistent this goes one step further
    and creates the root_xml using the project's root_xml method.
    
    Change-Id: Ieba4203d3d23ad68df5a1246e90ea8c03ddd54d4
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    git: Support timeout option
    
    This requires git plugin version 2.2.3
    
    Change-Id: I24a2bce00e35f74a5c513d02a7bffe05267cd498
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Support the Store SCM plugin
    
    Change-Id: I9525a29e54f157c90cf98eb7f351b56d063d87dd
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    SCM module: Add support for multiple Git remotes.
    
    Configuring multiple Git remotes is necessary to allow Jenkins to
    merge commits from a remote branch into a local branch. Note that
    this is not the same as specifying multiple SCMs which are cloned
    into separate directories.
    
    Change-Id: Ifef2da85fa22a979570d4ea2b6f30d4bd37da116
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Add support for Stash as a repository viewer
    
    Make it possible to use Atlassian Stash as a repository viewer of Git
    SCM changes. Also sort the viewers alphabetically.
    
    Change-Id: I6725570a0aa6770b2d0eee2cd0ae5ff0e5c5e07c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add support to specify GitLab version.
    
    Change-Id: Iae3746540cb692b19278fd0bedae48bf976700d5
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add SVN credential support
    
    Change-Id: I6f39daa7fca2ffc43a7e7f0585900eb145cf841a
    add include/exclude regions/users in svn scm (doc and tests)
    
    Change-Id: I99ed104cd2cbaba1588dfc31d3b8a028de2e80ee
    git: Support timeout option
    
    This requires git plugin version 2.2.3
    
    Change-Id: I24a2bce00e35f74a5c513d02a7bffe05267cd498
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add support to specify GitLab version.
    
    Change-Id: Iae3746540cb692b19278fd0bedae48bf976700d5
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update git-submodule configuration to new extension style
    
    The Jenkins Git SCM plugin now uses extensions style configuration. This
    patch adds support for the extensions format and deprecates the old
    format.
    
    Change-Id: I3ef144473142e23de859f38501f3561875fb44bf
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add workspace scm
    
    Add support for the 'Clone Workspace SCM' plugin that allows to use the workspace
    of a project as the SCM of an other project.
    
    Change-Id: I8467ace24665855dab606d6e52a1c130cd2929af
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    Add SVN credential support
    
    Change-Id: I6f39daa7fca2ffc43a7e7f0585900eb145cf841a
    add include/exclude regions/users in svn scm (doc and tests)
    
    Change-Id: I99ed104cd2cbaba1588dfc31d3b8a028de2e80ee
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Support the Store SCM plugin
    
    Change-Id: I9525a29e54f157c90cf98eb7f351b56d063d87dd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Add support for credentials-id in git repositories.
    
    Original change by Soren Hansen <Soren.Hansen@ril.com>
    
    Change-Id: I2ad6d5b7d8a5cc89596c41463dc7906780b61515
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add support to specify GitLab version.
    
    Change-Id: Iae3746540cb692b19278fd0bedae48bf976700d5
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add SVN credential support
    
    Change-Id: I6f39daa7fca2ffc43a7e7f0585900eb145cf841a
    add include/exclude regions/users in svn scm (doc and tests)
    
    Change-Id: I99ed104cd2cbaba1588dfc31d3b8a028de2e80ee
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    git: Support timeout option
    
    This requires git plugin version 2.2.3
    
    Change-Id: I24a2bce00e35f74a5c513d02a7bffe05267cd498
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add workspace scm
    
    Add support for the 'Clone Workspace SCM' plugin that allows to use the workspace
    of a project as the SCM of an other project.
    
    Change-Id: I8467ace24665855dab606d6e52a1c130cd2929af
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update git-submodule configuration to new extension style
    
    The Jenkins Git SCM plugin now uses extensions style configuration. This
    patch adds support for the extensions format and deprecates the old
    format.
    
    Change-Id: I3ef144473142e23de859f38501f3561875fb44bf
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Add support for credentials-id in git repositories.
    
    Original change by Soren Hansen <Soren.Hansen@ril.com>
    
    Change-Id: I2ad6d5b7d8a5cc89596c41463dc7906780b61515
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add SVN credential support
    
    Change-Id: I6f39daa7fca2ffc43a7e7f0585900eb145cf841a
    add include/exclude regions/users in svn scm (doc and tests)
    
    Change-Id: I99ed104cd2cbaba1588dfc31d3b8a028de2e80ee
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    git: Support timeout option
    
    This requires git plugin version 2.2.3
    
    Change-Id: I24a2bce00e35f74a5c513d02a7bffe05267cd498
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add support for Stash as a repository viewer
    
    Make it possible to use Atlassian Stash as a repository viewer of Git
    SCM changes. Also sort the viewers alphabetically.
    
    Change-Id: I6725570a0aa6770b2d0eee2cd0ae5ff0e5c5e07c
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    SCM module: Add support for multiple Git remotes.
    
    Configuring multiple Git remotes is necessary to allow Jenkins to
    merge commits from a remote branch into a local branch. Note that
    this is not the same as specifying multiple SCMs which are cloned
    into separate directories.
    
    Change-Id: Ifef2da85fa22a979570d4ea2b6f30d4bd37da116
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Test defaults honors project variables
    
    The defaults can make use of variables passed by the project and I am
    taking advantage of that feature in my templates.
    
    With 70ed2236 / https://review.openstack.org/#/c/85336/ there is a
    regression which cause the test to fail although it pass with parent
    commit d833015.
    
    Change-Id: I57d023657eec4f6f8f29980100185fcfd7e77b1f
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Fix ant-name usage for tests
    
    Incorrect formatting meant that the ant-name was not being set in the
    resulting XML correctly.
    
    Change-Id: I2ce86a85a489398bac6c329f0047ba3a7a5ff61b
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Add example to demonstrate flow plugin for job-template
    
    Change-Id: I7bacce4f495989f8b37d6fc6b1bd773326e83b57
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Move project matrix documentation into a test.
    
    The test includes both a basic example and a user defined
    axis example.
    
    Change-Id: I88f7a17928c4f6b56814c3cc5c843b949358ac2d
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Show usage of job-group
    
    Make sure the example referenced in the documentation for ``Job Groups``
    actually makes use of 'job-group'.
    
    Change-Id: Ib78bdb459db23f57093c1fd4a6dd74a5080dc239
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Support additional features in Build Flow project
    
    * Allow requiring a workspace.
    * Allow running a DSL script from file.
    * Adding job parameters documentation.
    
    Change-Id: Ida71e40df3dd440d956b91005d932915bdb3d4f7
    Add example to demonstrate flow plugin for job-template
    
    Change-Id: I7bacce4f495989f8b37d6fc6b1bd773326e83b57
    Test defaults honors project variables
    
    The defaults can make use of variables passed by the project and I am
    taking advantage of that feature in my templates.
    
    With 70ed2236 / https://review.openstack.org/#/c/85336/ there is a
    regression which cause the test to fail although it pass with parent
    commit d833015.
    
    Change-Id: I57d023657eec4f6f8f29980100185fcfd7e77b1f
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Support variable-specific substitutions in templates.
    
    Change-Id: I6af84f48eaa4ee44c8d8babddd8d10a1e1095101
    Add test for name defaults overridden by template
    
    JJB currently allows for named defaults to be specified at both the
    project and template level. Add a test case that exercises this and
    demonstrates that current interpolation ignores variables without
    definitions if they are not subsequently used when expanding the
    template.
    
    Change-Id: Iffdda9f79c12fb71077bf621f8b08381dbcc9ac1
    Support additional features in Build Flow project
    
    * Allow requiring a workspace.
    * Allow running a DSL script from file.
    * Adding job parameters documentation.
    
    Change-Id: Ida71e40df3dd440d956b91005d932915bdb3d4f7
    Add example to demonstrate flow plugin for job-template
    
    Change-Id: I7bacce4f495989f8b37d6fc6b1bd773326e83b57
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Test defaults honors project variables
    
    The defaults can make use of variables passed by the project and I am
    taking advantage of that feature in my templates.
    
    With 70ed2236 / https://review.openstack.org/#/c/85336/ there is a
    regression which cause the test to fail although it pass with parent
    commit d833015.
    
    Change-Id: I57d023657eec4f6f8f29980100185fcfd7e77b1f
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Fix ant-name usage for tests
    
    Incorrect formatting meant that the ant-name was not being set in the
    resulting XML correctly.
    
    Change-Id: I2ce86a85a489398bac6c329f0047ba3a7a5ff61b
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Support variable-specific substitutions in templates.
    
    Change-Id: I6af84f48eaa4ee44c8d8babddd8d10a1e1095101
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Add documentation and example on the usage of yaml anchors and aliases.
    
    Change-Id: I9227820cfdccace2d8a463529da64041c156e8ec
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add additional documentation for passing objects to templates
    
    I noticed that users were not really aware of how this feature
    worked so added additional documentation for it.
    
    Change-Id: Ic5385ae859295cdd015d698ede3da4988efd9ca7
    Closes-Bug: 1335945
    use {obj:key} as a way to pass an object and not only strings to templates
    
    As mentioned at the mail list[0]:
    
    "So I need another way how to pass a *list* as data structure from
    the defaults/project down to the job-template definition, similar to
    what can be done with "{variable}" for strings."
    
    [0] http://lists.openstack.org/pipermail/openstack-infra/2014-February/000799.html
    
    Closes-Bug: 1281038
    Change-Id: I5b04ddb52e537fedd2d05795e91011afd92f2295
    Add additional documentation for passing objects to templates
    
    I noticed that users were not really aware of how this feature
    worked so added additional documentation for it.
    
    Change-Id: Ic5385ae859295cdd015d698ede3da4988efd9ca7
    Closes-Bug: 1335945
    use {obj:key} as a way to pass an object and not only strings to templates
    
    As mentioned at the mail list[0]:
    
    "So I need another way how to pass a *list* as data structure from
    the defaults/project down to the job-template definition, similar to
    what can be done with "{variable}" for strings."
    
    [0] http://lists.openstack.org/pipermail/openstack-infra/2014-February/000799.html
    
    Closes-Bug: 1281038
    Change-Id: I5b04ddb52e537fedd2d05795e91011afd92f2295
    Add example to demonstrate flow plugin for job-template
    
    Change-Id: I7bacce4f495989f8b37d6fc6b1bd773326e83b57
    Show usage of job-group
    
    Make sure the example referenced in the documentation for ``Job Groups``
    actually makes use of 'job-group'.
    
    Change-Id: Ib78bdb459db23f57093c1fd4a6dd74a5080dc239
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    doc change: remove duplicate general job parameters
    
    This change adds a test to validate the general job parameters and uses
    that test as documentation for the general module.   It also replaces the
    doc of the general params in the top level definitions.rst with references
    to the general module.
    
    Change-Id: I3df04d69186ca49d7297f8141855a4c72c73be1e
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    Fix ant builder definition in complete test
    
    Change-Id: I8f6041c0aa2b7a24d2dc8ed73b2719c332b869e6
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Apply defaults to job-templates parameters
    
    I had the use case of a lot of projects sharing the same job template
    that uses a lot of variables.  That requires each project to define all
    the variables even if they are mostly identical.
    
    This patch propose to define varialbes as 'defaults' and have them
    applied in the job-template magically (oneline diffs always have that
    feeling to me).
    
    So instead of:
    
    - project:
        name: project1
        arch: amd64
        builder: debuild
        lintian: true
        jobs:
         - '{name}-build-{arch}'
    
    And so on ...
    
    I can just:
    
    - defaults:
        name: sanebuild
    
    - project:
        name: project1
        defaults: sanebuild
        jobs:
         - '{name}-build-{arch}'
    
    And override the arch as needed either in the project or by passing it
    to the job.
    
    Without this patch, the provided yamlparser fixture
    template_honor_defaults.yaml would raise:
    
        arch parameter missing to format echo Build arch {arch}.
        Given: {'': '', 'jobs': ['build-{arch}'], 'name': 'project-name'}
    
    Change-Id: Ida1e27eb47356d9cae42175743bd2fd52eb9d869
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Test defaults honors project variables
    
    The defaults can make use of variables passed by the project and I am
    taking advantage of that feature in my templates.
    
    With 70ed2236 / https://review.openstack.org/#/c/85336/ there is a
    regression which cause the test to fail although it pass with parent
    commit d833015.
    
    Change-Id: I57d023657eec4f6f8f29980100185fcfd7e77b1f
    Move project matrix documentation into a test.
    
    The test includes both a basic example and a user defined
    axis example.
    
    Change-Id: I88f7a17928c4f6b56814c3cc5c843b949358ac2d
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Emit deprecation warning on old format use with gerrit trigger
    
    Inform end-users that the old yaml format for gerrit trigger has been
    deprecated and support will be removed sometime after the next release.
    
    Change-Id: Idd04aee949b2ea05ffadb766fe7222a65ffb8052
    Fix ant builder definition in complete test
    
    Change-Id: I8f6041c0aa2b7a24d2dc8ed73b2719c332b869e6
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Support additional features in Build Flow project
    
    * Allow requiring a workspace.
    * Allow running a DSL script from file.
    * Adding job parameters documentation.
    
    Change-Id: Ida71e40df3dd440d956b91005d932915bdb3d4f7
    Add example to demonstrate flow plugin for job-template
    
    Change-Id: I7bacce4f495989f8b37d6fc6b1bd773326e83b57
    Test defaults honors project variables
    
    The defaults can make use of variables passed by the project and I am
    taking advantage of that feature in my templates.
    
    With 70ed2236 / https://review.openstack.org/#/c/85336/ there is a
    regression which cause the test to fail although it pass with parent
    commit d833015.
    
    Change-Id: I57d023657eec4f6f8f29980100185fcfd7e77b1f
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Interpolate params inside of params.
    
    This patch enables parameters to be expanded inside of other parameters. For
    instance:
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_foo'
        builders:
            - shell: 'echo "I am foo job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_bar'
        builders:
            - shell: 'echo "I am bar job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_baz'
        builders:
            - shell: 'echo "I am baz job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-group:
        name: 'pipeline2'
        pipeline_type: 'p2'
        jobs:
            - '{value-stream}_{pipeline_type}_foo':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_baz'
            - '{value-stream}_{pipeline_type}_baz':
    
    - job-group:
        name: 'pipeline1'
        pipeline_type: 'p1'
        jobs:
            - '{value-stream}_{pipeline_type}_baz':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_foo'
            - '{value-stream}_{pipeline_type}_foo':
    
    - project:
        name: derp
        jobs:
            - 'pipeline1':
                value-stream:
                    - experimental
                    - staging
            - 'pipeline2':
                value-stream:
                    - experimental
                    - staging
                    - production
    
    Prior to this commit, the setup above was not possible because the `downstream`
    defined as parameters to be passed to job templates in the job groups would not
    have the `value-stream` and `pipeline-type` parameters interpolated. The
    trigger-parameterized-jobs `project` value for each of the 15 jobs created with
    this setup would all look something like `{value-stream}_{pipeline_type}_foo`
    which does not actually point to any particular job.
    
    The only way I was previously able to specify a downstream job with parameters
    was to put the `{value-stream}_{pipeline_type}_foo` string directly in the
    job-template which meant that job templates were statically bound to each
    other--I had no reasonable way to re-order or easily select subsets of the jobs
    at the job-group or project level as can be seen here in the difference between
    `pipeline1` and `pipeline2`.
    
    Change-Id: I26dfb112cd4842c40c3d561f8de89f7654a07b8f
    Interpolate params inside of params.
    
    This patch enables parameters to be expanded inside of other parameters. For
    instance:
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_foo'
        builders:
            - shell: 'echo "I am foo job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_bar'
        builders:
            - shell: 'echo "I am bar job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_baz'
        builders:
            - shell: 'echo "I am baz job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-group:
        name: 'pipeline2'
        pipeline_type: 'p2'
        jobs:
            - '{value-stream}_{pipeline_type}_foo':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_baz'
            - '{value-stream}_{pipeline_type}_baz':
    
    - job-group:
        name: 'pipeline1'
        pipeline_type: 'p1'
        jobs:
            - '{value-stream}_{pipeline_type}_baz':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_foo'
            - '{value-stream}_{pipeline_type}_foo':
    
    - project:
        name: derp
        jobs:
            - 'pipeline1':
                value-stream:
                    - experimental
                    - staging
            - 'pipeline2':
                value-stream:
                    - experimental
                    - staging
                    - production
    
    Prior to this commit, the setup above was not possible because the `downstream`
    defined as parameters to be passed to job templates in the job groups would not
    have the `value-stream` and `pipeline-type` parameters interpolated. The
    trigger-parameterized-jobs `project` value for each of the 15 jobs created with
    this setup would all look something like `{value-stream}_{pipeline_type}_foo`
    which does not actually point to any particular job.
    
    The only way I was previously able to specify a downstream job with parameters
    was to put the `{value-stream}_{pipeline_type}_foo` string directly in the
    job-template which meant that job templates were statically bound to each
    other--I had no reasonable way to re-order or easily select subsets of the jobs
    at the job-group or project level as can be seen here in the difference between
    `pipeline1` and `pipeline2`.
    
    Change-Id: I26dfb112cd4842c40c3d561f8de89f7654a07b8f
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Apply defaults to job-templates parameters
    
    I had the use case of a lot of projects sharing the same job template
    that uses a lot of variables.  That requires each project to define all
    the variables even if they are mostly identical.
    
    This patch propose to define varialbes as 'defaults' and have them
    applied in the job-template magically (oneline diffs always have that
    feeling to me).
    
    So instead of:
    
    - project:
        name: project1
        arch: amd64
        builder: debuild
        lintian: true
        jobs:
         - '{name}-build-{arch}'
    
    And so on ...
    
    I can just:
    
    - defaults:
        name: sanebuild
    
    - project:
        name: project1
        defaults: sanebuild
        jobs:
         - '{name}-build-{arch}'
    
    And override the arch as needed either in the project or by passing it
    to the job.
    
    Without this patch, the provided yamlparser fixture
    template_honor_defaults.yaml would raise:
    
        arch parameter missing to format echo Build arch {arch}.
        Given: {'': '', 'jobs': ['build-{arch}'], 'name': 'project-name'}
    
    Change-Id: Ida1e27eb47356d9cae42175743bd2fd52eb9d869
    Support variable-specific substitutions in templates.
    
    Change-Id: I6af84f48eaa4ee44c8d8babddd8d10a1e1095101
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    Interpolate params inside of params.
    
    This patch enables parameters to be expanded inside of other parameters. For
    instance:
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_foo'
        builders:
            - shell: 'echo "I am foo job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_bar'
        builders:
            - shell: 'echo "I am bar job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_baz'
        builders:
            - shell: 'echo "I am baz job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-group:
        name: 'pipeline2'
        pipeline_type: 'p2'
        jobs:
            - '{value-stream}_{pipeline_type}_foo':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_baz'
            - '{value-stream}_{pipeline_type}_baz':
    
    - job-group:
        name: 'pipeline1'
        pipeline_type: 'p1'
        jobs:
            - '{value-stream}_{pipeline_type}_baz':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_foo'
            - '{value-stream}_{pipeline_type}_foo':
    
    - project:
        name: derp
        jobs:
            - 'pipeline1':
                value-stream:
                    - experimental
                    - staging
            - 'pipeline2':
                value-stream:
                    - experimental
                    - staging
                    - production
    
    Prior to this commit, the setup above was not possible because the `downstream`
    defined as parameters to be passed to job templates in the job groups would not
    have the `value-stream` and `pipeline-type` parameters interpolated. The
    trigger-parameterized-jobs `project` value for each of the 15 jobs created with
    this setup would all look something like `{value-stream}_{pipeline_type}_foo`
    which does not actually point to any particular job.
    
    The only way I was previously able to specify a downstream job with parameters
    was to put the `{value-stream}_{pipeline_type}_foo` string directly in the
    job-template which meant that job templates were statically bound to each
    other--I had no reasonable way to re-order or easily select subsets of the jobs
    at the job-group or project level as can be seen here in the difference between
    `pipeline1` and `pipeline2`.
    
    Change-Id: I26dfb112cd4842c40c3d561f8de89f7654a07b8f
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Interpolate params inside of params.
    
    This patch enables parameters to be expanded inside of other parameters. For
    instance:
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_foo'
        builders:
            - shell: 'echo "I am foo job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_bar'
        builders:
            - shell: 'echo "I am bar job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_baz'
        builders:
            - shell: 'echo "I am baz job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-group:
        name: 'pipeline2'
        pipeline_type: 'p2'
        jobs:
            - '{value-stream}_{pipeline_type}_foo':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_baz'
            - '{value-stream}_{pipeline_type}_baz':
    
    - job-group:
        name: 'pipeline1'
        pipeline_type: 'p1'
        jobs:
            - '{value-stream}_{pipeline_type}_baz':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_foo'
            - '{value-stream}_{pipeline_type}_foo':
    
    - project:
        name: derp
        jobs:
            - 'pipeline1':
                value-stream:
                    - experimental
                    - staging
            - 'pipeline2':
                value-stream:
                    - experimental
                    - staging
                    - production
    
    Prior to this commit, the setup above was not possible because the `downstream`
    defined as parameters to be passed to job templates in the job groups would not
    have the `value-stream` and `pipeline-type` parameters interpolated. The
    trigger-parameterized-jobs `project` value for each of the 15 jobs created with
    this setup would all look something like `{value-stream}_{pipeline_type}_foo`
    which does not actually point to any particular job.
    
    The only way I was previously able to specify a downstream job with parameters
    was to put the `{value-stream}_{pipeline_type}_foo` string directly in the
    job-template which meant that job templates were statically bound to each
    other--I had no reasonable way to re-order or easily select subsets of the jobs
    at the job-group or project level as can be seen here in the difference between
    `pipeline1` and `pipeline2`.
    
    Change-Id: I26dfb112cd4842c40c3d561f8de89f7654a07b8f
    doc change: remove duplicate general job parameters
    
    This change adds a test to validate the general job parameters and uses
    that test as documentation for the general module.   It also replaces the
    doc of the general params in the top level definitions.rst with references
    to the general module.
    
    Change-Id: I3df04d69186ca49d7297f8141855a4c72c73be1e
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Add documentation and example on the usage of yaml anchors and aliases.
    
    Change-Id: I9227820cfdccace2d8a463529da64041c156e8ec
    Add test for name defaults overridden by template
    
    JJB currently allows for named defaults to be specified at both the
    project and template level. Add a test case that exercises this and
    demonstrates that current interpolation ignores variables without
    definitions if they are not subsequently used when expanding the
    template.
    
    Change-Id: Iffdda9f79c12fb71077bf621f8b08381dbcc9ac1
    Support additional features in Build Flow project
    
    * Allow requiring a workspace.
    * Allow running a DSL script from file.
    * Adding job parameters documentation.
    
    Change-Id: Ida71e40df3dd440d956b91005d932915bdb3d4f7
    Fix bug in template job yaml expansion.
    
    This bug occurs if one attempts to set a list object on a job template for a
    parameter that does not occur in the job name. If the parameter is not in the
    template name then there is no reason to count it among the dimensions used to
    fanout that template into multiple instances and in fact this would actually
    lead to confusing duplicate job error messages.
    
    Change-Id: I80f026d3bbfbac96c6fc7c01c1c916cf85e1bf10
    Fix bug in template job yaml expansion.
    
    This bug occurs if one attempts to set a list object on a job template for a
    parameter that does not occur in the job name. If the parameter is not in the
    template name then there is no reason to count it among the dimensions used to
    fanout that template into multiple instances and in fact this would actually
    lead to confusing duplicate job error messages.
    
    Change-Id: I80f026d3bbfbac96c6fc7c01c1c916cf85e1bf10
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Lazy load plugin list
    
    This will allow us to wait for jenkins to come up properly before getting
    this list. Otherwise we'd have to duplicate the error handling logic.
    
    Change-Id: I663bf32e53e917284d93422526078b4dcf76e9c1
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Add documentation and example on the usage of yaml anchors and aliases.
    
    Change-Id: I9227820cfdccace2d8a463529da64041c156e8ec
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add 'Enable condition' support to MultiJob builder
    
    'Enable condition' is optional condition in groovy script
    format to run phase job of MultiJob project
    
    Change-Id: I1962d7f8dc2a3613e96654ba11e15f79f8193fae
    multijob: added kill-phase-on option
    
    this option allows terminate job phase on specific status of job
    
    Change-Id: I5984fb2494120afc97140c1ae38635301e8f1376
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    Add support to configure boolean parameter in PBT
    
    This change adds support to the Parameterized Build Trigger plugin for
    configuring boolean parameters.
    
    Change-Id: I797fe298248c2737095b39820382a8610a102d87
    Also-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Allow 'Build on the same node' in trigger-builds builder
    
    In `trigger-builds` builder, create the
    '<hudson.plugins.parameterizedtrigger.NodeParameters/>'
    element if 'same-node' parameter is set to 'true'.
    
    This adds the configurability of the 'Build on the same node'
    parameter.
    
    Change-Id: I3b6fa0a50b74932ad9837c7b88835b8b0c9c23ec
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    add private-repository, java-opts, settings and global-settings to maven-target
    
    Done to enable private repository for jobs making it more safe to
    run concurrent maven builds and for allowing to control javavm and other
    maven settings for maven build.
    
    Includes moving doc example for maven-target as a test fixture.
    
    Change-Id: Ic34958e9bf1008fbc71c45da85208ac1fda7aeb4
    Add support for scripts in the inject builder
    
    Sometimes we want to inject environment variables from
    different sources, so it's very useful to be able to use
    EnvInject's script parameters. This change adds support.
    
    Change-Id: I5b3054c0fa8c5ba45fb3f73ed50a1da52f60fb8e
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add support for Managed Script Plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Managed+Script+Plugin
    
    Change-Id: Ic37f02886f242f5ff31a7421e699b85227c5264f
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Adding support for the Powershell plugin.
    
    See https://wiki.jenkins-ci.org/display/JENKINS/PowerShell+Plugin
    
    Change-Id: I337ea896e358fe456e556a95e22e724fe20cd722
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    builders: add cmakebuilder plugin support
    
    The cmakebuilder plugin is used to configure CMake builds to Jenkins,
    being able to set several directories and variables related to CMake.
    
    All the possible configurations for the plugin can be set with this
    builder. Also included on this change are the documentation and two test
    cases, one for common usage types and another more complete.
    
    More information about the plugin can be found at:
    https://wiki.jenkins-ci.org/display/JENKINS/cmakebuilder+Plugin
    
    Change-Id: I3f62515d7dc2d3b6e5726ebe06c53e72de5cde90
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Add strings-match conditional step
    
    Change-Id: I9a4a069b0ed4f57f0bb71a66b9bb1256d03d4f80
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    Add support for scripts in the inject builder
    
    Sometimes we want to inject environment variables from
    different sources, so it's very useful to be able to use
    EnvInject's script parameters. This change adds support.
    
    Change-Id: I5b3054c0fa8c5ba45fb3f73ed50a1da52f60fb8e
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Add support for Managed Script Plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Managed+Script+Plugin
    
    Change-Id: Ic37f02886f242f5ff31a7421e699b85227c5264f
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for github commit status pending
    
    Introduced in the github plugin at version 1.10:
    'Build step to set Github commit status as "pending"'
    
    Change-Id: I6c586ae44563608f095fff1eb65395d0338d7cb4
    Added support for Github notifier
    
    Change-Id: I79c7847aa8df4dd4f9f76567c461d016aa00c6c1
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    add private-repository, java-opts, settings and global-settings to maven-target
    
    Done to enable private repository for jobs making it more safe to
    run concurrent maven builds and for allowing to control javavm and other
    maven settings for maven build.
    
    Includes moving doc example for maven-target as a test fixture.
    
    Change-Id: Ic34958e9bf1008fbc71c45da85208ac1fda7aeb4
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add support for Managed Script Plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Managed+Script+Plugin
    
    Change-Id: Ic37f02886f242f5ff31a7421e699b85227c5264f
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Add Job DSL Plugin
    
    Add support for Job DSL plugin for Groovy-based job and view
    creation and management
    
    Change-Id: I23a499523e994aac79974b997f8370c85cd8dbeb
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    builders: add cmakebuilder plugin support
    
    The cmakebuilder plugin is used to configure CMake builds to Jenkins,
    being able to set several directories and variables related to CMake.
    
    All the possible configurations for the plugin can be set with this
    builder. Also included on this change are the documentation and two test
    cases, one for common usage types and another more complete.
    
    More information about the plugin can be found at:
    https://wiki.jenkins-ci.org/display/JENKINS/cmakebuilder+Plugin
    
    Change-Id: I3f62515d7dc2d3b6e5726ebe06c53e72de5cde90
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Adds support for Change Assembly Version plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Change+Assembly+Version
    
    Change-Id: Ib1ae6a18b4fc1ea0e75228b288d59dbec7e4d44c
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    builders: add cmakebuilder plugin support
    
    The cmakebuilder plugin is used to configure CMake builds to Jenkins,
    being able to set several directories and variables related to CMake.
    
    All the possible configurations for the plugin can be set with this
    builder. Also included on this change are the documentation and two test
    cases, one for common usage types and another more complete.
    
    More information about the plugin can be found at:
    https://wiki.jenkins-ci.org/display/JENKINS/cmakebuilder+Plugin
    
    Change-Id: I3f62515d7dc2d3b6e5726ebe06c53e72de5cde90
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Adds support for Change Assembly Version plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Change+Assembly+Version
    
    Change-Id: Ib1ae6a18b4fc1ea0e75228b288d59dbec7e4d44c
    adds support for not condition in conditional_step
    
    updated builders.py to support not condition for conditional_step
    
    Change-Id: Icf6f07ab4a53655d8f52c8793478afd6d93ae75c
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    add private-repository, java-opts, settings and global-settings to maven-target
    
    Done to enable private repository for jobs making it more safe to
    run concurrent maven builds and for allowing to control javavm and other
    maven settings for maven build.
    
    Includes moving doc example for maven-target as a test fixture.
    
    Change-Id: Ic34958e9bf1008fbc71c45da85208ac1fda7aeb4
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add 'last-completed' to copyartifact 'which-build' values
    
    Change-Id: I4ae84f7ca2d8d28195d6590c7a25d6c8886cde77
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Adding support for the Powershell plugin.
    
    See https://wiki.jenkins-ci.org/display/JENKINS/PowerShell+Plugin
    
    Change-Id: I337ea896e358fe456e556a95e22e724fe20cd722
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add support for github commit status pending
    
    Introduced in the github plugin at version 1.10:
    'Build step to set Github commit status as "pending"'
    
    Change-Id: I6c586ae44563608f095fff1eb65395d0338d7cb4
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Add strings-match conditional step
    
    Change-Id: I9a4a069b0ed4f57f0bb71a66b9bb1256d03d4f80
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    add support for python builder
    
    Change-Id: I0b1711c04435287bb851a72df25ebba10c891831
    Add support for Config File Provider to Maven Project module
    
    Note: this is a port of the patch from commit 1e216835
    https://review.openstack.org/gitweb?p=openstack-infra/jenkins-job-builder.git;a=commit;h=1e216835
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ic7f4d4d676e67f5f96afc3bd412dea5a50bee79b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    builders: add cmakebuilder plugin support
    
    The cmakebuilder plugin is used to configure CMake builds to Jenkins,
    being able to set several directories and variables related to CMake.
    
    All the possible configurations for the plugin can be set with this
    builder. Also included on this change are the documentation and two test
    cases, one for common usage types and another more complete.
    
    More information about the plugin can be found at:
    https://wiki.jenkins-ci.org/display/JENKINS/cmakebuilder+Plugin
    
    Change-Id: I3f62515d7dc2d3b6e5726ebe06c53e72de5cde90
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add 'Enable condition' support to MultiJob builder
    
    'Enable condition' is optional condition in groovy script
    format to run phase job of MultiJob project
    
    Change-Id: I1962d7f8dc2a3613e96654ba11e15f79f8193fae
    multijob: added kill-phase-on option
    
    this option allows terminate job phase on specific status of job
    
    Change-Id: I5984fb2494120afc97140c1ae38635301e8f1376
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add support for Config File Provider to Maven Project module
    
    Note: this is a port of the patch from commit 1e216835
    https://review.openstack.org/gitweb?p=openstack-infra/jenkins-job-builder.git;a=commit;h=1e216835
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ic7f4d4d676e67f5f96afc3bd412dea5a50bee79b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Adds support for Change Assembly Version plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Change+Assembly+Version
    
    Change-Id: Ib1ae6a18b4fc1ea0e75228b288d59dbec7e4d44c
    add tests for shell builder
    
    Change-Id: I37350e7e813db173e033bd4131e62be77ab9753a
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Add support for Managed Script Plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Managed+Script+Plugin
    
    Change-Id: Ic37f02886f242f5ff31a7421e699b85227c5264f
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    add support for python builder
    
    Change-Id: I0b1711c04435287bb851a72df25ebba10c891831
    adds support for not condition in conditional_step
    
    updated builders.py to support not condition for conditional_step
    
    Change-Id: Icf6f07ab4a53655d8f52c8793478afd6d93ae75c
    Add strings-match conditional step
    
    Change-Id: I9a4a069b0ed4f57f0bb71a66b9bb1256d03d4f80
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Add support to configure boolean parameter in PBT
    
    This change adds support to the Parameterized Build Trigger plugin for
    configuring boolean parameters.
    
    Change-Id: I797fe298248c2737095b39820382a8610a102d87
    Also-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Allow 'Build on the same node' in trigger-builds builder
    
    In `trigger-builds` builder, create the
    '<hudson.plugins.parameterizedtrigger.NodeParameters/>'
    element if 'same-node' parameter is set to 'true'.
    
    This adds the configurability of the 'Build on the same node'
    parameter.
    
    Change-Id: I3b6fa0a50b74932ad9837c7b88835b8b0c9c23ec
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add 'last-completed' to copyartifact 'which-build' values
    
    Change-Id: I4ae84f7ca2d8d28195d6590c7a25d6c8886cde77
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Add Job DSL Plugin
    
    Add support for Job DSL plugin for Groovy-based job and view
    creation and management
    
    Change-Id: I23a499523e994aac79974b997f8370c85cd8dbeb
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    add private-repository, java-opts, settings and global-settings to maven-target
    
    Done to enable private repository for jobs making it more safe to
    run concurrent maven builds and for allowing to control javavm and other
    maven settings for maven build.
    
    Includes moving doc example for maven-target as a test fixture.
    
    Change-Id: Ic34958e9bf1008fbc71c45da85208ac1fda7aeb4
    add tests for shell builder
    
    Change-Id: I37350e7e813db173e033bd4131e62be77ab9753a
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Enhance coverage for builder trigger-builds
    
    Some options to the trigger-builds builder were not present in the test
    fixture.  As a side effect that enhance our documentation.
    
    Change-Id: Ic2755f76f02f7eba3842dc9a41f7db8907acda75
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Adds support for Change Assembly Version plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Change+Assembly+Version
    
    Change-Id: Ib1ae6a18b4fc1ea0e75228b288d59dbec7e4d44c
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    New base class to declare test cases and tests to the node option
    
    This patch refactors the tests suite to use a base class to declare test cases
    just using a class declaration, the existing test class was modified to use it
    and new tests are using it as well.
    
    These tests verify the XML generated when the 'node' option is set and
    when it's absent.
    
    Change-Id: Iddcdd63e0ab7c459f6513b1d1ebf19e19a362c1d
    Moved get_scenarios() function to a base module to make it easier to reuse
    
    This will let other tests use it to find fixtures
    
    Change-Id: I4253bb0f742373f8f79dd4bb5886ef98ba81538c
    Add python26 multiline string assertion back.
    
    The assertMultiline equal was removed for assertEqual to be python26
    friendly. Testtools has a matcher that provides similar functionality
    that is python26 compatible. Use testtools instead of unittest for this
    functionality. Remove use of unittest.main().
    
    Change-Id: I348b0ee0192d3164084c20d9356e69f29e1cb86c
    Add python26 support
    
    Change-Id: I1e4b388135ce73f34ba594943c4ae7e5f2dadeba
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Tests: Use a testscenarios for running tests.
    
    Instead of using load_tests to build a test suite out of a single
    test case, rely on testscenarios. This library aims at running the
    same test with different input data (`scenarios').
    
    Some code is moved inside the test case to reduce the number of
    scenario parameters (previously fixtures).
    
    Change-Id: Iedb4cb3ad6341a9b397fa305b1ce2b329b6fdc15
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    Added support for Jenkins plugin Blame upstream committers
    
    Change-Id: Iefbca697ac93176c9e132e7a0dc04f2b0a7b09f6
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Add support for TestNG publisher.
    
    Change-Id: I4686958440e6058fce6c02d3e2f1b88551c18176
    The email publisher needs a list of recipients
    
    The email publisher will throw a NullPointerException of the recipients
    xml element does not exist, so if there are no recipients then set the
    value to an empty string in order to get an empty xml element in the
    config.
    
    Also add tests for the email publisher.
    
    story: 2000015
    Change-Id: I7b4fdd4904eea1918ae80f5db6c7b0aaedbaef99
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Add support for TestNG publisher.
    
    Change-Id: I4686958440e6058fce6c02d3e2f1b88551c18176
    Add support for the Jenkins Clang Scan-Build publisher plugin.
    
    Change-Id: Ib892c790c370301e3e7ba04a83a9cfe38745c3ec
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    The email publisher needs a list of recipients
    
    The email publisher will throw a NullPointerException of the recipients
    xml element does not exist, so if there are no recipients then set the
    value to an empty string in order to get an empty xml element in the
    config.
    
    Also add tests for the email publisher.
    
    story: 2000015
    Change-Id: I7b4fdd4904eea1918ae80f5db6c7b0aaedbaef99
    Cleaned up fixtures. Removing vim editor settings
    
    Change-Id: I210c1629c513d5e1dfd2b2a16cd7e8361953fc0f
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Fix typo in ircbot's default matrix-notifier.
    
    * Add a test fixture for the ircbot plugin that shows the bug.
    * Fix the bug.
    
    Update: Extract original example from the documentation as
    ircbot001.yaml and include in the doc via literalinclude.  Add a
    second test case, ircbot002.yaml to demonstrate the bug fixed by this
    patch.
    
    Closes-Bug: #1290376
    Change-Id: Ifcb96a6dab5ee923cee7d3e71bfe518f1e3d0ebc
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Added clone-workspace publisher
    
    Change-Id: I39c71d69b100206e09164f0b765bda14d6f428c6
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Added support for Rich Text Publisher Plugin
    
    This commit adds support for the Rich Text Publisher Plugin avaiable at
    https://wiki.jenkins-ci.org/display/JENKINS/Rich+Text+Publisher+Plugin
    
    Change-Id: Id3bf21dfe8ae5a6392fb15334461b0ce4a95e1ae
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Adds claim-build support junit publisher
    
    Requires Claim Plugin.
    https://wiki.jenkins-ci.org/display/JENKINS/Claim+plugin
    
    Change-Id: I8daf721f125d9cd89f0aa005f396cf67405229d2
    Closes-Bug: #1389301
    Add support for Test Stability with Junit
    
    Adds test-stability option to junit test result
    publisher, requires Test stability plugin to be installed.
    
    https://wiki.jenkins-ci.org/display/JENKINS/Test+stability+plugin
    
    Change-Id: Idd7ef1bdeaf9e6fd8881bab5729950dc717ce9f3
    Add support for parameters in pipeline publisher.
    
    Change-Id: Ie36d7c6a9daab17adf93586f79b92be0ed267c35
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Support site monitor publisher
    
    This publisher allows to check an URL after the build steps. It requires
    the sitemonitor plugin from
    
    https://wiki.jenkins-ci.org/display/JENKINS/SiteMonitor+Plugin
    
    Change-Id: I83026e4db9bd7975a34b7d8e015a4a73c3b09ae8
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Add support for the Jenkins Clang Scan-Build publisher plugin.
    
    Change-Id: Ib892c790c370301e3e7ba04a83a9cfe38745c3ec
    Added flexible publish support
    
    Added support for the Flexible Publish plugin to the JJB publishers.
    Updated documentation and unit tests as well.
    
    Change-Id: Id72a4b01f451ae2613b24347afb6493bf7641cd1
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    The email publisher needs a list of recipients
    
    The email publisher will throw a NullPointerException of the recipients
    xml element does not exist, so if there are no recipients then set the
    value to an empty string in order to get an empty xml element in the
    config.
    
    Also add tests for the email publisher.
    
    story: 2000015
    Change-Id: I7b4fdd4904eea1918ae80f5db6c7b0aaedbaef99
    Added support for Emotional Jenkins
    
    Change-Id: Icaac9cc07b64384b3d65234bf9c603ef55f0b104
    xUnit publisher: add option to skip if there are no tests files
    
    This is valid for each defined xUnit type publisher on the job. Default
    is false.
    
    Change-Id: Idff3c8ba6a4e4291ec483b2eb4a999dcbeea7291
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    xUnit publisher: add test-time-margin extra config option
    
    From the plugin advanced configuration:
    
        "Give the report time margin value (default to 3000) in ms, before
         to fail if not new (unless the option 'Fail the build if test
         results were not updated this run' is checked)."
    
    The configuration defaults to 3000 if no value is passed.
    
    Change-Id: I372d9cc100ecd824516bac864daac0af41e367f5
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    xUnit publisher: add support to CTest
    
    Adds support for parsing the output of the CMake test driver program on
    the xUnit plugin, which was present since version 1.58.
    
    Another fixture file was added to keep the data extraction based of the
    current tests fixtures working.
    
    Change-Id: I9be73b39c9034955f6224695cbd642f03deac2cf
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Add examples for 'predefined-parameters'
    
    There was no example how to make multiline 'predefined-parameters'.
    
    Change-Id: Ic287cd37ff928e34d80104085a3aca6f5d34865a
    Closes-Bug: 1381079
    Add parameter to trigger_parameterized_builds
    
    For supporting ability to run downstream project on the same node
    parameter 'NodeParameters' should be present in output xml.
    Adding same parameter to 'trigger_parameterized_builds' publisher.
    
    Change-Id: I7769507d8da138fe0944e1b5bc24ab595e787587
    Add support for the NodeLabel Parameter plugin
    
    Add support for using the NodeLabel Parameter plugin to
    specify which node should run a job when triggering a
    parameterized build.
    
    Requires the Jenkins NodeLabel Parameter Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/NodeLabel+Parameter+Plugin
    
    Change-Id: Ie947a2a3069b477419db7eaa35307088712467e3
    xUnit publisher: add option to skip if there are no tests files
    
    This is valid for each defined xUnit type publisher on the job. Default
    is false.
    
    Change-Id: Idff3c8ba6a4e4291ec483b2eb4a999dcbeea7291
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    xUnit publisher: add test-time-margin extra config option
    
    From the plugin advanced configuration:
    
        "Give the report time margin value (default to 3000) in ms, before
         to fail if not new (unless the option 'Fail the build if test
         results were not updated this run' is checked)."
    
    The configuration defaults to 3000 if no value is passed.
    
    Change-Id: I372d9cc100ecd824516bac864daac0af41e367f5
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    xUnit publisher: add support to CTest
    
    Adds support for parsing the output of the CMake test driver program on
    the xUnit plugin, which was present since version 1.58.
    
    Another fixture file was added to keep the data extraction based of the
    current tests fixtures working.
    
    Change-Id: I9be73b39c9034955f6224695cbd642f03deac2cf
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Retain user specified order of post build scripts
    
    Avoid imposing hardcoded order of the scripts within the module and
    instead favour the order of the input data. Combined with use of ordered
    dicts for yaml, this ensures that users may control the order of the
    various steps to use with the post build scripts from yaml.
    
    Change-Id: Icf540a53cb6f1b13f80f09d9103610aee10d3861
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    Support site monitor publisher
    
    This publisher allows to check an URL after the build steps. It requires
    the sitemonitor plugin from
    
    https://wiki.jenkins-ci.org/display/JENKINS/SiteMonitor+Plugin
    
    Change-Id: I83026e4db9bd7975a34b7d8e015a4a73c3b09ae8
    Add 'Build Flow Test Aggregator' publisher
    
    Add a new publisher for aggregating test results of downstream jobs in a
    Build Flow project.
    https://wiki.jenkins-ci.org/display/JENKINS/Build+Flow+Test+Aggregator+Plugin
    
    Change-Id: I88e74fe279f1924fcac010cc8d7a8850fc231269
    Added support for Github notifier
    
    Change-Id: I79c7847aa8df4dd4f9f76567c461d016aa00c6c1
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    Add support for parameters in pipeline publisher.
    
    Change-Id: Ie36d7c6a9daab17adf93586f79b92be0ed267c35
    Cleaned up fixtures. Removing vim editor settings
    
    Change-Id: I210c1629c513d5e1dfd2b2a16cd7e8361953fc0f
    Add publisher for Git Publisher support
    
    This change adds functionality to configure the Git Publisher
    post-build action in Jenkins jobs. Git Publisher is used to push
    results of a build back to one or more Git repositories.
    
    Change-Id: I275762934aa12c5c859db7c96003af8c6824b744
    Adding coverage.py publisher for ShiningPanda Plugin
    
    This publisher allows publishing coverage.py HTML
    reports using ShiningPanda Plugin
    https://wiki.jenkins-ci.org/display/JENKINS/ShiningPanda+Plugin
    
    Change-Id: I3040806a6cd49d7cfc423a39288729724f1ca223
    updated conditional_publisher to support plugin changes
    
    Updated conditional_publisher to support the new XML format
     in the latest versions (>= 0.13) of the Flexible Publish plugin.
    Ensured legacy format is still supported for plugin versions < 0.13.
    Added support for multiple actions per condition with version >= 0.13.
    Added unit test for multiple actions per condition
    
    Change-Id: I4a91d2836ccd079d059b961a7f0b177a17df4093
    Added flexible publish support
    
    Added support for the Flexible Publish plugin to the JJB publishers.
    Updated documentation and unit tests as well.
    
    Change-Id: Id72a4b01f451ae2613b24347afb6493bf7641cd1
    Add support for Test Stability with Junit
    
    Adds test-stability option to junit test result
    publisher, requires Test stability plugin to be installed.
    
    https://wiki.jenkins-ci.org/display/JENKINS/Test+stability+plugin
    
    Change-Id: Idd7ef1bdeaf9e6fd8881bab5729950dc717ce9f3
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Add fingerprint parameter to archive publisher.
    
    In Jenkins 1.575 the option to fingerprint build artefacts has been
    moved from Fingerprinter to ArtifactArchiver.
    (https://github.com/jenkinsci/jenkins/commit/f43a450)
    
    This patch reflects the change by adding an optional fingerprint
    parameter to the archive publisher. The parameter recordBuildArtifacts
    in the fingerprint publisher remains unchanged for backward
    compatibility.
    
    Change-Id: I231fdc38eb8343d646f24e7a31cafd29534c9fc8
    Implements: Archive publisher allow-empty setting.
    
    The archive publisher did not allow setting the allowEmptyArchive setting in the YAML.
    This change adds configuring the setting if it is defined in the YAML file. If the value
    is 'true' then it is set, else it is 'false'. The default Jenkins behavior is 'false' disallowing
    builds to pass without storing the archived data.
    
    Updated the doc string to add that there is a default value (false) which is also the default Jenkins behavior.
    Cleand up the value assignment, and typed it to a str().
    
    fixed pep8 violation
    
    Addresses patchset 3 request to update the doc string to use the test directly.
    Would like to have more discussion around the second point in patchset 3 around having
    the new code add a line of XML.
    
    Change-Id: I5e0c9ed7e8ea669a8d0e8f267ebb02d5f0b6ae73
    Cleaned up fixtures. Removing vim editor settings
    
    Change-Id: I210c1629c513d5e1dfd2b2a16cd7e8361953fc0f
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    updated conditional_publisher to support plugin changes
    
    Updated conditional_publisher to support the new XML format
     in the latest versions (>= 0.13) of the Flexible Publish plugin.
    Ensured legacy format is still supported for plugin versions < 0.13.
    Added support for multiple actions per condition with version >= 0.13.
    Added unit test for multiple actions per condition
    
    Change-Id: I4a91d2836ccd079d059b961a7f0b177a17df4093
    support execute-on for postbuildscript
    
    Change-Id: Iccf1fc6bc98f0e78cafc6184b64844be6eba19b8
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Added clone-workspace publisher
    
    Change-Id: I39c71d69b100206e09164f0b765bda14d6f428c6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    valgrind publisher: Add parameters to fail build
    
    Add optional parameters fail-no-reports and fail-invalid-reports that
    set the build status to failure if no valgrind reports are available
    or if the reports are malformed.
    
    This parameters have been added to the Jenkins Valgrind Plugin
    version 0.21.
    
    Change-Id: I558802896f24a596f07957ab58a83fcaf6054093
    Add support for the Jenkins Valgrind publisher plugin.
    
    Change-Id: Id5d460a8432b2ab875e8e7063f459ef15b942284
    Remove nonexistent servername and cleanup build publisher
    
    Trying out build-publisher I found server name was not required nor ever needed in the output.
    
    I've removed the legacy code and added proper formatted documentation and renamed and fixed the fixture test.
    
    Change-Id: I66a0e7ae0a694564177aa9cddbc95b2cbcd31891
    Cleaned up fixtures. Removing vim editor settings
    
    Change-Id: I210c1629c513d5e1dfd2b2a16cd7e8361953fc0f
    use jjb tests as the examples
    
    So during my reviews of jjb code I've noticed that many of the examples in
    the documentation are either not correct or are out of date.  So instead of
    documenting examples in the source I think it would be preferable to
    have a test for every module and use that test as the example for the
    module.  We run the tests continuously so this will keep the examples
    working and up to date.
    
    This patch starts with the scp module.
    
    Change-Id: I161fa22359f8ecb2ae9e511d204c1fa0bce48581
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Added clone-workspace publisher
    
    Change-Id: I39c71d69b100206e09164f0b765bda14d6f428c6
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    maven-deploy: don't require id
    
    The id element is eg. not needed for file deployment so don't make it
    mandatory.
    
    Change-Id: Ide83b18cbab6010033c3bd8e8264595d1d2d5fa2
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Add examples for 'predefined-parameters'
    
    There was no example how to make multiline 'predefined-parameters'.
    
    Change-Id: Ic287cd37ff928e34d80104085a3aca6f5d34865a
    Closes-Bug: 1381079
    Add parameter to trigger_parameterized_builds
    
    For supporting ability to run downstream project on the same node
    parameter 'NodeParameters' should be present in output xml.
    Adding same parameter to 'trigger_parameterized_builds' publisher.
    
    Change-Id: I7769507d8da138fe0944e1b5bc24ab595e787587
    Add support for the NodeLabel Parameter plugin
    
    Add support for using the NodeLabel Parameter plugin to
    specify which node should run a job when triggering a
    parameterized build.
    
    Requires the Jenkins NodeLabel Parameter Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/NodeLabel+Parameter+Plugin
    
    Change-Id: Ie947a2a3069b477419db7eaa35307088712467e3
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    updated conditional_publisher to support plugin changes
    
    Updated conditional_publisher to support the new XML format
     in the latest versions (>= 0.13) of the Flexible Publish plugin.
    Ensured legacy format is still supported for plugin versions < 0.13.
    Added support for multiple actions per condition with version >= 0.13.
    Added unit test for multiple actions per condition
    
    Change-Id: I4a91d2836ccd079d059b961a7f0b177a17df4093
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    maven-deploy: don't require id
    
    The id element is eg. not needed for file deployment so don't make it
    mandatory.
    
    Change-Id: Ide83b18cbab6010033c3bd8e8264595d1d2d5fa2
    Support Fitnesse results publisher
    
    Change-Id: Ide61f53df1ff8b9bd4d4c67abcad7b485387f44e
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Description Setter Plugin support added
    
    This plugin sets the description for each build,
    based upon a RegEx test of the build log file.
    
    Change-Id: If3c8b3ec6e9c23ffe74a5e857618267936a0e989
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Stash Notifier
    
    Change-Id: I1e3e95a152de116df62b9124a50e845bc026f608
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    adds safe-output to email-ext in publishers.py
    
    adds support for Save to Workspace option for email-ext plugin
    
    Change-Id: I9fa2ed87a6d715ec8f56def053f486e8bf628b13
    add presend-script to email-ext
    
    Change-Id: I388dd2f5ce8aa6ac323f73409dec1003a3f423cb
    Adding second failure option to the email-ext module
    
    Change-Id: I288289e8227c3408f40f0e8272573d20e022ae70
    Added send-to options support to email-ext plugin
    
    - added an ability to select the recipients from the predefined groups,
      such as 'Committers', 'Requester' and 'Culprits'
    - added tests for the whole email-ext plugin
    
    Change-Id: I3b03aa1f57f29352121b8501d1fa9fe77383f3b7
    Support the new Always trigger type.
    
    Support for this trigger was added in email-ext v2.36.
    
    See https://issues.jenkins-ci.org/browse/JENKINS-20013 for more
    details.
    
    Change-Id: Ibfb3ec96218fc7133439e17853638593fed41a44
    Content-Type can now be set for email-ext publisher
    
    The email-ext publisher was always sending email using the default
    content type which is server wide.  This tiny patch let us overwrite the
    content-type on a job basis.
    
    The YAML possible values are 'html' or 'text' to force the content-type
    to one of the two modes.
    
    Change-Id: Id66bc3369332c389dfb6318113392694a4f98aad
    Add attachment pattern expression to email-ext.
    
    Change-Id: I38f58a081bdd591bc13cfff177971f7ff036ad23
    Test for email-ext publisher
    
    Also add the test fixture as an example in the documentation.
    
    Change-Id: Iff253e52f9aa900bb61c6f621844bab4d8e696f2
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Github notifier
    
    Change-Id: I79c7847aa8df4dd4f9f76567c461d016aa00c6c1
    Added support for Emotional Jenkins
    
    Change-Id: Icaac9cc07b64384b3d65234bf9c603ef55f0b104
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Ruby metrics plugin support added
    
    Rcov plugin parses rcov html report files and
    shows it in Jenkins with a trend graph.
    
    Change-Id: I1f1d177c8681e68e5c12b520e263648842c701d0
    valgrind publisher: Add parameters to fail build
    
    Add optional parameters fail-no-reports and fail-invalid-reports that
    set the build status to failure if no valgrind reports are available
    or if the reports are malformed.
    
    This parameters have been added to the Jenkins Valgrind Plugin
    version 0.21.
    
    Change-Id: I558802896f24a596f07957ab58a83fcaf6054093
    Add support for the Jenkins Valgrind publisher plugin.
    
    Change-Id: Id5d460a8432b2ab875e8e7063f459ef15b942284
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Description Setter Plugin support added
    
    This plugin sets the description for each build,
    based upon a RegEx test of the build log file.
    
    Change-Id: If3c8b3ec6e9c23ffe74a5e857618267936a0e989
    adds safe-output to email-ext in publishers.py
    
    adds support for Save to Workspace option for email-ext plugin
    
    Change-Id: I9fa2ed87a6d715ec8f56def053f486e8bf628b13
    Change default Reply-To header to $DEFAULT_REPLYTO.
    
    See also https://issues.jenkins-ci.org/browse/JENKINS-17733.
    
    Change-Id: I97c2f2824a8fa74f6387301d29594c59cd73a45a
    Closes-Bug: 1290382
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    The email publisher needs a list of recipients
    
    The email publisher will throw a NullPointerException of the recipients
    xml element does not exist, so if there are no recipients then set the
    value to an empty string in order to get an empty xml element in the
    config.
    
    Also add tests for the email publisher.
    
    story: 2000015
    Change-Id: I7b4fdd4904eea1918ae80f5db6c7b0aaedbaef99
    ArtifactDeployer Plugin support added
    
    This plugin makes it possible to copy artifacts to remote locations.
    
    Change-Id: I39fbee7b397efb8560f340f0f02b51bf6ebcfd74
    Add support for Test Stability with Junit
    
    Adds test-stability option to junit test result
    publisher, requires Test stability plugin to be installed.
    
    https://wiki.jenkins-ci.org/display/JENKINS/Test+stability+plugin
    
    Change-Id: Idd7ef1bdeaf9e6fd8881bab5729950dc717ce9f3
    Add fingerprint parameter to archive publisher.
    
    In Jenkins 1.575 the option to fingerprint build artefacts has been
    moved from Fingerprinter to ArtifactArchiver.
    (https://github.com/jenkinsci/jenkins/commit/f43a450)
    
    This patch reflects the change by adding an optional fingerprint
    parameter to the archive publisher. The parameter recordBuildArtifacts
    in the fingerprint publisher remains unchanged for backward
    compatibility.
    
    Change-Id: I231fdc38eb8343d646f24e7a31cafd29534c9fc8
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Implements: Archive publisher allow-empty setting.
    
    The archive publisher did not allow setting the allowEmptyArchive setting in the YAML.
    This change adds configuring the setting if it is defined in the YAML file. If the value
    is 'true' then it is set, else it is 'false'. The default Jenkins behavior is 'false' disallowing
    builds to pass without storing the archived data.
    
    Updated the doc string to add that there is a default value (false) which is also the default Jenkins behavior.
    Cleand up the value assignment, and typed it to a str().
    
    fixed pep8 violation
    
    Addresses patchset 3 request to update the doc string to use the test directly.
    Would like to have more discussion around the second point in patchset 3 around having
    the new code add a line of XML.
    
    Change-Id: I5e0c9ed7e8ea669a8d0e8f267ebb02d5f0b6ae73
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Added support for CI Game plugin
    
    Change-Id: I27497e8cd7d2c5c85de33a81f0bc6871bd1f1c00
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Adding coverage.py publisher for ShiningPanda Plugin
    
    This publisher allows publishing coverage.py HTML
    reports using ShiningPanda Plugin
    https://wiki.jenkins-ci.org/display/JENKINS/ShiningPanda+Plugin
    
    Change-Id: I3040806a6cd49d7cfc423a39288729724f1ca223
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Add support for the Jenkins Doxygen publisher plugin.
    
    Change-Id: I0e8f9ee13b7e6fb22e1a5e4bb613b44ae6927e86
    Add support for the Jenkins Clang Scan-Build publisher plugin.
    
    Change-Id: Ib892c790c370301e3e7ba04a83a9cfe38745c3ec
    Added support for Rich Text Publisher Plugin
    
    This commit adds support for the Rich Text Publisher Plugin avaiable at
    https://wiki.jenkins-ci.org/display/JENKINS/Rich+Text+Publisher+Plugin
    
    Change-Id: Id3bf21dfe8ae5a6392fb15334461b0ce4a95e1ae
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    Added support for CI Game plugin
    
    Change-Id: I27497e8cd7d2c5c85de33a81f0bc6871bd1f1c00
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Github notifier
    
    Change-Id: I79c7847aa8df4dd4f9f76567c461d016aa00c6c1
    Added support for Emotional Jenkins
    
    Change-Id: Icaac9cc07b64384b3d65234bf9c603ef55f0b104
    Add support for the S3 Publisher plugin
    
    Change-Id: Ia918596276e49d5876bc232fce760e270a829335
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Remove nonexistent servername and cleanup build publisher
    
    Trying out build-publisher I found server name was not required nor ever needed in the output.
    
    I've removed the legacy code and added proper formatted documentation and renamed and fixed the fixture test.
    
    Change-Id: I66a0e7ae0a694564177aa9cddbc95b2cbcd31891
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add build-publisher to jenkins-job-builder
    
    Added new build-publisher following guidelines:
    https://wiki.jenkins-ci.org/display/JENKINS/Build+Publisher+Plugin
    Add to the list of publishers, implement module, provide tests
    
    Change-Id: I7c130f4375cffc2a5e9acea6b417edc3e12886e7
    Closes-Bug: #1234959
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Add support for the Jenkins Doxygen publisher plugin.
    
    Change-Id: I0e8f9ee13b7e6fb22e1a5e4bb613b44ae6927e86
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    deprecate postbuildscript onsuccess and onfailure parameter names
    
    The postbuildscript module's 'onsuccess' and 'onfailure' parameters
    names were slightly confusing.  This change deprecates those parameter
    names and replaces them with less confusing names.  The new names
    are more closely matched to the ones that get added to the xml.
    
    Change-Id: Ifb76129852816aa3f8ee6bb7f609a2344ccc7a69
    Retain user specified order of post build scripts
    
    Avoid imposing hardcoded order of the scripts within the module and
    instead favour the order of the input data. Combined with use of ordered
    dicts for yaml, this ensures that users may control the order of the
    various steps to use with the post build scripts from yaml.
    
    Change-Id: Icf540a53cb6f1b13f80f09d9103610aee10d3861
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Remove nonexistent servername and cleanup build publisher
    
    Trying out build-publisher I found server name was not required nor ever needed in the output.
    
    I've removed the legacy code and added proper formatted documentation and renamed and fixed the fixture test.
    
    Change-Id: I66a0e7ae0a694564177aa9cddbc95b2cbcd31891
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Jenkins plugin Blame upstream committers
    
    Change-Id: Iefbca697ac93176c9e132e7a0dc04f2b0a7b09f6
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Added clone-workspace publisher
    
    Change-Id: I39c71d69b100206e09164f0b765bda14d6f428c6
    Support Fitnesse results publisher
    
    Change-Id: Ide61f53df1ff8b9bd4d4c67abcad7b485387f44e
    Added support for CI Game plugin
    
    Change-Id: I27497e8cd7d2c5c85de33a81f0bc6871bd1f1c00
    Add support for the S3 Publisher plugin
    
    Change-Id: Ia918596276e49d5876bc232fce760e270a829335
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Added support for CI Game plugin
    
    Change-Id: I27497e8cd7d2c5c85de33a81f0bc6871bd1f1c00
    support execute-on for postbuildscript
    
    Change-Id: Iccf1fc6bc98f0e78cafc6184b64844be6eba19b8
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Adds claim-build support junit publisher
    
    Requires Claim Plugin.
    https://wiki.jenkins-ci.org/display/JENKINS/Claim+plugin
    
    Change-Id: I8daf721f125d9cd89f0aa005f396cf67405229d2
    Closes-Bug: #1389301
    Add support for Test Stability with Junit
    
    Adds test-stability option to junit test result
    publisher, requires Test stability plugin to be installed.
    
    https://wiki.jenkins-ci.org/display/JENKINS/Test+stability+plugin
    
    Change-Id: Idd7ef1bdeaf9e6fd8881bab5729950dc717ce9f3
    ArtifactDeployer Plugin support added
    
    This plugin makes it possible to copy artifacts to remote locations.
    
    Change-Id: I39fbee7b397efb8560f340f0f02b51bf6ebcfd74
    Added flexible publish support
    
    Added support for the Flexible Publish plugin to the JJB publishers.
    Updated documentation and unit tests as well.
    
    Change-Id: Id72a4b01f451ae2613b24347afb6493bf7641cd1
    Added support for Stash Notifier
    
    Change-Id: I1e3e95a152de116df62b9124a50e845bc026f608
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Add support for the NodeLabel Parameter plugin
    
    Add support for using the NodeLabel Parameter plugin to
    specify which node should run a job when triggering a
    parameterized build.
    
    Requires the Jenkins NodeLabel Parameter Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/NodeLabel+Parameter+Plugin
    
    Change-Id: Ie947a2a3069b477419db7eaa35307088712467e3
    Fix typo in ircbot's default matrix-notifier.
    
    * Add a test fixture for the ircbot plugin that shows the bug.
    * Fix the bug.
    
    Update: Extract original example from the documentation as
    ircbot001.yaml and include in the doc via literalinclude.  Add a
    second test case, ircbot002.yaml to demonstrate the bug fixed by this
    patch.
    
    Closes-Bug: #1290376
    Change-Id: Ifcb96a6dab5ee923cee7d3e71bfe518f1e3d0ebc
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add support for parameters in pipeline publisher.
    
    Change-Id: Ie36d7c6a9daab17adf93586f79b92be0ed267c35
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Description Setter Plugin support added
    
    This plugin sets the description for each build,
    based upon a RegEx test of the build log file.
    
    Change-Id: If3c8b3ec6e9c23ffe74a5e857618267936a0e989
    adds safe-output to email-ext in publishers.py
    
    adds support for Save to Workspace option for email-ext plugin
    
    Change-Id: I9fa2ed87a6d715ec8f56def053f486e8bf628b13
    add presend-script to email-ext
    
    Change-Id: I388dd2f5ce8aa6ac323f73409dec1003a3f423cb
    Adding second failure option to the email-ext module
    
    Change-Id: I288289e8227c3408f40f0e8272573d20e022ae70
    Added send-to options support to email-ext plugin
    
    - added an ability to select the recipients from the predefined groups,
      such as 'Committers', 'Requester' and 'Culprits'
    - added tests for the whole email-ext plugin
    
    Change-Id: I3b03aa1f57f29352121b8501d1fa9fe77383f3b7
    Support the new Always trigger type.
    
    Support for this trigger was added in email-ext v2.36.
    
    See https://issues.jenkins-ci.org/browse/JENKINS-20013 for more
    details.
    
    Change-Id: Ibfb3ec96218fc7133439e17853638593fed41a44
    Content-Type can now be set for email-ext publisher
    
    The email-ext publisher was always sending email using the default
    content type which is server wide.  This tiny patch let us overwrite the
    content-type on a job basis.
    
    The YAML possible values are 'html' or 'text' to force the content-type
    to one of the two modes.
    
    Change-Id: Id66bc3369332c389dfb6318113392694a4f98aad
    Add attachment pattern expression to email-ext.
    
    Change-Id: I38f58a081bdd591bc13cfff177971f7ff036ad23
    Test for email-ext publisher
    
    Also add the test fixture as an example in the documentation.
    
    Change-Id: Iff253e52f9aa900bb61c6f621844bab4d8e696f2
    xUnit publisher: add option to skip if there are no tests files
    
    This is valid for each defined xUnit type publisher on the job. Default
    is false.
    
    Change-Id: Idff3c8ba6a4e4291ec483b2eb4a999dcbeea7291
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    xUnit publisher: add test-time-margin extra config option
    
    From the plugin advanced configuration:
    
        "Give the report time margin value (default to 3000) in ms, before
         to fail if not new (unless the option 'Fail the build if test
         results were not updated this run' is checked)."
    
    The configuration defaults to 3000 if no value is passed.
    
    Change-Id: I372d9cc100ecd824516bac864daac0af41e367f5
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Ruby metrics plugin support added
    
    Rcov plugin parses rcov html report files and
    shows it in Jenkins with a trend graph.
    
    Change-Id: I1f1d177c8681e68e5c12b520e263648842c701d0
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Fix typo in ircbot's default matrix-notifier.
    
    * Add a test fixture for the ircbot plugin that shows the bug.
    * Fix the bug.
    
    Update: Extract original example from the documentation as
    ircbot001.yaml and include in the doc via literalinclude.  Add a
    second test case, ircbot002.yaml to demonstrate the bug fixed by this
    patch.
    
    Closes-Bug: #1290376
    Change-Id: Ifcb96a6dab5ee923cee7d3e71bfe518f1e3d0ebc
    Added flexible publish support
    
    Added support for the Flexible Publish plugin to the JJB publishers.
    Updated documentation and unit tests as well.
    
    Change-Id: Id72a4b01f451ae2613b24347afb6493bf7641cd1
    Add 'Build Flow Test Aggregator' publisher
    
    Add a new publisher for aggregating test results of downstream jobs in a
    Build Flow project.
    https://wiki.jenkins-ci.org/display/JENKINS/Build+Flow+Test+Aggregator+Plugin
    
    Change-Id: I88e74fe279f1924fcac010cc8d7a8850fc231269
    deprecate postbuildscript onsuccess and onfailure parameter names
    
    The postbuildscript module's 'onsuccess' and 'onfailure' parameters
    names were slightly confusing.  This change deprecates those parameter
    names and replaces them with less confusing names.  The new names
    are more closely matched to the ones that get added to the xml.
    
    Change-Id: Ifb76129852816aa3f8ee6bb7f609a2344ccc7a69
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Remove nonexistent servername and cleanup build publisher
    
    Trying out build-publisher I found server name was not required nor ever needed in the output.
    
    I've removed the legacy code and added proper formatted documentation and renamed and fixed the fixture test.
    
    Change-Id: I66a0e7ae0a694564177aa9cddbc95b2cbcd31891
    Add support for the NodeLabel Parameter plugin
    
    Add support for using the NodeLabel Parameter plugin to
    specify which node should run a job when triggering a
    parameterized build.
    
    Requires the Jenkins NodeLabel Parameter Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/NodeLabel+Parameter+Plugin
    
    Change-Id: Ie947a2a3069b477419db7eaa35307088712467e3
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add publisher for Git Publisher support
    
    This change adds functionality to configure the Git Publisher
    post-build action in Jenkins jobs. Git Publisher is used to push
    results of a build back to one or more Git repositories.
    
    Change-Id: I275762934aa12c5c859db7c96003af8c6824b744
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Change default Reply-To header to $DEFAULT_REPLYTO.
    
    See also https://issues.jenkins-ci.org/browse/JENKINS-17733.
    
    Change-Id: I97c2f2824a8fa74f6387301d29594c59cd73a45a
    Closes-Bug: 1290382
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Added support for Emotional Jenkins
    
    Change-Id: Icaac9cc07b64384b3d65234bf9c603ef55f0b104
    Fix typo in ircbot's default matrix-notifier.
    
    * Add a test fixture for the ircbot plugin that shows the bug.
    * Fix the bug.
    
    Update: Extract original example from the documentation as
    ircbot001.yaml and include in the doc via literalinclude.  Add a
    second test case, ircbot002.yaml to demonstrate the bug fixed by this
    patch.
    
    Closes-Bug: #1290376
    Change-Id: Ifcb96a6dab5ee923cee7d3e71bfe518f1e3d0ebc
    updated conditional_publisher to support plugin changes
    
    Updated conditional_publisher to support the new XML format
     in the latest versions (>= 0.13) of the Flexible Publish plugin.
    Ensured legacy format is still supported for plugin versions < 0.13.
    Added support for multiple actions per condition with version >= 0.13.
    Added unit test for multiple actions per condition
    
    Change-Id: I4a91d2836ccd079d059b961a7f0b177a17df4093
    Cleaned up fixtures. Removing vim editor settings
    
    Change-Id: I210c1629c513d5e1dfd2b2a16cd7e8361953fc0f
    Tests for publishers
    
    I am trying to build up a very basic testing framework so we can tests
    our publishers. The idea is to provide a YAML input file and expected
    XML output, run the parser on the YAML file and compares its output with
    the fixture XML.
    
    That test suite should speed up development of new publishers.
    
    TestCaseModulePublisher is declared inside a function so that unittest
    discovery does not consider it a usable test directly. load_test is
    responsible for instantiating the test suite.
    
    Change-Id: If3260113eb1337ac47c3883b11c600e5a595dae3
    [fabre.arnaud@gmail.com: fixed some runtime errors]
    Signed-off-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Add support for parameters in pipeline publisher.
    
    Change-Id: Ie36d7c6a9daab17adf93586f79b92be0ed267c35
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Cleaned up fixtures. Removing vim editor settings
    
    Change-Id: I210c1629c513d5e1dfd2b2a16cd7e8361953fc0f
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Added support for Rich Text Publisher Plugin
    
    This commit adds support for the Rich Text Publisher Plugin avaiable at
    https://wiki.jenkins-ci.org/display/JENKINS/Rich+Text+Publisher+Plugin
    
    Change-Id: Id3bf21dfe8ae5a6392fb15334461b0ce4a95e1ae
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    Description Setter Plugin support added
    
    This plugin sets the description for each build,
    based upon a RegEx test of the build log file.
    
    Change-Id: If3c8b3ec6e9c23ffe74a5e857618267936a0e989
    Added support for Rich Text Publisher Plugin
    
    This commit adds support for the Rich Text Publisher Plugin avaiable at
    https://wiki.jenkins-ci.org/display/JENKINS/Rich+Text+Publisher+Plugin
    
    Change-Id: Id3bf21dfe8ae5a6392fb15334461b0ce4a95e1ae
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    Add support for the Jenkins Clang Scan-Build publisher plugin.
    
    Change-Id: Ib892c790c370301e3e7ba04a83a9cfe38745c3ec
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Support excludes when recursively processing paths
    
    Include an additional option to exclude some paths/patterns from being
    included in the search to allow a complex hierarchy of directories to be
    referenced under a single path. Provide support to allow the user to
    specify patterns, relative and/or absolute path references.
    
    Implements support for excluding based on absolute path, relative path
    and based on simple shell globing patterns.
    
    Change-Id: I236b364c268fd2bf5511a2c6d9a1c87914f3b086
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Enable hipchat section into sample file
    
    Current sample file lacks section about hipchat. Add section
    with dummy token to show hipchat usage.
    
    Added that into default config file for cmd.py, that is the
    one used for testing. This will allow to properly test
    jobs with hipchat module enabled.
    
    Closes-Bug: #1366063
    
    Change-Id: If511486a69113a4b4300cdb3602154ef261bc18a
    Added recursive option
    
    Now you can organize your yaml files into subdirectories and apply them
    all just passing --recursive option or adding the proper configuration
    file option.
    
    In adding support for multiple paths the Builder.load_files method was
    reworked to be backward compatible with individual paths or file-like
    objects, while also now handling being passed a list of paths or
    file-like objects to be parsed.
    
    Change-Id: I126751e347622716c592c6ed1a57b8acb7bf79a4
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Enable ignore_cache flag on jenkins_jobs.ini
    
    Parses jenkins_jobs.ini to look for an ignore_cache flag.
    If ignore_cache command line option is sent, it takes priority
    over the jenkins_jobs.ini configuration.
    
    Change-Id: I88f1ce1aa0d3e0ad25d592d3ca44a022ec9249c3
    Closes-Bug: #1193444
    Add sample jenkins_jobs.ini configuration file
    
    Change-Id: I8fb296b1b8b17261c46df1eb062ec52d2559307b
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/15035
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    doc update: add references to yaml local include files
    
    Change-Id: I3e30d4f988ae8d9506d6975d1f8aa913eab1abea
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Adding some exception classes
    
    Change-Id: I6835f4d20ef1e1d934f60bc096e79b63079f7e92
    Reviewed-on: https://review.openstack.org/13270
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Get verison info for jenkins-job-builder
    
    Old setuptools/distribute VersionInfo() needs the dist name not the
    package name to get the correct version info. Switch to using
    'jenkins-job-builder' which is the dist name instead of using
    'jenkins_jobs' which is the package name so that we get the right data
    when processing versions on old setuptools.
    
    Closes-Bug: #1384238
    Change-Id: I94a6bc6a5580ea8861eb603e5dfab2825475b45f
    Doc: Use VersionInfo from pbr and remove openstack common modules
    
    The setup was migrated to pbr in d2ff8c0, but the documentation
    build is still using VersionInfo from a bundled version of the
    openstack common modules.
    
    Migrate the documentation build to use VersionInfo from pbr, and
    remove the no-longer-used common modules.
    
    Change-Id: I7dcd5b0328613c7c72efa2df8c26d9c9b1d47c0f
    Add openstack-common support for setup and version
    
    With help from clarkb in #openstack-infra and openstack-ci/gerritbot,
    I've manage to update our versioning to be inline with other openstack
    projects. This is another step towards creating our OS packaging.
    
    Change-Id: If3f44b939ee0a3c9c4dfa1d9f83ae14a8285ba5f
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/15335
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Fix typo in format string
    
    Change-Id: I79ed5033a3673c56973eb6908e5969ba33258aa6
    Check external documentation links are valid
    
    Use sphinx's linkcheck builder to validate any external links.
    
    Fix the broken links by converting the example link to a code segment
    and correcting the link referencing the cgit mirror for the git clone
    instructions.
    
    Change-Id: Ic6236e250b7af5c7c000af1e67fb69dd720ad6d8
    Fix bug in template job yaml expansion.
    
    This bug occurs if one attempts to set a list object on a job template for a
    parameter that does not occur in the job name. If the parameter is not in the
    template name then there is no reason to count it among the dimensions used to
    fanout that template into multiple instances and in fact this would actually
    lead to confusing duplicate job error messages.
    
    Change-Id: I80f026d3bbfbac96c6fc7c01c1c916cf85e1bf10
    Lazy load plugin list
    
    This will allow us to wait for jenkins to come up properly before getting
    this list. Otherwise we'd have to duplicate the error handling logic.
    
    Change-Id: I663bf32e53e917284d93422526078b4dcf76e9c1
    Use open() instead of file()
    
    The later isn't supported in Python3
    
    Change-Id: I44e9e7d21d59a82648a5a78a0ebcae8f0317bb6f
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    Provide info on number of jobs processed for test, update and delete-all
    
    Change-Id: If49a30d74ad352ccf3a513c75781d55a62a688ef
    Interpolate params inside of params.
    
    This patch enables parameters to be expanded inside of other parameters. For
    instance:
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_foo'
        builders:
            - shell: 'echo "I am foo job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_bar'
        builders:
            - shell: 'echo "I am bar job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_baz'
        builders:
            - shell: 'echo "I am baz job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-group:
        name: 'pipeline2'
        pipeline_type: 'p2'
        jobs:
            - '{value-stream}_{pipeline_type}_foo':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_baz'
            - '{value-stream}_{pipeline_type}_baz':
    
    - job-group:
        name: 'pipeline1'
        pipeline_type: 'p1'
        jobs:
            - '{value-stream}_{pipeline_type}_baz':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_foo'
            - '{value-stream}_{pipeline_type}_foo':
    
    - project:
        name: derp
        jobs:
            - 'pipeline1':
                value-stream:
                    - experimental
                    - staging
            - 'pipeline2':
                value-stream:
                    - experimental
                    - staging
                    - production
    
    Prior to this commit, the setup above was not possible because the `downstream`
    defined as parameters to be passed to job templates in the job groups would not
    have the `value-stream` and `pipeline-type` parameters interpolated. The
    trigger-parameterized-jobs `project` value for each of the 15 jobs created with
    this setup would all look something like `{value-stream}_{pipeline_type}_foo`
    which does not actually point to any particular job.
    
    The only way I was previously able to specify a downstream job with parameters
    was to put the `{value-stream}_{pipeline_type}_foo` string directly in the
    job-template which meant that job templates were statically bound to each
    other--I had no reasonable way to re-order or easily select subsets of the jobs
    at the job-group or project level as can be seen here in the difference between
    `pipeline1` and `pipeline2`.
    
    Change-Id: I26dfb112cd4842c40c3d561f8de89f7654a07b8f
    Skip duplicate input files
    
    Complex directory structures may include symlinks to common global
    settings files containing macros/templates. This allows running of JJB
    against sub-directories as well from the top level directory.
    
    Resolve the realpath to the input files to avoid reading the same file
    contents more than once and creating duplicate yaml definitions that
    will trigger errors.
    
    Change-Id: I59b7125539693f012caff0fb6f3c448fecc0dd25
    Report source of duplicate entries where possible
    
    Change-Id: Iaf627c9e3042af3b11110a9ad8fac89653d17a2f
    report exactly which jobs will be deleted.
    
    Using the glob parameters option to delete jobs, like so..
    jenkins-jobs --conf jenkins_jobs.ini delete --path defs/cmd-002.yaml *bar*
    
    JJB would report the following:
    
      INFO:root:Deleting jobs in [*bar*]
    
    This change provides better info on exactly which jobs will get deleted.
    Now the log will report:
    
      INFO:jenkins_jobs.builder:Removing jenkins jobs: bar001, bar002
    
    Change-Id: Iabac8104115860f2fb4f4cc0a4a10101559d470c
    Write cache to file on CacheStorage object delete
    
    Use a destructor to write out the cache to file when the cache object
    object goes out of scope, which will typically be on exit.
    
    This ensures that the CacheStorage class behaviour is fully
    encapsulated and doesn't require a caller to be aware to ensure the
    cache is saved when finished. Although it may still do so.
    
    Take care to preserve a references to any required modules since python
    does not guarantee that any global modules will not be unloaded before
    the destructor is called.
    
    Change-Id: I2b066ceff5e23a725132569df85c004cd58b367a
    Print context when key fails to be formatted
    
    Print the parameter dict when a template fails to format a dictionary
    key.  This change also pretty prints the parameter dict for convenience.
    
    Change-Id: Ib0918272126b5c04f713b2e9cd391aa2a36615c7
    Start libification of jjb
    
    Allow the expansion of the jjb template language yaml into a list before
    generating xml. This will allow others to consume the template parts of
    jjb without forcing them to be tied to xml.
    
    Change-Id: Ifd99151f8246eb817194adc2180189f739ccf742
    Fix again whitespaces with python 2.7.0-2.7.3
    
    We had a patch to fix XML whitespaces with python early than 2.7.3 at (
    https://review.openstack.org/#/c/71266/ ). The function was later
    changed to < 2.7.0 with:
    https://review.openstack.org/#/c/93198/1/jenkins_jobs/builder.py
    
    That apparently restore the issue with python < 2.7.3. Bump the version
    check to its previous value.
    
    Change-Id: Ib6c2bdb9f8b82c1770c44a74dfd278bf8b3ea466
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    ModuleRegistry now cache entry points group
    
    Cache the group entry point instead of each entry individually.
    
    When I originally introduced entry point caching (4deef9ff) I used to
    lookup the name and cache it.  Thus, for we ended up doing a new lookup
    for each entry point in an entry point group.
    
    Instead, on first lookup, cache the whole group so further entry point
    lookup are cache hits.
    
    Change-Id: Ie93ec793bb18a2dadebe736db4c4d33171ceda27
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Handle utf8 in JJB
    
    JJB didn't actually handle unicode data very well for a couple reasons.
    First the local yaml loader was loading files into yaml as strings
    instead of unicode which we should just go ahead and do because yaml's
    built int loader loads utf-8 by default (and we don't override the
    default). Second we need to do parameter substitution on unicode and
    regular strings so change the substitution typecheck to use basestring
    instead of str. Finally we need to use UTF-8 as the encoding when
    emitting XML so do that.
    
    Add tests to actually test this in the yamlparser tests. The addition of
    these new tests comes with a little bit of cleanup in the test classes
    to make sure we load unicode files as utf8 more consistently.
    
    Change-Id: I2169e19aae2cdc7ddbd1e7217ef7584c786a039a
    Fixes-bug: 1361090
    Added recursive option
    
    Now you can organize your yaml files into subdirectories and apply them
    all just passing --recursive option or adding the proper configuration
    file option.
    
    In adding support for multiple paths the Builder.load_files method was
    reworked to be backward compatible with individual paths or file-like
    objects, while also now handling being passed a list of paths or
    file-like objects to be parsed.
    
    Change-Id: I126751e347622716c592c6ed1a57b8acb7bf79a4
    Apply defaults to job-templates parameters
    
    I had the use case of a lot of projects sharing the same job template
    that uses a lot of variables.  That requires each project to define all
    the variables even if they are mostly identical.
    
    This patch propose to define varialbes as 'defaults' and have them
    applied in the job-template magically (oneline diffs always have that
    feeling to me).
    
    So instead of:
    
    - project:
        name: project1
        arch: amd64
        builder: debuild
        lintian: true
        jobs:
         - '{name}-build-{arch}'
    
    And so on ...
    
    I can just:
    
    - defaults:
        name: sanebuild
    
    - project:
        name: project1
        defaults: sanebuild
        jobs:
         - '{name}-build-{arch}'
    
    And override the arch as needed either in the project or by passing it
    to the job.
    
    Without this patch, the provided yamlparser fixture
    template_honor_defaults.yaml would raise:
    
        arch parameter missing to format echo Build arch {arch}.
        Given: {'': '', 'jobs': ['build-{arch}'], 'name': 'project-name'}
    
    Change-Id: Ida1e27eb47356d9cae42175743bd2fd52eb9d869
    Revert "Allow using template variables in "defaults" field."
    
    This reverts commit 70ed22362a9c13ea9f3165e5747dcca281ad439c.
    
    I knew I should have tested the patch with my own templates. Doing so I
    discovered a nasty regression:
    
    The defaults can make use of variables passed by the project. By moving
    applyDEfaults to be called after deep_format is performed on job
    templates, any substitutioncontained withing defaults is no longer
    correctly replaced by project parameters.
    
    Change-Id: I69ffb3e28093af6db62962786d9275bf3ba4e115
    Allow using template variables in "defaults" field.
    
    Change-Id: I876ab7fa61258e84b00a67325aeb9234aff8fa62
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Make 'keep_descriptions' fully optional
    
    Avoid the need to set the keep_descriptions option under the job_builder
    section if providing any configuration options.
    
    Change-Id: I0436a36e9f5ad7ff68ff5b92868ca1b13d019f11
    Fix typo: sigleton => singleton
    
    Change-Id: I7ef7b73b22d722663b4fa5dcd0d79db2a4ca24e4
    Support variable-specific substitutions in templates.
    
    Change-Id: I6af84f48eaa4ee44c8d8babddd8d10a1e1095101
    Patch writexml for non standard XML DOM implementations
    
    PyXML will replace the default DOM implementation and as a result, it
    will reintroduce the broken writexml method that was present with python
    versions before 2.7
    
    Change-Id: I8847c344df2f7b2d76291a24cdb8e1a436ac87ec
    Refactor the `matches` function
    
    - Clearer parameter names and doc string
    - Use fnmatch.fnmatch instead of re.match and fnmatch.translate
    - Use `any` to make code more succint.
    
    Change-Id: Id22aef35554c2a3428874f956c54baae3ea662fe
    Tiny spelling fix: YMAL -> YAML
    
    Change-Id: Ic37d764cc7b23759202d47d338af22c0ea25f080
    Catch EPIPE exception and return
    
    Otherwise you get a traceback if you pipe `jenkins-jobs` to the UNIX
    `head` command.
    
    Change-Id: If83fd5b9f4aacd031e9ab0c35d61cc6d57542be9
    Fail if specified set of defaults is not found.
    
    Change-Id: I1c764d5585249b28bd25f775abee2734e96b1640
    `test` command read/write stdin/stdout by default
    
    E.g.:
    
        jenkins-jobs test < config/jenkins.yml
    
    This is convenient for demoing or implementing functional tests.
    
    Change-Id: I4e3030e261d3b90f75e4a033ea074d18764d97bf
    Create the output_dir for the test subcommand.
    
    This change creates the output directory for the test subcommand if it
    does not yet exist. If it exists, use it. Any other exceptions are
    re-raised.
    
    Change-Id: I487c69e70f9b6c475691ca4fef4669a0c318ab55
    add ability to parse from a file object
    
    Change-Id: I4f62fad4d2c0e361eddaed6d4db2faa655bd4b11
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    use {obj:key} as a way to pass an object and not only strings to templates
    
    As mentioned at the mail list[0]:
    
    "So I need another way how to pass a *list* as data structure from
    the defaults/project down to the job-template definition, similar to
    what can be done with "{variable}" for strings."
    
    [0] http://lists.openstack.org/pipermail/openstack-infra/2014-February/000799.html
    
    Closes-Bug: 1281038
    Change-Id: I5b04ddb52e537fedd2d05795e91011afd92f2295
    Do not produce extra whitespaces on Python 2.7.3.
    
    Also, make the version check hopefully less cryptic.
    
    Change-Id: I516ed7aa7b8c3a7f005997e7287c68de52eed54c
    Toplevel collection typecheck.
    
    Change-Id: I4a59d1b9391adb84f4a29520a179f8cdbc61e18d
    Add tests for YamlParser and patch 2.6 minidom
    
    Test full build job XML produced by the YamlParser object which exposed
    differences in how the XML was being written on python 2.6 versus newer
    versions of python.
    
    Differences were whitespace only, but made testing and validating the
    xml outputted across multiple versions of python difficult.
    
    Code now patches the python 2.6 writexml method on the Element class in
    the xml.dom.minidom module, with a version of the method taken from
    python 2.7.5.
    
    Removed the now obsolete regex that was reformatting the output on
    python 2.6.
    
    Change-Id: I26c100b6adfbcb9b197bb06cd162855adaaf24c5
    Fix multibyte character problem
    
    Fixed problem that causes a UnicodeEncodeError when use multi-byte characters in the job.yml.
    
    Change-Id: Ie715c827a794e73fae11cdca079ea80cfb8c280d
    ModuleRegistry now caches entry points lookup
    
    While profiling JJB with cPython with Wikimedia configuration files, the
    top three offenders are:
    
     ncalls  tottime   cumtime  percall filename:lineno(function)
      60697    3.728    10.753    0.000 pkg_resources.py:471(iter_entry_points)
    4903683    3.229     3.810    0.000 pkg_resources.py:2396(get_entry_map)
    4936493    3.215     3.215    0.000 pkg_resources.py:494(__iter__)
    
    By caching the iter_entry_points call in builder ModuleRegistry, the
    execution time drops from 26s to 18s.
    
    Can be further improved by caching the whole group on first lookup and
    hold in the cache if entry point in a dict.
    
    Change-Id: Iadc60a805f7690e8388d87f52760a9f6fcd2a53e
    Ensure jobparams and group_jobparams are dict
    
    When defining a list of jobs in a project, if a colon is added after
    the job name but no parameters is provided, jobparams is None.
    
    As dict.update() expects parameter to be iterable, ensure jobparams
    and group_jobparams are always a dict to prevent JJB from crashing.
    
    Change-Id: Ie57aa9e5b446fe502dff896cde773ddcc92ba803
    Closes-bug: #1253180
    Fix format of debug message to be compatible with py2.6
    
    In Python 2.6 we need indices in the format specs
    
    Change-Id: Ia70c705e2cb9d7391a7fd257e3b6cc5cbbc5abb7
    Added globbed parameters to the job specification
    
    Now you can specify a globbed parameter when updating or deleting a job,
    it will parse the yaml files and select those jobs that match to be
    updated/deleted
    
    For example:
      jenkins-jobs --config ~/jenkins.ini update myjobs/ \*only_those\*
    
    Will only update the jobs that have 'only_those' on their name.
    
    For the delete subcommand the option '-p' lets you specify the path
    where to load the job list from, so you can use globs for the jobs in
    that list (it does not allow you to use globs with non-managed jobs)
    
    Change-Id: I5bb1074845fb143c7c3120c138a6b138d3548305
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Make --delete-old more robust
    
    Watch for parse errors when checking if a job is managed
    by jjb.
    
    Log the jobs that are ignored for removal.
    
    Change-Id: I11207bdaf16b5645c37785bd31f2feb9d1bcae11
    Allow use template variables in dictionnary key
    
    This patch allows to use template variables in dictionnary key.
    
    This fix the usage of template variables in JClouds template instance name.
    
    Fixes bug #1239688
    
    Change-Id: I395e6dcfa008e770d72e4e671ea85085ef6cffe5
    missing parameter error are no more meaningfull
    
    When ever we attempt to format a string and are missing some parameter,
    we end up with:
    
        <stacktrace>
        KeyError: 'ext-name'
    
    Which is not that helpful.  This patch dump the string being formatted
    and the list of parameters provided to deep_format().  Example output:
    
        JenkinsJobsException: ext-name parameter missing to format ext/{ext-name}
        Given: {'jobs': ['{name}-ruby1.9.3lint', '{name}-browsertests'],
        'name': 'mwext-UniversalLanguageSelector'}
    
    Which in most occasion should be self explaining.
    
    Note the KeyError is reraised as a generic Exception since the format is
    meant for human and is no more representing the key.
    
    Change-Id: I46fced45c4586fca8ea999766327b7b4b2dc6505
    Raise exceptions when no entrypoint, macro or template found
    
    When generating XML and no component is found for the given yaml entry
    whether it is a JJB module, macro or job template, raise an exception
    instead of silently continuing by not generating XML and requiring the
    user to check the results.
    
    Change-Id: Icd4b1fae123c8bbb4d8af7aa14522251cd9cf8d5
    log info on job deletion
    
    We already log, at info level, when creating job. This add logging for
    jobs deletions as well.
    
    Change-Id: Id9745daa9382c87d966f2b21135e522ebdd4311a
    Add support for purging obsolete, managed jobs
    
    Make it possible to get rid of no-longer-managed jobs and so
    automatically clean up any such jobs.  This is optional and defaults
    to off.
    
    Change-Id: I059b811ddaaaae3105e7835e927549d9c0bbca15
    Fixes: https://bugs.launchpad.net/openstack-ci/+bug/1183716
    Job-specific subst. in a job group's job list
    
    Adding job-specific substitutions in a job group's job list
    would result in JJB crashing with the following error:
      TypeError: unhashable type: 'dict'
    
    This change adds the ability to add job-specific substitutions
    in a job group's job list. It implements the same logic used by
    a previous change (6ff1d69).
    
    Change-Id: I059f38d0aa8a8947aaac75e0ddb34d392063ece3
    Added ignore-cache and flush-cache options
    
    - ignore-cache will ignore the cache of the specified jobs and update
      them no matter what
    - flush cache will entirely flush the cache before updating, no matter
      which jobs are specified
    
    Change-Id: I345349ccfe296a5a57360366497400a859b98b42
    Signed-off-by: David Caro <dcaroest@redhat.com>
    ignore instead of fail when reading empty config files
    
    This commit is a fix for bug 1193749.  JJB will now ignore
    files that are either empty or contain only comments.
    
    Change-Id: Iedcbc75f729e2d8eab058a9dd7353e992d9c5509
    job filtering was not working properly
    
    When passing job names as arguments to 'update', the command is supposed
    to only retain this jobs.  Due to the job being a dict, the filter would
    never match and the none of the job would be updated.
    
    This has apparently always been broken since the feature got introduced
    in 85cf7a41.  Using job.['name'] fix it up.
    
    Change-Id: Icf4d5b0bb68777f7faff91ade04451d4c8501c6a
    Reviewed-on: https://review.openstack.org/34197
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fix job-specific parameters for job groups.
    
    When a job template is instantiated via a job-group,
    job-specific parameters provided by the project are not
    respected.
    
    The correction is just a matter of updating correctly the
    dictionary containing all parameters.
    
    The configuration below exhibits the issue:
    
    - project:
        name: project-with-specific-parameters
        jobs:
            - my-job-group:
                recipients: "foo@example.com"
    
    - job-group:
        name: my-job-group
        jobs:
            - job-sending-notification-mails
    
    - job-template:
        name: job-sending-notification-mails
        publishers:
          - email-ext:
              # {recipients} should be available.
              recipients: "{recipients}"
              subject: Subject for Build ${{BUILD_NUMBER}}
    
    
    Change-Id: I107d8d648c8965cd125db52f3558f28337c25a63
    Reviewed-on: https://review.openstack.org/33190
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    only generate XML for requested jobs
    
    The updated and test commands generated the XML for all the jobs, even
    if we were only interested by a specific job.  This patch pass the job
    names requested to the job builder so the XML generation function can
    skip jobs we are not interested in.  Note that we still have to expand
    job templates to find out if the expanded job name match the filter.
    
    Change-Id: I3db6bc3b07b0bfe71019c19c2d3d02bced1e25ac
    Reviewed-on: https://review.openstack.org/26839
    Reviewed-by: Jesse Keating <jesse.keating@rackspace.com>
    Reviewed-by: Spencer Krum <krum.spencer@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    prevent duplicate XML expansion of job templates
    
    Whenever a project has different values for a project and that parameter
    is not used in the template, we ended up regenerating the exact same
    job.
    
    This patch getXMLForTemplateJob() to make it remember whether an
    expanded template has already had its XML generated.  I am using json
    which let us serialize an arbitrary data structure and more specially
    let us sort the dictionary keys to make sure we always end up with the
    same serialization.
    
    The `test` time for my setup went from 34 seconds down to 17 seconds.
    
    Change-Id: I8f4ea2780025fefd3ba58e2ed32d4bd762093acf
    Reviewed-on: https://review.openstack.org/24409
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    job cache now varies by remote url
    
    When updating different Jenkins installations, JJB would end up
    invalidating the job cache.  By adding the jenkins.url in the cache file
    name, we can maintain a job cache per remote Jenkins instance.
    
    Name of the cache file is based on Jenkins URL.
    
    Change-Id: Ib9c08d8029267729e7a030a4e8bc0a9f05eb8ce3
    Reviewed-on: https://review.openstack.org/24404
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    `update` can now takes several job names
    
    Just like `delete` can accept several jobs names as argument, this patch
    let us do the same with `update`.
    
    * builder.update_jobs now filter the jobs against a list
    * renamed 'update' argument 'name' to 'names' to make it clear it
      accepts several job names.
    
    Change-Id: I4bcebd98073ec89e172afbec59b93d14de6620ff
    Reviewed-on: https://review.openstack.org/24160
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bugfix and tidy-up
    
    Allow the configuration file to be optional for test mode
    Tidy-up the hipchat notifier module
        - Require a valid hipchat authtoken
    Ignore temporary vi/vim files in .gitignore
    Add extra debugging output
        - write out cache file to enable easy removal to force upload
        - clearly notify that no changes are seen so uploading not occurring
    
    Change-Id: Ia418704b76090e284e0b801609f2f05bfa06b9ae
    Reviewed-on: https://review.openstack.org/20380
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Khai Do <do.khai@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Raise exception for at least one type of syntax errors
    
    Every so often, I create a yaml file with something like:
    
    - job:
      name: "test"
    
    This previously exploded with an obscure error message, now it raises
    an exception with a hopefully less obscure error.
    
    Change-Id: Ie9e402a9ec5afa8dac069a6cae5710eabbc0e665
    Signed-off-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-on: https://review.openstack.org/20322
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to specify the JDK to use.  This change moves the top level config from builder.py into a separate file called general.py.  This change also moves the assigned node work as well as the log rotator work into the general.py file.  This change also adds the ability to specify the JDK for the build to use.
    
    Change-Id: I0e2b43d889593e01d6ad0761960c93472990af1e
    Reviewed-on: https://review.openstack.org/16983
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    use the xdg cache directory for the job cache
    
    this places the cache file in $XDG_CACHE_HOME/jenkins_jobs/ instead of $HOME/
    the xdg cache home is defined as ~/.cache/ if $XDG_CACHE_HOME is unset
    
    Existing files are not moved automatically.
    Change-Id: I0937346b08ba8d199422aea4043ebad087d92cca
    Reviewed-on: https://review.openstack.org/16665
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add option to block up|down stream builds.
    
    Jenkins has advanced project options that allow you to block if the up
    or down stream projects are currently being built. Support these options
    through JJB.
    
    Change-Id: I8cfe3e19d1d929517c0a6ee886b31241b3e9b588
    Reviewed-on: https://review.openstack.org/16338
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add support for giving lists to job templates
    
    This change allows constructs like:
    
    - job-template:
        name: "foo-build-{slave}"
    
    - project:
        slave:
          - debian-squeeze-powerpc
          - debian-squeeze-amd64
    
    and will then instantiate the job template for each value in the
    list.
    
    Change-Id: I057a30ef6d91048efacc4a6da2142cb8f924dd06
    Reviewed-on: https://review.openstack.org/14738
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Enable job-specific substitutions in a project's job list.
    
    The motivation for this was to allow for specifying a pipeline of jobs
    at the project level, thereby re-using the same job templates in
    different pipelines.
    
    Change-Id: I9840d3713669ceca75a831be92c95c3fe9195c01
    Reviewed-on: https://review.openstack.org/13705
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add 'delete-all' subcommand to clear all jobs from Jenkins
    
    Change-Id: Ic31b468b6cd1285578038af8f08020e5c4e30c63
    Reviewed-on: https://review.openstack.org/13876
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding hipchat notification capability.
    
    Tweaks the Builder and YamlParser classes to accept a config object
    which is passed to the parser's ModuleRegistry object. This makes it
    available to the HipChat object.
    
    Change-Id: I3017658336b949c0fda7c82945e7014dbcf6e152
    Reviewed-on: https://review.openstack.org/12794
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Allow for deletion of mulitple jobs.
    
    Job deletion also clears the job cache, so that a subsequent update
    will upload even if the job hasn't changed.
    
    Change-Id: Ie6d756a469e9f0069532c1327da01d57fe4feffe
    Reviewed-on: https://review.openstack.org/13268
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Make code pass pep8 1.2 checks.
    
    Change-Id: I5544ce07c7423a0e530860fa5637af26c73f6521
    Reviewed-on: https://review.openstack.org/13162
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding logger (updated following suggestions from jeblair)
    
    Change-Id: I8a48cb9dc2c6ea136ce072482467bee292a425f3
    Reviewed-on: https://review.openstack.org/12788
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding 'quiet-period' option
    
    Change-Id: I0182cad0313411b368d42325f40d09e5da8bc168
    Reviewed-on: https://review.openstack.org/12787
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Remove openstack-specific description.
    
    It's in the openstack defaults now.
    
    Change-Id: Ib65ed00bec0cea363414e20ec799bde4fb33bac0
    Reviewed-on: https://review.openstack.org/12471
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add defaults.
    
    Add a defaults object that will be the lowest priority source of
    configuration data for jobs.
    
    Change-Id: Ie7c9e5a5a84a610e9db02cf191ae1fbd15c7e3b9
    Reviewed-on: https://review.openstack.org/12470
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fix "update" command.
    
    Some untested code after the recent refactor was broken.
    
    Change-Id: Id8cf33b3d67d86fc18253d8fc91875669a888540
    Reviewed-on: https://review.openstack.org/11197
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Support excludes when recursively processing paths
    
    Include an additional option to exclude some paths/patterns from being
    included in the search to allow a complex hierarchy of directories to be
    referenced under a single path. Provide support to allow the user to
    specify patterns, relative and/or absolute path references.
    
    Implements support for excluding based on absolute path, relative path
    and based on simple shell globing patterns.
    
    Change-Id: I236b364c268fd2bf5511a2c6d9a1c87914f3b086
    Add plugins_info to module registry object.
    
    This makes it available for use by any module that has version-specific behavior
    differences since modules always have access to the yamlparser which in turn
    contains a module registry.
    
    Change-Id: I1cae480a9a341ec2f6062904c962530dfce95057
    report exactly which jobs will be deleted.
    
    Using the glob parameters option to delete jobs, like so..
    jenkins-jobs --conf jenkins_jobs.ini delete --path defs/cmd-002.yaml *bar*
    
    JJB would report the following:
    
      INFO:root:Deleting jobs in [*bar*]
    
    This change provides better info on exactly which jobs will get deleted.
    Now the log will report:
    
      INFO:jenkins_jobs.builder:Removing jenkins jobs: bar001, bar002
    
    Change-Id: Iabac8104115860f2fb4f4cc0a4a10101559d470c
    fix delete job command and add tests
    
    change I126751e3 introduced recursive file definition feature however it broke
    the ability to delete jobs.  This changes fixes it and adds a few tests for it.
    
    This was the error when trying to delete a job:
    
    (py27)~/jenkins-job-builder$ jenkins-jobs --conf jenkins_jobs.ini delete myjob
    INFO:root:Deleting jobs in [myjob]
    Traceback (most recent call last):
      File "/jenkins-job-builder/.tox/py27/bin/jenkins-jobs", line 10, in <module>
        sys.exit(main())
      File "/jenkins-job-builder/jenkins_jobs/cmd.py", line 122, in main
        execute(options, config)
      File "/jenkins-job-builder/jenkins_jobs/cmd.py", line 207, in execute
        builder.delete_job(job, options.path)
      File "/jenkins-job-builder/jenkins_jobs/builder.py", line 611, in delete_job
        self.load_files(fn)
      File "/jenkins-job-builder/jenkins_jobs/builder.py", line 576, in load_files
        if os.path.isdir(path):
      File "/jenkins-job-builder/.tox/py27/lib/python2.7/genericpath.py", line 41,
        in isdir st = os.stat(s)
    TypeError: coercing to Unicode: need string or buffer, NoneType found
    
    Closes-Bug: #1349634
    Change-Id: Ib87fa497d80ba33470c049f875658a3878afb664
    Accept list of paths in 'path' arg.
    
    This adds the behavior of splitting the path positional argument on colons then
    processing each resulting string the same way that the path was being processed
    previous to this commit.
    
    * Adds a unit test to validate correct `path` parsing.
    * Adds a unit test to validate correct `path` parsing in the recursive case.
    * Documents the new behavior.
    
    Change-Id: I0f465e02077569352cd276a8366ead5bab0eb117
    Add a --version command line flag to show JJB version
    
    Closes-Bug: #1349634
    Change-Id: I4c9af2fa61383585467554272b04c5c4dba1568e
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Enable hipchat section into sample file
    
    Current sample file lacks section about hipchat. Add section
    with dummy token to show hipchat usage.
    
    Added that into default config file for cmd.py, that is the
    one used for testing. This will allow to properly test
    jobs with hipchat module enabled.
    
    Closes-Bug: #1366063
    
    Change-Id: If511486a69113a4b4300cdb3602154ef261bc18a
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Added recursive option
    
    Now you can organize your yaml files into subdirectories and apply them
    all just passing --recursive option or adding the proper configuration
    file option.
    
    In adding support for multiple paths the Builder.load_files method was
    reworked to be backward compatible with individual paths or file-like
    objects, while also now handling being passed a list of paths or
    file-like objects to be parsed.
    
    Change-Id: I126751e347622716c592c6ed1a57b8acb7bf79a4
    Allow `test` command to use conf files
    
    It should be possible to run the `test` command with a custom config.
    This allows examination of the XML outputted where config settings can
    change the outputted XML. Otherwise any non-default config values will
    only be used when running the `update` comand.
    
    Add a simple test to confirm that the custom url that is unlikely to
    ever be a valid default value is returned when the command is set to
    `test` and a custom config is specified.
    
    Change-Id: I193e83314a35943406bff5b182f20693edd640ba
    refactor cmd processor to make it slightly easier to test
    
    * make logger global
    * create methods for setting up of parser and jjb configuration.
    
    Change-Id: Ia8d16e74e8a1097a013512fb624f032b1d085d17
    Modularize to enable easier testing
    
    Change-Id: I85c5d95658c0be57c4ce87fac53556475ae53207
    Pass argv to main
    
    This will make it easier to do high-level testing because we'll be able
    to call main from tests and pass it arguments
    
    Change-Id: I2bac44a746cd61fda963df622b0a775bf4bf31c2
    Fix "delete-all"
    
    It was broken by 14ed8b12, resulting in:
    
        $ jenkins-jobs delete-all
        Traceback (most recent call last):
          File "/Users/marca/python/virtualenvs/jenkins-job-builder/bin/jenkins-jobs", line 10, in <module>
            sys.exit(main())
          File "/Users/marca/dev/git-repos/jenkins-job-builder/jenkins_jobs/cmd.py", line 143, in main
            if options.path == sys.stdin:
        AttributeError: 'Namespace' object has no attribute 'path'
    
    Change-Id: I42a3ef9f3cfca7b4667498009351e0027aa316d7
    Treat ignore_cache as a boolean
    
    When ignore_cache was loaded from the config file (including the
    default config) it was treated as a string, which evaluates to
    true in boolean expressions.  Therefore, unless ignore_cache was
    set on the command line, it would always behave as if true.
    
    Fix by asking configparser for a boolean value.
    
    Change-Id: I63af8637671248fc1a6895d1eb82f1c2e24ce5c2
    `test` command read/write stdin/stdout by default
    
    E.g.:
    
        jenkins-jobs test < config/jenkins.yml
    
    This is convenient for demoing or implementing functional tests.
    
    Change-Id: I4e3030e261d3b90f75e4a033ea074d18764d97bf
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Make all help text start with lowercase letter
    
    to match "show this help message and exit" text from argparse.
    
    Change-Id: I8d5a39e704a07b8b95ab530a72249fd62e42a480
    Output name of ini file when it's not valid
    
    This prevents people from confusing the .ini file with .yml file, which
    I just did.
    
    Change-Id: I6c96b507049717b7e0ece04b4b50b30c9b6e694b
    make command parsing compatible with python 2.6
    
    python 2.6 ConfigParser has problems interpolating the None type so setting defaults to
    empty string instead.
    
    Closes-Bug: #1259631
    Change-Id: Iceec1d8c3b77fd64ac54e02653800ad422778bdf
    Enable ignore_cache flag on jenkins_jobs.ini
    
    Parses jenkins_jobs.ini to look for an ignore_cache flag.
    If ignore_cache command line option is sent, it takes priority
    over the jenkins_jobs.ini configuration.
    
    Change-Id: I88f1ce1aa0d3e0ad25d592d3ca44a022ec9249c3
    Closes-Bug: #1193444
    Provide default ConfigParser object
    
    Replace config dictionary with proper ConfigParser object
    to avoid NoSectionError for required options.
    
    Change-Id: Ib1a506641d4bab05e34f80114803bfedf4aa89b7
    Make -o option required if using 'test' command
    
    Fixes bug 1250939
    
    If the -o option isn't specified, then the code will end up updating the
    jobs instead of outputting the XML to a directory. That can be a fairly
    big surprise.
    
    Change-Id: I3b84b097ea7fc96c18aa2d49b3bff246833822a6
    Added globbed parameters to the job specification
    
    Now you can specify a globbed parameter when updating or deleting a job,
    it will parse the yaml files and select those jobs that match to be
    updated/deleted
    
    For example:
      jenkins-jobs --config ~/jenkins.ini update myjobs/ \*only_those\*
    
    Will only update the jobs that have 'only_those' on their name.
    
    For the delete subcommand the option '-p' lets you specify the path
    where to load the job list from, so you can use globs for the jobs in
    that list (it does not allow you to use globs with non-managed jobs)
    
    Change-Id: I5bb1074845fb143c7c3120c138a6b138d3548305
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for purging obsolete, managed jobs
    
    Make it possible to get rid of no-longer-managed jobs and so
    automatically clean up any such jobs.  This is optional and defaults
    to off.
    
    Change-Id: I059b811ddaaaae3105e7835e927549d9c0bbca15
    Fixes: https://bugs.launchpad.net/openstack-ci/+bug/1183716
    Added ignore-cache and flush-cache options
    
    - ignore-cache will ignore the cache of the specified jobs and update
      them no matter what
    - flush cache will entirely flush the cache before updating, no matter
      which jobs are specified
    
    Change-Id: I345349ccfe296a5a57360366497400a859b98b42
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Make it easier to run in place.
    
    Without installing.
    
    Change-Id: I63f322178aacef51b559cc04899d8dec7c67a219
    Reviewed-on: https://review.openstack.org/28613
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    `test` can now takes several job names
    
    Make the test command to accept several job names. This is exactly like
    the change I have made for `update` in 4f5cfb1 (and fixed in fc86fbe).
    
    Change-Id: I68d634b29e4a8ff16818ddeb6f90c7ff072c93a5
    Reviewed-on: https://review.openstack.org/26838
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    restore ability to pass multiple jobs on 'update'
    
    4f5cfb17 gave us the ability to pass multiple job names when running the
    `update` command.  Unfortunately the argument parser was made to request
    at least one argument.  a0ccb45c fixed it to be one optional argument
    which in turn broke the ability to pass several jobs.
    
    This patch makes the names argument to consume all remaining arguments
    and not require any.
    
    Change-Id: I4723117d607f7e10223985fdcbdd50fc5ca50183
    Reviewed-on: https://review.openstack.org/24711
    Reviewed-by: will soula <william.soula@drillinginfo.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    'names' argument to update no longer required
    
    Before the change to allow 'update' to take multiple jobs the
    'names' argument was not required and passing just the yaml file
    would create all the jobs inside it.  The 'update' change made
    names required when it shouldn't be.  This is a one line change
    to cmd.py to change nargs from '+' back to '?'
    
    Change-Id: I65372d78ec678b9c29caad2ea573772287a7642f
    Reviewed-on: https://review.openstack.org/24673
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    `update` can now takes several job names
    
    Just like `delete` can accept several jobs names as argument, this patch
    let us do the same with `update`.
    
    * builder.update_jobs now filter the jobs against a list
    * renamed 'update' argument 'name' to 'names' to make it clear it
      accepts several job names.
    
    Change-Id: I4bcebd98073ec89e172afbec59b93d14de6620ff
    Reviewed-on: https://review.openstack.org/24160
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bugfix and tidy-up
    
    Allow the configuration file to be optional for test mode
    Tidy-up the hipchat notifier module
        - Require a valid hipchat authtoken
    Ignore temporary vi/vim files in .gitignore
    Add extra debugging output
        - write out cache file to enable easy removal to force upload
        - clearly notify that no changes are seen so uploading not occurring
    
    Change-Id: Ia418704b76090e284e0b801609f2f05bfa06b9ae
    Reviewed-on: https://review.openstack.org/20380
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Khai Do <do.khai@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Doc consistency between help and confirm text
    
    The delete-all command's help text did not match the confirm
    text for the delete-all command.  The help now matches the
    confirm text and is gramatically correct
    
    Change-Id: If9c37958192dbdd2de61e74fe95aad2d8a170ca3
    Reviewed-on: https://review.openstack.org/18685
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Use console_scripts entrypoint.
    
    Since the project uses entrypoints so heavily - move the jenkins-jobs script
    to be contained within the project and have entrypoints generate the script.
    
    Change-Id: Ie9541163c8677de1b05576491c8e9e63d3bd25fc
    Reviewed-on: https://review.openstack.org/15816
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    fallback to ./jenkins_job.ini conf
    
    When doing developement, we usually want to stick a jenkins_job.ini file
    at the root of our working directory. The logic still look under /etc/
    by default and --conf will override the config file.
    
    Test plan:
    * tox is all green
    
    Change-Id: I28781653feb3ce60eb18b50e5b44383d4b544f5a
    Reviewed-on: https://review.openstack.org/14285
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add 'delete-all' subcommand to clear all jobs from Jenkins
    
    Change-Id: Ic31b468b6cd1285578038af8f08020e5c4e30c63
    Reviewed-on: https://review.openstack.org/13876
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding hipchat notification capability.
    
    Tweaks the Builder and YamlParser classes to accept a config object
    which is passed to the parser's ModuleRegistry object. This makes it
    available to the HipChat object.
    
    Change-Id: I3017658336b949c0fda7c82945e7014dbcf6e152
    Reviewed-on: https://review.openstack.org/12794
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fix typo in --log_level argument help
    
    Change-Id: I6899aadddeec6b5e53803d173889890a1e8ebd91
    Reviewed-on: https://review.openstack.org/13341
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Allow for deletion of mulitple jobs.
    
    Job deletion also clears the job cache, so that a subsequent update
    will upload even if the job hasn't changed.
    
    Change-Id: Ie6d756a469e9f0069532c1327da01d57fe4feffe
    Reviewed-on: https://review.openstack.org/13268
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Tweak jenkins-jobs to conform with pep8 (v1.2)
    
    Change-Id: I91ecac2e8d2d6b6b58f9a7fccc91897270ffe44d
    Reviewed-on: https://review.openstack.org/13267
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding logger (updated following suggestions from jeblair)
    
    Change-Id: I8a48cb9dc2c6ea136ce072482467bee292a425f3
    Reviewed-on: https://review.openstack.org/12788
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fix "update" command.
    
    Some untested code after the recent refactor was broken.
    
    Change-Id: Id8cf33b3d67d86fc18253d8fc91875669a888540
    Reviewed-on: https://review.openstack.org/11197
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add openstack-common support for setup and version
    
    With help from clarkb in #openstack-infra and openstack-ci/gerritbot,
    I've manage to update our versioning to be inline with other openstack
    projects. This is another step towards creating our OS packaging.
    
    Change-Id: If3f44b939ee0a3c9c4dfa1d9f83ae14a8285ba5f
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/15335
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Make Jenkins Job Builder pass pyflakes checks.
    
    One import was not used and another was missing.
    
    Change-Id: I2eed26e445e4be1e674df89d29fb5b22dfa9dec4
    Reviewed-on: https://review.openstack.org/13163
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Make code pass pep8 1.2 checks.
    
    Change-Id: I5544ce07c7423a0e530860fa5637af26c73f6521
    Reviewed-on: https://review.openstack.org/13162
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Allow multiple node selection for 'node' parameter
    
    Change-Id: I6690e5fcfe5169e2fdb6815cfde95e607abb5c42
    Add 'node' parameter to 'parameters'
    
    This parameter defines a list of nodes where this job could potentially
    be executed on. Nodes can be choosen from list of current available nodes.
    Currently it trasforms to single-selection dropdown to choose a slave for execution.
    
    Change-Id: I5379d20b94e3b33360ea8f842e3b4237b491addb
    Move extended-choice support to parameters module
    
    This patch fixes support for the extended choice plugin in the
    parameter module so that it can nicely coexist with the other
    parameters.  This leaves the existing extended choice plugin code in the
    properties module, but removes the documentation from that location and
    adds a deprecation warning.  This patch also provides parity with the
    existing functionality under the properties module.
    
    Change-Id: Ibace4284fc1bd391948917979a4223bd3007dff4
    Closes-Bug: #1361335
    Add support for the matrix-combinations plugin
    
    This plugin allows a user to choose which matrix combinations
    they want to run, as opposed to the default behaviour where
    jenkins runs all combinations
    
    Requires the Jenkins Matrix Combinations Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/Matrix+Combinations+Plugin
    
    Change-Id: I13205c81aa11523a4c3fc373820eb74863d0c7ca
    Added support for Extended Choice Parameter plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Choice+Parameter+plugin
    based on https://github.com/rozky/jenkins-job-builder
    
    Change-Id: If179619da5e795a1649168e133ca25b5f9f7b187
    Add support for build parameter of type "Run"
    
    Defines a run parameter for parametrized build, where users can pick a
    single run of another project. The absolute url of this run will be
    exposed as an environment variable.
    
    Change-Id: I86bc3109b00259f9fe3dcf7ab9d72cb1f22fadc2
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    Jenkins Dynamic Parameter Plug-in support
    
    This change adds support for 4 parameters provided by Jenkins Dynamic Parameter Plug-in:
      - dynamic choice parameter
      - dynamic choice parameter (scriptler)
      - dynamic parameter
      - dynamic parameter (scriptler)
    
    Change-Id: I77440af5bc089108b87ec6bc3c4db206c2600c00
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Fix handling of optional parameter description
    
    Jenkins does accept empty parameter description.
    
    Although JJB documents the parameter description as optional,
    JJB crashes if no parameter description is provided.
    
    This change fixes the issue by defaulting to an empty string when
    no parameter description is provided in a job definition.
    
    Change-Id: Ib848f55007e4863fc8baad3370af650999384524
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for password parameters
    
    Change-Id: Iaab1d59c6e01fb95f5c8cd012dbc73379c92174e
    Reviewed-on: https://review.openstack.org/26317
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fixing svn-tags to work correctly
    
    It was discovered that when using svn-tags functionality that when
    you go to build the list is not populated.  If you just saved the job
    in Jenkins then it would work correctly.  It was determined that the
    <uuid> tag was missing and this was needed for the parameter to work.
    In testing it was found that simply putting <uuid>1-1-1-1-1</uuid> into
    the config would make the svn-tags functionality work like expected.
    This is a one line change to add the uuid element set to 1-1-1-1-1
    
    Change-Id: Iea1c27ebc9aa7c17f4f390c375989240c1941ce0
    Reviewed-on: https://review.openstack.org/21809
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Fix up description of text_param and file_param
    
    Change-Id: Ief99fab872a531402c0907b4f44defce37d249e1
    Reviewed-on: https://review.openstack.org/15189
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to checkout from subversion and use the list tags parameter with the parameterized build plugin
    
    Change-Id: Iad9c60d052c85bfb60794e6d2a9d80a915e7d1a8
    Reviewed-on: https://review.openstack.org/14675
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to use the validating-string parameter
    
    Change-Id: I15481a9b45d9daf9d759df2e8000956ce060a76a
    Reviewed-on: https://review.openstack.org/14884
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add choice parameter type.
    
    Change-Id: I6675727cd0638a183e20c0110fcdedfdca3f715a
    Reviewed-on: https://review.openstack.org/13785
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Document the Zuul triggers
    
    The zuul and zuul-post had sparse documentation, improve it a bit and
    point to upstream documentation at:
    http://ci.openstack.org/zuul/launchers.html#zuul-parameters
    
    Add a note that Zuul 2.0 (gearman based) no longer requires those
    parameters to be explicitly defined.
    
    Change-Id: I1edcd5c3a101e2afe0025ad4cd3e511582998999
    Fixed referenced before assignment in zuul module
    
    It was using a non-defined url variable and failed to me when running a
    simple jenkins-jobs test -o ../outdir .
    
    Change-Id: I56e6376de4972ea0f64bd8c81d6eb6d8f7f6d497
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Zuul parameter ZUUL_URL
    
    Zuul 2.0 passes to jobs an additional parameter ZUUL_URL which instructs
    workers from where to clone repositories.
    
    This is NOT the same as the zuul-url defined by Jenkins Job Builder
    which is the notification endpoint set on the jobs and is unrelated.
    
    Change-Id: I4924a5b7ae99571efd70eeb188ddd3d821a4c61b
    Zuul trigger no more send GERRIT_* env variable
    
    Recent version of Zuul no more pass GERRIT_* parameters to job. So I
    guess we can stop configuring jenkins jobs to use them.
    
    jenkins_jobs/openstack/common/setup.py stills reference GERRIT_REFNAME.
    It seems that file got imported from another repository but I have not
    found the original repository :(
    
    Change-Id: Ia97319f96a00394b3321a484310975a10f574f13
    Add ZUUL_REF parameter to zuul post jobs.
    
    Change-Id: If557503638cd688b977fbfe27ce7fdfd0a77cce4
    Reviewed-on: https://review.openstack.org/18202
    Tested-by: Jenkins
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: James E. Blair <corvus@inaugust.com>
    Add option to specify Zuul URL.
    
    This is needed in order to run Zuul on a server other than
    the Jenkins master.
    
    This isn't a great design, but it is minimally invasive to JJB
    while we work on improving Zuul to remove the need for parameter
    specification and notifications.
    
    Change-Id: Ib4dabfc3fe37623031bdbe4a8ec53f25a6070a8e
    Reviewed-on: https://review.openstack.org/17517
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Provide ZUUL_COMMIT to zuul triggered job
    
    Zuul documentation advise user to configure their Jenkins GIT plugin
    with ZUUL_COMMIT as a branch specifier although it is not sent!
            http://ci.openstack.org/zuul/launchers.html#jenkins
    
    Change-Id: I2147e1b2d54a7101d6b7324c1e553f46dcdb4bb7
    Reviewed-on: https://review.openstack.org/16010
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    zuul trigger now also adds ZUUL_UUID parameter
    
    The UUID parameter has been deprecated in Zuul in favor of ZUUL_UUID,
    see "upstream" commit:
     - https://review.openstack.org/#/c/13934/
     - I88c38a28dcd552b2540095d36caacd10acf167b8
    
    Change-Id: I938e4059e435d8ffd5eef73dc0affed71463ba45
    Reviewed-on: https://review.openstack.org/15813
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Make code pass pep8 1.2 checks.
    
    Change-Id: I5544ce07c7423a0e530860fa5637af26c73f6521
    Reviewed-on: https://review.openstack.org/13162
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add new zuul parameters.
    
    Change-Id: I52cd7cbde0f957f144bfd8e6553c00ffee475e4f
    Reviewed-on: https://review.openstack.org/11661
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Change all '_' to '-' in YAML for consistency.
    
    Change-Id: If19cb26fa544b485acfc188baf3506eaea61d6cf
    Reviewed-on: https://review.openstack.org/11154
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Support additional features in Build Flow project
    
    * Allow requiring a workspace.
    * Allow running a DSL script from file.
    * Adding job parameters documentation.
    
    Change-Id: Ida71e40df3dd440d956b91005d932915bdb3d4f7
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Add example to demonstrate flow plugin for job-template
    
    Change-Id: I7bacce4f495989f8b37d6fc6b1bd773326e83b57
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Flow project support
    
    The approach is pretty straigh forward, it consists of one new
    module handling the project-type "flow". It supports the only field
    needed by this kind of project an XML block containing the flow
    description in a custom DSL.
    
    Change-Id: I5195391609b3058ae9e24a59024e0cc7a69b16a0
    Implements: blueprint jenkins-job-builder-flow
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Abate modules section.
    
    This is the first in a series of changes to alter the way modules
    are handled.
    
    This change removes the module section from yaml.  Instead, all files in
    modules/ are imported, and a 'register' function is called if it exists.
    
    The register function can add (any number of) module classes to a module
    registry.  The registry will also keep track of helper functions for use
    by other modules, and the register function can add those.
    
    This sets up the ability for a module other than the 'builders' module to
    register builders.  Eventually, we should be able to move all OpenStack
    specific builders, publishers, etc outside of the base modules; instead
    we would just register an 'openstack_pep8' builder in a module of our own
    that the job filler would know to invoke.
    
    The API for modules is slightly changed, adding a root_xml method to handle
    the different project types, a handle_data method for modules that want
    to modify the yaml data structure before any XML is generated, and a data
    parameter is added to the generate_xml method.  Ideally, we will migrate
    those modules that count on having a centrally stored data object to using
    the one passed into this method to allow maximum flexibility.  I also
    envision some project-level yaml attributes to be moved closer to the
    handlers that use them.
    
    This change does inadvertently alter the XML produced.  Here is the result
    of test.sh:  http://paste.openstack.org/show/18585/
    
    In all cases, those are inconsistencies in the YAML that are corrected
    by this change.  Some jobs included an empty triggers vector (due to
    module trigger_none) while others did not, so there was no way to satisfy
    both behaviors.  The added postbuilder section in the gerrit maven job is
    there because the job specified postbuilders, but did not include the
    postbuilder module.  I believe the resulting XML is more desirable.
    
    Change-Id: Ib38222e6bfc9d5b55aa497669d7023c7aaf4b7bc
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Support additional events for HipChat plugin
    
    In newer versions, Jenkins HipChat plugin supports notifications for the
    following events:
    
      notify-success
      notify-aborted
      notify-not-built
      notify-unstable
      notify-failure
      notify-back-to-normal
    
    This commit adds support for these events in JJB. Also, introduces a
    unit test for hipchat module and converts doc example generation to
    literalinclude.
    
    Change-Id: I3e09b4f2b41db58eb22ada89a633516e319a95bc
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Bugfix and tidy-up
    
    Allow the configuration file to be optional for test mode
    Tidy-up the hipchat notifier module
        - Require a valid hipchat authtoken
    Ignore temporary vi/vim files in .gitignore
    Add extra debugging output
        - write out cache file to enable easy removal to force upload
        - clearly notify that no changes are seen so uploading not occurring
    
    Change-Id: Ia418704b76090e284e0b801609f2f05bfa06b9ae
    Reviewed-on: https://review.openstack.org/20380
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Khai Do <do.khai@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Adding hipchat notification capability.
    
    Tweaks the Builder and YamlParser classes to accept a config object
    which is passed to the parser's ModuleRegistry object. This makes it
    available to the HipChat object.
    
    Change-Id: I3017658336b949c0fda7c82945e7014dbcf6e152
    Reviewed-on: https://review.openstack.org/12794
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Document node parameter usage with matrix projects
    
    The Matrix Tie Parent plugin has been deprecated for a while and the
    documentation for it in JJB mentions that it's deprecated, but the
    documentation doesn't call out how to use the new way of doing it.  This
    patch updates the documentation to explicitly call out that the node
    parameter only controls the matrix job's parent job.
    
    Change-Id: Ie784f6d90667a0bc66ae0efd3eda1974ddbac4f2
    doc change: remove duplicate general job parameters
    
    This change adds a test to validate the general job parameters and uses
    that test as documentation for the general module.   It also replaces the
    doc of the general params in the top level definitions.rst with references
    to the general module.
    
    Change-Id: I3df04d69186ca49d7297f8141855a4c72c73be1e
    add retry-count in general.py
    
    implement retry-coutn in general.py;
    update doc and add test fixtures
    
    Change-Id: Ifeb4fb645ad0e4bc12d41ef4481aca1888a4041a
    Add display-name job property.
    
    There is apparently no way to clear this property using the REST api
    once it is set, and the included documentation change warns of that.
    
    Change-Id: I49c5a91664cd37196f3239854bb0adbcf5b3c9f9
    Fix indentation in example of Logrotate section
    
    Change-Id: I893a4c8638fd35a90e1e3361a473212db115f22e
    Added default value of -1 for all logrotate attributes
    
    You don't need to specify all logrotate explicitely as -1 if you don't want to manage them.
    Jenkins will automatically populate them as -1 if you don't enter any value.
    
    Change-Id: Id9ee223d94e2c43cd0a1c1f5547a25858873ed92
    Not sending description or disabled by default
    
    To be able to manually disable/enable a job and edit it's description I've
    disabled sending the description or the disabled options if they are not
    specifically specified.
    
    So now when no description or not disabled is specified in the yaml,
    they will not be changed in the job.
    
    Change-Id: Iad3e61eabd0acd057ad45df7784fa7788246172c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    add an auth-token YAML parameter for the General Job Configuraion module
    
    Using the Jenkins WEB UI an Authentication Token can be specified for
    jobs to allow builds to be triggered remotely by using the URL:
    JENKINS_URL/job/JOBNAME/build?token=TOKEN
    
    Add an auth-token job parameter to generate the <authToken> XML element.
    
    Change-Id: Ic916e4074c9b2de9c616ef39a88c1d8e1e91fcff
    Signed-off-by: Javier Martinez Canillas <martinez.javier@gmail.com>
    Reviewed-on: https://review.openstack.org/25819
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jobs not tied to a node can roam
    
    Previously if you did not specify a node for a job to build on
    then the job would be marked as tied to master.  The checkbox for
    'Restrict where this project can be run' would be checked but
    nothing entered into the textbox so it ended up tied to master.
    This change adds an else to the check for 'node' and if 'node' is
    not found then canRoam is set to true.  This is a two line change
    to modules/general.py
    
    Change-Id: Id7e40ba5ae2eaa92fd7678da7b3acefc1ba4ee32
    Reviewed-on: https://review.openstack.org/24669
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    job now supports a custom workspace
    
    In Jenkins, the job advanced options has a tick box to enable a
    workspace space different from the default provided internally by
    Jenkins.  The XML element is <customWorkspace />.
    
    Change-Id: Ia432d98523a7cb617c1236acb52821a82b67c8e7
    Reviewed-on: https://review.openstack.org/24427
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Adding ability to specify the JDK to use.  This change moves the top level config from builder.py into a separate file called general.py.  This change also moves the assigned node work as well as the log rotator work into the general.py file.  This change also adds the ability to specify the JDK for the build to use.
    
    Change-Id: I0e2b43d889593e01d6ad0761960c93472990af1e
    Reviewed-on: https://review.openstack.org/16983
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Fix wrong casing in JDKAxis <name> tag
    
    If value is written in uppercase letters, Jenkins converts it to
    lowercase the next time the job configuration is saved.
    
      <hudson.matrix.JDKAxis>
        <name>JDK</name>
    
    is changed to:
    
      <hudson.matrix.JDKAxis>
        <name>jdk</name>
    
    As a result build URLs will change:
    
    http://host/job/matrix_build/JDK=Java-7/1/
    
    to:
    
    http://host/job/matrix_build/jdk=Java-7/2/
    
    Change-Id: Ia3018327c6dbffb2bb828dcc494559e57a1b6ad8
    Add support for JDK axis
    
    Axis that selects available JDKs. JDK axis has the same XML
    structure as other axes; only the element name changes.
    
    The matrix project support was split out of core Jenkins into the
    'Matrix Project Plugin', so update the docstring to mention that
    this plugin is required.
    
    Tested on Jenkins ver. 1.565.2 with Matrix Project Plugin 1.4.
    
    Change-Id: I6b9d243810833bd3d31535439cc48768db5a6598
    Move project matrix documentation into a test.
    
    The test includes both a basic example and a user defined
    axis example.
    
    Change-Id: I88f7a17928c4f6b56814c3cc5c843b949358ac2d
    fix project matrix doc rendering
    
    Only one colon should precede the literalinclude
    
    Change-Id: Id1bf144163f0b965bc404b600b08b3a1f348bb25
    add support for python and tox matrix project axis
    
    Change-Id: I89ffc04faed02fd72c934b44b6832bd1f11d8f2e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Document node parameter usage with matrix projects
    
    The Matrix Tie Parent plugin has been deprecated for a while and the
    documentation for it in JJB mentions that it's deprecated, but the
    documentation doesn't call out how to use the new way of doing it.  This
    patch updates the documentation to explicitly call out that the node
    parameter only controls the matrix job's parent job.
    
    Change-Id: Ie784f6d90667a0bc66ae0efd3eda1974ddbac4f2
    matrix project: add support for dynamic axis
    
    This axis requires the dynamic axis plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/DynamicAxis+Plugin
    
    All the dynamic axis plugin settings are in the core project:
    
    <matrix-project>
      <axes>
        <ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
          <name>config</name>
          <values>
            <string>config_list</string>
          </values>
          <varName>config_list</varName>
          <axisValues>
            <string>default</string>
          </axisValues>
        </ca.silvermaplesolutions.jenkins.plugins.daxis.DynamicAxis>
      </axes>
    
    The plugin sets 2 values: axis name and variable name.
    The axisValue element is hardcoded to 'default' in the plugin, so we do
    the same in Jenkins job builder.
    
    The matrix project supports multiple axes configuration, including dynamic
    axis.
    
    Tests added for:
     * dynamic axis (by itself)
     * multiple axes (dynamic and user-defined axes)
    
    Tested on Jenkins LTS (1.554.2) with both the plugin installed and not
    installed. The plugin is properly ignored in the latter case.
    
    Change-Id: I36310bc512fd873fec4bd5f42937689fd178536e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    matrix jobs: Add slave axis support.
    
    This commit builds on the structure introduced by
    Ib2f36e10c1c5fb14f0e4255f35c0bf19c2cc39b3. Slave axis
    has the same XML structure than other axes, only the
    element name changes.
    
    Change-Id: Ie1d2ef96c7a7d9aa02066ff055ead7c84011bdc6
    Reviewed-on: https://review.openstack.org/27656
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    matrix jobs now supports user-defined axes
    
    The XML definition of a user defined axes is the same as a a labeled
    expression axis.  Only the XML element name change, adding support for
    user defined axis is thus only a matter of adding a map between our YAML
    values and Jenkins XML element name.
    
    Change-Id: Ib2f36e10c1c5fb14f0e4255f35c0bf19c2cc39b3
    Reviewed-on: https://review.openstack.org/25432
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    add matrix job support
    
    currently only supports label expression axes
    Change-Id: I5d714affdf101eeb5b0eeae5ed5408d6964c6b77
    Reviewed-on: https://review.openstack.org/16908
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Metadata plugin module - largely based on Parameters module.
    
    I implemented this plugin as I use Jenkins Metadata plugin heavily in all my
    projects instead of the default Parameters plugin and think that everyone else
    would benefit from this addition to JJB as well.
    Current implementation handles dates in epoch format only and does not handle
    'node' element - so no metatree creation is possible.
    
    Change-Id: I1e67224df9339f1319a371d049585c8343301f2e
    Reviewed-on: https://review.openstack.org/33773
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Add support for the MultiJob plugin
    
    Change-Id: Ie6c06072eae17fddf241fa0bc416d20c9a2248dc
    Reviewed-on: https://review.openstack.org/26321
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add missing '
    
    Change-Id: If07145bef37bb85dd6a7011831e1081fe913ef0d
    Remove nonexistent servername and cleanup build publisher
    
    Trying out build-publisher I found server name was not required nor ever needed in the output.
    
    I've removed the legacy code and added proper formatted documentation and renamed and fixed the fixture test.
    
    Change-Id: I66a0e7ae0a694564177aa9cddbc95b2cbcd31891
    updated conditional_publisher to support plugin changes
    
    Updated conditional_publisher to support the new XML format
     in the latest versions (>= 0.13) of the Flexible Publish plugin.
    Ensured legacy format is still supported for plugin versions < 0.13.
    Added support for multiple actions per condition with version >= 0.13.
    Added unit test for multiple actions per condition
    
    Change-Id: I4a91d2836ccd079d059b961a7f0b177a17df4093
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add detailed call out about the SCP plugin
    
    Change-Id: Idbf156b48130e40574876d8a875d1f9a2784927a
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Add 'Build Flow Test Aggregator' publisher
    
    Add a new publisher for aggregating test results of downstream jobs in a
    Build Flow project.
    https://wiki.jenkins-ci.org/display/JENKINS/Build+Flow+Test+Aggregator+Plugin
    
    Change-Id: I88e74fe279f1924fcac010cc8d7a8850fc231269
    The email publisher needs a list of recipients
    
    The email publisher will throw a NullPointerException of the recipients
    xml element does not exist, so if there are no recipients then set the
    value to an empty string in order to get an empty xml element in the
    config.
    
    Also add tests for the email publisher.
    
    story: 2000015
    Change-Id: I7b4fdd4904eea1918ae80f5db6c7b0aaedbaef99
    xUnit publisher: add option to skip if there are no tests files
    
    This is valid for each defined xUnit type publisher on the job. Default
    is false.
    
    Change-Id: Idff3c8ba6a4e4291ec483b2eb4a999dcbeea7291
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Adding coverage.py publisher for ShiningPanda Plugin
    
    This publisher allows publishing coverage.py HTML
    reports using ShiningPanda Plugin
    https://wiki.jenkins-ci.org/display/JENKINS/ShiningPanda+Plugin
    
    Change-Id: I3040806a6cd49d7cfc423a39288729724f1ca223
    xUnit publisher: add test-time-margin extra config option
    
    From the plugin advanced configuration:
    
        "Give the report time margin value (default to 3000) in ms, before
         to fail if not new (unless the option 'Fail the build if test
         results were not updated this run' is checked)."
    
    The configuration defaults to 3000 if no value is passed.
    
    Change-Id: I372d9cc100ecd824516bac864daac0af41e367f5
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    xUnit publisher: add support to CTest
    
    Adds support for parsing the output of the CMake test driver program on
    the xUnit plugin, which was present since version 1.58.
    
    Another fixture file was added to keep the data extraction based of the
    current tests fixtures working.
    
    Change-Id: I9be73b39c9034955f6224695cbd642f03deac2cf
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Add DRY publisher
    
    Change-Id: I7858e5dfed871837a5f9ea704d05dc950ee519ee
    deprecate postbuildscript onsuccess and onfailure parameter names
    
    The postbuildscript module's 'onsuccess' and 'onfailure' parameters
    names were slightly confusing.  This change deprecates those parameter
    names and replaces them with less confusing names.  The new names
    are more closely matched to the ones that get added to the xml.
    
    Change-Id: Ifb76129852816aa3f8ee6bb7f609a2344ccc7a69
    Fix the postbuildscript documentation
    
    The docstring for postbuildscript publishers stated that onsuccess
    would default to False and onfailure defaulting to True. However,
    if you look below around line 2523 you'll see it's the opposite.
    
    Update the docstring to be correct and keep the behaviour of only
    running onsuccess by default.
    
    Change-Id: Ib98095fe0d741ef3afb6d4a8893568dae9be103d
    URL in Maven deploy is an optional field
    
    Passing a blank URL will cause the build to fail with
    ERROR: Failed to deploy artifacts/metadata: Cannot access with type
    default using the available connector factories:
    WagonRepositoryConnectorFactory
    
    Change-Id: Iab142155542f69e8ff876e7b24fd4e460b670ae8
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Make the recipients argument optional
    
    When setting send-to-individuals to true it may not be desired to
    also have a list of static recipients.
    
    Change-Id: I596740408db13fe3d442e71da52e060fa74ab350
    Add parameter to trigger_parameterized_builds
    
    For supporting ability to run downstream project on the same node
    parameter 'NodeParameters' should be present in output xml.
    Adding same parameter to 'trigger_parameterized_builds' publisher.
    
    Change-Id: I7769507d8da138fe0944e1b5bc24ab595e787587
    Refactor checkstyle publisher
    
    Change-Id: If829720c026ecffc6a5e1cede9aafa51d1ec86e6
    adds safe-output to email-ext in publishers.py
    
    adds support for Save to Workspace option for email-ext plugin
    
    Change-Id: I9fa2ed87a6d715ec8f56def053f486e8bf628b13
    Add perlcritic capability to violations method
    
    Since new jenkins-violation plugin already have support for it
    - https://wiki.jenkins-ci.org/display/JENKINS/Violations
    
    Change-Id: Iad2c1fb5771322682d072cbe8183134994e83ac1
    include publisher.xunit test as doc
    
    Change-Id: I9e29bca6025455ec58078182e37c17f4df394609
    Add support for the Jenkins Clang Scan-Build publisher plugin.
    
    Change-Id: Ib892c790c370301e3e7ba04a83a9cfe38745c3ec
    Add fingerprint parameter to archive publisher.
    
    In Jenkins 1.575 the option to fingerprint build artefacts has been
    moved from Fingerprinter to ArtifactArchiver.
    (https://github.com/jenkinsci/jenkins/commit/f43a450)
    
    This patch reflects the change by adding an optional fingerprint
    parameter to the archive publisher. The parameter recordBuildArtifacts
    in the fingerprint publisher remains unchanged for backward
    compatibility.
    
    Change-Id: I231fdc38eb8343d646f24e7a31cafd29534c9fc8
    Add support for the S3 Publisher plugin
    
    Change-Id: Ia918596276e49d5876bc232fce760e270a829335
    Fix doc typo in scp publisher
    
    In the scp publisher if copy-console is specified it should be stated
    that the source can be omitted instead of the target.
    
    Change-Id: Ie58faa2438496b58ccb8764d70be4cfe0bec7ef1
    Adds claim-build support junit publisher
    
    Requires Claim Plugin.
    https://wiki.jenkins-ci.org/display/JENKINS/Claim+plugin
    
    Change-Id: I8daf721f125d9cd89f0aa005f396cf67405229d2
    Closes-Bug: #1389301
    Publisher xunit now supports embunit
    
    v1.84 of the xUnit plugin support the test type 'embunit'.
    
    Change-Id: I6bf75668274e291c7d6361ec6ea8af4faedbb130
    Added support for Rich Text Publisher Plugin
    
    This commit adds support for the Rich Text Publisher Plugin avaiable at
    https://wiki.jenkins-ci.org/display/JENKINS/Rich+Text+Publisher+Plugin
    
    Change-Id: Id3bf21dfe8ae5a6392fb15334461b0ce4a95e1ae
    Add support for the NodeLabel Parameter plugin
    
    Add support for using the NodeLabel Parameter plugin to
    specify which node should run a job when triggering a
    parameterized build.
    
    Requires the Jenkins NodeLabel Parameter Plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/NodeLabel+Parameter+Plugin
    
    Change-Id: Ie947a2a3069b477419db7eaa35307088712467e3
    Added flexible publish support
    
    Added support for the Flexible Publish plugin to the JJB publishers.
    Updated documentation and unit tests as well.
    
    Change-Id: Id72a4b01f451ae2613b24347afb6493bf7641cd1
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Flatten attribute for publish plugins
    
    plus move examples to tests
    
    Change-Id: Ia785afe40da81c77abe643f3c788e5d4faefbf5d
    Add PMD publisher
    
    Change-Id: I40320337fec0d1564bb1f4b88b4f7a1aa4f2dfc5
    Retain user specified order of post build scripts
    
    Avoid imposing hardcoded order of the scripts within the module and
    instead favour the order of the input data. Combined with use of ordered
    dicts for yaml, this ensures that users may control the order of the
    various steps to use with the post build scripts from yaml.
    
    Change-Id: Icf540a53cb6f1b13f80f09d9103610aee10d3861
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    valgrind publisher: Add parameters to fail build
    
    Add optional parameters fail-no-reports and fail-invalid-reports that
    set the build status to failure if no valgrind reports are available
    or if the reports are malformed.
    
    This parameters have been added to the Jenkins Valgrind Plugin
    version 0.21.
    
    Change-Id: I558802896f24a596f07957ab58a83fcaf6054093
    Add support for the Jenkins Valgrind publisher plugin.
    
    Change-Id: Id5d460a8432b2ab875e8e7063f459ef15b942284
    Specify logging string format arguments as function parameters
    
    Change-Id: If34129e03867b342e5ea5f1d02dc7ab5b0830142
    Change default Reply-To header to $DEFAULT_REPLYTO.
    
    See also https://issues.jenkins-ci.org/browse/JENKINS-17733.
    
    Change-Id: I97c2f2824a8fa74f6387301d29594c59cd73a45a
    Closes-Bug: 1290382
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    add presend-script to email-ext
    
    Change-Id: I388dd2f5ce8aa6ac323f73409dec1003a3f423cb
    Adding second failure option to the email-ext module
    
    Change-Id: I288289e8227c3408f40f0e8272573d20e022ae70
    ssh publisher: add always-publish-from-master support
    
    Allow to SSH from master, instead of hardcoding to false.
    It's particularly useful when the SSH credential are only
    stored on the master. Default is kept to False.
    
    Change-Id: I365cad043d30b6b290828a24635322c7f5afc35e
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    Checkstyle publisher did not honor 0 values
    
    The Checkstyle publisher would not honor value of 0 and instead emit
    an empty XML element.  This was due to the 'if someval' which would be
    false whenever someval is 0.  Adjusted tests to match the new (and
    correct) behavior.
    
    While at it slightly simplified the repeating logic in checkstyle
    publisher.
    
    Change-Id: I7443b93aa116dc049de565ff96ca40526b390409
    support execute-on for postbuildscript
    
    Change-Id: Iccf1fc6bc98f0e78cafc6184b64844be6eba19b8
    Add support for the Jenkins Doxygen publisher plugin.
    
    Change-Id: I0e8f9ee13b7e6fb22e1a5e4bb613b44ae6927e86
    Support Fitnesse results publisher
    
    Change-Id: Ide61f53df1ff8b9bd4d4c67abcad7b485387f44e
    Make overrideDefaultExcludes line into 3 lines
    
    for improved readability.
    
    Manually clean up some hard-to-read XML code in
    jenkins_jobs/modules/publishers.py that was trying to do a lot on one
    line.
    
    Change-Id: Ica0065aae6f2fbaf8755bd8b5d3dea8c7d5a9cb0
    Tests for checkstyle publisher
    
    Should be straightforward, the publisher checkstyle simply lacked tests.
    Also make use of literal include for the examples.
    
    Change-Id: I000cdee47bb0938af9f327bcaba06b87f8287739
    Added send-to options support to email-ext plugin
    
    - added an ability to select the recipients from the predefined groups,
      such as 'Committers', 'Requester' and 'Culprits'
    - added tests for the whole email-ext plugin
    
    Change-Id: I3b03aa1f57f29352121b8501d1fa9fe77383f3b7
    Support the Post Build Script plugin
    
    Lets one execute a shell/groovy script or any builder AFTER the build
    has complete.
    
    https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin
    
    All existing builders should be supported since this patch call the
    usual dispatcher.
    
    Change-Id: Ide059ec9fd0e556f0c50ec992a6021eb5afb261c
    Added support for CI Game plugin
    
    Change-Id: I27497e8cd7d2c5c85de33a81f0bc6871bd1f1c00
    Fix typo in ircbot's default matrix-notifier.
    
    * Add a test fixture for the ircbot plugin that shows the bug.
    * Fix the bug.
    
    Update: Extract original example from the documentation as
    ircbot001.yaml and include in the doc via literalinclude.  Add a
    second test case, ircbot002.yaml to demonstrate the bug fixed by this
    patch.
    
    Closes-Bug: #1290376
    Change-Id: Ifcb96a6dab5ee923cee7d3e71bfe518f1e3d0ebc
    Ruby metrics plugin support added
    
    Rcov plugin parses rcov html report files and
    shows it in Jenkins with a trend graph.
    
    Change-Id: I1f1d177c8681e68e5c12b520e263648842c701d0
    Support the new Always trigger type.
    
    Support for this trigger was added in email-ext v2.36.
    
    See https://issues.jenkins-ci.org/browse/JENKINS-20013 for more
    details.
    
    Change-Id: Ibfb3ec96218fc7133439e17853638593fed41a44
    Fix doc error in the testng publisher
    
    Change-Id: I49f041f025f57cfe8c6d794b95285982f153453e
    Content-Type can now be set for email-ext publisher
    
    The email-ext publisher was always sending email using the default
    content type which is server wide.  This tiny patch let us overwrite the
    content-type on a job basis.
    
    The YAML possible values are 'html' or 'text' to force the content-type
    to one of the two modes.
    
    Change-Id: Id66bc3369332c389dfb6318113392694a4f98aad
    Add attachment pattern expression to email-ext.
    
    Change-Id: I38f58a081bdd591bc13cfff177971f7ff036ad23
    Test for email-ext publisher
    
    Also add the test fixture as an example in the documentation.
    
    Change-Id: Iff253e52f9aa900bb61c6f621844bab4d8e696f2
    ArtifactDeployer Plugin support added
    
    This plugin makes it possible to copy artifacts to remote locations.
    
    Change-Id: I39fbee7b397efb8560f340f0f02b51bf6ebcfd74
    Campfire had a malformed doc syntax
    
    Change-Id: Ief7ef4313a9cbb6d5232088d834bf515b52313a4
    Add support for TestNG publisher.
    
    Change-Id: I4686958440e6058fce6c02d3e2f1b88551c18176
    Added support for Jenkins Campfire plugin
    
      Basic setup of Campfire notifications from builds.
    
    Change-Id: I4e0bc43a1583fe51e0510743844d66e82b184e23
    allow missing reports for HTML publisher
    
    The plugin support a new flag, allow-missing-report. Expose it in jjb.
    
    Change-Id: I026db9e54fdd3be47b74ae709770e6e4f5a77f6e
    Closes-Bug: 1277118
    Added matrix trigger option to email-ext publisher
    
    Change-Id: I86655a2f4dac6c05c7ea28f12c23ca3b1153334b
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix misspellings in jenkins-job-builder
    
    Fix misspellings detected by:
    * pip install misspellings
    * git ls-files | grep -v locale | misspellings -f -
    
    Change-Id: I2443a0a3ae909457ee4f31a6837b445be03de0dc
    Closes-Bug: #1257295
    Added clone-workspace publisher
    
    Change-Id: I39c71d69b100206e09164f0b765bda14d6f428c6
    doc: fixed path including example for description setter
    
    Change-Id: I7bfc7bb5bcc024fdb02fd2b287c92687f7457c77
    Support site monitor publisher
    
    This publisher allows to check an URL after the build steps. It requires
    the sitemonitor plugin from
    
    https://wiki.jenkins-ci.org/display/JENKINS/SiteMonitor+Plugin
    
    Change-Id: I83026e4db9bd7975a34b7d8e015a4a73c3b09ae8
    Add support for Test Stability with Junit
    
    Adds test-stability option to junit test result
    publisher, requires Test stability plugin to be installed.
    
    https://wiki.jenkins-ci.org/display/JENKINS/Test+stability+plugin
    
    Change-Id: Idd7ef1bdeaf9e6fd8881bab5729950dc717ce9f3
    Fix references to examples in api documentation
    
    The documentation displayed references to examples in the main docs but not in
    the corresponding api reference docs.  The build had these warnings..
    
    : WARNING: Include file u'/Users/khaido/workspace/jenkins-job-builder/doc/source/api/
    ../../tests/properties/fixtures/batch-task.yaml' not found or reading it failed
    
    As pointed out by Darragh[1] the problem was that literalinclude needs a leading '/' to
    correctly reference both docs.
    
    [1] https://review.openstack.org/#/c/48783/15/jenkins_jobs/local_yaml.py
    
    Change-Id: Ib1f8ccca40af1ee54c2bd00b2b42ba39e3c0c8e5
    maven-deploy: don't require id
    
    The id element is eg. not needed for file deployment so don't make it
    mandatory.
    
    Change-Id: Ide83b18cbab6010033c3bd8e8264595d1d2d5fa2
    Add support for parameters in pipeline publisher.
    
    Change-Id: Ie36d7c6a9daab17adf93586f79b92be0ed267c35
    Implements: Archive publisher allow-empty setting.
    
    The archive publisher did not allow setting the allowEmptyArchive setting in the YAML.
    This change adds configuring the setting if it is defined in the YAML file. If the value
    is 'true' then it is set, else it is 'false'. The default Jenkins behavior is 'false' disallowing
    builds to pass without storing the archived data.
    
    Updated the doc string to add that there is a default value (false) which is also the default Jenkins behavior.
    Cleand up the value assignment, and typed it to a str().
    
    fixed pep8 violation
    
    Addresses patchset 3 request to update the doc string to use the test directly.
    Would like to have more discussion around the second point in patchset 3 around having
    the new code add a line of XML.
    
    Change-Id: I5e0c9ed7e8ea669a8d0e8f267ebb02d5f0b6ae73
    Added support for Github notifier
    
    Change-Id: I79c7847aa8df4dd4f9f76567c461d016aa00c6c1
    cloverphp publisher
    
    Capture code coverage reports from PHPUnit, requires the Jenkins Clover
    PHP Plugin:
     https://wiki.jenkins-ci.org/display/JENKINS/Clover+PHP+Plugin
    
    Note: whenever the healthy targets are left blank, the v0.3.3 plugin
    will fill in default values which then appears in the configuration. I
    have ported that in Jenkins Job Builder to ensure clean diff in the Job
    Configuration History plugin.
    
    Change-Id: I9010dee62611094840304cdc2e7317b058d6495a
    Description Setter Plugin support added
    
    This plugin sets the description for each build,
    based upon a RegEx test of the build log file.
    
    Change-Id: If3c8b3ec6e9c23ffe74a5e857618267936a0e989
    Corrected typo in example for pipeline plugin
    
    Change-Id: I82732551f9a6c8375f8a87bf0f66fb97ec0c3df1
    raise JenkinsJobsException instead of Exception
    
    Normalize all exceptions to be JenkinsJobsException from the
    jenkins_jobs.errors module.  This patch replace all occurences of the
    build-in Exception.
    
    Change-Id: I923ec35467dd93211d8cd1e6c69c0321d9391ec8
    Added support for Jenkins plugin Blame upstream committers
    
    Change-Id: Iefbca697ac93176c9e132e7a0dc04f2b0a7b09f6
    Added support for Stash Notifier
    
    Change-Id: I1e3e95a152de116df62b9124a50e845bc026f608
    Added support for Emotional Jenkins
    
    Change-Id: Icaac9cc07b64384b3d65234bf9c603ef55f0b104
    use jjb tests as the examples
    
    So during my reviews of jjb code I've noticed that many of the examples in
    the documentation are either not correct or are out of date.  So instead of
    documenting examples in the source I think it would be preferable to
    have a test for every module and use that test as the example for the
    module.  We run the tests continuously so this will keep the examples
    working and up to date.
    
    This patch starts with the scp module.
    
    Change-Id: I161fa22359f8ecb2ae9e511d204c1fa0bce48581
    fix jjb scp publisher example
    
    The scp publisher is incorrect.  It was missing a 'files' list.
    
    Change-Id: I45d4708d0aee53adc7a7f16334dc7538757d22d4
    Add build-publisher to jenkins-job-builder
    
    Added new build-publisher following guidelines:
    https://wiki.jenkins-ci.org/display/JENKINS/Build+Publisher+Plugin
    Add to the list of publishers, implement module, provide tests
    
    Change-Id: I7c130f4375cffc2a5e9acea6b417edc3e12886e7
    Closes-Bug: #1234959
    publishers: correct XML element for boosttest xunit
    
    The xUnit publisher (introduced by 2736e149) add a copy paste issue that
    caused the 'boostest' type to use an XML element named
    AUnitJunitHudsonTestType instead of BoostTestJunitHudsonTestType.
    
    Closes-Bug: 1239121
    Change-Id: I612075f5327025136d161dd60653a4f8edabb772
    doc: fix up strict errors
    
    Running Sphinx 1.2b1 running in strict mode (-W), yields three different
    errors:
    
    * .. Running::   is an unknown command, uses '.. rubric::' instead
    * double stars '**' needs either to be escaped with backslashes or
      quoted literrally with double backquotes
    * nested lists needs newlines before and after for some reason.
    
    Change-Id: I8680aef7306c619c817c637882715f5a7d08c5d9
    KeepLongStdio argument for JUnit publisher
    
    JUnit publisher had hardcoded 'true' for bool option
    if to keep long output log for results.
    
    This changes it to be configurable via keep-long-stdio option.
    
    Change-Id: I0b3ddef120e08b61a7cd327807c18353ea427a34
    Add publisher for Git Publisher support
    
    This change adds functionality to configure the Git Publisher
    post-build action in Jenkins jobs. Git Publisher is used to push
    results of a build back to one or more Git repositories.
    
    Change-Id: I275762934aa12c5c859db7c96003af8c6824b744
    Publish Over SSH Plugin option added
    
    Added "use pty" option to Publish Over SSH Plugin which allows
    to use pseudo TTY for the Exec command
    
    Change-Id: I38d28ae9d95c8bd295ea73a8916ef1a0175e341e
    Fix plot plugin support
    
    Based on the source code of the jenkins plot plugin
    https://github.com/jenkinsci/plot-plugin/ the related publisher
    has been updated to generate a working XML block and match the
    behaviour for data persistency in CSV file with random generated
    name.
    Minor code adjustement to match coding covention (Hyphen and
    capital letter usage)
    Plot group now correctly handled.
    All three type of plot with different option are covered in tests.
    
    Change-Id: I6bd22ea19f397cf2123b924ff5517682a53177ed
    Closes-Bug: #1223017
    Fix plot plugin support
    
    In case of using CSV or XML source file for plotting, the xml block
    now includes the file to be plotted. Docs updated to match current
    behaviour.
    
    Change-Id: If613ebf08948d289be2c9be7dcdd8b7973f745f1
    Closes-Bug: #1221326
    Added support for JaCoCo plugin Publisher
    
    Support for using JaCoCo (https://wiki.jenkins-ci.org/display/JENKINS/JaCoCo+Plugin) as a publisher for a Jenkins job.
    
    Change-Id: I69992bc1c31f69706422f946ede2ae8016a36f81
    Add Plot plugin support
    
    This publisher provides generic plotting (or graphing) capabilities in
    Jenkins with Plot plugin.
    
    Implements: blueprint jenkins-job-builder-plot
    Change-Id: I7a957357fb25c2537f9b62a5354ea796268fe5c6
    Signed-off-by: Emilien Macchi <emilien.macchi@enovance.com>
    Add IRCbot plugin support
    
    This publisher enables Jenkins to send build notífications via IRC and lets you
    interact with Jenkins via an IRC bot.
    
    Change-Id: I9e676f7c54033327409c10b998e2a5218147ce9a
    Implements: blueprint jenkins-job-builder-irc
    Signed-off-by: Emilien Macchi <emilien.macchi@enovance.com>
    Make references to Jenkins plugins uniform
    
    Change-Id: I2324db6424145c183048a27c7be30b4068331cf0
    Escape special characters in documentation
    
    Fix warning thrown when building documentation:
    
      WARNING: Inline strong start-string without end-string.
    
    Change-Id: Ifaa221678bf67c2951d9c33f428cadc8f891aee9
    Fix typo in publishers documentation
    
    Change-Id: I475c9525cad64f47c80431086501eda2cafed4ae
    Signed-off-by: Emilien Macchi <emilien.macchi@enovance.com>
    Add SLOCCount plugin support
    
    This publisher provides the trend report for SLOCCount.
    
    Change-Id: I67c1299a5874317478a76d6a47dd74603a80144e
    Implements: blueprint jenkins-job-builder-sloccount
    Signed-off-by: Emilien Macchi <emilien.macchi@enovance.com>
    Existing plugins improvements
    
    - added NodeLabel Parameter Plugin functionality to MultiJob Plugin
    - added fail-on-missing option to Parametrized Trigger Plugin
    - added command and timeout options to Publish Over SSH Plugin
    
    Change-Id: I36adfc99026a43ffbd8f7d3336ef7945eabd2721
    Adding support for the Warnings plugin
    
    This change adds the warnings plugin.  The implementation
    pretty much just follows the UI from the top down.
    
    While the parsers are a drop down list in the UI, it was decided
    that allowing that field to be a string instead of a dictionary
    was necessary since the user can configure their own custom
    parsers at the system level and use them here.
    
    Also fixed the xml-summary and logparser documentation to have
    the example correctly displayed and the post-tasks documentation
    to have the plugin correct.
    
    Change-Id: I0f4eb8c8dc3d42d735aa4eff39b0e933326a2a79
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Added Robot Framework reports publisher
    
    Change-Id: I6ab7aa7ba266ad6317674a1bc8a66ddccf3110ea
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Add support for the Summary Report publisher
    
    Change-Id: I8ba5ca21c698e1ce09b12d532e350b0987c53413
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Added post-task publisher
    
    - Added support for the Post build task plugin
    
    Change-Id: Ifa80927959aadb29672827687c81982dea0b9c3a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    HTML Publisher plugin support added
    
    HTML Publisher provides an ability to publish the html reports
    that your build generates to the job and build pages.
    
    Change-Id: I13c3e0a570e717eddf84c61b095e4a32dde4e0af
    TextFinder plugin support added
    
    TextFinder provides an ability to check console output and content
    of specified files to ensure build status.
    
    Change-Id: I3907efc658e760d228d76633867031d94cadd6ab
    xunit publisher was wrong with multiple types
    
    When using multiple xunit publishers such as:
    
      publishers:
       - xunit:
              types:
               - phpunit:
                      pattern: 'junitphp.xml'
               - cppunit:
                      pattern: 'cppunit.log'
    
    the publisher was wrapping each framework (phpunit, cppunit in above
    example) in its own <types /> which is not at all how the Jenkins plugin
    does it.
    
    Instead, this patch creates a single <types /> element and attach all
    frameworks to it.
    
    Change-Id: I6822d6355e7ba47546f6e959e3d1a160a059243b
    trigger_parameterized_builds: Add support restrict-matrix-project.
    
    When triggering a downstream matrix job, it can be useful to
    restrict runs to a subset of all combinations. This is done
    by a groovy filter, configured with the restrict-matrix-project
    key.
    
    Change-Id: I6ac252657e35c110f1caa48b59e970ed390935e5
    Reviewed-on: https://review.openstack.org/35063
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Add TAP test result handling ability
    
    Add support for using org.tap4j.plugin.TapPublisher as a publisher "tap"
    
    See https://wiki.jenkins-ci.org/display/JENKINS/TAP+Plugin for the
    plugin in question
    
    Change-Id: Iddbd96715830ecc761384963fecfe3cd5ec3c115
    Reviewed-on: https://review.openstack.org/34974
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    fix invalid yaml in archive example
    
    Change-Id: I9b10a33bafdc7d4811807ff01a96f37d9343b3c6
    Reviewed-on: https://review.openstack.org/32643
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    change latest_only to latest-only for consistency
    
    still accepts latest_only for backward compatiblity but emits a warning
    
    Change-Id: I007d2fa2e02f15a9fd4a2eebcf5883091c8b865b
    Reviewed-on: https://review.openstack.org/31449
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add Deploy artifacts to Maven repository publisher
    
    Change-Id: I758a34d82ca0f8404d98b27605ee5c693f6fdcdd
    Reviewed-on: https://review.openstack.org/32302
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    add post build workspace cleanup publisher
    
    Change-Id: Id541aaa8173202bf141f389c7258e0dd43b39472
    Reviewed-on: https://review.openstack.org/31448
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding Jabber Plugin
    
    This change adds support for the Jabber plugin so Jenkins can
    report results to chat rooms.
    
    This change also fixes a misspelling of trigger in the documentation
    of the join-trigger functionality.
    
    Change-Id: I69659b106c6e1730506ee8150df8c07c1be27254
    Reviewed-on: https://review.openstack.org/29779
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for the performance plugin.
    
    Throws an error when invalid values are provided.
    
    Also fix a minor spelling error.
    
    Change-Id: Ib32fffbbdab89f072894e675a43eecfb0fff983d
    Reviewed-on: https://review.openstack.org/28916
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Pass svn revision to triggered jobs
    
    This change adds the ability to pass the subversion revisions that
    were used in the build to the downstream builds.
    
    Added passing current-build parameters to downstream jobs
    triggered in the post build actions, to keep builders and publishers
    in sync.
    
    Noticed arg type for git-revision was incorrect and changed it to
    bool from str.
    
    Change-Id: I029c1d88b23e08ac2546a92018fef06c22c357b1
    Reviewed-on: https://review.openstack.org/28793
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Enhance support for the Cobertura Coverage Plugin. Deprecates the coverage module.
    
    Increases the amount of recognizable parameters, modularizes existing parameters
    and maintains default values.
    
    Modularizes the construction of coverage reports. Coverage reports can now be fully
    specified within JJB YAML. Coverage reports now use a default value of zero for
    healthy, unhealthy, and unstable. Additionally, at least one target must be specified.
    
    Coverage module gets a documentation and logger warning against its use. Logger object
    moved to the head of the code.
    
    Change-Id: I505a6185b3f9005fbbd9786ebdca0ef02ed618f0
    Reviewed-on: https://review.openstack.org/28184
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    email-ext: Expose reply-to and attach-build-log.
    
    Options are self-explanatory hopefully.
    
    Change-Id: I928851ebdaeb75f785d990008792d6a9e72512e3
    Reviewed-on: https://review.openstack.org/27965
    Reviewed-by: Jesse Keating <jesse.keating@rackspace.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    PublishOver: Expose several options.
    
    Plugins in the Publis Over * series can be configured to:
    - fail the build when transfer fail (fail-on-error),
    - delete remote directory before tranfering files (clean-remote),
    - create a directory using current date (target-is-date-format).
    
    Theses properties are now configurables in Jenkins Job Builders
    for the cifs, ftp and ssh variants.
    
    Change-Id: I3808bb577809d4197bfc57f3dc4b2ca8e04ff073
    Reviewed-on: https://review.openstack.org/27655
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add suport for the Publish over SSH plugin.
    
    Change-Id: Id06bd57c1d290df98c05b3cb19066013635199a3
    Reviewed-on: https://review.openstack.org/26831
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Add support for join trigger publisher
    
    Change-Id: Ifbfb28fd61092f15d7960f5dfc8ba57992607464
    Reviewed-on: https://review.openstack.org/26318
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add Sonar Plugin support.
    
    The Sonar Plugin provides both a builder and a publisher,
    the later targeting Maven projects.
    
    This commit adds support for the publisher, which is straightforward
    to configure: no option is required, the plugin finds suitable
    defaults by itself.
    
    Several parameters can be provided though, which are transferred
    as is to either Sonar or Maven. Analysis can also be skipped under
    certain conditions.
    
    Change-Id: I30744d0961d623cabf7c0780ab2f0d4db2cd9295
    Reviewed-on: https://review.openstack.org/25073
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Fix checkstyle documentation
    
    This is following the style of the artifact-resolver builder, which
    has other nested dictionaries also.
    
    Change-Id: I26b909e18239df03c123e07791fa7a3549be7701
    Reviewed-on: https://review.openstack.org/23977
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    ftp, cifs: Make optional prefixes really optionals.
    
    Excludes and remove were marker optional, but weren't in practice.
    Provides defaults values so that they are really optional.
    
    Change-Id: I6bd6f5183d888b0716bdf5690fc19bcd91bfc856
    Reviewed-on: https://review.openstack.org/23864
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    ftp: Refactor using base_publish_over.
    
    The subtlety is that Publish Over FTP offers additional options compared
    to the CIFS variant. This is done by customizing the XML tree created by
    base_publish_over.
    
    Change-Id: I5ff3614781cb52a47bf9816c2326d3fe9a96a47f
    Reviewed-on: https://review.openstack.org/23863
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    cifs: Externalize common code to base_publish_over.
    
    The various Publish Over... plugins offer a similar configuration
    structure.
    
    Externalizing that knowledge will allow reuse between modules.
    
    Change-Id: I8dd7f62713da013354c656e9437522210e2c39f9
    Reviewed-on: https://review.openstack.org/23862
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    publishers: Add support for Publish over CIFS.
    
    Projects might need to publish artifacts on Windows shares, which is
    possible with the CIFS variant of Publish Over plugins.
    
    The provided support is mostly similar to the existing ftp support.
    
    Change-Id: Ic313f579158fb6460ab934f705b9c512b1131ca2
    Reviewed-on: https://review.openstack.org/23861
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Property file for parameterized downstream jobs
    
    Added ability to specify parameters from properties file for parameterized
    build on other projects.  This change follows the predefined-properties code
    as a template for how to do the work.  This is a change to only the
    publishers.py file.
    
    Change-Id: I4b3500dc9b4f50450475aa8441854fa6b5b0ccb0
    Reviewed-on: https://review.openstack.org/23432
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for passing git revision through a parameterized build trigger.
    
    Change-Id: Id937a278b04f2a590e9b1606b18634f584032bb8
    Reviewed-on: https://review.openstack.org/22555
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fixing trigger-parameterized-builds example
    
    The example for the trigger-parameterized-builds functionality is
    incorrect.  A dash is needed before the project in the yaml so the
    code knows that project is used multiple times.  I also added the
    predefined-parameters value to the example to show how that is used,
     because it took me a while to figure out
    
    Change-Id: Ib6c5ffb18c213ccc1396edd1264edbf4c28ff651
    Reviewed-on: https://review.openstack.org/21129
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Implement publisher.checkstyle
    
    Add publisher for Checkstyle Plugin[1] (based on code for the
    Violations Plugin publisher)
    
    [1] https://wiki.jenkins-ci.org/display/JENKINS/Checkstyle+Plugin
    
    Change-Id: Ie622ad8600720081072f288e72dd56e65505380a
    Reviewed-on: https://review.openstack.org/21066
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    publishers: added option to define groovy postbuild script
    
    Change-Id: I3ee3be40148321412c04bfa2c72152bc41986389
    Reviewed-on: https://review.openstack.org/20905
    Reviewed-by: Jaroslav Henner <jhenner@redhat.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fixing defaults for email-ext
    
    If you go into Jenkins and just fill out the reipient list and click
    save, Jenkins will default to having a Failure Trigger.  Jenkins
    will also set the subject to $DEFAULT_SUBJECT and the content
    to $DEFAULT_CONTENT.  This change is making JJB have the same
    defaults for the email-ext functionality.  This way a user
    can just set the recipient list and have it show up in Jenkins.
    Previously just setting the reipient list lead to $DEFAULT_RECIPIENTS
    being set instead with a FailureTrigger and this can be confusing
    to some users.  This change also makes the recipient list default
    to $DEFAULT_RECIPIENTS, like the plugin does when you first add
    it to a job.  This way a user can just specify email-ext and the
    global defaults will be used.
    
    Change-Id: I8f207d495466a4a87431dbcb2cd46cb661b60ce1
    Reviewed-on: https://review.openstack.org/19391
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fixing function name to follow standards
    
    The current style guide is for functions implemented as xx-xx
    to be named xx_xx in the python code.  The functionality implementing
    the claim build plugin has been implemented as claim-build, thus
    the function in the python code should be claim_build
    instead of claimbuild as it is currently implemented
    
    Change-Id: I0cc3ebe37bfd6249f2985f0208697d6cc1a275db
    Reviewed-on: https://review.openstack.org/18688
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add ability to use the JIRA Plugin.
    This change adds the ability for Jenkins to update relevant JIRA issues
    
    Change-Id: I1fdf00feb6931e588af587924a6a995fd66c2490
    Reviewed-on: https://review.openstack.org/16971
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    add support for copy-to-slave and copy-to-master
    
    Change-Id: I53eda0c9061cd3cc6c17f9f0afb1cb0bc60d9202
    Reviewed-on: https://review.openstack.org/16550
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    add support for logparser publisher
    
    Change-Id: If52f021fd077ffd5983cda8c672ce93d1084097d
    Reviewed-on: https://review.openstack.org/16549
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    add support for cppcheck result publisher
    
    Change-Id: Iaa0fefb296c72ce4ac955986375e63704f45e6d5
    Reviewed-on: https://review.openstack.org/16548
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Small doc fixes
    - A couple of typos
    - Avoid .yaml to be interpreted as manpage macro
    
    Change-Id: I51f954da733cef64b05fee9797b01afba41d48f3
    Reviewed-on: https://review.openstack.org/16613
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    xunit publisher update for <failIfNotNew />
    
    The xunit Jenkins plugin has changed an XML element name between its
    versions 1.48 and 1.51. This patch update JJB publisher to reflect that
    change.
    
    The element used to be <failedIfNotNew /> and is now <failIfNotNew />.
    
    Change-Id: Ia1b77da6f449e198ff4e4843a7f0041e4b001703
    Reviewed-on: https://review.openstack.org/16519
    Reviewed-by: David Ripton <dripton@redhat.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to aggregate downstream test results
    
    Change-Id: If688379d17cf1cbfaf4018f53e0e01625ddaeb11
    Reviewed-on: https://review.openstack.org/15522
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to fingerprint files
    
    Change-Id: If5f59588994ad17de56adffa0f64a1aab1ee2e1c
    Reviewed-on: https://review.openstack.org/15514
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to use the Email-ext plugin
    
    Change-Id: I3b4094397726eb0ddd0acc019e19ffa96251a9e1
    Reviewed-on: https://review.openstack.org/15438
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Do not output XML if job name not specified ('pipeline', 'trigger-builds')
    
    Done in order to enable specifying build pipelines at the project level.
    Pipelines are built using the 'pipeline' plugin or the 'trigger-builds'
    plugin.  The downstream job to be executed is specified at the project
    level, and substituted into the template.  Ignoring definitions where
    the downstream job is blank allows the pipeline to be easily terminated.
    
    Also adding a samples/ directory, which currently contains an example of
    pipeline creation, together with a new tools/run-compare-xml-samples.sh
    to run the before/after test on the samples.
    
    Change-Id: Icc324d1485e22db7824ad784890db48eb3e48f8f
    Reviewed-on: https://review.openstack.org/13706
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add BuildTrigger support
    
    Change-Id: I85caf018a69a24e83a58b76d114c962f1516e104
    Reviewed-on: https://review.openstack.org/14736
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to use the claim plugin
    
    Change-Id: Iff3bc8acc3724cec35fce68b291638dd7185c310
    Reviewed-on: https://review.openstack.org/14892
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Fix docstring for pipeline publisher.
    
    Change-Id: Ie4bc5fed35d39dbca2c3ef9ca185d465df0dc4e2
    Reviewed-on: https://review.openstack.org/14457
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    publisher for xunit
    
    Let you describe a publisher for the xUnit Jenkins plugin:
            https://wiki.jenkins-ci.org/display/JENKINS/xUnit+Plugin
    
    import the `logger` module since this publisher is doing a few
    validations.
    
    Example usage:
    
    publishers:
            - xunit:
                    thresholdmode: 'number'
                    thresholds:
                      - skipped:
                                    unstablenew: 1
                                    failurenew: 1
                    types:
                      - phpunit:
                              pattern: "junit.log"
                              stoponerror: false
                      - cppunit:
                              pattern: "cppunit.log"
    
    Test plan:
    * tox is all green
    * sphinx doc got no warning and looks fine
    
    Change-Id: Iab418b9a94e0f538afb7c2a4824ab4ddf421c208
    Reviewed-on: https://review.openstack.org/14283
    Reviewed-by: David Ripton <dripton@redhat.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add email publisher/reporter.
    
    Also, add reporters module.
    
    Change-Id: I9cd0abca3d90f1af5f275698ecc9ccb7d9086494
    Reviewed-on: https://review.openstack.org/13303
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add some missing docs.
    
    Change-Id: I6d726c3ad281cf11e44f37a48256fb88ea1546a2
    Reviewed-on: https://review.openstack.org/13165
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Make code pass pep8 1.2 checks.
    
    Change-Id: I5544ce07c7423a0e530860fa5637af26c73f6521
    Reviewed-on: https://review.openstack.org/13162
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add links to required Jenkins plugins in docs.
    
    Add links to section docstrings that point at Jenkins plugins required
    for that particular section to work.
    
    Change-Id: Ie5c8de780072b157fbb873227d3ccfa5a2be88f3
    Reviewed-on: https://review.openstack.org/13155
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding 'pipeline' publisher to enable the build pipeline plugin
    
    Change-Id: I0ab567c07c5acd7408d7662ea75dd8513a58888e
    Reviewed-on: https://review.openstack.org/12792
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Improve scp publisher.
    
    Add copy console, copy after failure, and multiple entries.
    
    Change-Id: I7c4917fc0f1b4a30fcca349f2244c02a1898429f
    Reviewed-on: https://review.openstack.org/11682
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Change pep8 publisher to generic violations.
    
    Change-Id: I94abedc07e0e5884cd737975c65d53375c598f14
    Reviewed-on: https://review.openstack.org/11501
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Change all '_' to '-' in YAML for consistency.
    
    Change-Id: If19cb26fa544b485acfc188baf3506eaea61d6cf
    Reviewed-on: https://review.openstack.org/11154
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fixing Inject to not create empty tags
    
    Using the Inject functionality with the builders section caused
    an error in Jenkins because the script-file was blank but the tag
    existed in the xml.
    
    Fixing this by adding a function to create the XML only if the given
    value is not None and not a blank value '':
    
        def add_nonblank_xml_subelement(parent, tag, value):
    
    Change-Id: I9151f7444f6807e929721b04fb8e7ad3a867cd6c
    Reviewed-on: https://review.openstack.org/18820
    Reviewed-by: Jon-Paul Sullivan <jonpaul.sullivan@hp.com>
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add links to required Jenkins plugins in docs.
    
    Add links to section docstrings that point at Jenkins plugins required
    for that particular section to work.
    
    Change-Id: Ie5c8de780072b157fbb873227d3ccfa5a2be88f3
    Reviewed-on: https://review.openstack.org/13155
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add support to configure boolean parameter in PBT
    
    This change adds support to the Parameterized Build Trigger plugin for
    configuring boolean parameters.
    
    Change-Id: I797fe298248c2737095b39820382a8610a102d87
    Also-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Consolidate CFP settings into a common function
    
    ConfigFileProvider configuration is the same but is used in a few
    places. This patch consolidates the configuration into a common reusable
    function.
    
    Change-Id: Idb45e43ff5a9dd6cea84e37026f875f98dc04c83
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add support for Config File Provider to Maven Project module
    
    Note: this is a port of the patch from commit 1e216835
    https://review.openstack.org/gitweb?p=openstack-infra/jenkins-job-builder.git;a=commit;h=1e216835
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ic7f4d4d676e67f5f96afc3bd412dea5a50bee79b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add support to customize trigger-builds block thresholds
    
    Updated trigger-builds function to support customization of
    thresholds sub sections under block section
    
    Currently JJB only set default values to those three block thresholds.
    There are sometimes need to set different values than default.
    
    Change-Id: I73e7f828c6b651b87e7068d3c16362f4901ba32a
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Add support for github commit status pending
    
    Introduced in the github plugin at version 1.10:
    'Build step to set Github commit status as "pending"'
    
    Change-Id: I6c586ae44563608f095fff1eb65395d0338d7cb4
    Add Job DSL Plugin
    
    Add support for Job DSL plugin for Groovy-based job and view
    creation and management
    
    Change-Id: I23a499523e994aac79974b997f8370c85cd8dbeb
    Add 'last-completed' to copyartifact 'which-build' values
    
    Change-Id: I4ae84f7ca2d8d28195d6590c7a25d6c8886cde77
    adds support for not condition in conditional_step
    
    updated builders.py to support not condition for conditional_step
    
    Change-Id: Icf6f07ab4a53655d8f52c8793478afd6d93ae75c
    Provide a more complete yaml reference in the docs for CMake module.
    
    Change-Id: I4d32b332a55da81d8e5ee97a351205af12071bf9
    builders: add cmakebuilder plugin support
    
    The cmakebuilder plugin is used to configure CMake builds to Jenkins,
    being able to set several directories and variables related to CMake.
    
    All the possible configurations for the plugin can be set with this
    builder. Also included on this change are the documentation and two test
    cases, one for common usage types and another more complete.
    
    More information about the plugin can be found at:
    https://wiki.jenkins-ci.org/display/JENKINS/cmakebuilder+Plugin
    
    Change-Id: I3f62515d7dc2d3b6e5726ebe06c53e72de5cde90
    Signed-off-by: Lucas Dutra Nunes <ldnunes@ossystems.com.br>
    Add 'Enable condition' support to MultiJob builder
    
    'Enable condition' is optional condition in groovy script
    format to run phase job of MultiJob project
    
    Change-Id: I1962d7f8dc2a3613e96654ba11e15f79f8193fae
    Add support for 'All Nodes For Label Factory'
    
    Gives ability to trigger a build of a project on all nodes
    with specific label. Requires NodeLabel Parameter plugin.
    
    Change-Id: I1a59c7c27591574bb1c1af0041de7cfd3775916d
    Add strings-match conditional step
    
    Change-Id: I9a4a069b0ed4f57f0bb71a66b9bb1256d03d4f80
    Add support for scripts in the inject builder
    
    Sometimes we want to inject environment variables from
    different sources, so it's very useful to be able to use
    EnvInject's script parameters. This change adds support.
    
    Change-Id: I5b3054c0fa8c5ba45fb3f73ed50a1da52f60fb8e
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Extend trigger_builds functionality
    
    To support fan-out and conditional trigger behaviour with
    Jenkins Parameterized Trigger Plugin add following attributes:
    
    * Config for failTriggerOnMissing
    * Parameter factories
    
    Change-Id: I3755ed32779e64e7aee7a55a00c683edff6bbbd8
    Adding support for the Powershell plugin.
    
    See https://wiki.jenkins-ci.org/display/JENKINS/PowerShell+Plugin
    
    Change-Id: I337ea896e358fe456e556a95e22e724fe20cd722
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Adds support for Change Assembly Version plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Change+Assembly+Version
    
    Change-Id: Ib1ae6a18b4fc1ea0e75228b288d59dbec7e4d44c
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Add support for Managed Script Plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/Managed+Script+Plugin
    
    Change-Id: Ic37f02886f242f5ff31a7421e699b85227c5264f
    Add support for builder Groovy and System Groovy
    
    Closes-Bug: #1251869
    Change-Id: Ibc49e1aca7b33eb9c0c21472a924cb375069ee51
    multijob: added kill-phase-on option
    
    this option allows terminate job phase on specific status of job
    
    Change-Id: I5984fb2494120afc97140c1ae38635301e8f1376
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    Add additional yaml/xml tests, literalinclude them
    
    instead of using inline examples in docstrings. With literalinclude, we
    know the examples are tested.
    
    Change-Id: I95fbb4726bd6731d9687d09a3d6e7d4e5a445131
    Add more tests
    
    Change-Id: Ie0e0e3906edaa278805917e6303b1d5f1daba864
    add tests for shell builder
    
    Change-Id: I37350e7e813db173e033bd4131e62be77ab9753a
    add support for python builder
    
    Change-Id: I0b1711c04435287bb851a72df25ebba10c891831
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Sort ant builders settings for consistency
    
    The list of settings yielded to the ant builder might be yielded in
    different order which produces noisy diff when comparing changes.
    
    Change-Id: Ibaef54bcf11a653934b473722632e07463682328
    Allow 'Build on the same node' in trigger-builds builder
    
    In `trigger-builds` builder, create the
    '<hudson.plugins.parameterizedtrigger.NodeParameters/>'
    element if 'same-node' parameter is set to 'true'.
    
    This adds the configurability of the 'Build on the same node'
    parameter.
    
    Change-Id: I3b6fa0a50b74932ad9837c7b88835b8b0c9c23ec
    triggered-builds: Support property file injection
    
    Change-Id: I31091977560eabf5656aaa8706de5410d86d5caf
    Added support for python virtualenv plugin
    
    Change-Id: Ie21699d43ff6331ae93cc83d8f9751ac683b43fa
    Fix misspelling in jenkins-job-builder
    
    Conditionaly -> Conditionally
    
    Change-Id: I8ad1cf7d645266ad4dc35c479e0ea26989cdb644
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    Fix references to examples in api documentation
    
    The documentation displayed references to examples in the main docs but not in
    the corresponding api reference docs.  The build had these warnings..
    
    : WARNING: Include file u'/Users/khaido/workspace/jenkins-job-builder/doc/source/api/
    ../../tests/properties/fixtures/batch-task.yaml' not found or reading it failed
    
    As pointed out by Darragh[1] the problem was that literalinclude needs a leading '/' to
    correctly reference both docs.
    
    [1] https://review.openstack.org/#/c/48783/15/jenkins_jobs/local_yaml.py
    
    Change-Id: Ib1f8ccca40af1ee54c2bd00b2b42ba39e3c0c8e5
    add private-repository, java-opts, settings and global-settings to maven-target
    
    Done to enable private repository for jobs making it more safe to
    run concurrent maven builds and for allowing to control javavm and other
    maven settings for maven build.
    
    Includes moving doc example for maven-target as a test fixture.
    
    Change-Id: Ic34958e9bf1008fbc71c45da85208ac1fda7aeb4
    raise JenkinsJobsException instead of Exception
    
    Normalize all exceptions to be JenkinsJobsException from the
    jenkins_jobs.errors module.  This patch replace all occurences of the
    build-in Exception.
    
    Change-Id: I923ec35467dd93211d8cd1e6c69c0321d9391ec8
    Deprecate projectName setting of CopyArtifact
    
    Starting with version 1.26 of the CopyArtifact plugin all Jenkins job
    configurations using this plugin get rewritten on the fly if you run at
    least one build. This causes serious failures of the CopyArtifact
    feature as soon as the project name includes axis selections.
    
    If the config.xml of a job includes identical project *and* projectName
    settings (this is what happens with JJB without this patch), like:
    
        <project>demojob/axis=$setting</project>
        <projectName>demojob/axis=$setting</projectName>
    
    then it fails to run with current version(s) of the Copy Artifacts
    plugin.
    
    The problem is that while the web interface displays the correct
    configuration for a fresh job created with JJB (Project Name:
    "demojob/axis=$setting" and "Parameter filters" being empty), the
    *wrong* configuration is actually used (Project Name: "demojob" and
    "Parameter filters: "axis=$setting"). The reason is that when you
    execute the job for the first time (after the config.xml was created by
    JBB) the Copy Artifacts plugin automatically converts the configuration
    to:
    
        <project>jenkins-debian-glue-binaries</project>
        <parameters>axis=$setting</parameters>
    
    which is something different than wanted and it doesn't work.
    This settings stays permanent then until you *manually* fix it.
    
    When you manually select "Configure" on the original job (the one with
    project + projectName settings being identical as noted above) in the
    web interface without running it first and then click on "Save" it's
    fine though, looking like:
    
        <project>demojob/axis=$setting</project>
    
    Since people usually use current versions of Jenkins plugins (and
    version 1.26 of the CopyArtifact plugin was released in March
    2013, being ~8 months as of today) and because the python-jenkins
    library doesn't offer the ability to query for plugin version
    info it's better to just use current defaults instead of breaking
    configurations in a quite hard-to-debug way. This also reflects
    upstream's opinion about the required change, quoting Jesse Glick
    from the Jenkins bug tracker:
    
    | The projectName field is deprecated, and may not be used together
    | with project; there is a one-way conversion of projectName (which
    | gets deleted) to project plus parameters. If jenkins-job-builder
    | writes out a configuration including both fields then it is
    | simply buggy.
    
    Change-Id: Ie93316b135dc2b4547922062c7393ea7e5cc4e4c
    Add optional option to copyartifact plugin
    
    Simply add the optional option to the copyartifact plugin that was
    missing. It comes with a small pieces of doc and related tiny
    relevant sample.
    
    Change-Id: Ib74932bd9e0a988b826547badd02c8a1c67ae138
    Closes-Bug: #1236909
    Ensure Conditional Builder produces valid class paths
    
    Change-Id: Ibb07ea00a07c50de8a770695e24a57f26946726a
    Added SBT builder support
    
    Change-Id: Ia763aaaa0c4b8dc29e72290c2b2ae20003d4ac00
    Existing plugins improvements
    
    - added NodeLabel Parameter Plugin functionality to MultiJob Plugin
    - added fail-on-missing option to Parametrized Trigger Plugin
    - added command and timeout options to Publish Over SSH Plugin
    
    Change-Id: I36adfc99026a43ffbd8f7d3336ef7945eabd2721
    Add support for parameter filters in copyartifact
    
    The plugin calls the field <parameters> in the xml.  Having both
    "params" and "parameters" in the same builder seems needlessly
    confusing, so I went with "parameter-filters".
    
    Change-Id: Iade42e54d7e2eb082a6a0e720b0f172d0140fd3b
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Adding root-build-script to gradle
    
    This change adds a boolean to specify whether or not to use the
    newly added root build script value.
    
    Change-Id: Idf691c94e44e13fe5f3b03f9c2003875334b912f
    Reviewed-on: https://review.openstack.org/36676
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add Current build status to Conditional BuildStep
    
    Add support for the Current build status condition.
    
    Also fix the documentation regarding the conditional-step builder name
    which requires an hypen and not an underscore as previously stated.
    
    Change-Id: I6ede20c08c42d72d1ccf71c8fe6d3447d3acea90
    Reviewed-on: https://review.openstack.org/32292
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fixing copyartifact to work with latest version
    
    Version 1.26 of the copy artifact plugin changed the xml from
    projectName to project.  This change is making that same change.
    I don't know if we, somehow, want to support the older version
    of the copy artifact plugin.
    
    Change-Id: I98b25649521d6d34380eea6597a4015d2d929ebc
    Reviewed-on: https://review.openstack.org/29940
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fixing ant java opts
    
    The java-opts were being passed to ant with a new line in between
    each option.  This causes ant to choke and throw a usage of java
    message and then exit with a success.  This is not good.  Now the
    java options are passed with a space in between each one.
    
    Change-Id: I6921dfd396d91eed112442503afc1d35e942af6e
    Reviewed-on: https://review.openstack.org/29127
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Pass svn revision to triggered jobs
    
    This change adds the ability to pass the subversion revisions that
    were used in the build to the downstream builds.
    
    Added passing current-build parameters to downstream jobs
    triggered in the post build actions, to keep builders and publishers
    in sync.
    
    Noticed arg type for git-revision was incorrect and changed it to
    bool from str.
    
    Change-Id: I029c1d88b23e08ac2546a92018fef06c22c357b1
    Reviewed-on: https://review.openstack.org/28793
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    maven-target: Expose maven version and pom location.
    
    These parameters are configurable in Jenkins, and should
    be in Jenkins Job Builder too.
    
    Change-Id: Ia6ac92cf687ef36a99140c65dfd4bc7f7162ecf8
    Reviewed-on: https://review.openstack.org/27964
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    add support for building with grails
    
    Change-Id: Ie5caf99bdbe6f6f5493511d2710ee04747fb0494
    Reviewed-on: https://review.openstack.org/28125
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for custom gradle version aka gradleName
    
    Change-Id: Ib74bcf852e128a8dfc1a297c5b9dc2571e5666ff
    Reviewed-on: https://review.openstack.org/27791
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add msbuild plugin support.
    
    This is a simple plugin to wrap msbuild tool, which is used
    for building .NET projects.
    
    Change-Id: I0803d4477d9132265e559ad40b8c1a981a2cd5ef
    Reviewed-on: https://review.openstack.org/27654
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add support to the Conditional BuildStep plugin.
    
    This plugin, as its name implies, permits to execute build step conditionaly.
    
    Reusing other builders supported by Jenkins Job Builder is tricky since
    when only one step is involved, the markup generated by the sub-builder
    must be tweaked.
    
    XML nodes created by sub-builders are added to a dummy node, which makes
    their retrieval and tweaking possible. The tweaking consists of
    transforming a node <HelloWorld/> into <buildStep class="HelloWorld"/>.
    
    Change-Id: I96bb6af6a9f93e314bc0c531382b87bba7ac9e67
    Reviewed-on: https://review.openstack.org/26050
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for the MultiJob plugin
    
    Change-Id: Ie6c06072eae17fddf241fa0bc416d20c9a2248dc
    Reviewed-on: https://review.openstack.org/26321
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Documentation fixes
    
    There are three doc fixes for builders.py  in this change.
    
    Link to Gradle plugin fixed
    Maven-target example has been fixed
    Copyartifact docs cleaned up
    
    Change-Id: Ie50e94ace2041735cc986eb117597262b40b0fa5
    Reviewed-on: https://review.openstack.org/25962
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding 'switches' to gradle
    
    This change adds the ability to specify switches to be passed to
    gradle.  This change was only two functional code lines and
    several lines of documentation.  The only file that changed was
    builders.py
    
    Change-Id: Idb1199cd4a63e6fbfdabe57cf50a8b431dd9e914
    Reviewed-on: https://review.openstack.org/25929
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding Top-Level Maven Targets
    
    Adding ability to use top-level maven targets within your build.
    This is a change to the builders file and setup.py to add the new
    functionality.
    
    Change-Id: I7ae24b82d0b0ba4e81eda67045131733ced1dc46
    Reviewed-on: https://review.openstack.org/25413
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Document current-params option for trigger-build
    
    There was some documentation missing, so I had to find this option when I was
    trying to add it myself, in the source code. Nasty!
    
    Added documentation so nobody else has to do that.
    
    Change-Id: I9b6a0227479b600fed213d926f5cd22981db612e
    Reviewed-on: https://review.openstack.org/23963
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to specify Java Options to Ant
    
    You can now specify the Java Options to pass to ant.  The leading dash is
    needed and multiples are specified like:
       java-opts:
          - "-ea"
          - "-Xmx512m"
    I only changed the builders.py file and I followed the properties section
    above my change as a template.
    
    Change-Id: Ifa3d06a53b160444224f308d36e7b2bd903591bd
    Reviewed-on: https://review.openstack.org/23097
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add support to copyartifact builder for flattening dirs
    
    Change-Id: I72278b220dcd61dd323da91c8cbd0282b8d0f97c
    Reviewed-on: https://review.openstack.org/22556
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Kiall Mac Innes <kiall@hp.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Copy Artifact Plugin now specifies which build
    
    The Copy Artifact Plugin has been extended to allow you to specify
    which build to get.  There has been a dictionary created to
    validate the value passed is correct and another dictionary
    has been created to validate the permalink passed, if that option
    is selected.  There are also parameters added for several of the
    ways to select a build.
    
    Change-Id: I71bbdcaada184736cc30e6390751aff1a864f9d5
    Reviewed-on: https://review.openstack.org/21150
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fixing Inject to not create empty tags
    
    Using the Inject functionality with the builders section caused
    an error in Jenkins because the script-file was blank but the tag
    existed in the xml.
    
    Fixing this by adding a function to create the XML only if the given
    value is not None and not a blank value '':
    
        def add_nonblank_xml_subelement(parent, tag, value):
    
    Change-Id: I9151f7444f6807e929721b04fb8e7ad3a867cd6c
    Reviewed-on: https://review.openstack.org/18820
    Reviewed-by: Jon-Paul Sullivan <jonpaul.sullivan@hp.com>
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Adding ability to use batch commands
    
    This change adds the ability to run arbitrary batch commands.
    This functionality is to be able to run windows commands on a windows
    slave or master.  The format followed is exactly the same as the shell
    functionality.
    
    Change-Id: I463660b29b09e5945137b50b3721ee04cc5fc04c
    Reviewed-on: https://review.openstack.org/19387
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    ant can now be passed properties
    
    The Ant plugin let us fill in a set of properties one by line using the
    format key=value.  This patch mimic that feature.
    
    Given the YAML input:
    
     - job:
        name: "basic-ant-test"
        builders:
         - ant:
            targets: "debug test install"
            properties:
                key1: value1
                key2: value2
    
    The builders section in the resulting Jenkins XML will be:
    
      <builders>
        <hudson.tasks.Ant>
          <targets>debug test install</targets>
          <properties>key2=value2
    key1=value1</properties>
          <antName>default</antName>
        </hudson.tasks.Ant>
      </builders>
    
    Change-Id: I1bf245319c1009be824d3a57d3e74e750a76414d
    Reviewed-on: https://review.openstack.org/17451
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    add matrix job support
    
    currently only supports label expression axes
    Change-Id: I5d714affdf101eeb5b0eeae5ed5408d6964c6b77
    Reviewed-on: https://review.openstack.org/16908
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to use the Gradle plugin
    
    Change-Id: Ia8ca38290fbc04d24628dc30862823df628ada0a
    Reviewed-on: https://review.openstack.org/16906
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    <builders/> should always be inserted in jobs
    
    In some rare occasions, one might want to set up a job template that
    would not have any "builders:" section. In such a case Jenkins Job
    Builder would generate a Jenkins XML configuration file missing the
    <builders/> XML element. This cause Jenkins 1.472 to emit a null pointer
    exception and to ignore the job.
    
    This patch track whether we are have been provided a 'builders:'
    instruction from the YAML file. If none has been provided, craft an
    empty XML element to make Jenkins happy.
    
    Change-Id: I4dcae110d127c754532cdf436835b25c147117f3
    Reviewed-on: https://review.openstack.org/16527
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Small doc fixes
    - A couple of typos
    - Avoid .yaml to be interpreted as manpage macro
    
    Change-Id: I51f954da733cef64b05fee9797b01afba41d48f3
    Reviewed-on: https://review.openstack.org/16613
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add copyartifact builder to entry points and fix target attribute
    
    Fixes bug #1080824
    
    Change-Id: Ie5043283bf8c0f13f04d250c4c7299596d766508
    Reviewed-on: https://review.openstack.org/16454
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    trivial whitespace errors in Sphinx
    
    jenkins_jobs/modules/builders.py:docstring of
    builders.artifact_resolver:3: WARNING: Definition list ends without a
    blank line; unexpected unindent.
    
    jenkins_jobs/modules/wrappers.py:docstring of wrappers.build_name:6:
    WARNING: Field list ends without a blank line; unexpected unindent.
    
    Change-Id: Iff77f346172e1c45a035e112e22e8e2fda9933e3
    Reviewed-on: https://review.openstack.org/16169
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Adding ability to use the Repository Connector Plugin
    
    Change-Id: I4602154fa7fca84d1eaa6aed13e501fcc770b609
    Reviewed-on: https://review.openstack.org/15926
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Adding ability to block build till triggered builds complete
    
    Change-Id: Ia5c386e664e52b0be568b46abeb0491c512442c3
    Reviewed-on: https://review.openstack.org/15734
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to specify the ant installation to use
    
    Change-Id: I3edb57a98bb7aa0d488118abdc892793d47e43f9
    Reviewed-on: https://review.openstack.org/15407
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to use the EnvInject Plugin
    
    Change-Id: I619393f1f6144e8ee48d7642f2ff97f34b4d18dc
    Reviewed-on: https://review.openstack.org/15029
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Changing parameter order for 'trigger-builds' builder.
    
    It seems that order is important for the various parameter options that
    can be passed to the envinject parameterized trigger plugin.
    
    The relative order (of XML generation) of the 'current-parameters'
    option has been changed so that it is generated before any
    'predefined-parameters'.  This allows for overriding any
    of the current parameters with a pre-defined parameter.
    
    Change-Id: If0429a63267b314c23e0ef331546e3187b4373c3
    Reviewed-on: https://review.openstack.org/15050
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Do not output XML if job name not specified ('pipeline', 'trigger-builds')
    
    Done in order to enable specifying build pipelines at the project level.
    Pipelines are built using the 'pipeline' plugin or the 'trigger-builds'
    plugin.  The downstream job to be executed is specified at the project
    level, and substituted into the template.  Ignoring definitions where
    the downstream job is blank allows the pipeline to be easily terminated.
    
    Also adding a samples/ directory, which currently contains an example of
    pipeline creation, together with a new tools/run-compare-xml-samples.sh
    to run the before/after test on the samples.
    
    Change-Id: Icc324d1485e22db7824ad784890db48eb3e48f8f
    Reviewed-on: https://review.openstack.org/13706
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add copyartifact builder method
    
    Change-Id: I49ebd3056817ca071276d03196175e3caf4a2a51
    Reviewed-on: https://review.openstack.org/14737
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    builder for ant
    
    This let you define an 'ant' builder for those using ant as a build
    script.
    
    Given the YAML input:
    
            builders:
                    - ant: "debug"
                    - ant:
                            targets: "test install"
                            buildfile: "foobar.xml"
    
    Generates the following XML:
      <builders>
        <hudson.tasks.Ant>
          <targets>debug</targets>
        </hudson.tasks.Ant>
        <hudson.tasks.Ant>
          <targets>test install</targets>
          <buildFile>foobar.xml</buildFile>
        </hudson.tasks.Ant>
      </builders>
    
    Test plan:
    * tox is all green
    * sphinx doc got no warning
    
    Change-Id: I9e443c827b7a1b7c3ceff668de518d4cbd7abfff
    Reviewed-on: https://review.openstack.org/14141
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add some missing docs.
    
    Change-Id: I6d726c3ad281cf11e44f37a48256fb88ea1546a2
    Reviewed-on: https://review.openstack.org/13165
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Make code pass pep8 1.2 checks.
    
    Change-Id: I5544ce07c7423a0e530860fa5637af26c73f6521
    Reviewed-on: https://review.openstack.org/13162
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding 'builders-from' builder
    
    Change-Id: Id26b073354c5825b8fe91ece83f56a636ea4ae5d
    Reviewed-on: https://review.openstack.org/12791
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Adding 'current-parameters' option to trigger-builds
    
    Change-Id: I651992a7e908b0c859397ec6281238b5e3ac9336
    Reviewed-on: https://review.openstack.org/12790
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Change all '_' to '-' in YAML for consistency.
    
    Change-Id: If19cb26fa544b485acfc188baf3506eaea61d6cf
    Reviewed-on: https://review.openstack.org/11154
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add cron and ignore-post-commit-hooks arguments to pollscm
    
    Argument cron replaces current syntax of:
     - pollscm: "* * * * *"
    with:
     - pollscm:
         cron: "* * * * *"
    
    The old syntax is still supported but will log a deprecation
    warning.  The new syntax allows supporting additional arguments.
    
    Argument ignore-post-commit-hooks adds new boolean element
    ignorePostCommitHooks.
    
    Change-Id: I2b0d892545b9969bc9a143962447826e727e2ba9
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Add 'readable-message' parameter to gerrit trigger
    
    Adds ability to keep base64 encoded gerrit trigger
    variables (such as commit message) in human readable
    format.
    
    Change-Id: Ie96d633ab9dc96dacf859409fd649bd981f9eb7c
    Enable whitelisted-orgs-as-admins for ghprb trigger
    
    Adds support for having all members of a
    whitelisted organization automatically have
    admin rights for the github pull request builder
    trigger.  Details on this functionality can be found
    at https://wiki.jenkins-ci.org/display/JENKINS/
    GitHub+pull+request+builder+plugin
    
    Change-Id: Ieca5a789a79d1ad91783fcd4608d26a8d6d61878
    BugFix: pollscm trigger docs & unittests
    
    Change-Id: Icb70e45dbdce1434329ae0167367a5497920c8d5
    Add support for new patchset-created exclude fields
    
    New exclude features added to Gerrit Trigger plugin version 2.12.0.
    
    Exclude Features:
      - Drafts
      - Trivial Rebase
      - No Code Change
    
    This patch still supports the old trigger non-dict format yaml config:
    
            - patchset-created-event
    
    Using the old configuration (non-dict) works in the new Gerrit Trigger
    v2.12.0 as well as the previous versions.
    
    In addition the newer configuration (dict) format also works in old
    <2.12.0 and new >2.12.0 versions of Gerrit Trigger.
    
    Added additional unit tests to verify old and new formats working.
    
    Change-Id: I923b0be47085dc50da48f5ed271a13eae7e1dfa0
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Enable whitelisting branches with pull request builder
    
    Adds support for specifiying the specific branches that will be
    monitored by the github pull request builder.  Details on this
    functionality can be found at
    https://wiki.jenkins-ci.org/display/JENKINS/
    GitHub+pull+request+builder+plugin
    
    Change-Id: If98ce3ca037d3ce33506cf1ffea372e7c18eefda
    Add support for Gerrit Trigger Comment Contains Expression
    
    Change-Id: I229c7fc2fac540a6fe3209221ca01dcf6dd068df
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Allow multiple comment-added events in gerrit trig.
    
    In order to be able to react on multiple verdict categories (for example
    Verify +1, Review +2) with one job, we need multiple definitions of
    trigger-on events of the same-kind (comment-added-event). This was not
    possible with the previous structure of event definitions.
    
    The new yaml structure definition also better reflects the XML structure.
    
    Change-Id: Idec0f2b07479c0611497126e984c13adf543ffc0
    Emit deprecation warning on old format use with gerrit trigger
    
    Inform end-users that the old yaml format for gerrit trigger has been
    deprecated and support will be removed sometime after the next release.
    
    Change-Id: Idd04aee949b2ea05ffadb766fe7222a65ffb8052
    Added notbuilt-message option to gerrit trigger
    
    It was not there for some reason, just added it.
    
    Change-Id: Ica85183656a5cc8e427837efeb0b961f0633c74a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    Ensure dict orders are deterministic
    
    Python 3 enables hash randomization by default, additionally tox 1.7
    turns on the same randomization for earlier versions of python by
    default. Need to ensure that order of iteration over the yaml data and
    resulting XML has deterministic order for testing.
    
    Adapts https://gist.github.com/enaeseth/844388 which ensures data read
    by yaml will have its order retained in a predictable manner across
    multiple python versions.
    
    Additionally it seems more sensible to ensure that the order of
    generated XML snippets corresponding to the input yaml files are
    consistently in the same order as the entries in the source files.
    
    Closes-Bug: #1333349
    Change-Id: I6bf6d298a2609cc6ddbbc6b02b7f1a04413a5c89
    Allow configuration of Topics for Gerrit trigger
    
    Gerrit trigger in addition to project name, branch and
    file-path also supports when-to-trigger limitation
    based on topic of the change, this adds support for that.
    
    Change-Id: Icfcb3f02903a61294d23dd53308287a67927c777
    Add support for URLTrigger plugin
    
    Change-Id: Ibc96b3ecd65afb27398328f2b6220c32a800f3e6
    Add Gitlab Merge Request trigger
    
    Change-Id: Ic068cf7e89be76f0f9e9187caf628fa49d7bd7fd
    Add support for reverse build trigger
    
    Change-Id: I06d9969df0e9edfca2a2b433e2a13e3bc10c8b2c
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    Add support for triggering on unreviewed patches
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured to
    generate patchset-created events for changes that were uploaded while
    the connection to Gerrit was down.
    
    Change-Id: I59608e4f01355944fed9e44b288fc25a897950c7
    Add support for multiple Gerrit servers in Gerrit trigger
    
    Since version 2.11.0 the Gerrit Trigger Plugin can be configured
    to trigger on more than one server.
    
    Change-Id: I2082c5cfd14cd2494e2a7192beeb4909552cb7f6
    Allow to specify multiple branches per project in Gerrit trigger
    
    Allow to specify multiple branch patterns in a 'branches' block
    within the 'project' block.
    
    If no 'branches' block is present, fall back to using the single
    branch specified directly in the 'project' section.
    
    If a branch is specified both at the project level, and in the
    'branches' section, ignore the one at project level.
    
    Closes-Bug: #1302502
    Change-Id: I1fb2ce0bb3776d365f2c0e98a703c6dfba5fac7f
    Fix some minor typos in the trigger documentation
    
    Change-Id: Ie57ee0fc202a0104d7893212b26bca81b8d0c86e
    Minor fixes in the trigger documentation
    
    Change-Id: I8ec3cae2c2d6086bbcda7d9e78fdab2af4b53052
    Add script trigger.
    
    Change-Id: I191f8f444f810cf4fe1fb9475aafc747e5dff68d
    Fix misspellings in jenkins-job-builder
    
    Fix misspellings detected by:
    * pip install misspellings
    * git ls-files | grep -v locale | misspellings -f -
    
    Change-Id: I2443a0a3ae909457ee4f31a6837b445be03de0dc
    Closes-Bug: #1257295
    Fix references to examples in api documentation
    
    The documentation displayed references to examples in the main docs but not in
    the corresponding api reference docs.  The build had these warnings..
    
    : WARNING: Include file u'/Users/khaido/workspace/jenkins-job-builder/doc/source/api/
    ../../tests/properties/fixtures/batch-task.yaml' not found or reading it failed
    
    As pointed out by Darragh[1] the problem was that literalinclude needs a leading '/' to
    correctly reference both docs.
    
    [1] https://review.openstack.org/#/c/48783/15/jenkins_jobs/local_yaml.py
    
    Change-Id: Ib1f8ccca40af1ee54c2bd00b2b42ba39e3c0c8e5
    Fix GitHub pull request builder plugin support
    
    Change-Id: Iac1d06be91b641f7fccfe2255247443363ba2e80
    Add CodeReview vote ability to the Gerrit trigger
    
    - Made all four of the
      gerrit-build-(successful|failure)-(verified|codereview)-value
      parameters optional, so you can override only the ones you want.
    
    - Also allows for vote values like '+1' in the yaml by first coercing
      to int and then str.
    
    Change-Id: Id2ad7e4a4cf53bd33b3aca80fd95ed1d4b3ff266
    Adding support for the Build Result Trigger plugin
    
    This changes adds the build result trigger plugin to trigger
    a build when downstream jobs have a specific status
    
    Change-Id: I00a0075ba625bc711f75a41e5202f93fbfdd0d8e
    Fixing override-votes for gerrit trigger
    
    You were unable to pass the correct value as yaml parses 'true' as
    python True, then it will never be equal to the 'true' string.
    
    Change-Id: If4652b27f8ae23b63dbb6e7d98f11b34ba881f49
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Improved the gerrit trigger
    
    - Added the option dynamic-trigger-url
    - Added the possibility to configure a few other options that were always
      set to a predefined value.
    
    Change-Id: I7449feed264066db4346303741f8de9e9c7608b8
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Do not assume a failure message is specified
    
    Not everyone needs a custom failure message, so
    if nothing is specified create an empty node.
    
    Change-Id: I82f69e28574c01cbc6de649f968482352f42b8d8
    Signed-off-by: Doug Hellmann <doug.hellmann@dreamhost.com>
    Reviewed-on: https://review.openstack.org/36229
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Set dynamicTriggerConfiguration switch
    
    In Jenkins version 1.490 with Gerrit Trigger plugin
    1.6.0 the dynamicTriggerConfiguration flag
    needs to be explicitly turned off in order for the
    triggers defined within the job to work properly.
    
    Change-Id: If5835e933b812a7fe17c49f0f6988360f7154f80
    Signed-off-by: Doug Hellmann <doug.hellmann@dreamhost.com>
    Reviewed-on: https://review.openstack.org/36226
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    gerrit: Add file paths filtering support.
    
    Gerrit Trigger allows to restrict triggering of build depending
    on which files are modified in the change.
    
    Expose this capability with a new property file-paths.
    
    Also cleanup documentation (omissions and formatting errors).
    
    Change-Id: I4bfc5ab03a10622fdb5730a294037add8c1ad54f
    Reviewed-on: https://review.openstack.org/25569
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Adding GitHub Pull Request Builder Plugin
    
    Adding the ability to use the GitHub Pull Request Builder plugin.
    This plugin requires modifications on the Configure System page
    of Jenkins to work properly.  If using GitHub Enterprise you must
    set the token on this page, password does not work.  This change
    affects the modules/triggers.py and setup.py file, adding a new
    section for this plugin.  When using this plugin in the GUI the
    textboxes for admin list and crontab will default to the values
    stored on the main Configure System Jenkins page, I don't think
    JJB can even attempt this default so I just defaulted to nothing.
    
    Change-Id: Ib453cee269038e04f01a446378922b36307c18ce
    Reviewed-on: https://review.openstack.org/24929
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    gerrit: Use hyphenated key names.
    
    Hyphenated strings are now standard in Jenkins Job Builder.
    
    Gerrit Trigger Plugin support used camelCase keys for its
    configuration, and is updated to use hyphenated strings.
    
    Old configuration style is still supported: if old key names
    are found, they are converted to new style key names.
    
    Change-Id: I3b1968f14029b69497ee543b44070db7d9c3448c
    Reviewed-on: https://review.openstack.org/24730
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    gerrit: Add support for skipVote.
    
    Newer versions of gerrit-trigger permit builds to forbear, depending of
    the build outcome (success, failure, etc.).
    
    This capability is exposed in jenkins-job-builder, with suitable
    defaults.
    
    Change-Id: I25e267459b93b8e18a690c4d38989196ca1298f3
    Reviewed-on: https://review.openstack.org/24265
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    gerrit: Add support for on changed restored/abandoned.
    
    These triggers are supported starting at gerrit-trigger 2.8.0.
    
    Using thoses triggers in a previous version should not cause any
    problem.
    
    Change-Id: I388cfb9424dd16dc436010c492e59dd0e896b69a
    Reviewed-on: https://review.openstack.org/24264
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    gerrit: Support gerrit-trigger >= 2.6.0.
    
    Gerrit-trigger offers different triggers, stored in config file using
    different formats.
    During development of version 2.6.0, the following markup was used[1]:
    
      <triggerOnPatchsetUploadedEvent>true</triggerOnPatchsetUploadedEvent>
      <triggerOnChangeMergedEvent>true</triggerOnChangeMergedEvent>
      <triggerOnCommentAddedEvent>false</triggerOnCommentAddedEvent>
      <triggerOnRefUpdatedEvent>false</triggerOnRefUpdatedEvent>
    
    That markup changed before the release of 2.6.0 [2] to:
    
      <triggerOnEvents>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginPatchsetCreatedEvent/>
        <com.sonyericsson.hudson.plugins.gerrit.trigger.hudsontrigger.events.PluginChangeRestoredEvent/>
      </triggerOnEvents>
    
    Adjust the generated XML tree to match what gerrit-trigger expects.
    
    This means that gerrit-trigger versions < 2.6.0 are no longer supported.
    
    Trigger on draft published, added in 2.6.0, is now supported.
    
    [1] Commit 8bee93a87b59d413ccec0aa84d3da10adb108eb9
    [2] Commit 9ba008972a84e3ca8b2a90bd6d21295e7d7f4f94
    
    Change-Id: I7160de1284c53d20f435e5af0d5a64b2e17c4196
    Reviewed-on: https://review.openstack.org/24263
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    gerrit: Make triggerOn* parameters really use boolean values.
    
    Parameters triggerOn* are documented as boolean, however, using values like
    true or false results in exception "TypeError: cannot serialize True (type
    bool)".
    
    Theses values have special meaning in yaml, and are not loaded as string in
    python. It was hence required to use quotes to make it work.
    
    Add a sample using thoses attributes as an example.
    
    Change-Id: Iccbda8ebc0867e173fa7ccab78db16874ddb2a45
    Reviewed-on: https://review.openstack.org/24262
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Build when a change is pushed to GitHub
    
    Added ability to build when a change is pushed to github, to the triggers.
    This change is changing the triggers.py file and follows the poll scm
    as a template for the change.  Setup.py was also changed to enable the new
    feautre.  There is outside changes needed to Jenkins and/or github to fully
    use this feature.  You need to tell Jenkins whether to automatically manage
    the github repos or you need to put the correct URL into the webhook.
    Furthermore, at the current time it is necessary to set both github and
    pollscm for this to work.  In the future this may not be necessary so setting
    github does not automatically set pollscm.
    
    Change-Id: Id7b48fa47f63669ba31282a403f07a1234e7ac31
    Reviewed-on: https://review.openstack.org/23433
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fix up example syntax in triggers.py
    
    Change-Id: I63756ecd50d6cf03455998ba40b4c63563793388
    Reviewed-on: https://review.openstack.org/15392
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fixing documentation for the timed trigger
    
    Change-Id: Icdfb6295fb3a2c5bfbb411995bf67e8075197b86
    Reviewed-on: https://review.openstack.org/14914
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add links to required Jenkins plugins in docs.
    
    Add links to section docstrings that point at Jenkins plugins required
    for that particular section to work.
    
    Change-Id: Ie5c8de780072b157fbb873227d3ccfa5a2be88f3
    Reviewed-on: https://review.openstack.org/13155
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Consolidate CFP settings into a common function
    
    ConfigFileProvider configuration is the same but is used in a few
    places. This patch consolidates the configuration into a common reusable
    function.
    
    Change-Id: Idb45e43ff5a9dd6cea84e37026f875f98dc04c83
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Fix NullPtr issue in ownership props
    
    Ownership plugin does expect to always have coownersIds
    attribute present (even empty) and when it's not there
    it can cause NullPointer exceptions in it's code.
    
    Change-Id: I6e026f0d9fac02755840175f87009bd1ade4c810
    Move extended-choice support to parameters module
    
    This patch fixes support for the extended choice plugin in the
    parameter module so that it can nicely coexist with the other
    parameters.  This leaves the existing extended choice plugin code in the
    properties module, but removes the documentation from that location and
    adds a deprecation warning.  This patch also provides parity with the
    existing functionality under the properties module.
    
    Change-Id: Ibace4284fc1bd391948917979a4223bd3007dff4
    Closes-Bug: #1361335
    Add support for "Override Build Parameters" option in EnvInject
    
    Change-Id: I4f0c9949f1141ccf93ea86d6cdaec6cce7e6ac4d
    Add tests for properties inject
    
    Replace hard-coded inject example with a literal include. Extend the
    example to show how to pass two environment variables.
    
    Add test fixtures for the keep-system-variables and keep-build-variables
    parameters.
    
    Change-Id: Ie3b5af2c38f8dde5ff739b9f6b213c1e94387aca
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    authorization property: add extended read support
    
    This authorization requires the extended read permission plugin:
    https://wiki.jenkins-ci.org/display/JENKINS/Extended+Read+Permission+Plugin
    
    Include test for the authorization properties.
    
    Change-Id: I9364524398f4e3f0d6ccccd88d5046e7504e2123
    Signed-off-by: Fathi Boudra <fathi.boudra@linaro.org>
    update URL references to project.
    
    github.com/openstack-ci was moved to github.com/openstack-infra
    homepage references should point to git.o.o/cgit/openstack-infra
    
    This change updates the above references accordingly.
    
    Change-Id: I4d3591f228b10de050a129ae7af99485f50edab5
    Add support for Copy Artifact project copy permissions
    
    Since 1.30, Copy Artifact supports specifing the projects that are allowed
    to copy artifacts for a given project in the general job properties.
    
    Change-Id: I5a9de21f449e98d08ec9303d55021d6a661257d4
    Add support for Slave Utilization plugin
    
    Change-Id: I4243fddf2f08a09671757b503fae2a890f2d820e
    fix the literalinclude reference to least-load test
    
    Change-Id: I38a933c06e9d28ae1a580d26494a30e7385ee36f
    ZMQ Event Publisher plugin support added
    
    This is a Jenkins plugin that will publish Jenkins Job run events
    (start, complete, finish) to a ZMQ PUB socket.
    
    Change-Id: Id238033796e6905e18a777fc85c789ff6cf4f59d
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Added support for least load plugin.
    
    Change-Id: I0c0c9a23e97101f34f144f63e8f9a81f1ac172f9
    Heavy Job Plugin support added
    
    This plugin allows you to define "weight" on each job,
    and making each job consume that many executors
    
    Change-Id: Iee49229b0d3c909f320caa9bd6c1ebb6bc37ddcb
    Fix misspellings in jenkins-job-builder
    
    Fix misspellings detected by:
    * pip install misspellings
    * git ls-files | grep -v locale | misspellings -f -
    
    Change-Id: I2443a0a3ae909457ee4f31a6837b445be03de0dc
    Closes-Bug: #1257295
    Added support for Builds chain fingerprinter
    
    Change-Id: I11429534a82587e7cbbd987ecce148b07a5ace47
    Fix references to examples in api documentation
    
    The documentation displayed references to examples in the main docs but not in
    the corresponding api reference docs.  The build had these warnings..
    
    : WARNING: Include file u'/Users/khaido/workspace/jenkins-job-builder/doc/source/api/
    ../../tests/properties/fixtures/batch-task.yaml' not found or reading it failed
    
    As pointed out by Darragh[1] the problem was that literalinclude needs a leading '/' to
    correctly reference both docs.
    
    [1] https://review.openstack.org/#/c/48783/15/jenkins_jobs/local_yaml.py
    
    Change-Id: Ib1f8ccca40af1ee54c2bd00b2b42ba39e3c0c8e5
    Add support for batch_tasks.
    
    Change-Id: I6cb6050322f07e90eadff88acab61c9ed66221fe
    raise JenkinsJobsException instead of Exception
    
    Normalize all exceptions to be JenkinsJobsException from the
    jenkins_jobs.errors module.  This patch replace all occurences of the
    build-in Exception.
    
    Change-Id: I923ec35467dd93211d8cd1e6c69c0321d9391ec8
    Jenkins Ownership Plugin
    
    Plugin provides explicit ownership for jobs and slave nodes.
    https://wiki.jenkins-ci.org/display/JENKINS/Ownership+Plugin
    
    Change-Id: I6c47fb43f812c1ef15daecd53a52777dbd04805b
    Build Blocker Plugin support added
    
    This plugin keeps the actual job in the queue
    if at least one name of currently running jobs
    is matching with one of the given regular expressions.
    
    Change-Id: I3cf4e8e01cbd537d8b25ae04cc6c6e5ba81b13e1
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Add support for job priority sorter plugin.
    
    This plugin provides a way to configure priority of jobs in
    build queue. Each job has a inherent, configurable, priority.
    Builds of higher priority are scheduled first.
    
    Change-Id: Ie7f374369a141bec094bf9a6a7438082bf298fb5
    Reviewed-on: https://review.openstack.org/35064
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for the promoted builds plugin.
    
    Change-Id: I393f1c4d47253fbe53f774c5e60cd20f65b5348e
    Reviewed-on: https://review.openstack.org/28005
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding extended-choice functionality
    
    This change adds the ability to use the extended choice plugin.
    This plugin allows you to populate a file with choices and then
    allow the user to select one or more when the build now button
    is clicked.  This change only changes the properties and setup
    files.
    
    Change-Id: I05af63f75f9ab87cd923c23177d33898c26149cf
    Reviewed-on: https://review.openstack.org/20610
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Fixing Inject to not create empty tags
    
    Using the Inject functionality with the builders section caused
    an error in Jenkins because the script-file was blank but the tag
    existed in the xml.
    
    Fixing this by adding a function to create the XML only if the given
    value is not None and not a blank value '':
    
        def add_nonblank_xml_subelement(parent, tag, value):
    
    Change-Id: I9151f7444f6807e929721b04fb8e7ad3a867cd6c
    Reviewed-on: https://review.openstack.org/18820
    Reviewed-by: Jon-Paul Sullivan <jonpaul.sullivan@hp.com>
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    add category support to throttle configuration
    
    Change-Id: I9ca58ed9d7513b2223632a7173a229571a08a535
    Reviewed-on: https://review.openstack.org/18059
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add support for full authorization matrices
    
    Change-Id: I387ea1d006f3d1a053cb7e88afc9fe99ea010a5c
    Reviewed-on: https://review.openstack.org/15021
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Make code pass pep8 1.2 checks.
    
    Change-Id: I5544ce07c7423a0e530860fa5637af26c73f6521
    Reviewed-on: https://review.openstack.org/13162
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add links to required Jenkins plugins in docs.
    
    Add links to section docstrings that point at Jenkins plugins required
    for that particular section to work.
    
    Change-Id: Ie5c8de780072b157fbb873227d3ccfa5a2be88f3
    Reviewed-on: https://review.openstack.org/13155
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Forcing string conversion on boolean parameter
    
    Change-Id: Id891e6948b879dfcb8f777f272dc1cb34cd197e8
    Reviewed-on: https://review.openstack.org/12793
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Setting throttle values to default to 0 (instead of None)
    
    Change-Id: I3d7b24f96efe3b588a727789c4900b9448da891d
    Reviewed-on: https://review.openstack.org/12875
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add property injection specification.
    
    Add ability to have the Jenkins Job Builder specify a script and
    property file to use to inject environment variables into builds.
    
    Change-Id: I628753ea526735e950b9d17697a08df1b412604f
    Reviewed-on: https://review.openstack.org/12382
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Remove unnecessary warning message.
    
    Change-Id: Id28067f87633a9602e4acdba17a2bccf8b1a65fc
    Add details to credentials param in scm docs
    
    The credentials-id parameter for git scm seem to be void of any details
    or specifics like what exactly this parameter is, or where to get this
    in jenkins. i was of opinion that its name of credential but took me a
    while to fig out how to get credentials ID of a credential in jenkins.
    Its actually last field of URL path when you click your credential in
     jenkins dashboard.
    I have added a step-by-step github gist here:
    https://gist.github.com/hayderimran7/78421229af85ae90177b
    Also fixed repition of word 'create'.
    
    Change-Id: I827779eeaae8b28f53764b70de6aaf4b80157547
    Change test folder name to 'fixture' for consistency
    
    All of the other tests that contain xml and yaml files are in
    a 'fixture' folder.  Change the name in this instance to be more
    consistent.
    
    Change-Id: I5d899c83e868b8f8ff80eb121884285718bc2db2
    Update SCM Git Clean configuration to use new extensions style
    
    Use the extensions style configuration for setting the SCM Git clean
    configuration. With this format we deprecate the older (clean: bool)
    configuration format and replace it with this format:
    
    clean:
        after: bool
        before: bool
    
    The older configuration is still supported so users who did not update
    their YAML files can upgrade without updating all their YAML files first.
    
    Change-Id: I1cfc0e2951c2b4de5e67bcb8abdf0b8c070e7fc6
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update SCM Wipe workspace to use extensions style
    
    Use the newer extensions style configuration for the SCM Wipe workspace
    option. This change simply changes the output style of this
    configuration leaving the original YAML configuration values in tact so
    it is backwards compatible with the old style configuration for
    wipe-workspace setting.
    
    While this patch still sets the old <wipeOutWorkspace> value long with
    the new extensions value. Jenkins appears to be happy with both values
    present and prefers the extensions format if it exists. This should
    allow the older Jenkins that only supports the older config format to
    continue to work.
    
    Change-Id: Ib5b1809d19a35f83f524ee84b18f0c58b851c70b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Update git-submodule configuration to new extension style
    
    The Jenkins Git SCM plugin now uses extensions style configuration. This
    patch adds support for the extensions format and deprecates the old
    format.
    
    Change-Id: I3ef144473142e23de859f38501f3561875fb44bf
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add Mercurial plugin feature to jenkins-job-builder
    
    Adds Mercurial plugin to jenkins-job-builder.
    This allows you to use hg repositories in your Jenkins config
    eg:
        scm:
          - hg:
             branch: feature
             url: ssh://hg@hg/repo
             modules:
               - module1
               - module2
             browser: hgweb
             browser-url: http://hg/repo
    
    Follows up on change ids:
     I00aaa4bb7a67ee5038ed1eff79b5497866730d19
     I134c8af15f0d4dc895f7131c77085c198b701fa8
    
    Change-Id: I628f7fbd11769b1d18551fcd2913777dbe8de5a2
    Implements: blueprint jenkins-job-builder-mercurial
    add support to git for changelog against branch
    
    added support for another extension type, and fix how extensions are populated to xml
    
    Change-Id: Ic9cf21a268d4ee3fb9b9efdee65c3d49e0cdb31e
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Add SVN credential support
    
    Change-Id: I6f39daa7fca2ffc43a7e7f0585900eb145cf841a
    Make JJB python 3 compatible
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.4 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    To access the first element of a dict in both python 2 and 3,
    'next(iter(dict.items()))' is used as the standard idiom to replace
    'dict.items()[0]' as 'items()' returns an iterator in python 3 which
    cannot be indexed. Using 'next(iter(..))' allows for both lists and
    iterators to be passed in without unnecessary conversion of iterators to
    lists which would be true of 'list(dict.items())[0]'.
    
    Original change which was reverted due to breaking use of job-groups is
    If4b35e2ceee8239379700e22eb79a3eaa04d6f0f. This replaces the previous
    conversion of 'dict.items()[0]' to 'dict.popitem()', which would result
    in removing a job-group when first called, thus defeating the benefit of
    being able to reference the group mulitple times. This usage has been
    replaced with 'next(iter(dict.items()))' as a non-modifying alternative
    that still avoids creating unnecessary copies of data while working for
    all supported versions of python.
    
    Change-Id: I37e3b67c043dadddb54e16ee584bde3f79e6a770
    Revert "Some tweaks to get closer to Python 3 compat"
    
    This reverts commit 1d7647fa857fa718af814f3038d538d758c35201.
    
    This change altered the xml output (by forcing it to fail) which a
    backward compatible change should not do. Revert it in order to get this
    compat change in without breaking that output and test.
    
    Change-Id: I20f66fb1bd9c70a0debbdd5eebacf6ec5d0f5df9
    Some tweaks to get closer to Python 3 compat
    
    Convert to use idioms that work for both python 3 and python 2.6+ and
    ensure that a suitable version of dependencies is included for python 3
    compatibility.
    
    Update python-jenkins to 0.3.3 as the earliest version that supports
    python 3 without any known regressions. Add an extra parser check for
    missing 'command' due to changes in how argparse works under python 3.
    
    Where contents should be retained, to access the first element of a dict
    in both python 2 and 3, 'next(iter(dict.items()))' is used as the
    standard idiom to replace 'dict.items()[0]' as 'items()' returns an
    iterator in python 3 which cannot be indexed. Using 'next(iter(..))'
    allows for both lists and iterators to be passed in without unnecessary
    conversion of iterators to lists which would be true of
    'list(dict.items())[0]'.
    
    Alternatively, where further access to the data is not required,
    'dict.popitem()' is used.
    
    Change-Id: If4b35e2ceee8239379700e22eb79a3eaa04d6f0f
    SCM: rename `self` arguments to `parser`
    
    For consistency with other modules.
    
    Change-Id: Ia78173f0c895896751f4e17fff5fd47f3e9c1ad5
    git: Support timeout option
    
    This requires git plugin version 2.2.3
    
    Change-Id: I24a2bce00e35f74a5c513d02a7bffe05267cd498
    Document default values for git scm
    
    Change-Id: I0a1671c1f4de86f516d6f1605503175e5973e07b
    Add support for 'ignore-notify' in git SCM
    
    This option is named "Don't trigger a build on commit notifications"
    in the Jenkins Web UI.
    
    Change-Id: I338af61f8bfdef1545d1ea206e6874cda38957cd
    add include/exclude regions/users in svn scm (doc and tests)
    
    Change-Id: I99ed104cd2cbaba1588dfc31d3b8a028de2e80ee
    Support the Store SCM plugin
    
    Change-Id: I9525a29e54f157c90cf98eb7f351b56d063d87dd
    scms: MultiSCM is generated for scms hidden in macro
    
    This patch fixes problem with generating MultiSCM in case that scms are
    encapsulated in macro.
    This patch includes simple tests to cover if-branches for this change.
    
    Example:
    
    - scm:
      name: xxx
      scm:
        - git: ...
    
    - scm:
      name: yyy
      scm:
        - git: ...
    
    - scm:
      name: xxx-and-yyy
      scm:
        - xxx
        - yyy
    
    - job:
      name: my-job
      scm:
        - xxx-and-yyy
    
    Change-Id: If3e7b3d19e51545a5623ee060fb7673a7a989233
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Closes-bug: #1285515
    Fix recursion depth error caused by Git-remotes
    
    In "SCM module: Add support for multiple Git remotes."
    (change Ifef2da85, commit 8a956bcc) there is
    recursive dict creation introduced when git repo
    does not have any remote configured explicitely in yaml.
    
    But infinite recursion confuses builder.deep_format,
    so when defaults section contains scm git entry without
    remotes specified, and is used by both:
    - single job section (which creates the recursive dict),
    - job template (which makes deep_format called on that dict)
    it fails on RuntimeException.
    
    Tried to build xmls localy with for example
    'test -o /tmp/jobs' action.
    
    Traceback looks like:
     File "/jenkins_jobs/cmd.py", line 168, in main
       output=options.output_dir)
     File "/jenkins_jobs/builder.py", line 583, in update_job
       self.parser.generateXML(names)
     File "/jenkins_jobs/builder.py", line 241, in generateXML
       self.getXMLForTemplateJob(d, template, jobs_filter)
     File "/jenkins_jobs/builder.py", line 260, in getXMLForTemplateJob
       expanded = deep_format(template, params)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 99, in deep_format
       ret[item.format(**paramdict)] = deep_format(obj[item], paramdict)
     File "/jenkins_jobs/builder.py", line 95, in deep_format
       ret.append(deep_format(item, paramdict))
     File "/jenkins_jobs/builder.py", line 80, in deep_format
       if isinstance(obj, str):
     RuntimeError: maximum recursion depth exceeded while calling a Python object
    
    Obj passed to deep_format may look like:
        {'origin': {'basedir': 'our-repo',
                    'branches': ['origin/master'],
                    'remotes': [<Recursion on dict with id=26090448>],
                    'url': 'https://our-gerrit.com/our-repo'}}
    
    This patch changes the code to use copy of the git repo dict,
    as data for in-place creation of remotes/origin entry,
    and as it does not contain 'remotes' key yet, it does not create loop.
    
    Change-Id: Iacd15839c5741cb171253fe45bdd122d7927aa39
    Add support for Stash as a repository viewer
    
    Make it possible to use Atlassian Stash as a repository viewer of Git
    SCM changes. Also sort the viewers alphabetically.
    
    Change-Id: I6725570a0aa6770b2d0eee2cd0ae5ff0e5c5e07c
    SCM module: Add support for multiple Git remotes.
    
    Configuring multiple Git remotes is necessary to allow Jenkins to
    merge commits from a remote branch into a local branch. Note that
    this is not the same as specifying multiple SCMs which are cloned
    into separate directories.
    
    Change-Id: Ifef2da85fa22a979570d4ea2b6f30d4bd37da116
    Add workspace scm
    
    Add support for the 'Clone Workspace SCM' plugin that allows to use the workspace
    of a project as the SCM of an other project.
    
    Change-Id: I8467ace24665855dab606d6e52a1c130cd2929af
    make scm test as the example
    
    scm module had a few existing tests so now those tests are the examples.
    
    Change-Id: Iaf039a5bb6f3910b09198e4a800a94f3f58804f9
    Add support for credentials-id in git repositories.
    
    Original change by Soren Hansen <Soren.Hansen@ril.com>
    
    Change-Id: I2ad6d5b7d8a5cc89596c41463dc7906780b61515
    Add local-branch option
    
    Change-Id: I5883992afc0875e2f464ff3f576b067f7d5b4ce8
    Add support to specify GitLab version.
    
    Change-Id: Iae3746540cb692b19278fd0bedae48bf976700d5
    raise JenkinsJobsException instead of Exception
    
    Normalize all exceptions to be JenkinsJobsException from the
    jenkins_jobs.errors module.  This patch replace all occurences of the
    build-in Exception.
    
    Change-Id: I923ec35467dd93211d8cd1e6c69c0321d9391ec8
    Updated gitblit projectname
    
    Change-Id: I373841676bc48c8531761af5fcc5192913262552
    Added support for Git shallow clone parameter
    
    Change-Id: Ia0251f25ff22fff10fe53ba6bf54f0e9072210fd
    Add repo scm
    
    Add support for 'repo' plugin from Android development. Ensure
    only settings that actually are required are written out to
    the produced XML, and all optional settings aren't included
    unless explicitly set.
    
    Change-Id: I662bdd4d348ce7ec7d213e5d7149daf130fda697
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Added some more scm options
    
    Options added to git scm:
        * scm-name: Unique SCM name
        * reference; Path of the reference repo to use during clone
    
    Change-Id: Ic4e233a283513579c30412e3638ed9c73b570d54
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Allow the gitConfigName and gitConfigEmail values to be used.
    
    Change-Id: I3143dd4f0db222c6d0ba3210714707dc00cf93cb
    Add an option for the buildChooser
    
    Depending on what plugins are installed, the user may want
    to specify a different "chooser strategy" via the buildChooser
    field. Add an option for doing so.
    
    Change-Id: Iba59f8c0a8446c88f64ed8b70b3639a89d9b9ef0
    Signed-off-by: Doug Hellmann <doug.hellmann@dreamhost.com>
    Fixing documentation
    
    The env-file documentation had the link for the plugin incorrect
    The jclouds documentation had no description nor link to the
    required plugin
    Doing make html in the doc folder complained about tfs in wrappers
    so I added a new line
    
    Change-Id: I61799c7a06d50486a08c31ba7db3d34965378e6f
    Reviewed-on: https://review.openstack.org/36464
    Reviewed-by: Leif Madsen <leif@leifmadsen.com>
    Reviewed-by: Mathieu Gagné <mgagne@iweb.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add excluded-regions and included-regions for GIT
    
    There is now code to take a list of excluded and a list of
    included locations.  excludedRegions was removed from the mapping
    as it was determined not to do anything.
    
    Change-Id: I0e3003540ea1bc1aa19ef9e478be650e8c85ceaa
    Reviewed-on: https://review.openstack.org/32414
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add Excluded Users support to Git SCM
    
    Add ability to provide a list of users to ignore revisions from
    when SCM polling is enabled with Git.
    
    Change-Id: Idb11b0afc2d8157f347e18488439d78e02f51282
    Reviewed-on: https://review.openstack.org/32295
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add support for the Team Foundation Server Plugin.
    
    Change-Id: If5cce48e12f432c7e57ce89596286d2e63796c70
    Reviewed-on: https://review.openstack.org/31400
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding merge before build to git
    
    This change adds the ability to merge to a specific repoistory and
    branch based on the values entered.  The intent was to make the new
    parameters 'remote' and 'branch' only be used if 'merge' is specified
    
    Change-Id: Iab9db6d4ca6ff608bf946b9a38cc0756d6a78b86
    Reviewed-on: https://review.openstack.org/28148
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add multi-SCM capabilities
    
    Jenkins has a multiple-SCM option. We can just support that by using it when
    more than one SCM module is defined. Simple enough.
    
    Change-Id: Iacfba5c547ff111304644a4777a12a70b0b22e62
    Reviewed-on: https://review.openstack.org/23961
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding new options to git checkout
    
    A new option has been added to git checkout called name that
    specifies the name to fetch.  Also added the ability to specify
    the git tool to use by specifying git-tool: Default
    
    Change-Id: Ie985c39fb5c6dc6ad84ee97bfb203da9fd689b8c
    Reviewed-on: https://review.openstack.org/18817
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to specify the scm browser
    
    Change-Id: I120449433845c4bf50a546fbdb0c144d7741f5e9
    Reviewed-on: https://review.openstack.org/16916
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    git 'basedir' specify destination directory
    
    The Jenkins Git plugin let us specify a directory to clone too instead
    of simply workspace. This patch adds to the git scm module a 'basedir'
    parameter just like the svn scm module.
    
    Change-Id: I385171009e0a2114c92f555796a4c03a3b98cf76
    Reviewed-on: https://review.openstack.org/16849
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    git scm learned 'refspec' parameter
    
    The Zuul configuration advise user to set the Git plugin ref specifier
    to $ZUUL_REF which was not supported. This patch let you specify it
    using:
    
     scm:
      - git:
        refspec: '$ZUUL_REF'
    
    Will fallback, as before, to '+refs/heads/*:refs/remotes/origin/*'
    
    Change-Id: I1db7e86f8be5f6b167ba99f8fec266b4e8ff95a8
    Reviewed-on: https://review.openstack.org/16011
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Adding ability to checkout multiple svn repositories
    
    Change-Id: I5f07fe15dfed1f65a8793bdf68805b0ec6b16bc7
    Reviewed-on: https://review.openstack.org/15527
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Expose more options for the git scm handler
    
    Change-Id: Idd074a184c18bb21c3864d1508c6cb3708f07d9d
    Reviewed-on: https://review.openstack.org/15198
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to checkout from subversion and use the list tags parameter with the parameterized build plugin
    
    Change-Id: Iad9c60d052c85bfb60794e6d2a9d80a915e7d1a8
    Reviewed-on: https://review.openstack.org/14675
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add links to required Jenkins plugins in docs.
    
    Add links to section docstrings that point at Jenkins plugins required
    for that particular section to work.
    
    Change-Id: Ie5c8de780072b157fbb873227d3ccfa5a2be88f3
    Reviewed-on: https://review.openstack.org/13155
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add 'Job Log Logger' wrapper
    
    The Job Log Logger plugin writes the Jenkins job log to the underlying Jenkins
    log system in addition to the normal build log.
    
    Change-Id: I17b73ade974edf3d7a2d1e08c4e4c584dbe32c51
    Add support of multiple credentials for ssh-agent-credentials wrapper
    
    ssh-agent-credentials wrapper supports multiple credentials like
    ssh-agent plugin v1.5
    (https://wiki.jenkins-ci.org/display/JENKINS/SSH+Agent+Plugin)
    via 'users' parameter. 'user' parameter is retained for backward
    compatibility.
    
    Change-Id: I8a21dd0e7cba210818ffe30bbc5c7e73b56211cb
    Signed-off-by: Igor Gnatenko <ignatenko@mirantis.com>
    Add 'Job Log Logger' wrapper
    
    Change-Id: I17b73ade974edf3d7a2d1e08c4e4c584dbe32c51
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Add support for xvnc
    
    Change-Id: I9af116a410e11da47178abd982035760b9a3195d
    Fix broken link on documentation
    
    Change-Id: I153392be86e6a23d050ab3cfb363d25f5e27f6e3
    add support for EnvInject mask password params option
    
    Added support for EnvInject mask password params option
    Added unit test to cover inject_passwords in wrappers module
    
    Change-Id: Ic6eb44cc6946f3f4636212868b6665dbde853c40
    Add support for M2 repository cleanup plugin
    
    https://wiki.jenkins-ci.org/display/JENKINS/M2+Repository+Cleanup+Plugin
    
    Change-Id: Ic45c3dde022e2e84b5b31d960d76c8ef1972ee05
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    adding support for the custom tools plugin
    
    Change-Id: I9a85a88927c7fc37bbf443295c3ef7a5f6feda50
    Signed-off-by: Kyle Rockman <kyle.rockman@mac.com>
    Document node parameter usage with matrix projects
    
    The Matrix Tie Parent plugin has been deprecated for a while and the
    documentation for it in JJB mentions that it's deprecated, but the
    documentation doesn't call out how to use the new way of doing it.  This
    patch updates the documentation to explicitly call out that the node
    parameter only controls the matrix job's parent job.
    
    Change-Id: Ie784f6d90667a0bc66ae0efd3eda1974ddbac4f2
    Add MongoDB plugin support
    
    Change-Id: I54dd77fb9697445b41b033347bc39eeef3b0f00b
    Add support for multiple port allocations
    
    Change-Id: I156bccebdd392cd4a912599b5a2c815587e77134
    Adds support for the Config File Provider Plugin
    
    See https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ie61bc6c4f934baf7e96bf943efcd66b138ef8edd
    Adds credentials-binding plugin support to wrappers
    
    Add support for configuring the credentials binding plugin.
    The credentials binding plugin can be found at
    https://wiki.jenkins-ci.org/display/JENKINS/Credentials+Binding+Plugin
    
    Change-Id: I94fef65f3960f3b357d1a1a4f3f25dfecb739164
    wrappers: fixed locks for empty collection
    
    it caused "Locks" checkbox to be checked, and it picked up first lock
    from selectbox as default.
    
    Change-Id: I13fdf104c6c32b783fb539f8947e3e071cb9788c
    Signed-off-by: Lukas Bednar <lbednar@redhat.com>
    Add support for the Jenkins Environment Script plugin.
    
    Change-Id: Ia941b3426dd474f0f7d5ddaf9f40a44f7fdbc711
    Implements wrapper for ownership plugin.
    
    This wrapper sets "Inject ownership variables into environment"
    
    Change-Id: Ib8a37c1a5cd3c6ec35d7fb25fddee82fdeb76aaa
    Create one parameters wrapper tag for all release params
    
    Ensure only one parameterDefinitions XML tag is created for the entire
    set of parameters instead of one per parameter.
    
    Add a test case to show the correct behaviour with more than one
    parameter defined and update the docstring to use the yaml test case as
    an exmaple. While updating the docstring add missing default values for
    arguments.
    
    Change-Id: Ife8f2535117d355d845d5d72dd9e6e6669a6b9df
    Adding feature to specify the user id for jenkins user credentials
    
    This feature allows one to specify the user id for the jenkins
    ssh-agent-credentials in the wrappers section of the yaml file.
    Also providing yaml and corresponding xml files for testing.
    
    Change-Id: I6c19945450c6ef55fead72c32594adb5a9b807c6
    add logfilesize plugin support (doc, tests)
    
    Change-Id: I3349668420d7216b1f8ecf0a539eb944d0dd69be
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    add timeout-var option to the timeout module
    
    jenkins build-timeout plugin version 1.13 has a new option[1] to expose the
    timeout value via an environment variable.  Adding this option to the
    equivalent jjb module.  Also created tests for the examples.
    
    [1] https://github.com/jenkinsci/build-timeout-plugin/pull/22
    
    Partial-Bug: #1287883
    Change-Id: Ia0d6570e9aae55ceadf076716fc8ad7688ff6214
    Added support for Exclusion plugin
    
    This plugin allows the specification of critical blocks for builders.
    Once a set of builders is "wrapped" by a critical block start/critical
    block end pair, any resources (string) specified in the exclusion build
    wrapper will cause any jobs with those same resources to block and allow
    only one of those builds to proceed at a time.
    
    Change-Id: I0bf4ab003709917aa7fe6ad57b31200f466658da
    Support Matrix Tie Parent Plugin in wrappers
    
    Change-Id: I9c55ed443496bf4573969f83750c46bd678290a7
    Added support for Delivery Pipeline Plugin
    
    Change-Id: I54cfa9153700e141d8ba78c881998553b8081658
    Fix unused variable in ci-skip wrapper.
    
    Change-Id: I8998ac225e60484fe6502a5196a04189840ae069
    Add best and worst status details for conditional-step plugin.
    
    In order for the conditional step plugin to work properly, a more
    detailed status is required otherwise the current build status is not
    evaluated properly and is set to SUCCESS in all cases.
    A local mapping of the java hudson.model.Result class was created to
    unify build statuses names, ordinal and color scheme.
    
    Change-Id: If8a0090b7cd51551ef6756361f6e45af3df1218d
    added logstash plugin support and fixed test typo
    
    Added new test cases in wrappers fixtures.
    Updated setup.py to include the new wrapper entry point.
    Added the logstash plugin to the wrapper module.
    
    made the default the localhost for host.
    Added an if around the use redis bool.
    If Redis parameters are not defined, use an empty dict to use all defaults.
    
    Change-Id: Iee950a7d05a56d3a45b5f93ccd77306b37662d25
    Added support for Ci Skip Plugin
    
    Change-Id: I033a3dcb46b4a6c8be49ba63150afa05b4622831
    Added rbenv wrapper
    
    Change-Id: Iefab7b71b96998789a66b3e1ea03f28fbfc38391
    Inject passwords to the build as environment variables support added
    
    Change-Id: I818783ac96a42d09083f253a9cfe1ab838dc6212
    Make references to Jenkins plugins uniform
    
    Change-Id: I2324db6424145c183048a27c7be30b4068331cf0
    Revert "Adding AnsiColor Support"
    
    That seems to be a duplicate of the ansicolor wrapper (see def ansicolor) which is already existing:
    
          wrappers:
            - ansicolor:
                colormap: vga
    
    This reverts commit f6182791aa42ed07c6c195122ac17ff0fae20ec2
    Adding AnsiColor Support
    
    Adding support for the ansi color plugin.  Provide an array with
    the three supported color-maps.
    
    Change-Id: Ie9c4779d1297723908d2732bedd048d03d259246
    Fixed timeout wrapper
    
    Change-Id: Ib4c1f5fdc7ed41e4912193ba49937e275a5f783a
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Added more options to the Build Timeout plugin
    
    Added the options:
     - type: absolute, elastic ot likely-stuck
     - write-description: Write a message on the description
     - elastic-percentage: percentage for the elastic type
     - elastic-default-timeout: default minutes for elastic type
    
    Change-Id: Ib9cfce97b3373d375b8631d3b6f3c7a61c69b446
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Added pre-scm-buildstep wrapper
    
    Change-Id: I96ae74c58e90309f9590b25a7f61a0421e5c9194
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Pathignore plugin support added
    
    This plugin allows SCM-triggered jobs to ignore build requests
    if only certain paths have changed.
    
    Change-Id: Iffc86d5b7f485ff4931e68158a6fa110cb42a1c9
    Add RVM (ruby version manager) support
    
    Change-Id: I1cf4f946657a12e0f0864e2af18ebdbc44989a11
    Adding the Sauce OnDemand Plugin
    
    This change adds support for the sauce ondemand plugin.  Using
    this plugin you can actually set everything at the job config
    level and not touch the global config.  I did have to put a note
    in about how to know what to put for the platform since the
    list of platforms is dynamically created by the plugin by
    hitting the sauce labs site to get the current list, so I wasn't
    able to create a dictionary of what you see in the config and
    what the valid values are for the yaml.
    
    Change-Id: I3579111af0b18967cd09f28a5388e6637fa766d5
    Fixing documentation
    
    The env-file documentation had the link for the plugin incorrect
    The jclouds documentation had no description nor link to the
    required plugin
    Doing make html in the doc folder complained about tfs in wrappers
    so I added a new line
    
    Change-Id: I61799c7a06d50486a08c31ba7db3d34965378e6f
    Reviewed-on: https://review.openstack.org/36464
    Reviewed-by: Leif Madsen <leif@leifmadsen.com>
    Reviewed-by: Mathieu Gagné <mgagne@iweb.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    wrapper ansicolor now support different colormap
    
    The Ansi color plugin let you specify a different set of colors to use.
    The plugin uses 'xterm' has a default and provides 'css' and 'vga'.  On
    a white background, it seems 'vga' is a bit easier to the eyes.
    
    Change-Id: I4108bfb9f3c7020ce5bfdfefe437353bbac2c122
    Reviewed-on: https://review.openstack.org/35494
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    add Environment File Plugin
    
    This commit adds the Environment File Plugin to JJB.
    https://wiki.jenkins-ci.org/display/JENKINS/Envfile+Plugin
    
    Change-Id: Id35a4d6ab25b0440303da02bb91007b459979243
    Reviewed-on: https://review.openstack.org/35170
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add Release plugin
    
    Add support for a 'release' wrapper section which enables the
    Release Plugin
    (https://wiki.jenkins-ci.org/display/JENKINS/Release+Plugin).
    
    Change-Id: I48e9cdd3f32c4f7e3da843b6adb58767b357b2e7
    Reviewed-on: https://review.openstack.org/31650
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    add post build workspace cleanup publisher
    
    Change-Id: Id541aaa8173202bf141f389c7258e0dd43b39472
    Reviewed-on: https://review.openstack.org/31448
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding Build User Vars support
    
    Adding support for the Build User Vars plugin.  This plugin
    exposes new environment variables of who started a build, if it
    was started manually.
    
    Change-Id: I731419f26a9e59800ea2209d1c5a659a1b6cd483
    Reviewed-on: https://review.openstack.org/30785
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Fixing Inject to not create empty tags
    
    Using the Inject functionality with the builders section caused
    an error in Jenkins because the script-file was blank but the tag
    existed in the xml.
    
    Fixing this by adding a function to create the XML only if the given
    value is not None and not a blank value '':
    
        def add_nonblank_xml_subelement(parent, tag, value):
    
    Change-Id: I9151f7444f6807e929721b04fb8e7ad3a867cd6c
    Reviewed-on: https://review.openstack.org/18820
    Reviewed-by: Jon-Paul Sullivan <jonpaul.sullivan@hp.com>
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Documentation fixes to make Sphinx happy
    
    On this note, we have an issue with our current gate test for
    documentation not properly catching these issues.  I'll be attempting to
    address the issue in a future patch.
    
    Change-Id: I7d0bea70ef98d1744200815ce12f1436729349e8
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/19889
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Fixing capitalization of SubElement in wrappers.py
    
    The locks function was broken due to a mis-capitalization
    It was XML.Subelement and I changed it to XML.SubElement
    The locks functionality now works correctly
    
    Change-Id: Icebcad27515eebce9609262e0f9f3d5c87acb19f
    Reviewed-on: https://review.openstack.org/18687
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add a jclouds wrapper.
    
    Note: this does not take care of the initial configuration of jenkins
    to use jclouds, it merely lets you create jobs from manually-configured
    jclouds templates.
    
    Change-Id: I981bd90fffb0077bf8f60c8701a157ebd8009000
    Reviewed-on: https://review.openstack.org/17826
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ablity to use the Env Inject Plugin with the Build Environment section.  This adds the third place the Env Inject Plugin can be used
    
    Change-Id: Ic468e265c606b20e7684da8092194c21f6135bef
    Reviewed-on: https://review.openstack.org/16923
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    add support for copy-to-slave and copy-to-master
    
    Change-Id: I53eda0c9061cd3cc6c17f9f0afb1cb0bc60d9202
    Reviewed-on: https://review.openstack.org/16550
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Bump pep8 to 1.3.3
    
    However due to an upstream bug[1] we ignore E125 for now.
    
    [1] https://github.com/jcrocholl/pep8/issues/126
    
    Change-Id: I75337d9194156580cc66666aed9a5bc2fd5d4e15
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16604
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    trivial whitespace errors in Sphinx
    
    jenkins_jobs/modules/builders.py:docstring of
    builders.artifact_resolver:3: WARNING: Definition list ends without a
    blank line; unexpected unindent.
    
    jenkins_jobs/modules/wrappers.py:docstring of wrappers.build_name:6:
    WARNING: Field list ends without a blank line; unexpected unindent.
    
    Change-Id: Iff77f346172e1c45a035e112e22e8e2fda9933e3
    Reviewed-on: https://review.openstack.org/16169
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Adding ability to use the Locks and Latches plugin
    
    Change-Id: I8c63de4eebd42dbe2274a560b038ffe3f7cf8598
    Reviewed-on: https://review.openstack.org/15891
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding ability to use the Port Allocator Plugin
    
    Change-Id: Ie64b4d3d0b1812347f6cc5921dc1cb5bb22ea27f
    Reviewed-on: https://review.openstack.org/15402
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add pre-build support for the workspace cleanup plugin
    
    Change-Id: Ib88d09a2da1c903bac9afeb1dbd70648e003edfe
    Reviewed-on: https://review.openstack.org/15024
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to use the Build Name Setter Plugin
    
    Change-Id: Icf933a25513f3b349ef67badc7b3e9cd7998089c
    Reviewed-on: https://review.openstack.org/15037
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Adding ability to use the mask passwords plugin
    
    Change-Id: I9a6d90399a6a1d6cfd07a5d4694e13b1060a498d
    Reviewed-on: https://review.openstack.org/14976
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add links to required Jenkins plugins in docs.
    
    Add links to section docstrings that point at Jenkins plugins required
    for that particular section to work.
    
    Change-Id: Ie5c8de780072b157fbb873227d3ccfa5a2be88f3
    Reviewed-on: https://review.openstack.org/13155
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Abate modules section.
    
    This is the first in a series of changes to alter the way modules
    are handled.
    
    This change removes the module section from yaml.  Instead, all files in
    modules/ are imported, and a 'register' function is called if it exists.
    
    The register function can add (any number of) module classes to a module
    registry.  The registry will also keep track of helper functions for use
    by other modules, and the register function can add those.
    
    This sets up the ability for a module other than the 'builders' module to
    register builders.  Eventually, we should be able to move all OpenStack
    specific builders, publishers, etc outside of the base modules; instead
    we would just register an 'openstack_pep8' builder in a module of our own
    that the job filler would know to invoke.
    
    The API for modules is slightly changed, adding a root_xml method to handle
    the different project types, a handle_data method for modules that want
    to modify the yaml data structure before any XML is generated, and a data
    parameter is added to the generate_xml method.  Ideally, we will migrate
    those modules that count on having a centrally stored data object to using
    the one passed into this method to allow maximum flexibility.  I also
    envision some project-level yaml attributes to be moved closer to the
    handlers that use them.
    
    This change does inadvertently alter the XML produced.  Here is the result
    of test.sh:  http://paste.openstack.org/show/18585/
    
    In all cases, those are inconsistencies in the YAML that are corrected
    by this change.  Some jobs included an empty triggers vector (due to
    module trigger_none) while others did not, so there was no way to satisfy
    both behaviors.  The added postbuilder section in the gerrit maven job is
    there because the job specified postbuilders, but did not include the
    postbuilder module.  I believe the resulting XML is more desirable.
    
    Change-Id: Ib38222e6bfc9d5b55aa497669d7023c7aaf4b7bc
    Jenkins Job builder 2.0
    
    This uses a python script with modules for parts of the XML.  The parameters for the projects are provided using YAML scripts.
    
    It also includes a Jenkins API module to directly inject jobs into Jenkins without requiring a restart/reload as well as a memory of which jobs have been pushed to Jenkins.
    
    It is currently configured to replace the original Jenkins Jobs in StackForge.
    
    What it won't yet do:
    1. Delete jobs (although it isn't far off being able to)
    2. check-* jobs (need to modify the trigger_gerrit module to support that)
    
    Documentation to follow
    
    Fixes bug #995599
    
    Change-Id: I2a67ee2d9e8f43cbced56425ef7f80dc6a30a814
    Add FindBugs plugin support
    
    - Add reporters test module
    - Move build_trends_publisher to helpers module now that there is
      multiple modules using the function
    
    https://wiki.jenkins-ci.org/display/JENKINS/FindBugs+Plugin
    
    Change-Id: Ic537279ff875589b41823f6f5324feb61ed7054e
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    raise JenkinsJobsException instead of Exception
    
    Normalize all exceptions to be JenkinsJobsException from the
    jenkins_jobs.errors module.  This patch replace all occurences of the
    build-in Exception.
    
    Change-Id: I923ec35467dd93211d8cd1e6c69c0321d9391ec8
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add email publisher/reporter.
    
    Also, add reporters module.
    
    Change-Id: I9cd0abca3d90f1af5f275698ecc9ccb7d9086494
    Reviewed-on: https://review.openstack.org/13303
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add Maven project option run-post-steps
    
    run-post-steps takes one of (success, failure, unstable) and defines
    under what build states the post build steps will run.
    
    Existing behavior is not changed (default of failure).
    
    Change-Id: I5011f6f4510066aee3ea0a667d17e773b7eec162
    Consolidate CFP settings into a common function
    
    ConfigFileProvider configuration is the same but is used in a few
    places. This patch consolidates the configuration into a common reusable
    function.
    
    Change-Id: Idb45e43ff5a9dd6cea84e37026f875f98dc04c83
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add support for Config File Provider to Maven Project module
    
    Note: this is a port of the patch from commit 1e216835
    https://review.openstack.org/gitweb?p=openstack-infra/jenkins-job-builder.git;a=commit;h=1e216835
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Ic7f4d4d676e67f5f96afc3bd412dea5a50bee79b
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Add support for Config File Provider to Maven Project module
    
    This patch adds some detection logic to the code to detect if the
    settings file starts with:
        org.jenkinsci.plugins.configfiles.maven.MavenSettingsConfig
    or in the case of global-settings starts with:
        org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig
    
    If true, the module will configure for Config File Provider as the
    settings files.
    
    See:
    https://wiki.jenkins-ci.org/display/JENKINS/Config+File+Provider+Plugin
    
    Change-Id: Iecadfd6265100720d1d0b08d3cf57a510999f89d
    Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org>
    Consistency updates in documentation
    
    Change-Id: I0096348488371c37c0ba645f0bd3d385975ef7d2
    Allow custom settings configs for maven projects
    
    Allow custom settings & global-settings config files to be configured
    for maven projects.
    
    In addition, the previously defined empty nodes for these configurations
    were misnamed and this corrects that as well.
    
    This change also switches to using an included test as an example.
    
    Change-Id: I9f832f498e358268b3896ead3a78462e408bdd9d
    Signed-off-by: Andrew Grimberg <grimbeaj@gmail.com>
    project_maven: allow to set private repository
    
    The values map to these GUI choices
    
     * default            -> Default
     * local-to-executor  -> Local to the executor
     * local-to-workspace -> Local to the workspace
    
    This is on the project level what the similar option is on the builder
    level.
    
    Change-Id: I90ee3385ee12a46b5ab1eb26e3af1bdbfc36946a
    project_maven: Don't require artifact-id and group-id
    
    Jenkins will determine the values from the pom automatically so there's
    no need to require them.
    
    Change-Id: Ic1c9c26a05e335fd78a92fe4316ecc88b3f209b9
    make job creation consistent
    
    Defining a project (in yaml) without setting any other parameters should
    generate a basic jenkins job (in xml).  While this works for freestyle jobs,
    jjb will throw an error for maven and flow projects.  The behavior should be
    consistent across all types of projects.  This patch just makes it so
    that the behavior is consistent.
    
    Change-Id: If7b749dae7631e8714a9416dfbd82d2443c0302c
    Use a more consistent style for booleans values.
    
    For an optional boolean option, a common idiom was to write:
      data.get('option-name', 'false')
    
    Using a keyword False instead of the string 'false' (resp. True
    instead of 'true') is deemed clearer, since it conveys that the
    option is a flag.
    
    Such calls are modified to using False/True. The change has been
    creating using `git grep '.\(false\|true\).)'` to find what needed
    to change.
    
    Change-Id: I54087b5487c7186fcc4ee70ea9b28c1a1002a547
    Maven: expose configuration of automatic archiving.
    
    By default, Maven projects are configured to automatically
    archive maven artifacts.
    
    This commit exposes an option to configure that behavior in
    a backward compatible way. By default, automatic archiving
    is active, which means writing false in the XML configuration,
    since the element name is "archivingDisabled".
    
    Change-Id: I35e8a035a53356d7c171735aa5a52c6c429d1608
    Reviewed-on: https://review.openstack.org/33367
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    maven: support for MAVEN_OPTS
    
    The maven build phase offers us a way to pass additional parameters to
    the JVM.  The option is shown as MAVEN_OPTS and accept a string which is
    then expanded as mavenOpts.
    
    Change-Id: I0a2437e8bda1e828c09e87343f7ca5025b77182c
    Reviewed-on: https://review.openstack.org/32965
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Mathieu Gagné <mgagne@iweb.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Allow to override ignore upstream changes setting
    
    When ignore-upstream-changes is set to false, it will configure
    the job to build whenever a SNAPSHOT dependency is built.
    
    This setting is only available to Maven projects.
    
    The default value is still 'true' for backward compatibility.
    
    Change-Id: Ibdcdeef6264a68b9002a5b5bb35b90233db67e8a
    Reviewed-on: https://review.openstack.org/32298
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Maven: Fix XML markup.
    
    The generated markup contains a node "root_module", which is not
    recognized by Jenkins:
    
      WARNING: Skipping a non-existent field root_module
      com.thoughtworks.xstream.converters.reflection.MissingFieldException: No
      field 'root_module' found in class 'hudson.maven.MavenModuleSet'
    
    The correct spelling is rootModule.
    
    Change-Id: I0cae2c3358f2664783c97e245b064453a05bc988
    Reviewed-on: https://review.openstack.org/26052
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add ability to specify mavenName for maven jobs.
    
    Previously maven jobs did not specify a maven name so which maven
    install Jenkins treated as default was used for all JJB maven jobs. Add
    the ability to set a maven install explicitly so that multiple maven
    installs may be used.
    
    Change-Id: I6a26635c31c5504b855063e1d4f6fa53132f26b5
    Reviewed-on: https://review.openstack.org/19756
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add rootpom option to maven jobs.
    
    Change-Id: I3a865cdc1ae9f92c39033e7b31b490ff7c384b95
    Reviewed-on: https://review.openstack.org/11924
    Reviewed-by: linuxjedi <andrew@linuxjedi.co.uk>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tox.ini and pep8, pyflakes cleanup.
    
    Change-Id: I4d6312e92dffd596ae58e55c837e3db3ea7d1c52
    Reviewed-on: https://review.openstack.org/11198
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Change all '_' to '-' in YAML for consistency.
    
    Change-Id: If19cb26fa544b485acfc188baf3506eaea61d6cf
    Reviewed-on: https://review.openstack.org/11154
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Refactor modules and templating.
    
    Switch to using entry points for loading modules as well as
    individual buliders, triggers, publishers, etc.
    
    Remove most openstack-specific python code.
    
    Change templating so it's less repetitive -- a single project
    definition will suffice for multiple jobs or job-groups.
    
    This outputs XML that is identical to the current production XML,
    warts and all.  There are significant improvements that can be made
    to the YAML in a separate change, as they will cause minor changes
    to existing jobs (adding timestamps, logrotate, etc.).  These are
    mostly marked with TODO in this change.
    
    Change-Id: Idcfddb3b43b6cfef4b20919a84540706d7a0a0b1
    Reviewed-on: https://review.openstack.org/11000
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Abate modules section.
    
    This is the first in a series of changes to alter the way modules
    are handled.
    
    This change removes the module section from yaml.  Instead, all files in
    modules/ are imported, and a 'register' function is called if it exists.
    
    The register function can add (any number of) module classes to a module
    registry.  The registry will also keep track of helper functions for use
    by other modules, and the register function can add those.
    
    This sets up the ability for a module other than the 'builders' module to
    register builders.  Eventually, we should be able to move all OpenStack
    specific builders, publishers, etc outside of the base modules; instead
    we would just register an 'openstack_pep8' builder in a module of our own
    that the job filler would know to invoke.
    
    The API for modules is slightly changed, adding a root_xml method to handle
    the different project types, a handle_data method for modules that want
    to modify the yaml data structure before any XML is generated, and a data
    parameter is added to the generate_xml method.  Ideally, we will migrate
    those modules that count on having a centrally stored data object to using
    the one passed into this method to allow maximum flexibility.  I also
    envision some project-level yaml attributes to be moved closer to the
    handlers that use them.
    
    This change does inadvertently alter the XML produced.  Here is the result
    of test.sh:  http://paste.openstack.org/show/18585/
    
    In all cases, those are inconsistencies in the YAML that are corrected
    by this change.  Some jobs included an empty triggers vector (due to
    module trigger_none) while others did not, so there was no way to satisfy
    both behaviors.  The added postbuilder section in the gerrit maven job is
    there because the job specified postbuilders, but did not include the
    postbuilder module.  I believe the resulting XML is more desirable.
    
    Change-Id: Ib38222e6bfc9d5b55aa497669d7023c7aaf4b7bc
    Add support for maven jobs.
    
    Add a project module type with some special case rules so that
    the general case does not have to add one to its yaml files.
    
    Change-Id: Id110e79c34fa3982275f549d017adb03a1faf473
    sphinx is now stricter
    
    The documentation files often have minor typo or badly formatted
    commands which makes sphinx emits a warning. To make sure we always
    catch them via the Jenkins build, this patch makes sphinx to convert
    warning to errors thus aborting the build, simply add to pass the -W
    option to sphinx-build.
    
    This patch also fix one warning:
    * There is no source/_static dir so disable html_static_path
    
    Test plan:
    
    $ make clean; make html
    rm -rf build/*
    sphinx-build -b html -d build/doctrees  -W source build/html
    Making output directory...
    Running Sphinx v1.1.3
    loading pickled environment... not yet created
    building [html]: targets for 18 source files that are out of date
    updating environment: 18 added, 0 changed, 0 removed
    reading sources... [100%] zuul
    looking for now-outdated files... none found
    pickling environment... done
    checking consistency... done
    preparing documents... done
    writing output... [100%] zuul
    writing additional files... genindex py-modindex search
    copying static files... done
    dumping search index... done
    dumping object inventory... done
    build succeeded.
    
    Build finished. The HTML pages are in build/html.
    $
    
    Change-Id: I55935fb5e869919ac639f841876aaf3871c71d17
    Reviewed-on: https://review.openstack.org/16328
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding hipchat notification capability.
    
    Tweaks the Builder and YamlParser classes to accept a config object
    which is passed to the parser's ModuleRegistry object. This makes it
    available to the HipChat object.
    
    Change-Id: I3017658336b949c0fda7c82945e7014dbcf6e152
    Reviewed-on: https://review.openstack.org/12794
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Flow project support
    
    The approach is pretty straigh forward, it consists of one new
    module handling the project-type "flow". It supports the only field
    needed by this kind of project an XML block containing the flow
    description in a custom DSL.
    
    Change-Id: I5195391609b3058ae9e24a59024e0cc7a69b16a0
    Implements: blueprint jenkins-job-builder-flow
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add tests for yaml anchor behaviour
    
    Adds two tests to ensure correct behaviour with referencing yaml
    anchors and a third test to verify the expansion internally of yaml
    anchors and aliases.
    
    * test that anchors are not carried across subsequent top level
      invocations of yaml.load(). This will be used subsequently to ensure
      that where anchors are allowed across included files they are
      correctly reset on each top level call.
    * test that where anchors are defined in a top level file and
      subsequently included files, duplicate anchors raise exceptions as
      though they were defined within the same file.
    * test that data returned from yaml loading contains the additional data
      specified by the alias. Uses json to force conversion so that the
      outputted yaml contains the results of the anchors and aliases instead
      of them.
    
    Update documentation to contain details of the use of anchors and
    aliases including a refernce to a simple generic example from the
    specification as well as a JJB specific example.
    
    Change-Id: I0f2b55e1e2f2bad09f65b1b981baa0159372ee10
    Interpolate params inside of params.
    
    This patch enables parameters to be expanded inside of other parameters. For
    instance:
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_foo'
        builders:
            - shell: 'echo "I am foo job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_bar'
        builders:
            - shell: 'echo "I am bar job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-template:
        name: '{value-stream}_{pipeline_type}_baz'
        builders:
            - shell: 'echo "I am baz job!"'
        publishers:
            - trigger-parameterized-builds:
                - project: '{downstream}'
                  current-parameters: False
                  condition: ALWAYS
                  git-revision: True
    
    - job-group:
        name: 'pipeline2'
        pipeline_type: 'p2'
        jobs:
            - '{value-stream}_{pipeline_type}_foo':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_baz'
            - '{value-stream}_{pipeline_type}_baz':
    
    - job-group:
        name: 'pipeline1'
        pipeline_type: 'p1'
        jobs:
            - '{value-stream}_{pipeline_type}_baz':
                downstream: '{value-stream}_{pipeline_type}_bar'
            - '{value-stream}_{pipeline_type}_bar':
                downstream: '{value-stream}_{pipeline_type}_foo'
            - '{value-stream}_{pipeline_type}_foo':
    
    - project:
        name: derp
        jobs:
            - 'pipeline1':
                value-stream:
                    - experimental
                    - staging
            - 'pipeline2':
                value-stream:
                    - experimental
                    - staging
                    - production
    
    Prior to this commit, the setup above was not possible because the `downstream`
    defined as parameters to be passed to job templates in the job groups would not
    have the `value-stream` and `pipeline-type` parameters interpolated. The
    trigger-parameterized-jobs `project` value for each of the 15 jobs created with
    this setup would all look something like `{value-stream}_{pipeline_type}_foo`
    which does not actually point to any particular job.
    
    The only way I was previously able to specify a downstream job with parameters
    was to put the `{value-stream}_{pipeline_type}_foo` string directly in the
    job-template which meant that job templates were statically bound to each
    other--I had no reasonable way to re-order or easily select subsets of the jobs
    at the job-group or project level as can be seen here in the difference between
    `pipeline1` and `pipeline2`.
    
    Change-Id: I26dfb112cd4842c40c3d561f8de89f7654a07b8f
    doc change: remove duplicate general job parameters
    
    This change adds a test to validate the general job parameters and uses
    that test as documentation for the general module.   It also replaces the
    doc of the general params in the top level definitions.rst with references
    to the general module.
    
    Change-Id: I3df04d69186ca49d7297f8141855a4c72c73be1e
    Add documentation for logrotate job parameter
    
    Change-Id: I33217503ff5935c6592dfb262a0e672577505d61
    Closes-Bug: #1376913
    Add documentation and example on the usage of yaml anchors and aliases.
    
    Change-Id: I9227820cfdccace2d8a463529da64041c156e8ec
    Add additional documentation for passing objects to templates
    
    I noticed that users were not really aware of how this feature
    worked so added additional documentation for it.
    
    Change-Id: Ic5385ae859295cdd015d698ede3da4988efd9ca7
    Closes-Bug: 1335945
    Added description for node attribute in documentation.
    
    The "node" attribute of Job allows to specify labels of Jenkins
    builders where the job can be executed.
    
    Change-Id: Icb2a72a3d6340b1f9d9bdcc27e2e9691b1752c24
    Apply defaults to job-templates parameters
    
    I had the use case of a lot of projects sharing the same job template
    that uses a lot of variables.  That requires each project to define all
    the variables even if they are mostly identical.
    
    This patch propose to define varialbes as 'defaults' and have them
    applied in the job-template magically (oneline diffs always have that
    feeling to me).
    
    So instead of:
    
    - project:
        name: project1
        arch: amd64
        builder: debuild
        lintian: true
        jobs:
         - '{name}-build-{arch}'
    
    And so on ...
    
    I can just:
    
    - defaults:
        name: sanebuild
    
    - project:
        name: project1
        defaults: sanebuild
        jobs:
         - '{name}-build-{arch}'
    
    And override the arch as needed either in the project or by passing it
    to the job.
    
    Without this patch, the provided yamlparser fixture
    template_honor_defaults.yaml would raise:
    
        arch parameter missing to format echo Build arch {arch}.
        Given: {'': '', 'jobs': ['build-{arch}'], 'name': 'project-name'}
    
    Change-Id: Ida1e27eb47356d9cae42175743bd2fd52eb9d869
    Clarify configuration and job definition
    
    The docs was a little confusing in that used a single term 'configuration' to
    referred to both the JJB global configuration and the job definitions.
    This change clarifies that by changing 'configuration' in a few places
    to 'job definition' to make it less confusing.
    
    Change-Id: Ie64e7d899b793c9c8e86e51076c020640e336a40
    Revert "Allow using template variables in "defaults" field."
    
    This reverts commit 70ed22362a9c13ea9f3165e5747dcca281ad439c.
    
    I knew I should have tested the patch with my own templates. Doing so I
    discovered a nasty regression:
    
    The defaults can make use of variables passed by the project. By moving
    applyDEfaults to be called after deep_format is performed on job
    templates, any substitutioncontained withing defaults is no longer
    correctly replaced by project parameters.
    
    Change-Id: I69ffb3e28093af6db62962786d9275bf3ba4e115
    Allow using template variables in "defaults" field.
    
    Change-Id: I876ab7fa61258e84b00a67325aeb9234aff8fa62
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Fix a broken include in the configuration documentation.
    
    Change-Id: I803caea42365e44851068e510d5e698447aad73b
    re-arrange docs for clarity
    
    The info on using list and dict as parameters seemed a little too advanced
    to be in the description of 'templates'.  This change moves this example into
    a newly created 'advanced' configuration section.
    
    Change-Id: I98b80233c45ac721819360743dcae5e82c63ecbf
    remove misleading jjb example
    
    Change I059f38d0aa8a8947aaac75e0ddb34d392063ece3 added support for
    passing parameters to jobs in groups but not for variable substitution
    on those parameters. Substitution on job list parameters would
    be a new feature. This change removes a misleading parameter subsitution
    example.
    
    Partial-bug: #1298568
    Change-Id: I18e28bb622f0473f049963ce6dcf6c4efd11dc2c
    removed job configuration duplication in docs
    
    The same job definition and examples were in both general.rst and
    configuration.rst.  Moved the contents of general to configuration.
    
    Change-Id: Iefdf1b6ac3b9679a8af4451710442bf58054d790
    Support variable-specific substitutions in templates.
    
    Change-Id: I6af84f48eaa4ee44c8d8babddd8d10a1e1095101
    Test creation of multiple jobs from templates
    
    Concatenate each job XML created from the parsed yaml when using the
    YamlParser class for testing. Ensures that multiple jobs created from a
    single yaml file can be tested.
    
    Remove erroneous multiple job from scm_remote_deep_bug test.
    
    Change-Id: I2732a7303fefff1f321a1a5b7eef9144d168e39a
    use {obj:key} as a way to pass an object and not only strings to templates
    
    As mentioned at the mail list[0]:
    
    "So I need another way how to pass a *list* as data structure from
    the defaults/project down to the job-template definition, similar to
    what can be done with "{variable}" for strings."
    
    [0] http://lists.openstack.org/pipermail/openstack-infra/2014-February/000799.html
    
    Closes-Bug: 1281038
    Change-Id: I5b04ddb52e537fedd2d05795e91011afd92f2295
    Enhance project specific parameters example.
    
    It was not clear that the project-specific parameters are actually a variables.
    Improving the example to make it more clear.
    
    Change-Id: I919562d4df53542ff0d4d60cf0fafc81b69aff1a
     Explain howto use maven's pre/postbuilders
    
    They're configured like the other builders but one needed to check the
    source to verify this until now.
    
    Change-Id: I97400ad9c7cb0dfb89fe2757c4bedce639e7ea24
    fix jjb configuration documentation
    
    fixed incorrect yaml indentation in the project template and macro section
    
    Change-Id: I9f284dcc39c9c428595c10f4c1bc5e97081392c3
    Add display-name job property.
    
    There is apparently no way to clear this property using the REST api
    once it is set, and the included documentation change warns of that.
    
    Change-Id: I49c5a91664cd37196f3239854bb0adbcf5b3c9f9
    fix typo
    
    Change-Id: Ie8d6e35094a1bd0c970c8122b0a76bca1fba4f7f
    Flow project support
    
    The approach is pretty straigh forward, it consists of one new
    module handling the project-type "flow". It supports the only field
    needed by this kind of project an XML block containing the flow
    description in a custom DSL.
    
    Change-Id: I5195391609b3058ae9e24a59024e0cc7a69b16a0
    Implements: blueprint jenkins-job-builder-flow
    Job-specific subst. in a job group's job list
    
    Adding job-specific substitutions in a job group's job list
    would result in JJB crashing with the following error:
      TypeError: unhashable type: 'dict'
    
    This change adds the ability to add job-specific substitutions
    in a job group's job list. It implements the same logic used by
    a previous change (6ff1d69).
    
    Change-Id: I059f38d0aa8a8947aaac75e0ddb34d392063ece3
    Document escaping braces in template literals
    
    * doc/source/configuration.rst: In a literal string within a
    template, deep_format will interpret braces as delimiting an
    expansion parameter unless doubled up. Document this.
    
    Change-Id: I703f03f89436a09d64b79b147bec6441e1f8cc38
    Closes-Bug: #1210293
    document JJB module execution order
    
    Jenkins executes the JJB modules in a specific order.
    It helps users to understand the order when creating
    jenkins jobs.
    
    Change-Id: I134ccf927cb387a0d112a8bedb446fe96196eb84
    Metadata plugin module - largely based on Parameters module.
    
    I implemented this plugin as I use Jenkins Metadata plugin heavily in all my
    projects instead of the default Parameters plugin and think that everyone else
    would benefit from this addition to JJB as well.
    Current implementation handles dates in epoch format only and does not handle
    'node' element - so no metatree creation is possible.
    
    Change-Id: I1e67224df9339f1319a371d049585c8343301f2e
    Reviewed-on: https://review.openstack.org/33773
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    add an auth-token YAML parameter for the General Job Configuraion module
    
    Using the Jenkins WEB UI an Authentication Token can be specified for
    jobs to allow builds to be triggered remotely by using the URL:
    JENKINS_URL/job/JOBNAME/build?token=TOKEN
    
    Add an auth-token job parameter to generate the <authToken> XML element.
    
    Change-Id: Ic916e4074c9b2de9c616ef39a88c1d8e1e91fcff
    Signed-off-by: Javier Martinez Canillas <martinez.javier@gmail.com>
    Reviewed-on: https://review.openstack.org/25819
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    job now supports a custom workspace
    
    In Jenkins, the job advanced options has a tick box to enable a
    workspace space different from the default provided internally by
    Jenkins.  The XML element is <customWorkspace />.
    
    Change-Id: Ia432d98523a7cb617c1236acb52821a82b67c8e7
    Reviewed-on: https://review.openstack.org/24427
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    doc/configuration: Fix incorrect name "defaults"
    
    See YamlParser#applyDefaults in builder.py.
    
    Change-Id: I763d23608b79f7b1c560ae41cf5ca0d2dcc19d60
    Reviewed-on: https://review.openstack.org/24407
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Reviewed-by: Elizabeth Krumbach <lyz@princessleia.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Documentation fixes to make Sphinx happy
    
    On this note, we have an issue with our current gate test for
    documentation not properly catching these issues.  I'll be attempting to
    address the issue in a future patch.
    
    Change-Id: I7d0bea70ef98d1744200815ce12f1436729349e8
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/19889
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    document parameter usage of Macros
    
    This patch update the 'configuration' documentation related to Macros.
    It shows up how to:
    
     - write a parameterized macro
     - write a specialized macro reusing the code from a parameterized macro
       (parameters are hardcoded)
     - a common culprit which is to call a parameterized macro but
       forgetting to pass the parameter.
    
    Change-Id: I8a58ab514ea572b977ebc528e848b6cf44c6dc7d
    Reviewed-on: https://review.openstack.org/17937
    Reviewed-by: Tollef Fog Heen <tfheen@varnish-software.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    add matrix job support
    
    currently only supports label expression axes
    Change-Id: I5d714affdf101eeb5b0eeae5ed5408d6964c6b77
    Reviewed-on: https://review.openstack.org/16908
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Small doc fixes
    - A couple of typos
    - Avoid .yaml to be interpreted as manpage macro
    
    Change-Id: I51f954da733cef64b05fee9797b01afba41d48f3
    Reviewed-on: https://review.openstack.org/16613
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add option to block up|down stream builds.
    
    Jenkins has advanced project options that allow you to block if the up
    or down stream projects are currently being built. Support these options
    through JJB.
    
    Change-Id: I8cfe3e19d1d929517c0a6ee886b31241b3e9b588
    Reviewed-on: https://review.openstack.org/16338
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Fix up examples so they're at least syntactically valid
    
    Ideally we should verify this at build time, but until then, at least
    make the examples syntactically valid for anybody trying to get
    started.
    
    Change-Id: I413ae9576b012a4847bedaa5a1582fad3e1a8de0
    Reviewed-on: https://review.openstack.org/15018
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Do not output XML if job name not specified ('pipeline', 'trigger-builds')
    
    Done in order to enable specifying build pipelines at the project level.
    Pipelines are built using the 'pipeline' plugin or the 'trigger-builds'
    plugin.  The downstream job to be executed is specified at the project
    level, and substituted into the template.  Ignoring definitions where
    the downstream job is blank allows the pipeline to be easily terminated.
    
    Also adding a samples/ directory, which currently contains an example of
    pipeline creation, together with a new tools/run-compare-xml-samples.sh
    to run the before/after test on the samples.
    
    Change-Id: Icc324d1485e22db7824ad784890db48eb3e48f8f
    Reviewed-on: https://review.openstack.org/13706
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add support for giving lists to job templates
    
    This change allows constructs like:
    
    - job-template:
        name: "foo-build-{slave}"
    
    - project:
        slave:
          - debian-squeeze-powerpc
          - debian-squeeze-amd64
    
    and will then instantiate the job template for each value in the
    list.
    
    Change-Id: I057a30ef6d91048efacc4a6da2142cb8f924dd06
    Reviewed-on: https://review.openstack.org/14738
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Enable job-specific substitutions in a project's job list.
    
    The motivation for this was to allow for specifying a pipeline of jobs
    at the project level, thereby re-using the same job templates in
    different pipelines.
    
    Change-Id: I9840d3713669ceca75a831be92c95c3fe9195c01
    Reviewed-on: https://review.openstack.org/13705
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Adding hipchat notification capability.
    
    Tweaks the Builder and YamlParser classes to accept a config object
    which is passed to the parser's ModuleRegistry object. This makes it
    available to the HipChat object.
    
    Change-Id: I3017658336b949c0fda7c82945e7014dbcf6e152
    Reviewed-on: https://review.openstack.org/12794
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add email publisher/reporter.
    
    Also, add reporters module.
    
    Change-Id: I9cd0abca3d90f1af5f275698ecc9ccb7d9086494
    Reviewed-on: https://review.openstack.org/13303
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Metadata plugin module - largely based on Parameters module.
    
    I implemented this plugin as I use Jenkins Metadata plugin heavily in all my
    projects instead of the default Parameters plugin and think that everyone else
    would benefit from this addition to JJB as well.
    Current implementation handles dates in epoch format only and does not handle
    'node' element - so no metatree creation is possible.
    
    Change-Id: I1e67224df9339f1319a371d049585c8343301f2e
    Reviewed-on: https://review.openstack.org/33773
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    add ability to parse from a file object
    
    Change-Id: I4f62fad4d2c0e361eddaed6d4db2faa655bd4b11
    Make reuse of builders/publishers inside other components easier.
    
    Some Jenkins plugins depend on other plugins, and their configuration
    section is a mix of both plugins.
    
    For Jenkins Job Builder, that means reusing one component directly from
    another one.
    
    Driving the generation of XML markup is the job of Base._dispatch.
    Unfortunately, components do not have access to their module object,
    and even if their could, _dispatch would still be a non-public method.
    
    Refactor Base._dispatch into ModuleRegistry.dispatch, which can be used
    from any place where the parser is available.
    
    Base and ModuleRegistry are extended so that the registry can discover
    which entry point must be used for each module, if appropriate.
    ModuleRegistry.dispatch signature can be simplified by dropping
    component_list_type parameter.
    
    Change-Id: Ie9d090817d0c2d464745b5634a22d3cea6a47ab1
    Reviewed-on: https://review.openstack.org/26051
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Use sphinx extlinks to shorten links to Jenkins wiki
    
    Reduce the links to the Jenkins wiki for references to plugin pages by
    using the sphinx.ext.extlinks module to provide a custom alias for
    generating links using the same base url.
    
    Change-Id: Ifba460cd131b4630deb41356e2b32641efe3086a
    Check external documentation links are valid
    
    Use sphinx's linkcheck builder to validate any external links.
    
    Fix the broken links by converting the example link to a code segment
    and correcting the link referencing the cgit mirror for the git clone
    instructions.
    
    Change-Id: Ic6236e250b7af5c7c000af1e67fb69dd720ad6d8
    Add usage info to JJB documentation
    
    Display the usage info for JJB and add it to the
    sphinx docs.
    
    Fixes bug 1221944
    
    Change-Id: I5b36cca7a836b009bfb0ca880abbccd4477de307
    sphinx is now stricter
    
    The documentation files often have minor typo or badly formatted
    commands which makes sphinx emits a warning. To make sure we always
    catch them via the Jenkins build, this patch makes sphinx to convert
    warning to errors thus aborting the build, simply add to pass the -W
    option to sphinx-build.
    
    This patch also fix one warning:
    * There is no source/_static dir so disable html_static_path
    
    Test plan:
    
    $ make clean; make html
    rm -rf build/*
    sphinx-build -b html -d build/doctrees  -W source build/html
    Making output directory...
    Running Sphinx v1.1.3
    loading pickled environment... not yet created
    building [html]: targets for 18 source files that are out of date
    updating environment: 18 added, 0 changed, 0 removed
    reading sources... [100%] zuul
    looking for now-outdated files... none found
    pickling environment... done
    checking consistency... done
    preparing documents... done
    writing output... [100%] zuul
    writing additional files... genindex py-modindex search
    copying static files... done
    dumping search index... done
    dumping object inventory... done
    build succeeded.
    
    Build finished. The HTML pages are in build/html.
    $
    
    Change-Id: I55935fb5e869919ac639f841876aaf3871c71d17
    Reviewed-on: https://review.openstack.org/16328
    Reviewed-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Tested-by: Jenkins
    Update man_pages name to jenkins-jobs
    
    This is mostly for our packaging efforts, and now will allow a user to
    do:
    
      $ man jenkins-jobs
    
    to access the documention.
    
    Change-Id: Ie9fe43021dd5c5c8cd9fe07e457fb7d8db45f083
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/16555
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Add openstack-common support for setup and version
    
    With help from clarkb in #openstack-infra and openstack-ci/gerritbot,
    I've manage to update our versioning to be inline with other openstack
    projects. This is another step towards creating our OS packaging.
    
    Change-Id: If3f44b939ee0a3c9c4dfa1d9f83ae14a8285ba5f
    Signed-off-by: Paul Belanger <paul.belanger@polybeacon.com>
    Reviewed-on: https://review.openstack.org/15335
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Tested-by: Jenkins
    Add additional search path to fix building of documentation.
    
    Sphinx was unable to find the jenkins_jobs.sphinx.yaml module when I
    ran 'make html' in the doc/ subdirectory.
    
    Change-Id: I64817139b149c66b01e3610248b49f955c5bde8c
    Reviewed-on: https://review.openstack.org/13707
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Update and clean up docs
    
    * Reference the readme.rst in index.rst to remove redundancy
    * General cleanup and updates
    
    Change-Id: I64e149087783e67d22fd0f2006accee2a1757ae0
    Clarify configuration and job definition
    
    The docs was a little confusing in that used a single term 'configuration' to
    referred to both the JJB global configuration and the job definitions.
    This change clarifies that by changing 'configuration' in a few places
    to 'job definition' to make it less confusing.
    
    Change-Id: Ie64e7d899b793c9c8e86e51076c020640e336a40
    Cleaning up index.rst file
    
    Removed notes about the generation of the file.
    
    Change-Id: I7330ee5f97a6751164d7ec978c64a4dfb92ead15
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Support excludes when recursively processing paths
    
    Include an additional option to exclude some paths/patterns from being
    included in the search to allow a complex hierarchy of directories to be
    referenced under a single path. Provide support to allow the user to
    specify patterns, relative and/or absolute path references.
    
    Implements support for excluding based on absolute path, relative path
    and based on simple shell globing patterns.
    
    Change-Id: I236b364c268fd2bf5511a2c6d9a1c87914f3b086
    Fix invalid link to jenkins puppet module
    
    The jenkins puppet link in docs is invalid as it links to non-existent
    project called 'config' . The correct link is updated in installation
    docs.
    
    Closes-Bug story 2000145
    story link: https://storyboard.openstack.org/#!/story/2000145
    
    Change-Id: I542280b99508e80a1cec4f87395e328cb567f134
    add a JJB command reference
    
    I've noticed that people don't necessarily know about the sub options
    in JJB so adding a command referencing showing all command options
    will hopefully help.
    
    Change-Id: Id0f786077e1e5a35db5ab45e0e2c3760ac11ded0
    add documentation for globbed parameter feature
    
    change I5bb1074 added a globbed parameter feature for updating and
    deleting JJB jobs but did not provide documentation for it.
    Hopefully this change will help users discover this feature.
    
    Change-Id: I6e527c818f25a5aa061a19308f22495221e3dc93
    add documentation for the delete command
    
    Change-Id: Iaa84c66aab01bf404ad64e960578a913254b21e4
    Fix command to build docs in installation documentation
    
    Change I1ad04bd renamed the `doc` environment to `docs` but did
    not update the documentation.
    
    Change-Id: I63cb324f222a40e91b21cc0d3b569b6352bf88b3
    Accept list of paths in 'path' arg.
    
    This adds the behavior of splitting the path positional argument on colons then
    processing each resulting string the same way that the path was being processed
    previous to this commit.
    
    * Adds a unit test to validate correct `path` parsing.
    * Adds a unit test to validate correct `path` parsing in the recursive case.
    * Documents the new behavior.
    
    Change-Id: I0f465e02077569352cd276a8366ead5bab0eb117
    Error on duplicate job names being found
    
    When parsing yaml files, any duplicate macros, job-templates, job-groups
    or jobs should be considered an error by default, but provide a config
    option for this to be ignored.
    
    Need to check for seen jobs twice, when processing job groups listed
    under projects and again the jobs have been generated from templates.
    Use a set and store each job name generated and check on the next
    iteration.
    
    Finally walk the list of generated jobs and check if any duplicates are
    encountered.
    
    Also ensure that if the user wishes for duplicates to be ignored that
    the last defined job replaces the earlier one.
    
    Change-Id: Id31ef33ae1b2469f7c3eeabe77420377978fa35e
    Added recursive option
    
    Now you can organize your yaml files into subdirectories and apply them
    all just passing --recursive option or adding the proper configuration
    file option.
    
    In adding support for multiple paths the Builder.load_files method was
    reworked to be backward compatible with individual paths or file-like
    objects, while also now handling being passed a list of paths or
    file-like objects to be parsed.
    
    Change-Id: I126751e347622716c592c6ed1a57b8acb7bf79a4
    Clarify configuration and job definition
    
    The docs was a little confusing in that used a single term 'configuration' to
    referred to both the JJB global configuration and the job definitions.
    This change clarifies that by changing 'configuration' in a few places
    to 'job definition' to make it less confusing.
    
    Change-Id: Ie64e7d899b793c9c8e86e51076c020640e336a40
    Replace 'Testing JJB' with the term 'Test Mode'
    
    The term 'testing' is overloaded.  I thought it meant running the actual
    JJB tests instead of running the JJB application.  I think a good way to
    distinguish the two is to use the term 'test mode' when it's in the
    context of running the JJB application with the 'test' parameter.
    I've already been using the term 'run in test mode' quite a bit in
    my JJB reviews to distiguish it from the actual JJB tests.
    
    Change-Id: I2076189e3ae55caa20d0894fb20859a7c461e46a
    Use yaml local tags to support including files
    
    Add support for local tags which are application specific to allow
    including of other yaml files or code from scripts. Allows for code to
    be maintained and tested as seperate files, as well as reduces
    duplication of yaml code that cannot be macro'ed or easily templated by
    including it from a common file.
    
    Adds support for the following tags:
      'include' - load file as yaml code
      'include-raw' - load file as data (for scripts)
      'include-raw-escaped' - load file as data with escaping braces '{}'
          as default for use with job-templates
    
    Use configuration file options to provide a search path for the files.
    
    - Test behaviour of yaml tags independent of any XML generation
      by comparing json result of yaml parsing to verify that certain
      tags do/don't recall the yaml.load() method.
    - Add examples for the include tags via addition tests for YamlParser
      class
    
    Inspired by
    http://stackoverflow.com/questions/528281/how-can-i-include-an-yaml-file-inside-another
    
    Change-Id: Ib90a07043112d4739d6529ceddbc9817668bcec0
    Add tox "coverage" target
    
    Change-Id: I577d62e016a550ea30671837a0a426165984e982
    update URL references to project.
    
    github.com/openstack-ci was moved to github.com/openstack-infra
    homepage references should point to git.o.o/cgit/openstack-infra
    
    This change updates the above references accordingly.
    
    Change-Id: I4d3591f228b10de050a129ae7af99485f50edab5
    `test` command read/write stdin/stdout by default
    
    E.g.:
    
        jenkins-jobs test < config/jenkins.yml
    
    This is convenient for demoing or implementing functional tests.
    
    Change-Id: I4e3030e261d3b90f75e4a033ea074d18764d97bf
    Added config options to not overwrite jobs desc
    
    When you do not specify any description for a job, right now it creates a
    new one overwriting whatever you had put there manually. Now when
    setting the configuration option 'keep_descriptions' to True, it will
    only overwrite the description if you specified one explicitly in the
    yaml.
    That way you can avoid specifying any description and it will not
    overwrite the ones you put there manually through the jenkins ui.
    
    Added a couple of tests for it also, and extended the tests to allow custom
    configuration by adding a *.conf file for it
    
    Change-Id: I408f5ee06a6939a8cb8f4f2e6c6e0d060462259c
    Signed-off-by: David Caro <dcaroest@redhat.com>
    Minor fixes in the installation documentation
    
    Fix a couple of grammatical errors, and wrap long lines to fit
    within 80 columns.
    
    Change-Id: Ide46f5fdc6bb2f0b759fc6e69669097d23149791
    Small documentation tweaks
    
    Change-Id: I00ed518141b60dfa1c22a11edc391532bf49a0a1
    Use venv to build documentation
    
    The Sphinx documentation now make use of the `program-output` plugin
    which would invoke commands to generate inline documentation. Ex:
    
        program-output:: zuul --help
        program-output:: zuul enqueue --help
    
    We want the resulting output to correspond to Zuul source code, not the
    command which is currently installed on the host running the doc.  On my
    setup sphinx would die out because it cant find the command 'zuul'.
    
    The new tox environement 'doc' runs sphinx in a virtual env which will
    have the proper zuul command.
    
    The generated doc is not written under the /.tox directory but to
    /doc/build/html for convenience.
    
    Example usage:
    
        tox -edoc && open doc/build/html/index.html
    
    Change-Id: Ib0170f94bb2c09eb60e555a32e101e2e0959b18e
    Fix format in installation.rst
    
    There was a line throwing a Warning due a badly formatted bullet point
    
    Change-Id: Ia8b70fadfb66c4d0c10631ef4bf37f01d38b9f02
    Enable ignore_cache flag on jenkins_jobs.ini
    
    Parses jenkins_jobs.ini to look for an ignore_cache flag.
    If ignore_cache command line option is sent, it takes priority
    over the jenkins_jobs.ini configuration.
    
    Change-Id: I88f1ce1aa0d3e0ad25d592d3ca44a022ec9249c3
    Closes-Bug: #1193444
    update doc and add new JJB unit tests
    
    Add documentation on how to generate documentation and run JJB unit tests.
    
    Also added a unit tests for each category of plugins as examples for others
    to follow when adding new JJB plugins.  I'm hoping this will help contributors
    add tests for new plugins going forward.
    
    Change-Id: I2ab90cdb37d0f3b1e947345d4291d2927b04a0c6
    fix typo
    
    Change-Id: Ie8d6e35094a1bd0c970c8122b0a76bca1fba4f7f
    doc: fix up strict errors
    
    Running Sphinx 1.2b1 running in strict mode (-W), yields three different
    errors:
    
    * .. Running::   is an unknown command, uses '.. rubric::' instead
    * double stars '**' needs either to be escaped with backslashes or
      quoted literrally with double backquotes
    * nested lists needs newlines before and after for some reason.
    
    Change-Id: I8680aef7306c619c817c637882715f5a7d08c5d9
    Add usage info to JJB documentation
    
    Display the usage info for JJB and add it to the
    sphinx docs.
    
    Fixes bug 1221944
    
    Change-Id: I5b36cca7a836b009bfb0ca880abbccd4477de307
    Add documentation for XDG_CACHE_HOME
    
    This patch documents the XDG_CACHE_HOME environment variable in JJB.
    
    Fixes bug 1193450
    
    Change-Id: I57cf59c8723aa04e20801f32a81b573c9d096b48
    Installation doc setup.py
    
    The setup.py is not executable and does not contains #! sign at the
    beginning.
    
    Change-Id: I6f3aa542eb883ade0650a33f31a8b5ffaff9a615
    Reviewed-on: https://review.openstack.org/32318
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Antoine Musso <hashar@free.fr>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    job cache now varies by remote url
    
    When updating different Jenkins installations, JJB would end up
    invalidating the job cache.  By adding the jenkins.url in the cache file
    name, we can maintain a job cache per remote Jenkins instance.
    
    Name of the cache file is based on Jenkins URL.
    
    Change-Id: Ib9c08d8029267729e7a030a4e8bc0a9f05eb8ce3
    Reviewed-on: https://review.openstack.org/24404
    Reviewed-by: Arnaud Fabre <fabre.arnaud@gmail.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    `update` can now takes several job names
    
    Just like `delete` can accept several jobs names as argument, this patch
    let us do the same with `update`.
    
    * builder.update_jobs now filter the jobs against a list
    * renamed 'update' argument 'name' to 'names' to make it clear it
      accepts several job names.
    
    Change-Id: I4bcebd98073ec89e172afbec59b93d14de6620ff
    Reviewed-on: https://review.openstack.org/24160
    Reviewed-by: Anita Kuno <akuno@lavabit.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Stop referring to openstack/openstack-ci-puppet.
    
    The openstack/openstack-ci-puppet repo moved and became
    openstack-infra/config. Remove references to openstack-ci-puppet and
    replace them with references to openstack-infra/config.
    
    Change-Id: I75e7797995b894b6053901dbcfa351404048ea7c
    Reviewed-on: https://review.openstack.org/23227
    Reviewed-by: Khai Do <zaro0508@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    jenkins user must have global read permission
    
    Change-Id: I467f2b8ca5fcffc118c1bdc3d5dee04c309ac70f
    Reviewed-on: https://review.openstack.org/16170
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: Jeremy Stanley <fungi@yuggoth.org>
    Reviewed-by: Jeremy Stanley <fungi@yuggoth.org>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    add matrix job support
    
    currently only supports label expression axes
    Change-Id: I5d714affdf101eeb5b0eeae5ed5408d6964c6b77
    Reviewed-on: https://review.openstack.org/16908
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Reviewed-by: James E. Blair <corvus@inaugust.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add email publisher/reporter.
    
    Also, add reporters module.
    
    Change-Id: I9cd0abca3d90f1af5f275698ecc9ccb7d9086494
    Reviewed-on: https://review.openstack.org/13303
    Reviewed-by: Monty Taylor <mordred@inaugust.com>
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
    Add documentation.
    
    Move test.sh to the tools directory.
    Move parameters and notifications to their own modules; even
    though they are implemented as Jenkins properties, they make
    more sense as separate entities in the job builder, because
    that's they way they are specified in the YAML.  All three
    modules that touch the properties xml object know how to
    create it if it's missing.
    
    Change-Id: I4b42ff10a93fd3ed98f632b58e47f3e0e45086d6
    Reviewed-on: https://review.openstack.org/12741
    Reviewed-by: Clark Boylan <clark.boylan@gmail.com>
    Approved: James E. Blair <corvus@inaugust.com>
    Tested-by: Jenkins
