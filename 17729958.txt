    DDPB-2801 Move into api directory for monorepo (#572)
    Documentation update (#565)
    
    * Move PR template into docs folder
    
    * Move rollback procedure into docs folder
    
    * Update README
    
    * Add link to client repo for deployment instructions
    
    * Fix spelling
    DDPB-2653: Adds Xdebug to containers (#553)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    MIT license updated and section added to readme
    MIT license updated and section added to readme
    add coding standards to README.md
    DDPB-284 instructions for groups
    odr README endpoint conventions
    README
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    dd-1173 postcode mismatch return ERROR 424
    dd-1103 unit test and logic fixes
    dd-1130 audit log ACL + test + accessdenied always return 403
    dd-1130 add auth tests for user controller
    dd-1130 API return codes
    update README
    Update README.md
    Update README.md
    fixes for user authentication
    squashed all commits into one
    README update
    Update README.md
    Update README.md
    Update README.md
    
    Testing post commit hook
    email endpoint, tested ok
    vagrant remove + unit test using db
    phing recreate target + vagrant private network
    doctrine migration created with data and main user
    fix environment
    restController
    working functional test on ADD and GET single user
    typo
    README
    very basic version of add, list, get one
    vagrant config
    behat: composer, test controller, working feature, traits from alpha, debugger, phing task
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1673 Ensure this passed until unit tests are fixed.
    DDPB-1673 Add basic Jenkinsfile.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    OPGOPS-1677 Remove app config from this layer as it's in php-fpm image.
    template names
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    dd-1130 add param to disable behat controllers
    dd-1130 secrets docker params
    dd-1130 move authController logic into service
    dd-1130 move user creation to aPI
    dd-1127 URL_ vars in YML config
    dd-1127 moved emails from frontend into API
    dd-1002 redis dns now a param /redis/dsn
    whip with parameters for docker.
    dd-861 remove sendgrid, enable 2nd smtp
    env variables, update nginx conf for symfony
    extra env vars
    initial docker
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2653: Adds Xdebug to containers (#553)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
     DDPB-2517: Allow more complex users in test fixtures (#525) (#527)
    
    * Support team names in user fixture definitions
    
    * Add teams and reports from fixtures
    
    * Flush DB after adding users
    
    This ensures that any teams created are persisted into the database. It doesn't have a big performance overhead, particularly because of the low number of users being imported.
    
    * Create reports for admin users' clients
    
    * Allow users to be assigned to existing clients
    
    * Calculate report start/end date from client court date
    
    * Simplify report creation code slightly
    
    * Check valid client was returned before trying to add
    
    * Update PHPUnit test to account for new fixtures
     DDPB-2517: Allow more complex users in test fixtures (#525)
    
    * Support team names in user fixture definitions
    
    * Add teams and reports from fixtures
    
    * Flush DB after adding users
    
    This ensures that any teams created are persisted into the database. It doesn't have a big performance overhead, particularly because of the low number of users being imported.
    
    * Create reports for admin users' clients
    
    * Allow users to be assigned to existing clients
    
    * Calculate report start/end date from client court date
    
    * Simplify report creation code slightly
    
    * Check valid client was returned before trying to add
    
    * Update PHPUnit test to account for new fixtures
    DDPB-2125-case-manager-role add ROLE_CASE_MANAGER
    DDPB-839-ODR-NDR-rename fix more stuff
    DDPB-839 - reverted templates.yml ndr->odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1734 Amended roleName and typeReport to be conditional on their existance
    DDPB-1734 Restored roleId to parameters template
    DDPB-1734 Reinstated required fields to prevent errors
    DDPB-1734 Replaced ROLEID with ROLENAME. Revised template
    DDPB-1734 Replaced roleIds with roleName, removed keys not required for admin,  attempt at getting template to pick them up
    DDPB-1734 Added additional params to docker template
    odr-361 user add support for odr option
    dd-1433 completely remove email settings, mailer and factory
    confirmation-email-leads-client-page report confirmation email link goes to client homepage
    optimise change log level to warning
    migrate log locations
    dd-1130 add param to disable behat controllers
    dd-1130 secrets docker params
    dd-1130 move authController logic into service
    removing extra spaces
    dd-1130 move user creation to aPI
    dd-1127 URL_ vars in YML config
    dd-1127 moved emails from frontend into API
    dd-1002 redis dns now a param /redis/dsn
    fix template
    whip with parameters for docker.
    typo
    dd-861 remove sendgrid, enable 2nd smtp
    env variables, update nginx conf for symfony
    initial docker
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-2653: Adds Xdebug to containers (#553)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    OPGOPS-1677 Remove app config from this layer as it's in php-fpm image.
    another x-request-id fix
    return x-request-id to the client - debugging
    php-fpm x-request-id
    template names
    no nginx error pages, request-id, redirect support
    fix nginx
    dev mode
    NGINX_INDEX
    443
    env variables, update nginx conf for symfony
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2653: Adds Xdebug to containers (#553)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2801 Move into api directory for monorepo (#572)
    squashed all commits into one
    php bin/last_migration to get number of last available migration
    DDPB-2801 Move into api directory for monorepo (#572)
    update bin files
    DDPB-2801 Move into api directory for monorepo (#572)
    update bin files
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    Added script to reset schema as container needs env vars mapped to postgres env vars
    verbose resetdb
    Runparts added back in to create parameters.yml file
    Tweaked scripts usage of env vars
    Update resetdb.sh
    syntax-fix reset db now uses direct psql call
    dd-1369 try restore old drop script
    dd-1369 fix resetdb script
    dd-1109-next-year-report fix script
    recursive phpunit scripts + remove cloverage
    dd-1130 move user creation to aPI
    fix scripts to run all init scripts
    whip with parameters for docker.
    DDPB-2801 Move into api directory for monorepo (#572)
    Tweaked scripts usage of env vars
    Cleanup restore script
    Review modifications to Backup/Restore scripts for API container
    Review modifications to Backup/Restore scripts for API container
    Modified scripts for Backup/Restore API container 2
    Modified scripts for Backup/Restore API container
    New scripts for Backup/Restore API container
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-1669 fix yes/no transfer answer based on number of transfers
    clean up migrate script
    DDPB-1301-store-submitter add commented out commands for devops usage
    DDPB-1201-fix-all disable fix-data at migrate time
    DDPB-1201-fix better message
    DDPB-1201-fix improve performances script
    DDPB-1201-fix move fix-data to migrate script
    fix migration + remove fix-data from migrate
    fix-data command
    Ddpb 450 ndr due date (#225)
    
    * NDR Start Date
    
    Added the start date to an ODR/NDR entity and the associated controller
    logic to show it.
    
    * Removal of test assertion as Admin now needs to get ODR.
    dd-1336 new script to migrate
    dd-1336 add status check to database.sh and container
    recursive phpunit scripts + remove cloverage
    report-fixes db migration verbose
    Update database.sh
    fix scripts to run all init scripts
    initial docker scripts
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    Adds command to run Transformer unit tests, and removes old v2 unit tests (#518)
    Revert "symfony3 tmp disalbe unit"
    
    This reverts commit 5a52a85f460fe5f27ddd610af46d34d786b61207.
    symfony3 tmp disalbe unit
    incomplete-reports split tests
    DDPB-1856 remove warning
    DDPB-1856 fix
    DDPB-1856 split tests into 2 execution to bypass memory limits
    Reverted default db name
    Added postgres config to apiunittest script
    DDPB-735 remove phpunit debug
    DDPB-767 unittest debug
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    dd-1399-property disable data migration unit test
    recursive phpunit scripts + remove cloverage
    accounts_mk2 remove phpunit debug
    accounts_mk2 delete cache before API unit test
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    Debug tests
    restore coverage
    restore normal phpunit command
    unit test coverage options
    dd-1130 phpunit coverage options
    fix phpunit launcher
    remove duplicate db reset
    migrations: merge into 039 and fix tests
    just triggering build in jenkins
    just want to trigger a build
    added scripts for unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    Reverted default db name
    Create phpunitdb.sh
    
    Added settings for DB env vars if exists
    recursive phpunit scripts + remove cloverage
    ad: behat tests
    added scripts for unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer
    script to merge php code coverages into one clover
    DDPB-2801 Move into api directory for monorepo (#572)
    Tweaked scripts usage of env vars
    Review modifications to Backup/Restore scripts for API container
    Review modifications to Backup/Restore scripts for API container
    Modified Backup script for API container
    Modified scripts for Backup/Restore API container 2
    Modified scripts for Backup/Restore API container
    Modified script for Backing UP API container
    New scripts for Backup/Restore API container
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    Updated source script to use sh compatible include and abs path
    Sourcing script instead of executing it
    Sourced init schema in resetdb so it is not duplicate code
    verbose resetdb
    Runparts added back in to create parameters.yml file
    Tweaked scripts usage of env vars
    Update resetdb.sh
    syntax-fix reset db now uses direct psql call
    dd-1369 try restore old drop script
    dd-1369 fix resetdb script
    dd-1109-next-year-report fix script
    recursive phpunit scripts + remove cloverage
    dd-1130 move user creation to aPI
    fix scripts to run all init scripts
    whip with parameters for docker.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    dd-1336 new script to migrate
    dd-1336 add status check to database.sh and container
    recursive phpunit scripts + remove cloverage
    report-fixes db migration verbose
    Update database.sh
    fix scripts to run all init scripts
    initial docker scripts
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2515: Removes casrec stats related fields from code and db (#528)
    DDPB-2514: Prevent digideps:stats-update command from running by cron (#522)
    DDPB-2310-dashboard-performance disable cron
    update schedule job
    DDPB-2244-report-status refactor
    DDPB-1720 change cron frequency
    DDPB-1720 fixed + refactor + logic changes
    DDPB-1720 stats update service to update casrec every minute
    cahnge api stats generation to 5am to avoid clashes with releases
    stats writing directly to the file + cmd option to customise sleep
    DDPB-1576 7am cron to create csv, and endpoint to download that file
    DDPB-2801 Move into api directory for monorepo (#572)
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    syntax-fix code syntax fix
    dd-1103 unit test and logic fixes
    dd-1133 first unit-tested version of bruteforce blocker by email
    DDPB-2801 Move into api directory for monorepo (#572)
    syntax-fix code syntax fix
    dd-1103 unit test and logic fixes
    DDPB-2801 Move into api directory for monorepo (#572)
    syntax-fix code syntax fix
    dd-1103 unit test and logic fixes
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    syntax-fix code syntax fix
    squashed all commits into one
    refactor exceptions
    simple exception handling
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2045 Change BusinessRule exception to have http code 409
    DDPB-2045 Added BusinessRulesException, handled errors on each entity type, returned using new Exception that allows data
    DDPB-2801 Move into api directory for monorepo (#572)
    syntax-fix code syntax fix
    dd-1103 unit test and logic fixes
    dd-1133 first unit-tested version of bruteforce blocker by email
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2357: Converts response to key => value json friendly
    DDPB-2357 Updates unit tests
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2455 Fixed due date, by adding start date
    DDPB-2455 transformed and returned date
    DDPB-2455 added submitted fields and submitDate to Dto
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2751 Ensured all emails are lowercase
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2455 added typehints
    DDPB-2455 Fixed due date, by adding start date
    DDPB-2455 added submitted fields and submitDate to Dto
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2751 Ensured all emails are lowercase
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status refactor
    DDPB-2158 Revised to a single API call
    coding-standards php-cs-fixer
    AbstractReport into ReportInterface
    DDPB-1762 working version
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2158 implemented interface for bank accounts
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 Added unit tests, revised method signatures to use interfaces
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2262-client-named remove address from team
    DDPB-2058-cross-team fixes
    DDPB-2058-cross-team endpoint to get user info and add to team
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1711 fix team entity JMS recursion
    DDPB-1153 Set an order for the list of team members
    coding-standards php-cs-fixer run
    DDPB-1247: Using a trait for address to reduce code duplication
    DDPB-1247 Team entity uses team group
    DDPB-1247: Adding address components to Team
    DPB-1097 Configured Entities to repositories. Replaced logic with User Service call
    Revert "DDPB-1062 Added adminCount method to Team and added PROF role to constant"
    
    This reverts commit 0fea1b8372c76f61d041cde3d9b572a6830e4307.
    DDPB-1062 Added adminCount method to Team and added PROF role to constant
    init property
    DDPB-1030 endpoint to get team members
    DDPB-1019-pa-team-name move team name to ctor
    DDPB-1019-pa-team-name team name nullable
    DDPB1057 - Added Unit tests
    DDPB-1057 Applied Migraton
    DDPB-1057 Add Team entity as n2n with User
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2751 Ensured all emails are lowercase
    DDPB-2612 Added unit tests, revised method signatures to use interfaces
    Add new `` parameter to date calculation functions
    DDPB-2455 removed validity check for 'behatXXX' case numbers
    DDPB-2455 allow behat cases to be searched
    reinstate setUsers method
    DDPB-2427: Attaches new users to clients with native SQL
    Revised users property to be ArrayCollection. Added setter
    DDPB-2136-client-archive-fix return createdAt via JMS + include archived in client endpoint
    DDPB-2136-client-archive-fix getter
    DDPB-2136-client-archive-fix add client.archivedAt nullable and indexed
    DDPB-2292 Fixed unit test
    DDPB-2292 Fixed Report dates to use courtDate or calculatedReportDate
    DDPB-2292 - fixed bug i just introduced, reinstated tests
    DDPB-2292 Fixed Expected report date to cope with current day and month of this year, disabled tests
    DDPB-2227 Removed lowercase function on case number, amended table declaration to be case insensitive
    DDPB-2262-client-named client.nameDeputy migration and storing
    DDPB-2253-org-report-unsubmit phpdoc
    DDPB-2253-org-report-unsubmit rename and simplify methods
    DDPB-2253-org-report-unsubmit exclude current report when there is one unsubmitted one
    DDPB-2189 expectedReportDate set to return null or \DateTime to fix fatal error on unit test, added unit tests for api Client, ensured no previous reports return empty arrays and not null
    DDPB-2189 Moved Expected date to api as virtual property, revised prev report data to ensure array is returned, fixed test to reflect new clients in search list
    DDPB-2223 removed service call to generate CSV and returned raw data to client for CSV generation
    DDPB-2130 Fixed client named deputy
    DDPB-2103 Fixed exception
    DDPB-2130 Added virtual property, named deputy of client
    coding-standards php-cs-fixer
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1768 Reverted  / fixed reg ex
    DDPB-1768 Moved regex into static Client method
    DDPB-1878-api-timeout fix recursion on JMS group
    DDPB-1768 Added API controller and search method
    DDPB-1884-pad-csv pad caseNumber and deputyNo at uplaod time
    DDPB-1762 mfix duplicate JMS group
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1798 NDR column + tests
    DDPB-1711 fix team entity JMS recursion
    DDPB-1645 cascade on client note and contacts
    DDPB-1645 remove constraint that cannot applied due to prod data
    DDPB-1645 client-contact cascade
    DDPB-1645 NDR cascade operations
    DDPB-1645 client.reports cascade delete
    DDPB-1510 send users details over with a case, not just user ids
    DDPB-801 Reversed order to be by last name
    DDPB-801 Added unique constraint
    DDPB-801 Entity, Migration and placeholder endpoints
    fix-jms-groups remove deprecated group
    DDPB-1395 JMS groups refactor
    Revert "DDPB-1395 change group to stop recursion"
    
    This reverts commit a20e7367726d3177e931caa944d7ab6fb16baea1.
    DDPB-1395 change group to stop recursion
    format code
    format code
    DDPB-1321 refactor
    DDPB-1321 fix too smart comment parser
    DDPB-1321 check report has not other unsubmitted reports
    DDPB-797 Fixed order of notes
    DDPB-797 Moved notes association from report to client, amended migration script
    DDPB-808-edit-client-details typo
    DDPB-808-edit-client-details rename client.getReportCurrent -> getCurrentReport
    DDPB-808-edit-client-details fix missing report failing tests
    DDPB-808-edit-client-details client.getReportCurrent with JMS virtual prop
    DDPB-1285 Fixed getReportByDueDate() to use endDate
    DDPB-807: Added date of birth to client
    DDPB-1173: Order getSubmittedReports by submitted date desc
    DDPB-1173: Adding submitted date to stats
    DDPB-967 search report endpoint
    DDPB-971 mformat code
    DDPB-971 user,client,report improve connections and new methods
    format code
    DDPB-934 user.getActiveReportId returns null if more than one found
    code format
    DDPB-758 remove court order type stuff
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    Revert "otpp remote list of reports. recursive and useless"
    
    This reverts commit 4c31dfcc4c0a6e0d12c04106cc31bb172cee41a0.
    otpp remote list of reports. recursive and useless
    move report entities inside Report directory
    odr fix tests
    master code format
    DDPB-199 remove old JMS groups
    DDPB-199 remove report objects from client
    DDPB-199 remove basic group
    DDPB-199 remove JMSExclusionPolicy
    DDPB-199 remove JMSXmlRoot
    DDPB-199 add basic group to each entity
    DDPB-305 login return redirector info
    DDPB-284 client,report,role,user add groups using entity name
    odr coding standard
    odr add client-cot to client.courtDate
    ddpb-40 add groups to client
    ddpb-40 groups fix and remove start/end date
    ddpb-40 update model
    syntax-fix code syntax fix
    admin-stats add PHPdocs comment and report.isDue
    casrec: fix setter for matching
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    implemented user query filters and add some unit tests
    oauth authentication implementation
    fix for user login
    change to make it possible to pass multiple JMS groups
    squashed all commits into one
    implmented add report
    /client POST supports id param to update + refeactor hydration
    changes to backend add client endpoint
    made schema changes to take care of court order types relationships with reports
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-2472: Adds extra PROF types for CSV upload (#517)
    
    DDPB-2472: Adds extra PROF types for CSV upload (#517)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2427: Attaches new users to clients with native SQL
    DDPB-2427: Accepts groups in request to improve performance of user/id/team endpoint
    DDPB-2415: Fixes deputy list timeout
    DDPB-2223 Added group to deputyNo
    DDPB-2223 removed service call to generate CSV and returned raw data to client for CSV generation
    code-format code format
    DDPB-2115-dep-type-26 add mapping
    DDPB-2125-case-manager-role add ROLE_CASE_MANAGER
    DDPB-2058-cross-team fix named default to team members
    DDPB-2058-cross-team fixes
    DDPB-2065 Set type id 63 to be Named Prof role
    DDPB-2058-cross-team replace duplicate method
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team simplify endpoint
    DDPB-2058-cross-team remove user soft deletion
    DDPB-2058-cross-team user.teamNames
    DDPB-2058-cross-team endpoint to get user info and add to team
    DDPB-2053-cross-team member for all teams returned
    DDPB-2053-cross-team rename group
    DDPB-1997-fix-roles add prof test user + fixes
    coding-standards php-cs-fixer
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1818 refactored User entity methods
    DDPB-1818 added missing method to sync client and api entities
    DDPB-1818 Revised entity methods to reflect Org and not just PA. Added new role methods
    DDPB-1856 Amended notification message format to include Prof deputies
    DDPB-1856 Prof deputy for upload + report creation types
    DDPB-1856 user roles
    DDPB-1856 replace ROLE_PA
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1718-team-name migration + team name returned from submission endpoint + refactor
    DDPB-1798 method private to public
    DDPB-1559 teams fetch eager. join vs lazy load 3x performance from client calls
    DDPB-1720 stats update service to update casrec every minute
    DDPB-1677 Added coDeputyClientConfirmed where required to satisfy tests
    DDPB-1677 Added Migration script to align db with entities. Fixed fixtures for db reset
    EPIC-codeputies - ensure only Lay deputies are returned as co-deputies
    DDPB-1509 jms virtual property group change
    DDPB-1509 rename field
    DDPB-1509 simplify JMS virtual property
    DDPB-1509 Flags to track codeputy status
    DDPB-1510 send users details over with a case, not just user ids
    fix-jms-groups remove user.clients client group
    DDPB-1398-search add role_name and report.type to endpoint
    DDPB-1395 rename role
    DDPB-1395 JMS groups refactor
    Revert "DDPB-1395 change group to stop recursion"
    
    This reverts commit 297470deaa1016f062bf881a56c19adf7cc80d62.
    DDPB-1395 fix createdBy
    DDPB-1395 change group to stop recursion
    DDPB-1395 reportSubmission entity endpoint
    DDPB-1395 new ROLE for downloading, currently included by ADMINs
    DDPB-1301-store-submitter add submittedBy JSM group + test
    DDPB-808-edit-client-details user.isLaydeputy
    coding-standards php-cs-fixer run
    DDPB-1247: Using a trait for address to reduce code duplication
    DDPB-1247 Team entity uses team group
    DDPB-1173: Adding submitted date to stats
    DDPB-1146: Creating Symfony role hierarchy for deputy
    DDPB-1107-pa-clients-reports-link added PA test fixtures
    DDPB-1097 Configured User Entity to use new IsSoftDeleteableTrait. Added migration to alter User table
    DDPB-1097 Configured User Entity to use new IsSoftDeleteableTrait. Added migration to alter User table
    DPB-1097 Configured Entities to repositories. Replaced logic with User Service call
    Revert "DDPB-1062 Added adminCount method to Team and added PROF role to constant"
    
    This reverts commit 0fea1b8372c76f61d041cde3d9b572a6830e4307.
    DDPB-1062 Added adminCount method to Team and added PROF role to constant
    DDPB-1030 paService creates team + add user temp logic
    DDPB-1015 user.agree entiy, endpoints and tests
    DDPB-1019-pa-team-name remove PHPDoc comment
    DDPB-1019-pa-team-name store/load PA team name
    DDPB-1019 remove paTeamName from user entity and endpoint
    DDPB-1019 add user.jobTitle and user.teamName
    DDPB-1057 Applied Migraton
    DDPB-1019 remove useless group
    DDPB-1057 Add Team entity as n2n with User
    DDPB-985 fix duplicates clients due to case number case
    DDPB-957 add PA fixtures
    DDPB-971 mformat code
    DDPB-971 user,client,report improve connections and new methods
    DDPB-971 /pa endpoint and tested service
    DDPB-971 code format
    DDPB-971 add PA role
    DDPB-622 remove role class. split migration
    DDPB-622 remove super user role, remove role class
    DDPB-622 remove role table. role class now static. id deprecated
    DDPB-934 user.getActiveReportId returns null if more than one found
    remove user.emailconfirmed
    code format
    code format
    Ad (#227)
    
    * ad add AD and super users roles + cleanup
    
    * ad refactor
    
    * ad open user endpoints to AD users
    
    * ad user recreate token allows AD
    
    * ad user.adManaged
    
    * ad2 user/count ad
    
    * ad ad can add users
    
    * ad fix role order
    
    * ad update AD role id
    
    * ad keep role Ids until next refactor
    
    * Fixed some merge issues from master into branch
    
    * Updated unit test URL
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    odr-361 fluent setter
    odr-361 user.odrEnabled
    master code format
    DDPB-199 remove basic group
    DDPB-199 add basic group to each entity
    DDPB-305 login return redirector info
    DDPB-284 client,report,role,user add groups using entity name
    syntax-fix remove role->user relat
    syntax-fix code syntax fix
    dd-1132 save deputy number not null
    dd-1132 save deputy number into user table
    dd-1130 clean tests and add cot test
    dd-1130 fixes
    dd-1130 simplify model namespace + report ACL method
    dd-1130 acl config YML disabled
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 fix warning and simplify user interface
    dd-1130 auth controller test with login and login failed
    dd-1123-oauth removed all oauth stuff
    dd-1127 moved emails from frontend into API
    fix for delete user
    fix token date when resetting password
    dd-100 user token regeneration method + endpoint
    dd-376 entity, endpoint, migration
    change user.phone_work and home to main and alternative
    remove user.phone_mobile
    user.lastLoggedIn property and migration
    fix for user login
    converted to lower case user email when adding user or logging in
    fix behat controller to delete users
    squashed all commits into one
    email unique + POST /user throws exception
    User::setActive cast value
    Remove profile entity
    user model new properties
    user update endpoint
    User:setREgToken also sets its date
    user ctor set null password
    new user set token date
    generate reg token for user
    sendgrid working, see console command
    user serialization date fix
    added api to fetch user by email
    rename and remove password from user serialization
    added repositories, User and Role classes to conform with symfony authentication/authorization
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2515: Removes casrec stats related fields from code and db (#528)
    symfony3 more fixes and updates
    code-format code format
    DDPB-2044-corref-update update report types and assertions
    DDPB-1856 Prof deputy for upload + report creation types
    DDPB-1856 replace ROLE_PA
    DDPB-839 reverted
    DDPB-839 Reverted anything database - back to odr
    DDPB-1798 coding standards
    DDPB-1798 NDR column + tests
    php-cs-fixer code format
    DDPB-1771 cleanup
    DDPB-1771 add NDR column to test + general purpose method
    DDPB-1760-stats-add-column casrec.lastReportSubmittedAt + CSV writing fixes
    DDPB-1720 add stats within upload + update test
    DDPB-1720 fixed + refactor + logic changes
    DDPB-1720 stats update service to update casrec every minute
    DDPB-1720 add stats field into endpoint + test
    DDPB-1720 refactor, cleanup and fix tests around casrec
    DDPB-1720 refactor + assert all columns are returned
    DDPB-1720 add stats and otherColumsn to casrec table
    DDPB-1053-joint-report-support casrec with joint types
    DDPB-1053-joint-report-support update CSV mapping for PA 102, 103, 104
    format code
    format code
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-1043 casrec normalise values in ctor + 104 rules
    DDPB-971 code format
    DDPB-949 casrec support for Corref
    replace messages in Casrec validation
    clean code
    DDPB-892 move casrec typeofrep inside ctor
    DDPB-758 casrec stores typeofrep
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    casrec-accents casrec remove accents before matching with unit test
    casrec registration lower case deputy
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    dd-1132 /casrec return more errors details + fix postcode + unit test + better normalisation
    dd-1173 logic to check into casrec before registering, returning error 421
    dd-1173 migration, controller, functional test for /casrec
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2751 Ensured all emails are lowercase
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1888-ndr-jms-fix remove client JMS group from non-client entities
    php-cs-fixer code format
    DDPB-1645 cascade on client note and contacts
    DDPB-1645 client-contact cascade
    DDPB-801 Added unique constraint to email
    DDPB-801 entity getters and setters
    DDPB-801 email not required
    DDPB-801 Entity, Migration and placeholder endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1645 cascade on client note and contacts
    format code
    format code
    DDPB-797 Moved Note methods outside Report folder. Added delete method
    DDPB-799 Removed softdeleteable trait, fixed broken test
    DDPB-797 Hotfix to Other category
    DDPB-800-edit-note add group
    DDPB-797 Moved notes association from report to client, amended migration script
    DDPB-797 amend category list
    DDPB-797 Fixed Migrations, removed traces of ReportInterface
    DDPB-797  Fixed groups, removed ReportInterface
    DDPB-797 Correct category list
    DDPB-797 Added categories to Note entity
    DDPB-797 - Fixed doctrine mapping errors
    DDPB-1286 Add Note Entity, Interface and associated traits
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    DDPB-2025 typo
    DDPB-2025 int->string
    DDPB-2025-admin-notifications fixes
    DDPB-2025-admin-notifications setting entity, endpoint, unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1286 Add Note Entity, Interface and associated traits
    coding-standards php-cs-fixer run
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2612 Added unit tests, revised method signatures to use interfaces
    DDPB-2136-client-archive-fix filter out dashboard PA
    DDPB-2310-dashboard-performance move method into repo
    php-cs-fixer code format
    DDPB-1395 remove reportSubmission.archived + more tests + refactor
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses add fess with doctrine listeners, accidentally not there due to merge
    DDPB-1201-fix-all add money short to all teh reports
    DDPB-837-fee-expenses store fee
    DDPB-837-fee-expenses data model
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-2801 Move into api directory for monorepo (#572)
    php-cs-fixer code format
    DDPB-801 Added ClientCOntact Update and getById endpoints
    coding-standards php-cs-fixer run
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2455 Fixed query to return ndr records, as well as reports
    DDPB-2442: Removes SQL LIMIT on Report Submissions stats query
    DDPB-2359: Adds toDate filter to report-submission/casrec_data (#483)
    
    DDPB-2359: Adds toDate filter to report-submission/casrec_data
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2359: Adds toDate filter to report-submission/casrec_data
    DDPB-2318-report-submission-csv-optimise csv generation service api-based
    DDPB-2240 Added fromDate to filters list overrides other logic
    DDPB-2227 Removed lowercase function on case number, amended table declaration to be case insensitive
    DDPB-2227 made case number search case insensitive
    DDPB-2223 review changes
    DDPB-2223 Revised from date
    DDPB-2223 Handle NDRs too
    DDPB-2223 filtered out old submission data and ensured each report is currently in a submitted state
    DDPB-2223 removed unwanted filters and added date restriction
    DDPB-2223 removed service call to generate CSV and returned raw data to client for CSV generation
    fix admin documents count
    refactor
    DDPB-1878-api-timeout rewrite backend for performances
    DDPB-1878-api-timeout report-submission display downloadable submission
    DDPB-1878-api-timeout join NDR to save queries
    DDPB-1878-api-timeout php-doc comment
    DDPB-1762 simplify admin documents listing
    php-cs-fixer code format
    DDPB-1628 Added ordering filters
    DDPB-1474 report submission cleanup logic
    DDPB-1450 refactor softDelete disabling
    DDPB-1457 softdelete more precise
    DDPB-1395-bugs fix search by role
    DDPB-1395-bugs hide submission with 0 documents
    DDPB-1398-search move logic to repository
    DDPB-1466 refactor and cleanup
    report-submission disable soft delete filter to show user but remove deleted documents
    DDPB-1398-search search with counts
    DDPB-1398-search search with unit test
    DDPB-1395 remove reportSubmission.archived + more tests + refactor
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2427: Attaches new users to teams with native SQL
    coding-standards php-cs-fixer run
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-2801 Move into api directory for monorepo (#572)
    php-cs-fixer code format
    DDPB-1450 refactor and simplifications
    DDPB-1257: Hard delete existing soft deleted user in the event of reuse
    coding-standards php-cs-fixer run
    DDPB-1008 Add unfiltered method to user repo
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    code-format code format
    DDPB-2058-cross-team remove user soft deletion
    php-cs-fixer code format
    DDPB-1450 refactor and simplifications
    DDPB-1257: Hard delete existing soft deleted user in the event of reuse
    coding-standards php-cs-fixer run
    DDPB-1008 Add unfiltered method to user repo
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2427: Attaches new users to teams with native SQL
    DDPB-2427: Attaches new users to clients with native SQL
    DDPB-2136-client-archive-fix return createdAt via JMS + include archived in client endpoint
    DDPB-2136-client-archive-fix filter out dashboard PA
    DDPB-2189 Removed join on users table, not used (yet)
    DDPB-2189 Removed where clause to allow All Clients in client list
    coding-standards php-cs-fixer
    DDPB-1768 Moved regex into static Client method
    DDPB-1768 fixed offset, and imposed result limit
    DDPB-1768 tidy up
    DDPB-1768 Added API controller and search method
    DDPB-2801 Move into api directory for monorepo (#572)
    php-cs-fixer code format
    DDPB-1450 refactor and simplifications
    DDPB-1450 refactor softDelete disabling
    DDPB-1450 hard delete endpoint only accept soft-delete docs
    DDPB-1450 hard delete document endpoint for ADMIN
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1301-store-submitter add submittedBy JSM group + test
    coding-standards php-cs-fixer run
    DDPB-1247: Using a trait for address to reduce code duplication
    delete useless trait
    syntax-fix code syntax fix
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property data model inheritaence for property assets
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-768 Debt fix setters and move set logic into common trait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2109 Working API. separated information into 1 : n
    DDPB-1351 entity.createOn set null on delete
    DDPB-1395 groups refactor
    DDPB-815 tmp commit
    format code
    format code
    DDPB-814-upload add documents JMS to createdOn
    DDPB-799-delete-note fetch eager on manyToOne using User
    DDPB-797 Implemented timestampable and createdBy
    DDPB-797  Fixed groups, removed ReportInterface
    DDPB-1286 Add Note Entity, Interface and associated traits
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-1560 ModifyAudit cascade set null on annotation for future usage
    DDPB-799-delete-note fetch eager on manyToOne using User
    DDPB-800 implement last modified by
    DDPB-797 Implemented timestampable and createdBy
    DDPB-1286 Add Note Entity, Interface and associated traits
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1097 Configured User Entity to use new IsSoftDeleteableTrait. Added migration to alter User table
    DDPB-1097 Configured User Entity to use new IsSoftDeleteableTrait. Added migration to alter User table
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    DDPB-2045 Updated entities with bank account property. Added migrtation script
    DDPB-1645 report.gift cascade
    more PHPdoc info for fields
    master more formatting
    code format
    format code
    DDPB-728 fix return annorations
    DDPB-728 data model with migration
    DDPB-746 expense endpoint
    DDPB-746 align NDR expenses table name
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    odr lint
    odr expense model
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.contact cascade delete
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    DDPB-199 remove old JMS groups
    DDPB-199 remove basic group
    DDPB-199 add basic group to each entity
    syntax-fix code syntax fix
    Report.accounts, decisions, contacts using JMS array types + account PUT
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    implemented user query filters and add some unit tests
    implemented edit report contact action
    squashed all commits into one
    renamed address1 column in contact to address
    renamed address3 column to county
    added more address field to comply with new address format
    removed firstname lastname from contact entity and added contact_name
    remove title entity as not required anymore
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    more PHPdoc info for fields
    DDPB-776 asset.getValueTotal
    move report entities inside Report directory
    syntax-fix code syntax fix
    dd-1399-property fix doctrine listener
    dd-1399-property Asset fix getType and persister callbacks
    dd-1399-property fix db value
    dd-1399-property change fields type for booleans
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property remove occupantsInfo + extend textarea length
    dd-1399-property fix missing setter + JMS groups
    dd-1399-property data model inheritaence for property assets
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2352 API working for create, update
    DDPB-2352 moved type list into report trait to allow return to FE
    DDPB-2352 removed trait as adding extra columns to table
    DDPB-2352 Added add method
    DDPB-2352 renamed to include deputy in naming convention
    DDPB-2352 initial entity setup
    DDPB-1165-fix-dups-reports cascade delete for debts and money transaction cats short
    DDPB-723 money transaction short endpoint, model and test
    more PHPdoc info for fields
    DDPB-768 Debt fix setters and move set logic into common trait
    move report entities inside Report directory
    master code format
    DDPB-199 remove old JMS groups
    DDPB-199 add basic group to each entity
    odr coding standard
    dd-377-debts debt.hasMoreDetails model
    dd-377-debts debts entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2412 Change PA checklist question (#519)
    
    * Add `deputyChargeAllowedByCourt` property to Checklist
    
    * Correctly handle incoming requests to set `deputyChargeAllowedByCourt`
    DDPB-2467: Add estimates question to checklist (#512)
    
    * Add `nextBillingEstimatesSatisfactory` field to checklist
    * Save `nextBillingEstimatesSatisfactory` when sent back to API
    DDPB-2224 Added migration and fields for Checklist questions
    DDPC-2332 Amended field name and entities : removed "Financial"
    DDPB-2294 Add migration and field into entity for lifestyle
    DDPB-2176 Add migration and new field to Checklist
    coding style
    DDPB-2109 Added last modified fields. Updated API calls to populate
    code-format code format
    Fixed field not persisting, and unit tests
    Revised table structure, variable names and added submission info
    DDPB-2109 Working API. separated information into 1 : n
    DDPB-2121-working api
    tmp commit
    DDPB-2072 Added Migration script and initiated api call, not finished
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer run
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1165-fix-dups-reports cascade delete for debts and money transaction cats short
    DDPB-723 money transaction short endpoint, model and test
    more PHPdoc info for fields
    DDPB-768 Debt fix setters and move set logic into common trait
    move report entities inside Report directory
    master code format
    DDPB-199 remove old JMS groups
    DDPB-199 add basic group to each entity
    odr coding standard
    dd-377-debts debt.hasMoreDetails model
    dd-377-debts debts entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2045 Added bank account to deputy expenses, fixed api to persist and retrieve
    DDPB-1645 report.expense cascade
    format code
    format code
    add comments
    more PHPdoc info for fields
    master more formatting
    code format
    format code
    DDPB-746 expense endpoint
    DDPB-746 align NDR expenses table name
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    odr lint
    odr expense model
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2158 implemented interface for bank accounts
    DDPB-2158 Added bank name one line to be virtual property
    DDPB-2158 Added one line bank name
    DDPB-2045 Added unit test
    DDPB-1909 bank accounts - capitalisation tweaks
    php-cs-fixer code format
    DDPB-1645 align bank account table
    DDPB-1645 report.accounts cascade delete
    DDPB-750 Separate Account requiresSortCode from requiresBankName
    DDPB-723 money transaction short endpoint, model and test
    more phpdoc and method fix
    more PHPdoc info for fields
    code format
    align bank accounts naming
    align-bank-naming rename report.accounts into report.bankAccounts
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    master fix JMS warning
    DDPB-457-account-type add account type other no sort code
    move report entities inside Report directory
    DDPB-199 fix more JMS groups
    DDPB-199 remove basic group
    DDPB-301 add account JMS group
    fix syntax
    syntax-fix remove account closing-date
    syntax-fix remove account.openingDate
    syntax-fix remove closingdateexpl
    syntax-fix remove old tests and closingbalanceexpl
    syntax-fix remove opening date expl
    syntax-fix code syntax fix
    dd-1466-assets account.meta loaded on overview page
    dd-1466-assets meta type
    dd-1466-assets add account.meta with migration info
    dd-1466-assets extend account.bank_name to 500 chars
    dd-1427-joint-accounts model, migration, endpoint, test
    dd-1426-account-closed move logic to frontend
    dd-1426-account-closed remove isClosed when balance not zero
    dd-1426-account-closed account.isClosed model,controller,unittest
    dd-1431 cascade delete transfers on account deletion
    master refactor
    master add account.account_type_text virtual prop
    dd-1415-2 1428
    dd-1415-2 prepend account_type into bank_name when migrating
    dd-1415-2 add type
    dd-1415-2 fix JMS account.types
    dd-1415 supervision: display type text, fix sortcode
    dd-1415 sortcode not required
    dd-1400 fix JMS groups and relation
    accounts_mk2 flag deprecated fields
    accounts_mk2 uniformy money values types
    accounts_mk2 remove old methods
    admin-stats add PHPdocs comment and report.isDue
    accounts_mk2 add account.account_type
    accounts_mk2 remove old account logic and tests
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 remove accountTransaction creation along with tests
    dd-1231 transaction model (category, new transaction) with data
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    implemented user query filters and add some unit tests
    move repository into repo dir
    dd-588 remove old justification fields
    dd-94 add explanations
    dd-588 name refactor
    dd-588 add opening balance explanation model and migration + refactor account endpoint removing duplication and check inputs
    implemented oauth2server
    ACcount: add createdAt
    removed entity listener + remove db from balance test
    DD-338 logic to update account lastEdit
    GET /report/get-accounts/ supports serialise group + JMS Account basic group annotation
    fix balance using initial balance
    fix balance getters
    account totals + unit test
    add transaction using doctrine repo
    order money in/out
    fix api
    fix api
    API /account fix return data for transaction
    create empty transactions on account creation
    JMS setter to return moneyIn and out + other fixesgs
    DD-77 DD-78 add hasMoreDetails + migrations
    DD-77 DD-78 money in/out model + migration
    delete old income, exp, payment entities
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    DDPB-2109 Working API. separated information into 1 : n
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.assets cascade
    more PHPdoc info for fields
    DDPB-776 send asset.valueTotal and report.assetsTotalValue to JMS
    DDPB-776 asset.getValueTotal
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    DDPB-199 remove old JMS groups
    master remove empty asset repo
    syntax-fix code syntax fix
    dd-1399-property fix clone asset for new year report
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property fix model, unit test, controller
    dd-1399-property data model inheritaence for property assets
    accounts_mk2 uniformy money values types
    accounts_mk2 asset endpoint fix
    dd-1130 fix no assets to add
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    dd-1085 new asset reset the report.noASsetsToAdd status
    implemented user query filters and add some unit tests
    fix to migrations script
    modified assets column
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2648: Add "not_deputy" option to declaration question (#552)
    
    * Add `not_deputy` option to declaration question
    
    * Add tests on `setAgreedBehalfDeputy` value check
    
    * Add value check to Ndr::setAgreedBehalfDeputy and test to affirm
    
    * Assert that agreedBehalfDeputy is set
    
    As suggested in peer review, this ensures that `setAgreedBehalfDeputy` doesn't fail silently
    
    * Remove 'not_deputy' option from NDR reports
    
    * Only allow 'not_deputy' on non-lay reports
    
    Achieved by moving `isLayReport` from Client to API
    
    * Add tests for `isLayReport`
    
    * Move 'not_deputy' validity check to controller
    
    It depends on who is submitting it, which is not something the entity has access to
    
    * Deprecate `isLayReport`
    DDPB-2571 Fixed unsubmit date being returned by api
    DDPB-2518 merged constants to be used by both costs and estimates
    reverts changes meant for a different branch
    switches to using class constants for statuses, adds changes needed check in getStatus, refactors isReadyToSubmit() to also check for isDue() rather than adding ad hoc
    Feature/DDPB-2457 - Add general management costs entity and migration (#505)
    
    * creates ProfDeputyManagementCost and migration
    
    * newline
    
    * drops ProfDeputyManagementCost, adds management cost amount to Report, alters migration to reflect new entity structure
    
    * DDPB-2457 Added rough persist code, to be checked and revised
    
    * updates property name for managementcosts to follow existing style, adds assertion to test, fixes date exceptions in tests
    
    * updates more tests to include assertions on managementCosts, resets managementCosts to null on change from assessed to fixed
    
    * adds JMS double type to managementCosts
    
    * drops comment from ReportUpdateHandlerInterface, uses NUMERIC(14, 2) for management_cost column, drops extra updateSectionsStatusCache from updateManagementCost
    
    * moves dataProvider for testUpdatesSingularFields to sit below the test
    
    * defines serialization name for managementCostAmount to ensure it matches client
    
    * renames migration to take into account merges into feature-105
    Re-enabled 105 sections and unit test
    DDPB-2424- disabled deputy costs
    DDPB-2375: Adds unit tests to Update Handler
    DDPB-2355: Correct const names
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2355 Enabled section
    DDPB-2343-cost-links disable estimate breaking tests due to status cached
    DDPB-2343-cost-links add prof deputy cost into balance calculation
    DDPB-2343-cost-links interim backend
    DDPB-2343-cost-links prev cost entity
    DDPB-2343-cost-links how changed section backend
    DDPB-2343-cost-links add prof cost sections into config and validator
    DDPB-2318-report-submission-csv-optimise fix indexes
    DDPB-2310-dashboard-performance rename property
    DDPB-2310-dashboard-performance ReportIsDue with tests from frontend
    DDPB-2310-dashboard-performance remove empty lines
    DDPB-2310-dashboard-performance typo
    DDPB-2310-dashboard-performance move constant order
    DDPB-2310-dashboard-performance comment
    DDPB-2310-dashboard-performance clean code
    DDPB-2310-dashboard-performance isDue fix
    DDPB-2310-dashboard-performance typo
    DDPB-2310-dashboard-performance move to trait + index
    DDPB-2310-dashboard-performance working version of array hydrator
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2310-dashboard-performance missing indexes
    DDPB-2252 logic moved from frontend, setting title as VirtualProperties
    DDPB-2189 expectedReportDate set to return null or \DateTime to fix fatal error on unit test, added unit tests for api Client, ensured no previous reports return empty arrays and not null
    DDPB-2189 Moved Expected date to api as virtual property, revised prev report data to ensure array is returned, fixed test to reflect new clients in search list
    DDPB-2244-report-status use cache only on dashboard
    DDPB-2244-report-status section not started at creation time
    DDPB-2244-report-status remove status set from ctor to fix unit tsts
    DDPB-2244-report-status simplifications
    DDPB-2244-report-status refactor
    DDPB-2244-report-status update status in ctror
    DDPB-2244-report-status account controller unit test
    DDPB-2244-report-status report.status json
    DDPB-2244-report-status simple solution MVP
    DDPB-2158 Added report summary
    DDPB-2158 added totals to Report and NDR
    DDPB-2158 implemented interface for bank accounts
    DDPB-2158 Added one line bank name
    DDPB-2158 Fixed NDR to return false and added test
    DDPB-2158 Reordered using objects rather than ids
    DDPB-2158 Revised to a single API call
    DDPB-2158 Get previous report data
    code-format code format
    DDPB-2109 Working API. separated information into 1 : n
    tmp commit
    DDPB-2072 Added Migration script and initiated api call, not finished
    DDPB-2054 removed test code
    DDPB_2054 removed unnecessary document check. Deputy documents already filters these out
    DDPB-2054 Synced entity method.Replaced documents calls with "deputyDocuments" fixed isIsReportPdf()
    DDPB-2045 Synced entities to prevent addition migrations
    DDPB-2020-prof-refactor code cleanup
    DDPB-2016-due-date-form update due date on report end date changes
    DDPB-2013-fees-feature-flag-off feature flag
    DDPB-1984 code cleanup
    DDPB-1984-prof-current-fees unit test
    DDPB-1984 Added new fields for estimate page
    incomplete-reports unsubmit method in service + endpoint + test
    DDPB-1984 Consolidated database changes, added new fields
    DDPB-1529 report.unsubmittedSectionsList + endpoint
    DDPB-1951-due-date report.dueDate with endpoint and tests
    DDPB-1951-due-date remove metadata
    DDPB-1984 Added profServiceFees property to report via trait
    DDPB-1984 Initial commit
    coding-standards php-cs-fixer
    DDPB-1829 Removed PA fees section
    DDPB-1888-ndr-jms-fix remove client JMS group from non-client entities
    DDPB-857-unsubmit-reports report.unsubmitDate
    DDPB-1856 fix PA fees expenses
    DDPB-1856 Prof deputy for upload + report creation types
    AbstractReport into ReportInterface
    DDPB-1762 working version
    php-cs-fixer code format
    DDPB-1758-balance-section merge traits
    DDPB-1698 refactor + small performance improvement
    DDPB-1685 remove report date checks at new year report creation time
    DDPB-1645 report.lifestyle cascade
    DDPB-1645 report.document cascade
    DDPB-1645 report.action cascade
    DDPB-1645 report.mentalCapacity cascade delete
    DDPB-1645 report.visitCare cascade delete
    DDPB-1645 client.reports cascade delete
    DDPB-1645 utility methods
    DDPB-1615 Enabled Joint reports
    DDPB-1645 report.getAvailableSection and hasStarted fix
    DDPB-1323 Fixed unit test, restored getDocuments() and applied check for report PDF to 2 new methods
    DDPB-1323 Tidy up. Removed unwanted JMS groups
    disable joint
    enable joint
    DDPB-1665 disable joint reports
    DDPB-1323  Filtered out report PDF from documents list
    typo
    typo
    DDPB-1053-joint-report-support fix balance
    DDPB-1053-joint-report-support casrec with joint types
    DDPB-1053-joint-report-support fix config
    DDPB-1053-joint-report-support update PHPUnit tests
    DDPB-1053-joint-report-support rewrite getSectionStatus and update test
    DDPB-1053-joint-report-support unit test on config prior to refactor
    DDPB-1053-joint-report-support report section config array
    DDPB-1053-joint-report-support add HW-PF constants and extend report.type
    DDPB-940 Added lifestyle state
    DDPB-940 Added lifestyle to report - added migration script
    DDPB-1560 report.submittedBy cascade set null + migration
    DDPB-940 Enable 104
    DDPB-1395-bugs bug 7 - report period
    DDPB-1398-search add role_name and report.type to endpoint
    DDPB-1400 Fixed store question result. Added document status groups
    DDPB-1400 Added wishToUploadDocumentation property and update code
    DDPB-1395 rename property
    DDPB-1395 JMS groups refactor
    DDPB-1395 fix readding docs
    DDPB-1395 refactor and fixes
    DDPB-1395 test for reportSubmitted
    format code
    format code
    DDPB-814-upload align annotation to retrieve file
    DDPB-814-upload add JMS group for document retrieval
    DDPB-814-upload fix Document annotation
    DDPB-814 Replaced uploadReference  with storageReference. Added getters/setters to Report entity
    DDPB-814 Added report mapping for documents
    DDPB-1321 remove date interval check
    DDPB-1321 date interval checks
    DDPB-1321 check report cannot be longer than 1y and 1 day
    DDPB-1321 check report has not other unsubmitted reports
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-799-delete-note fetch eager on manyToOne using User
    note-align additional JMS group
    DDPB-797 Moved notes association from report to client, amended migration script
    DDPB-797 Fixed Migrations, removed traces of ReportInterface
    DDPB-1301-store-submitter add submittedBy JSM group + test
    DDPB-1301-store-submitter report.submittedBy
    DDPB-797 Added categories to Note entity
    DDPB-797 - Fixed doctrine mapping errors
    DDPB-1286 Add Note Entity, Interface and associated traits
    DDPB-808-edit-client-details client.getReportCurrent with JMS virtual prop
    DDPB-1214: Allow A2/A3 for PA report types
    DDPB-1239-report-type-csv-updated report required client in ctor + export report type setting logic into reportservice method
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses report.has106flag
    DDPB-837-fee-expenses report pa fees validation + test + 106 support
    split report entity into traits. tests pass
    DDPB-837-fee-expenses fixing syntax
    DDPB-837-fee-expenses store fee
    DDPB-837-fee-expenses report.status.PaFeesExpensesState tmp
    needs the expenese to be considered instead
    DDPB-837-fee-expenses data model
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-1093 Added comment
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-1043 disable 104
    DDPB-1043 casrec normalise values in ctor + 104 rules
    rewrite status and pagination filters in the API
    DDPB-959 fix bank account status count
    DDPB-959 invidual state groups for each section
    DDPB-959 move report service with test and fix dependencies
    DDPB-971 mformat code
    DDPB-971 user,client,report improve connections and new methods
    DDPB-971 code format
    DDPB-949 103 enable using Corref + unit test + refactor
    DDPB-745-money-out-103 money short cats cascade persist + init with collection
    format code
    DDPB-934 function for status service
    DDPB-927-balance fix tests
    DDPB-927-balance move balance into trait
    DDPB-923 remove report.furtherInfo
    DDPB-918-delete-last-record-logic assets
    DDPB-758 use Report.ENABLE_103 constant as a feature flag for 103
    cleanup deprecated data
    clean up old data
    code format
    DDPB-758 remove court order type stuff
    DDPB-723 fully working endpoints
    more PHPdoc info for fields
    master more formatting
    code format
    format code
    align bank accounts naming
    money-rename align money logic naming
    Add comment
    remove report.reviewed
    master remove report.title
    DDPB-728 data model with migration
    add deprected to old fileds
    DDPB-735 more info endpoint
    DDPB-746 expense endpoint
    DDPB-776 rename constant
    DDPB-776 send asset.valueTotal and report.assetsTotalValue to JMS
    DDPB-776 asset.getValueTotal
    DDPB-757 report.type now a property. auto set by endpoint, new year report and tests
    DDPB-757 report.getType virtual property
    fix transaction type (deprecated class) warning breaking API endpoint
    Ddpb 593 admin stats (#232)
    
    * Update Admin Stats
    * Addition of report due date and submission dates for deputies.
    * Updated service names in DI container to align with Symphony style
    guide.
    align-bank-naming rename report.accounts into report.bankAccounts
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    otpp remove legacy code
    otpp setter trim sapce + refactor
    otpp fix JMS group
    otpp report supports metadata string
    otpp money total added to transaction group
    otpp rewrite money transaction endpoints POST PUT DELETE
    master remove unused JMS group
    otpp fix report JMS group
    otpp closing balance add as default group
    move report entities inside Report directory
    safeguarding-rename rename safeguarding into visits and care
    DDPB-363 null values on totals if values missing
    master code format
    DDPB-199 remove old JMS groups
    DDPB-199 fix more JMS groups
    DDPB-199 remove basic group
    DDPB-199 remove double entity declaration
    DDPB-199 remove JMSExclusionPolicy
    DDPB-199 remove JMSXmlRoot
    DDPB-199 add basic group to each entity
    DDPB-313 simplify GET /accounts
    DDPB-301 JMS decision group
    DDPB-284 client,report,role,user add groups using entity name
    odr odr debts model endpoint unit test
    odr coding standard
    dd-1433 fix mental capacity group
    dd-1433 remove report.getAssetsTotalValue and report.getAssetsGroupedByType
    dd-1468-clean remove two deprecated columns
    dd-377-debts debts endpoint unit tst
    dd-377-debts report.hasDebts entity, endpoint, migration
    dd-377-debts endpoint to store debts
    dd-377-debts report.debts + report.debtsTotalAmount
    dd-326-client-capacity code format
    dd-326-client-capacity fix cot
    dd-326-client-capacity fix report
    dd-326-client-capacity start refactor
    dd-326-client-capacity typo
    dd-326-client-capacity entity, endpoint
    syntax-fix add cot from fixtures
    syntax-fix code syntax fix
    dd-1406-declaration remove old methods, validate choice
    dd-1406-declaration migration, model, endpoint
    dd-1379-collection add transaction.amount array type, unit test updated
    dd-1369 add noTransfers to group to get transfers
    add report.noTransferToAdd (migration and field)
    dd-1399-property split other asset into groups on supervision report
    dd-1399-property asset total value fix
    dd-1399-property fix method
    dd-1399-property formatted report skip render property
    dd-1400 fix JMS groups and relation
    dd-1400 money transfer model and partial unit test
    dd-1109-next-year-report rename concern->action
    dd-1109-next-year-report add validation rules and details setters
    dd-1109-next-year-report model, migration and controller
    report-fixes improve report.getmoneyin and out stability
    report-fixes fix order
    accounts_mk2_1298 fix report
    accounts_mk2 asset endpoint fix
    accounts_mk2 decision simplification
    report.client refactor
    remove report.accountsObjs
    accounts_mk2 Report.getAccountsClosingBalanceTotal returns null if any amount is null
    accounts_mk2 remove old methods
    admin-stats add PHPdocs comment and report.isDue
    accounts_mk2 formatted report
    accounts_mk2 save balance explanation: load in textarea
    accounts_mk2 add report.balanceMismatchExplanation + endpoint + unit test
    accounts_mk2 fix transaction order
    accounts_mk2 report balance calculation unit tests
    accounts_mk2 clean old fields + add offeset and totals_match
    accounts_mk2 balance
    accounts_mk2 simplify endpoint
    accounts_mk2 fix translations + remove translations
    dd-1231 fix serialiser
    dd-1231 report JMS groups refactor
    dd-1231 doctrine listener for report transaction + logic to save transactions
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 report creation - from endpooint and submission - now adds empty transactions
    dd-1231 transaction model (category, new transaction) with data
    dd-327 Corrected the property name used in the request to submit a report. include more fields in the report.
    dd-327 wip
    dd-1130 report.noAssetsToAdd defaults null
    dd-1130 simplify model namespace + report ACL method
    dd-1130 fix warning and simplify user interface
    add missing property
    dd-1123-oauth removed all oauth stuff
    dd-1127 add formatted report as email attachement on submit
    DD-1018 fixed issues with safeguarding model and refactored controller to use a more much more standard pattern for url's for managing an entity.
    Fixed an issue setting the wrong header for content type for JSON responses.
    DD-1018 Fixed minor issues getting report.
    dd-1018 wip
    DD-1018 part way through refactor to use a separate endpoint and table for safeguarding data.
    database structural changes for dd-1018
    added code to clone accounts and assets from first year report into 2nd year report
    implement clone 1st year report for 2nd year report
    merge and fix old duplicate merge
    dd-713 furhter info trip spaces and newlines before saving
    dd-713 report.furtherInfo field JMS group
    implemented user query filters and add some unit tests
    remove pdfToken
    oauth authentication implementation
    report entity dates type hinting + remove time reset on submitDate
    report entity dates type hinting + remove time reset on submitDate
    fixed have no asset to add
    report.submitDate now supports time
    dd-425 report.reviewed
    logic to update no asset to add record
    implemented logic to handle add,edit and remove reaason for no decisions
    implemented logic to handle form submission for reason for no contacts
    added new field to store reason for no contacts
    dropped decision involvement table
    add JMS groups to report entity and dropped decisions involvement entity
    quick fix to filter report by user id
    fix PHPDoc comment
    remove report.isDue as moved to client
    report.isDue with unit test
    delete old income, exp, payment entities
    squashed all commits into one
    fix Report serialised
    implmented add report
    made schema changes to take care of court order types relationships with reports
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.visitCare cascade delete
    DDPB-934 function for status service
    more PHPdoc info for fields
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    safeguarding-rename rename safeguarding into visits and care
    DDPB-199 fix more JMS groups
    DDPB-199 remove basic group
    DDPB-199 remove JMSExclusionPolicy
    DDPB-199 remove JMSXmlRoot
    DDPB-199 add basic group to each entity
    syntax-fix code syntax fix
    dd-1347-safeg remove old properties, add new one, unittest
    dd-1347-safeg data migration
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    DD-1018 fixed issues with safeguarding model and refactored controller to use a more much more standard pattern for url's for managing an entity.
    Fixed an issue setting the wrong header for content type for JSON responses.
    DD-1018 Fixed minor issues getting report.
    DD-1018 part way through refactor to use a separate endpoint and table for safeguarding data.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2610 removed unused use statment
    DDPB-2610 Removed Document softdeleteable. Changed to hard delete
    code-format code format
    DDPB-2054 Synced entity method.Replaced documents calls with "deputyDocuments" fixed isIsReportPdf()
    coding-standards php-cs-fixer
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-839 More fixes
    AbstractReport into ReportInterface
    DDPB-1762 working version
    php-cs-fixer code format
    DDPB-1645 report.document cascade
    DDPB-1323 Added JMS group to extract report submission of a document to id which documents can be removed
    DDPB-1323 Tidy up. Removed unwanted JMS groups
    DDPB-1323  Filtered out report PDF from documents list
    DDPB-1474 report submission cleanup logic
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-1522 document.isReportPdf
    DDPB-1466 file name lenght set to 255
    DDPB-1466 file name extend to 500 + migration + storage ref increase too
    DDPB-1395 refactor and fixes
    DDPB-1395 reportSubmission entity endpoint
    DDPB-1395 test for reportSubmitted
    DDPB-815 Added migration for soft delete
    DDPB-1395 fix document creation
    DDPB-1395 document.archived
    DDPB-1395 endpoint first version
    DDPB-814-upload rename field to match client
    DDPB-814 Added assertions to unit test, removed repository reference
    DDPB-814-upload format code
    DDPB-814-upload removed useless init
    DDPB-814-upload remove double check + default datetime
    DDPB-814 added POST endpoint, changed localFilename to filename
    DDPB-814-upload align annotation to retrieve file
    DDPB-814 Replaced uploadReference  with storageReference. Added getters/setters to Report entity
    DDPB-814 Moved Document to Report folder to match client site
    DDPB-814 Added Document Entity and migration script
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-723 money transaction short endpoint, model and test
    otpp rewrite money transaction endpoints POST PUT DELETE
    move report entities inside Report directory
    syntax-fix code syntax fix
    dd-1231 transaction model (category, new transaction) with data
    DD-77 DD-78 money in/out model + migration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links API for prev costs
    DDPB-2020-prof-refactor code cleanup
    DDPB-1984 code cleanup
    DDPB-1984-prof-current-fees doctrine inheritance + refactor
    DDPB-1984 Fixed amounts being set to 0.00. Tidy up
    DDPB-1984 More clean up. Fixed payment date
    DDPB-1984 Consolidated database changes, added new fields
    DDPB-1984 Added more fields to entity
    DDPB-1984 Added profServiceFees property to report via trait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2375: Adds unit tests to Update Handler
    DDPB-2375 Added estimate cost entity
    DDPB-2352 API working for create, update
    DDPB-2352 moved type list into report trait to allow return to FE
    DDPB-2352 removed trait as adding extra columns to table
    DDPB-2352 Added add method
    DDPB-2352 renamed to include deputy in naming convention
    DDPB-2352 initial entity setup
    DDPB-1165-fix-dups-reports cascade delete for debts and money transaction cats short
    DDPB-723 money transaction short endpoint, model and test
    more PHPdoc info for fields
    DDPB-768 Debt fix setters and move set logic into common trait
    move report entities inside Report directory
    master code format
    DDPB-199 remove old JMS groups
    DDPB-199 add basic group to each entity
    odr coding standard
    dd-377-debts debt.hasMoreDetails model
    dd-377-debts debts entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links total cost considering breakdown
    DDPB-2343-cost-links API for prev costs
    DDPB-2343-cost-links prev cost entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2658: Adds lay and non lay specific money out category (#561)
    
    * DDPB-2658: Adds non lay specific money out category
    Add dual-fuel option to household bills
    code-format code format
    DDPB-2131-money-out-category-prof-only add entry
    DDPB-1852-money-cats-other-merge fix and cleanup
    DDPB-1852-money-cats-other-merge add other out cats merge
    DDPB-1852-money-cats-other-merge other insurance migrate
    DDPB-2045 Updated entities with bank account property. Added migrtation script
    DDPB-2043 New Moving money category, put care-medical to top
    DDPB-2040 Synced categories
    DDPB-2040 Synced config array and removed 'order'
    DDPB-1645 report.moneyTransaction cascade
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-1046 move expenses from money out into section
    DDPB-927-balance move money out gifts into gifts
    cleanup deprecated data
    DDPB-723 format code
    DDPB-723 money transaction short endpoint, model and test
    more PHPdoc info for fields
    code format
    format code
    MoneyTransaction clearer comments
    otpp change array item order
    otpp rewrite money transaction endpoints POST PUT DELETE
    move report entities inside Report directory
    fix syntax
    syntax-fix add comment
    syntax-fix exclude JMS for fixtures otherwise failing with tests
    syntax-fix transaction types added via fixtures
    syntax-fix code syntax fix
    dd-1231 transaction model (category, new transaction) with data
    JMS setter to return moneyIn and out + other fixesgs
    add  dispaly order + fixtures with types
    DD-77 DD-78 add hasMoreDetails + migrations
    DD-77 DD-78 money in/out model + migration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2610 Extended report submissions to be undownloadable when > 500 days
    DDPB-2357: Reverts change to orderBy clause in ReportSubmission
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2318-report-submission-csv-optimise fix indexes
    DDPB-2318-report-submission-csv-optimise add index on report_submission.created_on
    DDPB-2223 review changes
    DDPB-2223 BE skeleton to generate CSV
    coding-standards php-cs-fixer
    DDPB-839 More fixes
    AbstractReport into ReportInterface
    DDPB-1762 working version
    DDPB-1762 NDR added to reportSubmission and added at submission time
    php-cs-fixer code format
    DDPB-1474 default param fix
    DDPB-1474 report submission cleanup logic
    DDPB-1398-search move logic to repository
    DDPB-1398-search search with counts
    DDPB-1395 remove reportSubmission.archived + more tests + refactor
    DDPB-1395 type hinting
    DDPB-1395 rename property
    DDPB-1395 groups refactor
    DDPB-1395 refactor and fixes
    DDPB-1395 reportSubmission entity endpoint
    DDPB-1395 test for reportSubmitted
    DDPB-1395 ReportService::submit() with test
    DDPB-1395 ReportSubmission entity + migration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.mentalCapacity cascade delete
    more PHPdoc info for fields
    mental-capacity-fix2 remove default value and align code
    mental-capacity-fix mental assesment date Y-m-d and wrote missing tests
    Mental assessment date entity field (#230)
    
    * Mental assessment date entity field
    * Updated unit test to include assessment date.
    move report entities inside Report directory
    DDPB-199 remove old JMS groups
    DDPB-199 remove JMSExclusionPolicy
    dd-326-client-capacity code format
    dd-326-client-capacity mental capacity unit test
    dd-326-client-capacity entity, endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 Added unit tests, revised method signatures to use interfaces
    DDPB-1984 code cleanup
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses fee unit test: edit, reset, totals and virtual property
    DDPB-837-fee-expenses fixing syntax
    DDPB-837-fee-expenses store fee
    DDPB-837-fee-expenses data model
    DDPB-1165-fix-dups-reports cascade delete for debts and money transaction cats short
    DDPB-723 money transaction short endpoint, model and test
    more PHPdoc info for fields
    DDPB-768 Debt fix setters and move set logic into common trait
    move report entities inside Report directory
    master code format
    DDPB-199 remove old JMS groups
    DDPB-199 add basic group to each entity
    odr coding standard
    dd-377-debts debt.hasMoreDetails model
    dd-377-debts debts entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.action cascade
    more phpdoc and method fix
    more PHPdoc info for fields
    move report entities inside Report directory
    DDPB-199 remove old JMS groups
    DDPB-199 remove JMSExclusionPolicy
    dd-326-client-capacity code format
    action endpoint functional test
    syntax-fix code syntax fix
    dd-1109-next-year-report rename concern->action
    dd-1109-next-year-report double link concern-report
    dd-1109-next-year-report add validation rules and details setters
    dd-1109-next-year-report model, migration and controller
    DDPB-2801 Move into api directory for monorepo (#572)
    more PHPdoc info for fields
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    syntax-fix code syntax fix
    dd-1399-property Asset fix getType and persister callbacks
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property fix missing setter + JMS groups
    dd-1399-property data model inheritaence for property assets
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.decisions cascade
    more PHPdoc info for fields
    move report entities inside Report directory
    DDPB-199 remove old JMS groups
    DDPB-199 remove basic group
    DDPB-301 JMS decision group
    syntax-fix code syntax fix
    dd-1123-oauth removed all oauth stuff
    implemented user query filters and add some unit tests
    remove decision.decisionDate
    implemented add and remove decisions
    removed decisions title form entity and database
    squashed all commits into one
    decision db migration + remove ctor from Decision
    /decision POST to create decision + /decision/find-by-report-id to get list
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2020-prof-refactor code cleanup
    DDPB-1984-prof-current-fees doctrine inheritance + refactor
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-797 - Fixed doctrine mapping errors
    DDPB-1165-fix-dups-reports remove accidentally added cascade persist
    DDPB-1165-fix-dups-reports cascade delete for debts and money transaction cats short
    DDPB-971 code format
    DDPB-745-money-out-103 re-call listener when report.type changes
    DDPB-723 fix groups
    DDPB-723 money transaction short endpoint, model and test
    DDPB-723 fully working endpoints
    DDPB-723 money short category entity
    more PHPdoc info for fields
    master more formatting
    code format
    format code
    DDPB-728 fix return annorations
    DDPB-728 data model with migration
    DDPB-746 expense endpoint
    DDPB-746 align NDR expenses table name
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    odr lint
    odr expense model
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343 fixed typo in inversed by
    DDPB-2343-cost-links interim
    DDPB-2343-cost-links interim backend
    DDPB-2343-cost-links API for prev costs
    DDPB-2343-cost-links prev cost entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.moneyShort cascade
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    code format
    DDPB-723 fix groups
    DDPB-723 money transaction short endpoint, model and test
    DDPB-2801 Move into api directory for monorepo (#572)
    php-cs-fixer code format
    DDPB-1645 report.lifestyle cascade
    DDPB-940-lifestyle-section details yes and no
    DDPB-940-lifestyle-section correct field type + move method
    DDPB-940 Added lifestyle entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-723 money transaction short endpoint, model and test
    otpp rewrite money transaction endpoints POST PUT DELETE
    move report entities inside Report directory
    syntax-fix code syntax fix
    dd-1231 transaction model (category, new transaction) with data
    DD-77 DD-78 money in/out model + migration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2063-account-delete-conf-page remove cascade trasnfer- account
    DDPB-1645 report.moneyTransfers cascade
    DDPB-1645 money trnasfer cascade delete
    DDPB-797 - Fixed doctrine mapping errors
    more PHPdoc info for fields
    align bank accounts naming
    move report entities inside Report directory
    DDPB-199 remove old JMS groups
    DDPB-199 fix more JMS groups
    DDPB-199 remove basic group
    DDPB-199 add basic group to each entity
    syntax-fix code syntax fix
    dd-1431 cascade delete transfers on account deletion
    dd-1369 add reportId to MoneyTransfer transfers JMS group
    dd-1400 rename transfer account props in compliance with frontend
    dd-1400 fix migration and entity
    dd-1400 money transfer model and partial unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2605: Removes 'other' option from breakdown and removes getProfD… (#546)
    updates JMS type to match client side for profDeputyManagementCostAmount
    feature/DDPB-2458 - Add general management figure to summary, Preview page and PDF (#511)
    
    * creates ProfDeputyManagementCost and migration
    
    * newline
    
    * drops ProfDeputyManagementCost, adds management cost amount to Report, alters migration to reflect new entity structure
    
    * DDPB-2457 Added rough persist code, to be checked and revised
    
    * updates property name for managementcosts to follow existing style, adds assertion to test, fixes date exceptions in tests
    
    * updates more tests to include assertions on managementCosts, resets managementCosts to null on change from assessed to fixed
    
    * adds JMS double type to managementCosts
    
    * drops comment from ReportUpdateHandlerInterface, uses NUMERIC(14, 2) for management_cost column, drops extra updateSectionsStatusCache from updateManagementCost
    
    * moves dataProvider for testUpdatesSingularFields to sit below the test
    
    * defines serialization name for managementCostAmount to ensure it matches client
    
    * adds management costs to costsTotal amount
    Feature/DDPB-2457 - Add general management costs entity and migration (#505)
    
    * creates ProfDeputyManagementCost and migration
    
    * newline
    
    * drops ProfDeputyManagementCost, adds management cost amount to Report, alters migration to reflect new entity structure
    
    * DDPB-2457 Added rough persist code, to be checked and revised
    
    * updates property name for managementcosts to follow existing style, adds assertion to test, fixes date exceptions in tests
    
    * updates more tests to include assertions on managementCosts, resets managementCosts to null on change from assessed to fixed
    
    * adds JMS double type to managementCosts
    
    * drops comment from ReportUpdateHandlerInterface, uses NUMERIC(14, 2) for management_cost column, drops extra updateSectionsStatusCache from updateManagementCost
    
    * moves dataProvider for testUpdatesSingularFields to sit below the test
    
    * defines serialization name for managementCostAmount to ensure it matches client
    
    * renames migration to take into account merges into feature-105
    DDPB-2406: Deletes previous responses when editing cost estimates
    DDPB-2376: Handles persist of More Information
    DDPB-2377: Adds total cost of estimates to response
    DDPB-2375: Adds unit tests to Update Handler
    Fixed bug, wrong namespace
    DDPB-2375 Added EntityManager to persist foreign entities
    DDPB-2375 added default estimate types
    DDPB-2375 Added estimate cost entity
    SSPB-2355: WIP
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2045 Trnslated bankAccount ID to bank account on PUT/POST, ordered accounts by ID
    DDPB-1645 report.accounts cascade delete
    DDPB-1395 test for reportSubmitted
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.assets cascade
    DDPB-1395 ReportService::submit() with test
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.decisions cascade
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    DDPB-2045 Added BusinessRulesException, handled errors on each entity type, returned using new Exception that allows data
    DDPB-2045 Removed JMS group 'associated-account'
    DDPB-2045 Trnslated bankAccount ID to bank account on PUT/POST, ordered accounts by ID
    DDPB-2045 Updated entities with bank account property. Added migrtation script
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2594 Added methods to determine if other costs are set
    DDPB-2518 Added unit test for updateDeputyCostHandler
    DDPB-2518 removed 2 fields, replaced by single 'howcharged' field, consistent with estimates, revised code that used these fields
    DDPB-2468 Remove Agreed costs option from 105 (#509)
    
    Remove 'Agreed Costs' option from deputy charges
    DDPB-2224 Added V property for total Costs
    DDPB-2375 Added EntityManager to persist foreign entities
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2355 Added new db fields to entity
    DDPB-2343-cost-links total cost considering breakdown
    DDPB-2343: updates interims or fixed cost on update
    DDPB-2343-cost-links exclude fixed costs in total depending on HasInterim answer
    DDPB-2343-cost-links total returns null if data missing
    DDPB-2343: Returns total deputy costs field
    DDPB-2367: Adds persist of fixed cost response to Report
    DDPB-2343-cost-links label logic except fixed costs
    DDPB-2352 API working for create, update
    DDPB-2352 moved type list into report trait to allow return to FE
    DDPB-2351: Adds persist of SCCO related responses to Report
    tidy up
    DDPB-2343-cost-links fix group
    DDPB-2343-cost-links interim
    DDPB-2343-cost-links interim backend
    DDPB-2352 Added add method
    DDPB-2352 renamed to include deputy in naming convention
    DDPB-2343-cost-links API for prev costs
    DDPB-2343-cost-links prev cost entity
    DDPB-2343-cost-links update status logic and new field
    DDPB-2343-cost-links how changed section backend
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    more PHPdoc info for fields
    code format
    format code
    DDPB-735 more info endpoint
    DDPB-735 align traits
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1839 Fixed docblocs
    DDPB-1839 Added and set new property
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance rename property
    DDPB-2310-dashboard-performance rename vars
    DDPB-2310-dashboard-performance add comment
    DDPB-2310-dashboard-performance refactor
    DDPB-2310-dashboard-performance fixes
    DDPB-2310-dashboard-performance add comments
    DDPB-2310-dashboard-performance move to trait + index
    DDPB-2310-dashboard-performance working version of array hydrator
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status comment
    DDPB-2244-report-status remove method
    DDPB-2244-report-status fix dependent sections
    DDPB-2244-report-status JMS refactor for peformance
    DDPB-2244-report-status remove prop from jms
    DDPB-2244-report-status simplifications
    DDPB-2244-report-status refactor
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.contact cascade delete
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.moneyShort cascade
    split report entity into traits. tests pass
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-959 move report service with test and fix dependencies
    DDPB-745-money-out-103 money short cats cascade persist + init with collection
    DDPB-723 format code
    DDPB-723 fix groups
    DDPB-723 delete endpoint, fix group and date
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    DDPB-723 money transaction short endpoint, model and test
    DDPB-723 fully working endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links add prof deputy cost into balance calculation
    DDPB-1758-balance-section add comments
    DDPB-1251 Restored groups
    DDPB-1251 Restored explanation group. Fixed report status to allow submission with explained status
    DDPB-1251 Removed unwanted JMS group and added new explained status
    DDPB-1251 Added group for balance explanation
    DDPB-837-fee-expenses align and fix fee totals
    format code
    DDPB-927-balance uses gifts and expenses total
    DDPB-927-balance move balance into trait
    DDPB-2801 Move into api directory for monorepo (#572)
    Stop double-counting expenses (#564)
    php-cs-fixer code format
    DDPB-1758-balance-section balance not started when gifts or expenses are not completed + unit test + refactor
    DDPB-1758-balance-section merge traits + states done when not included in the report type
    DDPB-1758-balance-section merge traits
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses align and fix fee totals
    DDPB-837-fee-expenses report.hasFees virtual property
    DDPB-837-fee-expenses fix group
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    php-cs-fixer code format
    DDPB-1758-balance-section balance not started when gifts or expenses are not completed + unit test + refactor
    DDPB-1758-balance-section typo
    DDPB-1758-balance-section include gifts in balance status + refactor
    DDPB-1645 report.gift cascade
    format code
    DDPB-927-balance uses gifts and expenses total
    more PHPdoc info for fields
    code format
    DDPB-728 data model with migration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2020-prof-refactor code cleanup
    DDPB-1984-prof-current-fees fix status
    DDPB-1984-prof-current-fees collapse method
    DDPB-1984-prof-current-fees doctrine inheritance + refactor
    DDPB-1984 Revised complete criteria
    DDPB-1984 Added new fields for estimate page
    DDPB-1984 Fixed Status update and correct redirects
    DDPB-1984 More clean up. Fixed payment date
    DDPB-1984 Consolidated database changes, added new fields
    DDPB-1984 Added more fields to entity
    DDPB-1984 JMS group
    DDPB-1984 Added profServiceFees property to report via trait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1645 report.moneyTransaction cascade
    coding-standards php-cs-fixer run
    split report entity into traits. tests pass
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    code format
    more PHPdoc info for fields
    assets
    syntax-fix code syntax fix
    dd-1399-property fix doctrine listener
    dd-1399-property Asset fix getType and persister callbacks
    dd-1399-property fix db value
    dd-1399-property change fields type for booleans
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property remove occupantsInfo + extend textarea length
    dd-1399-property fix missing setter + JMS groups
    dd-1399-property data model inheritaence for property assets
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1645 NDR cascade operations
    more PHPdoc info for fields
    DDPB-768 Debt fix setters and move set logic into common trait
    odr change group and fixes
    odr fix syntax
    odr debts model
    odr coding standard
    dd-377-debts debt.hasMoreDetails model
    dd-377-debts debts entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1645 NDR cascade operations
    more PHPdoc info for fields
    code format
    format code
    DDPB-746 align NDR expenses table name
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    odr lint
    odr expense model
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2158 implemented interface for bank accounts
    DDPB-2158 Added bank name one line to be virtual property
    DDPB-2158 Added one line bank name
    DDPB-1909 bank accounts - capitalisation tweaks
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    php-cs-fixer code format
    DDPB-1645 NDR cascade operations
    DDPB-750 Separate Account requiresSortCode from requiresBankName
    rest-jms-check update endpoint tests
    more phpdoc and method fix
    more PHPdoc info for fields
    code order
    code format
    align bank accounts naming
    DDPB-703 NDR account joint
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    master fix JMS warning
    DDPB-457-account-type add account type other no sort code
    odr fix label
    odr coding standard
    odr rename relationship to match client
    odr ODR bank account model
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1645 NDR cascade operations
    more PHPdoc info for fields
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    odr lint
    assets
    master remove empty asset repo
    syntax-fix code syntax fix
    dd-1399-property fix clone asset for new year report
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property fix model, unit test, controller
    dd-1399-property data model inheritaence for property assets
    accounts_mk2 uniformy money values types
    accounts_mk2 asset endpoint fix
    dd-1130 fix no assets to add
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    dd-1085 new asset reset the report.noASsetsToAdd status
    implemented user query filters and add some unit tests
    fix to migrations script
    modified assets column
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1645 NDR cascade operations
    PHPDoc comment
    odr coding standard
    odr-visits-care add plan new residence
    ddpb-40 rename JMS groups
    ddpb-40 normalise JMS groups
    ddpb-40 update model
    ddpb-40 add odr model
    ddpb-40 model
    syntax-fix code syntax fix
    dd-1347-safeg remove old properties, add new one, unittest
    dd-1347-safeg data migration
    dd-1130 simplify model namespace + report ACL method
    dd-1123-oauth removed all oauth stuff
    DD-1018 fixed issues with safeguarding model and refactored controller to use a more much more standard pattern for url's for managing an entity.
    Fixed an issue setting the wrong header for content type for JSON responses.
    DD-1018 Fixed minor issues getting report.
    DD-1018 part way through refactor to use a separate endpoint and table for safeguarding data.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1645 NDR cascade operations
    DDPB-797 - Fixed doctrine mapping errors
    DDPB-723 money transaction short endpoint, model and test
    state benefits and one off refactor
    more phpdoc and method fix
    DDPB-735 align traits
    odr lint
    odr add missing properties + setter getters
    odr-income rewrote model and migration. split entities
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1645 NDR cascade operations
    DDPB-797 - Fixed doctrine mapping errors
    DDPB-723 money transaction short endpoint, model and test
    state benefits and one off refactor
    more phpdoc and method fix
    DDPB-735 align traits
    odr lint
    odr add missing properties + setter getters
    odr-income rewrote model and migration. split entities
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    assets
    syntax-fix code syntax fix
    dd-1399-property Asset fix getType and persister callbacks
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property fix missing setter + JMS groups
    dd-1399-property data model inheritaence for property assets
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2648: Add "not_deputy" option to declaration question (#552)
    
    * Add `not_deputy` option to declaration question
    
    * Add tests on `setAgreedBehalfDeputy` value check
    
    * Add value check to Ndr::setAgreedBehalfDeputy and test to affirm
    
    * Assert that agreedBehalfDeputy is set
    
    As suggested in peer review, this ensures that `setAgreedBehalfDeputy` doesn't fail silently
    
    * Remove 'not_deputy' option from NDR reports
    
    * Only allow 'not_deputy' on non-lay reports
    
    Achieved by moving `isLayReport` from Client to API
    
    * Add tests for `isLayReport`
    
    * Move 'not_deputy' validity check to controller
    
    It depends on who is submitting it, which is not something the entity has access to
    
    * Deprecate `isLayReport`
    DDPB-2318-report-submission-csv-optimise fix indexes
    DDPB-2318-report-submission-csv-optimise fix date and test
    DDPB-2318-report-submission-csv-optimise csv generation service api-based
    DDPB-2252 logic moved from frontend, setting title as VirtualProperties
    DDPB-2244-report-status refactor
    DDPB-2158 Added report summary
    DDPB-2158 Fixed NameOneLine for NDRs
    DDPB-2158 added totals to Report and NDR
    DDPB-2158 Fixed NDR to return false and added test
    DDPB-2158 Revised to a single API call
    coding-standards php-cs-fixer
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839-ODR-NDR-rename mappedBy fix
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1762 working version
    DDPB-1839 Fixed JMS groups for ODR report
    DDPB-1839 Fixed docblocs
    DDPB-1839 Added ODR debt management field, revised migration revision
    DDPB-1798 NDR column + tests
    DDPB-1645 NDR cascade operations
    DDPB-797 Fixed Migrations, removed traces of ReportInterface
    DDPB-1286 Add Note Entity, Interface and associated traits
    code format
    align bank accounts naming
    DDPB-735 align traits
    Ddpb 450 ndr due date (#225)
    
    * NDR Start Date
    
    Added the start date to an ODR/NDR entity and the associated controller
    logic to show it.
    
    * Removal of test assertion as Admin now needs to get ODR.
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    odr ODR agree options, endpoint, tests
    odr-actions persist actions
    odr lint
    odr expense model
    odr no assets to ad fix
    odr add missing properties + setter getters
    odr-income rewrote model and migration. split entities
    odr-income model
    assets
    odr change group and fixes
    odr update model
    odr fix syntax
    odr odr debts model endpoint unit test
    odr debts model
    odr coding standard
    odr rename relationship to match client
    odr ODR bank account model
    ddpb-40 ODR submission endpoint with unit test and model updates
    ddpb-40 rename JMS groups
    ddpb-40 groups fix and remove start/end date
    ddpb-40 normalise JMS groups
    ddpb-40 update model
    ddpb-40 add odr model
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    state benefits and one off refactor
    odr lint
    odr-income rewrote model and migration. split entities
    odr-income add income one off at odr creation with listener
    odr change group and fixes
    odr fix syntax
    odr odr debts model endpoint unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    more phpdoc and method fix
    code format
    format code
    DDPB-735 align traits
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    state benefits and one off refactor
    DDPB-735 align traits
    otpp PHP doc comment
    odr lint
    odr add missing properties + setter getters
    odr-income rewrote model and migration. split entities
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    more phpdoc and method fix
    code format
    format code
    DDPB-735 align traits
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    odr-actions persist actions
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Reverted anything database - back to odr
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    more phpdoc and method fix
    code format
    DDPB-735 align traits
    DDPB-746 fix phpDoc comments
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    odr lint
    odr expenses: remove planningToClaimExpenses
    odr expense model
    DDPB-2786: Clone assets and bank accounts after resubmission (#570)
    
    * Split `clonePersistentResources` into separate function
    
    This function can now be called on existing reports too (as in the case described by the bug report)
    
    * Call `clonePersistentResources` when resubmitting a report
    
    When a report is unsubmitted and resubmitted, use `clonePersistentResources` to ensure that assets and accounts for next year's report are copied across too
    
    * Move flush to after entity manager changes have completed
    
    * Mock clonePersistentResources in submit and resubmit tests
    
    * Add test for clonePersistentResources
    
    * Revert 7f79b66e4
    
    The order of operations is more important than I realised
    
    * Small QOL change to the PR template
    
    * Check account/asset existence rather than blindly deleting
    
    * Add test to ensure duplicate resources aren't persisted
    
    * Only clone records across if next year's report was found
    
    * Add out-of-range test for resource cloning
    
    Ensure that if there is no report next year, or next year's report does not have expected dates, the ReportService won't try to clone resources
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2565 Copied isJoint flag to new accounts and only if account still open
    DDPB-2354-report-type-change-incomplete lay CSV skips report change for incomplete
    DDPB-2310-dashboard-performance ReportIsDue with tests from frontend
    DDPB-2310-dashboard-performance move method into repo
    DDPB-2310-dashboard-performance isDue fix
    DDPB-2310-dashboard-performance fix vars
    DDPB-2310-dashboard-performance refactor
    DDPB-2310-dashboard-performance fix major bug
    DDPB-2310-dashboard-performance fix other major bug
    DDPB-2310-dashboard-performance fix major bug on ready reports
    DDPB-2310-dashboard-performance fixes
    DDPB-2310-dashboard-performance refactr
    DDPB-2310-dashboard-performance simplify methods
    DDPB-2310-dashboard-performance working version of array hydrator
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status update status on next report creation
    DDPB-2244-report-status refactor
    DDPB-2223 removed service call to generate CSV and returned raw data to client for CSV generation
    DDPB-2223 BE skeleton to generate CSV
    DDPB-2096 check and update report start / end dates
    symfony3 more fixes
    symfony3 fix repos
    DDPB-2020-prof-refactor code cleanup
    incomplete-reports unsubmitting keep submit date
    incomplete-reports logic for re-submission
    incomplete-reports unsubmit method in service + endpoint + test
    coding-standards php-cs-fixer
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-1762 working version
    php-cs-fixer code format
    DDPB-1685 remove report date checks at new year report creation time
    DDPB-1645 skip same report, useful for clean extension
    DDPB-1645 cleanup
    DDPB-1645 clean-data command + service method
    DDPB-1645 method to find duplicates
    DDPB-1323 New endpoint and service to add additional documents
    DDPB-1053-joint-report-support update CSV mapping for PA 102, 103, 104
    DDPB-1395 clean up
    DDPB-1395 fix readding docs
    DDPB-1395 refactor and fixes
    DDPB-1395 test for reportSubmitted
    DDPB-1395 ReportService::submit() with test
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-1239: Additional null check found from tests
    DDPB-1239: Set report type based on last year's report if casrec check fails
    DDPB-1239-report-type-csv-updated default report type to 102
    DDPB-1239-report-type-csv-updated report required client in ctor + export report type setting logic into reportservice method
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    coding-standards php-cs-fixer run
    Update any non-submitted reports with data from casrec during the CSV file upload
    DDPB-1093 Added todo
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    code format
    format code
    Ddpb 593 admin stats (#232)
    
    * Update Admin Stats
    * Addition of report due date and submission dates for deputies.
    * Updated service names in DI container to align with Symphony style
    guide.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    php-cs-fixer code format
    DDPB-1771 method rename
    DDPB-1771 rename method
    DDPB-1771 set User.odrEnabled flag based on CASREC match
    DDPB-1771 add type hinting and fix mock returning boolean
    DDPB-1680 Fixed bug with invalid service
    DDPB-1680 refactor all casrec specific operations to casrec service
    DDPB-1680 Add CasRec verification service
    DDPB-1511 check for multi deps directly against casrec rather than client
    DDPB-1511 prevent codep from self-registering if one exists
    EPIC-codeps change the order in which exceptions thrown for behat
    EPIC-co-deputies update unit test to account for multi casrec results from repo
    EPIC-co-deputies - Add verifyCoDeputy endpoint and refactor casrec checking service
    EPIC-co-deputies refactor code from casRecChecks function to handle multi deputies
    
    Also better handles the fact that multiple deputies may match Case number, Postcode and surname (siblings at same address), storing all the matches against the user rather than just going with the first
    DDPB-971 code format
    DDPB-622 drop audit table and remove role constants
    DDPB-622 remove role table. role class now static. id deprecated
    remove missing method
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    DDPB-400 update endpoints and models to store client name
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    user_registration_logger user registration save data into extra fields for json
    logging casrec mismatches
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    1132 save user reg date on comamnd line, admin area and CASREC creation
    dd-1132 save deputy number into user table
    dd-1173 postcode mismatch return ERROR 424
    dd-1173 clean code
    dd-1173 fix unit tests
    dd-1173 fix self reg test
    dd-1173 logic to check into casrec before registering, returning error 421
    dd-1137 selfReg postcode
    dd-1130 fixes
    dd-1024 set the images in the email to come from the server settings.
    dd-1024 introduced self registration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2631 NDR creation on enabling (#545)
    DDPB-2427: Applies performance refactor to adding CoDeputy
    DDPB-2427: Attaches new users to clients with native SQL
    code-format code format
    DDPB-2058-cross-team fix
    DDPB-2058-cross-team fixes
    DDPB-2058-cross-team refactorgs
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team remove user soft deletion
    DDPB-2058-cross-team rename method
    DDPB-2053-cross-team remove duplicate logic
    DDPB-2053-cross-team add comment and simplify logic
    DDPB-2053-cross-team rename method
    DDPB-1818 refactored User entity methods
    DDPB-1818 Refactored User service to reflect Org, rather than PA
    DDPB-1798 add missing property
    DDPB-1507 Added Endpoint to add co deputy
    DDPB-1257: Hard delete existing soft deleted user in the event of reuse
    DDPB-1170: Ensure that users can be added using a soft deleted email address
    coding-standards php-cs-fixer run
    DDPB-1170: Small fix to edit PA user email
    DDPB-1214: Added comment for usage of CasRec constructor
    DDPB-1170: Changes based on Shaun's code review
    DDPB-1170: Correctly identify duplicate emails when editing PA users
    DDPB-1170: Verify email is not in use when editing a PA user
    DDPB-1008 Raised exception earlier and caused unfiltered method to check for soft deleted emails too
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    format code
    format code
    pa-upload-big-file refactor
    pa-upload-big-file refactor paService
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-2554 identified report by current one, not Last Report Day (#534)
    DDPB-2422 removed logging, general tidy up
    DDPB-2427: Applies performance refactor to adding CoDeputy
    DDPB-2427: Attaches new users to teams with native SQL
    DDPB-2427: Attaches new users to clients with native SQL
    Added logging, prevent updates if deputy not found etc
    Added more logging and debug param
    added logging
    Improved emptying deputy users. Removed fatal errors when User not set
    Moved object calls outside for loops
    DDPB-2354-report-type-change-incomplete org CSV skips report change for incomplete
    DDPB-2292 set CourtDate against client based on Last Report Day of CSV
    DDPB-2262-client-named refactor service
    DDPB-2262-client-named remove address from team
    DDPB-2262-client-named client.nameDeputy migration and storing
    code-format code format
    better comments
    DDPB-2058-cross-team fix named default to team members
    DDPB-2058-cross-team user deletion removes clients
    DDPB-2058-cross-team fix
    DDPB-2058-cross-team fix
    DDPB-2058-cross-team fixes
    DDPB-2058-cross-team method order
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team move static method into other class
    DDPB-2058-cross-team refactorgs
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team remove user soft deletion
    DDPB-2058-cross-team rename variables and methods
    DDPB-2020-prof-refactor rename service
    coding-standards php-cs-fixer
    DDPB-1818 Refactored PA -> Org
    DDPB-1856 Amended notification message format to include Prof deputies
    DDPB-1856 fix report type on upload for prof
    DDPB-1856 Prof deputy for upload + report creation types
    DDPB-1856 replace ROLE_PA
    DDPB-1884-pad-csv pad caseNumber and deputyNo at uplaod time
    DDPB-1718-team-name fix logic
    DDPB-1718-team-name migration + team name returned from submission endpoint + refactor
    DDPB-1718-team-name fix duplicate errors
    DDPB-1718-team-name refactor
    DDPB-1718-team-name code format + fix + udpate team name
    DDPB-1685 remove report date checks at new year report creation time
    DDPB-1451 Stop further execution when exception is caught (to prevent creating clients when Deputy errors).
    DDPB-1053-joint-report-support update CSV mapping for PA 102, 103, 104
    format code
    format code
    DDPB-1322 - Fixed report start day to be -1Y +1d unless leap day
    DDPB-1322 Start date made to be minus 1 year and + 1 day
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-1280 do not change report type for submitted report on PA CSV upload
    DDPB-1285-reporting-dates-check remove due date calculation from PaService, only used for displayed message
    DDPB-807-fix-dob dob fix
    DDPB-1285 Passed correct date through for lookup
    DDPB-1285 - Fixed method call following change
    DDPB-1285 Initial fix of PA service, correct dates now in use with newly labelled field
    DDPB-807: Populate client telephone number if present
    DDPA-807: Setting client email and date of birth if supplied
    pa-upload-big-file small fixes
    pa-upload-big-file error contains deputyNo and case number
    pa-upload-big-file prefix log
    pa-upload-big-file refactor paService
    DDPB-1257: Ensure that PA upload email is case insensitive
    DDPB-1257: Hard delete existing soft deleted user in the event of reuse
    DDPB-1257 Reinstated the sorts
    DDPB-1257 Removed ORM exceptions, replaced with look up by email
    DDPB-1257 Caught more exceptions to identify duplicate email addresses. Added debug code
    DDPB-1257 Added warnings when deputy email changes and errors for exceptions (duplicate emails)
    DDPB-1239-report-type-csv-updated report type updated with CSV upload
    DDPB-1239-report-type-csv-updated report required client in ctor + export report type setting logic into reportservice method
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    coding-standards php-cs-fixer run
    DDPB-1247: Assign address from PA upload to team entity
    DDPB-1214: Added comment for usage of CasRec constructor
    DDPB-1214: Support setting report type for PA upload
    DDPB-1173: Removing unused address columns from CSV upload
    DDPB-1203: Fixing regression when uploading PA data for the first time
    DDPB-1203: Adding clients to all PA team members when moved
    DDPB-1205: PA Upload: Added optional client address components
    DDPB-1146: Fixing tests
    DDPB-1146: Change PA import start and end date logic
    
    End date is eight weeks prior to due date and start date is a year
    behind end date
    DDPB-1030 paService creates team + add user temp logic
    trim spaces in CSV
    DDPB-994 address not mandatory
    DDPB-994 PA upload supports d-M-Y and d-M-y
    parse date unit test and fix year parse
    format code
    DDPB-984 clients always reassigned to lated uploaded PA
    fix test
    DDPB-985 fix duplicates clients due to case number case
    DDPB-971 set registration time for PA users
    DDPB-971 mformat code
    DDPB-971 PA service return errors
    DDPB-971 simplify code
    DDPB-971 paservice to add PA from CSV
    DDPB-971 /pa endpoint and tested service
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    syntax-fix code syntax fix
    fix-isScopeActive fix isScopeActive method
    request-id-formatter logger formatter now adds X-Request-Id
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2058-cross-team move static method into other class
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2594 PR tweaks
    DDPB-2594 Added methods to determine if other costs are set
    DDPB-2537 - Rename an un-submitted Pro/PA report in dashboard (#529)
    
    * switches to using class constants for statuses, adds changes needed check in getStatus, refactors isReadyToSubmit() to also check for isDue() rather than adding ad hoc
    
    * adds tests to cover getStatus and getStatusIgnoringDueDate
    
    * now returning unSubmitDate when querying reports
    
    * reverts returning un_submit_date
    
    * drops changes to return changesNeeded satatus
    
    * drops typehint comment
    
    * test fixes
    DDPB-2518 Fixed tests, removed references to having boxes ticked
    DDPB-2518 removed 2 fields, replaced by single 'howcharged' field, consistent with estimates, revised code that used these fields
    reverts changes meant for a different branch
    switches to using class constants for statuses, adds changes needed check in getStatus, refactors isReadyToSubmit() to also check for isDue() rather than adding ad hoc
    Don't require SCCO section to be complete if only fixed costs
    DDPB-2468 Remove Agreed costs option from 105 (#509)
    
    Remove 'Agreed Costs' option from deputy charges
    DDPB-2407: Determines status of Deputy Costs Estimate section
    DDPB-2355 Enabled section
    DDPB-2343-cost-links deputy cost status unit test
    DDPB-2343-cost-links disable estimate breaking tests due to status cached
    DDPB-2343-cost-links remove breakdown from status validation
    DDPB-2343-cost-links typo
    DDPB-2343-cost-links total returns null if data missing
    DDPB-2343-cost-links adjust validation
    DDPB-2367: Adds persist of fixed cost response to Report
    DDPB-2343-cost-links fix not started status
    DDPB-2343-cost-links label logic except fixed costs
    DDPB-2343-cost-links update status logic and new field
    DDPB-2343-cost-links add prof cost sections into config and validator
    DDPB-2338 Fixed status check
    DDPB-2310-dashboard-performance fix
    DDPB-2310-dashboard-performance rename property
    DDPB-2310-dashboard-performance ReportIsDue with tests from frontend
    DDPB-2310-dashboard-performance isDue fix
    DDPB-2310-dashboard-performance refactor
    DDPB-2310-dashboard-performance add comments
    DDPB-2310-dashboard-performance working version of array hydrator
    DDPB-2244-report-status rename constant
    DDPB-2244-report-status use cache only on dashboard
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status fixes
    DDPB-2244-report-status add missing hooks
    DDPB-2244-report-status JMS refactor for peformance
    DDPB-2244-report-status typo
    DDPB-2244-report-status feature flag
    DDPB-2244-report-status refactor
    DDPB-2244-report-status report.status json
    DDPB-2244-report-status simple solution MVP
    DDPB-2054 Synced entity method.Replaced documents calls with "deputyDocuments" fixed isIsReportPdf()
    DDPB-1984 code cleanup
    DDPB-1984-prof-current-fees unit test
    DDPB-1984-prof-current-fees collapse method
    DDPB-1984 Fixed Status update and correct redirects
    DDPB-1984 Initial commit
    coding-standards php-cs-fixer
    DDPB-857-unsubmit-reports remove unsubmit logic
    DDPB-857-unsubmit-reports report.status unsubmitted status
    DDPB-1839 Revised status to indicate incomplete where required
    php-cs-fixer code format
    DDPB-1758-balance-section balance not started when gifts or expenses are not completed + unit test + refactor
    DDPB-1758-balance-section merge traits + states done when not included in the report type
    DDPB-1758-balance-section include gifts in balance status + refactor
    DDPB-1758-balance-section change default status
    DDPB-1758-balance-section change balance state incomplate to not-started
    DDPB-1758-balance-section cleanup
    DDPB-1251 Restored explanation group. Fixed report status to allow submission with explained status
    DDPB-1251 Removed unwanted JMS group and added new explained status
    DDPB-1698 refactor + small performance improvement
    DDPB-1645 utility methods
    DDPB-1645 report.getAvailableSection and hasStarted fix
    DDPB-1053-joint-report-support fix balance
    DDPB-1053-joint-report-support use balance section to calculate balance status
    DDPB-1053-joint-report-support move method
    DDPB-1053-joint-report-support rewrite getSectionStatus and update test
    DDPB-1053-joint-report-support unit test on config prior to refactor
    DDPB-1053-joint-report-support report section config array
    DDPB-940 Fix sections required to submit 104
    DDPB-940 Added lifestyle to report - added migration script
    DDPB-1400/1495 - simplify logic
    DDPB-1400 Document section completion state logic change
    DDPB-1421 fix incomplete report money sections being incorrectly reported as done
    DDPB-1400 Fixed status service bug. Added Unit tests
    DDPB-1400 Fixed migration script changed boolean field to varchar(3). Fixed default document status on service
    DDPB-1400 Fixed store question result. Added document status groups
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses improve test
    DDPB-837-fee-expenses improve status in case db gets updated manually
    DDPB-837-fee-expenses remove records count not being used
    DDPB-837-fee-expenses report pa fees validation + test + 106 support
    DDPB-837-fee-expenses skip pa check for pa expenses/fees
    DDPB-837-fee-expenses store fees exist + status using fees only
    DDPB-837-fee-expenses report.status.PaFeesExpensesState tmp
    needs the expenese to be considered instead
    DDPB-1199 fix visits care missing assertion
    DDPB-959 fix bank account status count
    DDPB-959 fix JMS group
    DDPB-959 fix empty assertion on doctrine colelctions
    DDPB-959 invidual state groups for each section
    DDPB-959 move report service with test and fix dependencies
    DDPB-934 status service from client
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2131-money-out-category-prof-only format code
    php-cs-fixer code format
    DDPB-1771 method rename
    DDPB-1771 cleanup
    DDPB-1771 rename method
    DDPB-1771 set User.odrEnabled flag based on CASREC match
    DDPB-1680 Improved logging when denied registration
    DDPB-1680 unit test
    DDPB-1680 casrec verify action now takes client data
    DDPB-1680 refactor all casrec specific operations to casrec service
    DDPB-1680 Add CasRec verification service
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    format code
    format code
    pa-upload-big-file refactor
    pa-upload-big-file refactor paService
    DDPB-2801 Move into api directory for monorepo (#572)
    symfony3 more fixes and updates
    coding-standards php-cs-fixer
    DDPB-1856 client secret checks support inheritance
    DDPB-1856 replace deprecated method
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-622 remove super user role, remove role class
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    optimise change log level to warning
    dd-1133 first unit-tested version of bruteforce blocker by email
    dd-1130 authservice unit test
    dd-1130 add auth tests for user controller
    dd-1130 auth service able to get user by token
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 move authController logic into service
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    code order
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    error-levels-fix log as notice exception 419 related to user session expired
    dd-1130 userProvider unit test
    dd-1130 simplified token expire using redis. test updated. now returning 419 for missing/wrong/expired authtoken
    dd-1130 API return codes
    dd-1130 token expired test
    dd-1130 semplified providers: only redis one, and added method to override timeout
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 redis persist creation time and implements timeout
    dd-1130 1st version of redis storage for header token
    DDPB-2801 Move into api directory for monorepo (#572)
    coding style
    symfony3 fix interface
    code format
    code format
    syntax-fix code syntax fix
    dd-1130 API return codes
    dd-1130 token expired test
    dd-1130 semplified providers: only redis one, and added method to override timeout
    dd-1130 1st version of redis storage for header token
    dd-1130 add auth provider and authenticator based on token
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 added update handler to inialise pa fees and expenses
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2518 removed 2 fields, replaced by single 'howcharged' field, consistent with estimates, revised code that used these fields
    Feature/DDPB-2457 - Add general management costs entity and migration (#505)
    
    * creates ProfDeputyManagementCost and migration
    
    * newline
    
    * drops ProfDeputyManagementCost, adds management cost amount to Report, alters migration to reflect new entity structure
    
    * DDPB-2457 Added rough persist code, to be checked and revised
    
    * updates property name for managementcosts to follow existing style, adds assertion to test, fixes date exceptions in tests
    
    * updates more tests to include assertions on managementCosts, resets managementCosts to null on change from assessed to fixed
    
    * adds JMS double type to managementCosts
    
    * drops comment from ReportUpdateHandlerInterface, uses NUMERIC(14, 2) for management_cost column, drops extra updateSectionsStatusCache from updateManagementCost
    
    * moves dataProvider for testUpdatesSingularFields to sit below the test
    
    * defines serialization name for managementCostAmount to ensure it matches client
    
    * renames migration to take into account merges into feature-105
    DDPB-2406: Deletes previous responses when editing cost estimates
    DDPB-2376: Handles persist of More Information
    Removes breakdown data validation for now
    DDPB-2375: Adds unit tests to Update Handler
    DDPB-2375 Added EntityManager to persist foreign entities
    DDPB-2355: Adds unit test for DeputyCostsEstimateReportUpdateHandler
    WIP refactor of Report update handling POC
    WIP refactor of Report update handling POC
    DDPB-2801 Move into api directory for monorepo (#572)
    WIP refactor of Report update handling POC
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2518 Added unit test for updateDeputyCostHandler
    DDPB-2518 Moved update code into new Handler
    DDPB-2801 Move into api directory for monorepo (#572)
    php-cs-fixer code format
    PHPDoc comment
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    dd-1103 unit test and logic fixes
    dd-1103 new version
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    syntax-fix code syntax fix
    dd-1103 new version
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance report status cached built on the fly
    coding style
    symfony3 update interface
    DDPB-2045 Change BusinessRule exception to have http code 409
    format code
    format code
    rest-jms-check default value cahnge
    rest-jms-check add missing JMS groups
    rest-jms-check check for missing JMS when entities are returned
    exception if JMS group not defined on returning objects
    code format
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    serialise null values as a default
    error-levels-fix log as notice exception 419 related to user session expired
    accounts_mk2 extend stacktrace on REST response
    dd-1103 unit test and logic fixes
    dd-1130 audit log ACL + test + accessdenied always return 403
    dd-1130 audit log functional test + entity getters
    dd-1130 API return codes
    dd-1130 semplified providers: only redis one, and added method to override timeout
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 fix auto return codes from exception code only if in range
    dd-1120 fix return codes + 401 for wrong login
    fix shutdown method
    controller refactor: exceptions and param validation
    DD-1018 fixed issues with safeguarding model and refactored controller to use a more much more standard pattern for url's for managing an entity.
    Fixed an issue setting the wrong header for content type for JSON responses.
    RestInputOuputFormatter: move to services.yml and add logger for exceptions, warn level
    REST plugin supports default json option
    change api to support multiple JMS groups
    change to make it possible to pass multiple JMS groups
    DD-77 DD-78 add hasMoreDetails + migrations
    squashed all commits into one
    exception handler return excpetion code in message
    clean code
    rest listener debug option in service
    fatal error handler returning JSON
    update lib + add comments
    improvement
    refactor
    refactor
    refactor
    dynamic input
    restController
    refactor
    REstIOFormatter
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2020-prof-refactor code cleanup
    DDPB-1984-prof-current-fees reset last question on fee removal
    DDPB-1984-prof-current-fees doctrine inheritance + refactor
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-1400/1503
    DDPB-837-fee-expenses add fess with doctrine listeners, accidentally not there due to merge
    DDPB-1201 comments
    DDPB-745-money-out-103 re-call listener when report.type changes
    clean code
    DDPB-918-delete-last-record-logic ndr expenses and assets
    DDPB-918-delete-last-record-logic assets
    DDPB-918-delete-last-record-logic bank accounts
    DDPB-918-delete-last-record-logic money trnasfers
    DDPB-918-delete-last-record-logic expenses
    DDPB-918-delete-last-record-logic decisions
    DDPB-918-delete-last-record-logic gifts
    DDPB-918-delete-last-record-logic contacts
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    DDPB-723 fully working endpoints
    otpp rewrite money transaction endpoints POST PUT DELETE
    move report entities inside Report directory
    odr-income rewrote model and migration. split entities
    odr-income add income one off at odr creation with listener
    odr change group and fixes
    odr odr debts model endpoint unit test
    dd-377-debts doctrine listern + repo method to add mising debts
    syntax-fix code syntax fix
    accounts_mk2 transactions added with migration
    dd-1231 doctrine listener for report transaction + logic to save transactions
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2751 Ensured all emails are lowercase
    EPIC-co-deputies - Add verifyCoDeputy endpoint and refactor casrec checking service
    DDPB-400 update endpoints and models to store client name
    syntax-fix code syntax fix
    remove email end deputy first name from selfreg log
    user_registration_logger user registration save data into extra fields for json
    dd-1173 remove postcode.notBlank
    dd-1137 selfReg postcode
    dd-1024 introduced self registration
    DDPB-2801 Move into api directory for monorepo (#572)
    syntax-fix code syntax fix
    dd-1130 add other empty unit tests
    squashed all commits into one
    email endpoint, tested ok
    sendgrid working, see console command
    basic mailservice + mail factory, unit tested, command controller, utils, empty sendgrid service
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    fix syntax
    syntax-fix comment
    syntax-fix disable stauts check
    syntax-fix code syntax fix
    dd-1336 migration status check command
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-1798 coding standards
    DDPB-1798 digideps:clean-data command to add missing deputyNo
    php-cs-fixer code format
    DDPB-1645 fix script
    DDPB-1645 cleanup
    DDPB-1645 fix message
    DDPB-1645 clean-data command + service method
    DDPB-1645 clean data command
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance fix
    DDPB-2310-dashboard-performance rename property
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status typo
    DDPB-2244-report-status simplifications
    DDPB-2244-report-status refactor
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    php-cs-fixer code format
    db migration lock expires in 120 seconds
    PHPDoc comment
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    dd-1130 add other empty unit tests
    dd-1002 refactor
    dd-1002 refactor
    dd-1002 typo
    dd-1002 rewrite locking with setNx
    dd-1002 db migration verbose + delete lock in case of exception
    dd-1002 doctrine:migrations:migrate-lock command using redis
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2801 Move into api directory for monorepo (#572)
    Load fixture paramter on demand (#536)
    
    Removing auto-wiring means that you don't have to define the fixture parameter to start the application. Environments which define the parameter can load fixtures, but those which don't can't.
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2624 changed order to better reflect order of tests
    DDPB-2624 Allow reassign of deputyship of a client, changed surname to avoid confusion with case number
    Only create fixture CasRec records for lay deputies (#556)
    DDPB-2617: Create a test account for a lay deputy with a co deputy (#549)
    
    * Add support for a codeputy fixture user
    
    This new user has `coDeputyClientConfirmed` set, giving them access to invite codeputies to DigiDeps
    
    * Upgrade Symfony to v3.4.26
    
    * Add pair account for codeputies
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    Expose the environment on the API availability page (#555)
    coding-standards php-cs-fixer
    faster manage/availability endpoint
    refactor using class constants
    code format
    code format
    master code format
    odr coding standard
    dd-1433 remove pdf check
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    accounts_mk2 code format and better pdf fail message
    accounts_mk2 move pdf generation to service, now checked with manage/availability
    dd-1130 decision controller refactor
    dd-1130 fix serialiser groups, now converted to array before calls
    controller refactor: exceptions and param validation
    dd-864: add add SMTPs checks + improve DB message in case of failure
    add manage/elb for load balance checks
    availability now returns specific error message for db not running or schema error
    refactor manage Controller
    health-check endpoint refactor
    DDPB-2801 Move into api directory for monorepo (#572)
    AbstractReport into ReportInterface
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1762 working version
    DDPB-745-money-out-103 re-call listener when report.type changes
    refactor using class constants
    code format
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    master code format
    odr coding standard
    ddpb-40 restcontroller denyAccessIfOdrDoesNotBelongToUser
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    dd-1130 cleanup exceptions
    dd-1130 more coverage and fixes, mainly on /user endpoint
    dd-1130 /contact test + flush method
    dd-1130 /report unit test (missin ccontact and decisions
    dd-1130 missing params error joined
    dd-1130 add auth tests for user controller
    dd-1130 fix REquest warnign and move files
    dd-1130 auth controller test with login and login failed
    controller refactor: exceptions and param validation
    dd-1123-oauth removed all oauth stuff
    dd-1127 fix feedback logic moved client->API
    dd-1127 moved emails from frontend into API
    implemented user query filters and add some unit tests
    DD-77 DD-78 add hasMoreDetails + migrations
    squashed all commits into one
    hydrate method to call setters on objects on PUT requests
    refactor and simplify
    refactor exceptions
    user set password endpoint + validation + refactor
    refactor
    refactor
    dynamic input
    restController
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2427: Applies performance refactor to adding CoDeputy
    DDPB-2415: Fixes deputy list timeout
    code-format code format
    DDPB-2058-cross-team fix
    DDPB-2058-cross-team fixes
    DDPB-2058-cross-team refactorgs
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team simplify endpoint
    DDPB-2058-cross-team move method + team membership remove
    DDPB-2058-cross-team user.teamNames
    DDPB-2053-cross-team member for all teams returned
    DDPB-1818 Revised roles required for team endpoints to be ORG
    DDPB-1856 use Security annotation
    DDPB-1856 replace ROLE_PA
    DDPB-1711 fix team entity JMS recursion
    coding-standards php-cs-fixer run
    DDPB-1247 add team JMS group to /team endpoints
    DDPB-1087 - Fixed endpoint route
    DDPB-1088 - Added remove PA user  endpoint, removed unused code from UserController
    DDPB-1087 - Fixed endpoint route
    DDPB-1088 - Added remove PA user  endpoint, removed unused code from UserController
    DDPB-1030 team members endpoint
    DDPB-1030 endpoint to get team members
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2631 NDR creation on enabling (#545)
    DDPB-2427: Applies performance refactor to adding CoDeputy
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team refactor
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1856 use Security annotation
    DDPB-1718-team-name migration + team name returned from submission endpoint + refactor
    DDPB-1844 left-pad deputy numbers supplied to 8 chars
    php-cs-fixer code format
    DDPB-1671 Two new endpoints to facilitate one time upgrade MLD csv
    DDPB-1526 New route to handle codeps email updates
    DDPB-1507 Invited codep inherits client from invitor - plus correct role
    DDPB-1507 Fixed User response type
    DDPB-1507 Added Endpoint to add co deputy
    DDPB-2801 Move into api directory for monorepo (#572)
    adds additional check to see if a user is ndr enabled as we could be creating clients rather than just editing them
    adds further check for array key existing
    now flushing em
    reverts in_array check after typo
    adds conditional to check if NDR is enabled on user before adding NDR report to the client
    removes creation of NDR for lays during client edit action
    drops old comments from ClientController
    namespaces Fixtures class, fixes tests, moves to persisting entities in upsertAction and then flushing all together
    ensures new NDR report is generated for lay deputies onl
    DDPB-2455 Added NDR to client details end point
    DDPB-2136-client-archive-fix archive operation sets flag + filter out client getall
    DDPB-2125-case-manager-role extend endpoint to case manager
    DDPB-1997-fix-roles add prof test user + fixes
    coding-standards php-cs-fixer
    DDPB-857-unsubmit-reports extend report to be accessed from admin
    DDPB-1768 removed NDR group from details endpoint
    DDPB-1768 Added unit Controller unit tests
    DDPB-1768 Added NDR group
    DDPB-1768 - Added report status
    DDPB-1768 tidy up
    DDPB-1768 Added JMS groups to return reports and deputies
    DDPB-1768 Added client details endpoint
    DDPB-1856 use Security annotation
    DDPB-1856 replace ROLE_PA
    DDPB-1768 Added API controller and search method
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1838 removed debug
    DDPB-1838 unit test for new endpoint
    DDPB-1838 client archive endpoint
    fix NDR added to fixtures
    DDPB-1680 Add CasRec verification service
    EPIC-co-deputies simplify client endpoint
    DDPB-808-edit-client-details DOB tests simplification
    DDPB-808-edit-client-details unit tests on controller
    DDPB-808-edit-client-details store dob empty if needed
    DDPB-808-edit-client-details PUT client extra fields
    DDPB-808-edit-client-details PA can access GET /client/ID
    coding-standards php-cs-fixer run
    move PA endpoint to reports
    DDPB-963 working pagination endpoint
    order in reports
    option to exclude submitted reports
    DDPB-959 move report service with test and fix dependencies
    DDPB-957 /client/get-all endpoint with unit test
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    DDPB-758 remove court order type stuff
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    DDPB-199 fix groups default + other fixes
    odr coding standard
    ddpb-40 create client also creates ODR if not existing
    syntax-fix code syntax fix
    dd-1130 /contact test + flush method
    dd-1130 /client improvements
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    url-fix: client and report GET single endpoints check records belonging to userId
    implemented user query filters and add some unit tests
    fixes for user authentication
    oauth authentication implementation
    refactored add client action
    change api to support multiple JMS groups
    change to make it possible to pass multiple JMS groups
    squashed all commits into one
    implmented add report
    /client POST supports id param to update + refeactor hydration
    added endpoint to get client
    /client/get-by-user-id/ endpoint + fix client county not saved
    changes to backend add client endpoint
    made schema changes to take care of court order types relationships with reports
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    fix verify codeputy
    symfony3 more fixes
    php-cs-fixer code format
    DDPB-1680 update unit test
    DDPB-1511 prevent codep from self-registering if one exists
    EPIC-co-deputies Remove debug left in
    EPIC-co-deputies - Add verifyCoDeputy endpoint and refactor casrec checking service
    rest-jms-check add missing JMS groups
    code format
    code format
    remove unused service and simplify stat service due to retire soon
    Ddpb 593 admin stats (#232)
    
    * Update Admin Stats
    * Addition of report due date and submission dates for deputies.
    * Updated service names in DI container to align with Symphony style
    guide.
    DDPB-400 update endpoints and models to store client name
    dd-1433 self register returns user
    syntax-fix code syntax fix
    optimise change log level to warning
    user_registration_logger user registration save data into extra fields for json
    dd-1137 selfReg postcode
    dd-1130 add auth tests for user controller
    dd-1130 open selfregister controller and add secret check
    dd-1130 merge self reg into branch, update test using new test helpers
    dd-1024 introduced self registration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    code-format code format
    DDPB-2058-cross-team refactor
    DDPB-2020-prof-refactor rename service
    DDPB-2020-prof-refactor mchagne api route
    coding-standards php-cs-fixer
    DDPB-1856 Amended notification message format to include Prof deputies
    DDPB-1856 use Security annotation
    pa-upload-big-file refactor paService
    DDPB-1257 Added warnings when deputy email changes and errors for exceptions (duplicate emails)
    DDPB-971 PA service return errors
    DDPB-971 PA endpoint
    DDPB-971 /pa endpoint and tested service
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1856 replace deprecated method
    rest-jms-check add missing JMS group
    DDPB-1015 user.agree entiy, endpoints and tests
    DDPB-622 remove super user role, remove role class
    code format
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    DDPB-305 login return redirector info
    DDPB-284 auth login return user role client report groups
    syntax-fix code syntax fix
    dd-1103 unit test and logic fixes
    dd-1103 new version
    dd-1133 rewrite attempts checker with unit tests
    dd-1102 fix existing logic
    dd-1133 first unit-tested version of bruteforce blocker by email
    dd-1130 add auth tests for user controller
    remove unused namespaces
    dd-1130 API return codes
    dd-1130 semplified providers: only redis one, and added method to override timeout
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 fix warning in test
    dd-1130 move authController logic into service
    dd-1130 login now needs client secret, validated against user role
    dd-1130 token refactor
    dd-1130 1st version of redis storage for header token
    dd-1130 fix authController using old token class
    dd-1120 fix return codes + 401 for wrong login
    dd-1130 login and logout with unit test
    dd-1130 1st version of working login with functional test asserting access and login
    dd-1130 auth controller test with login and login failed
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-1997-fix-roles add prof test user + fixes
    DDPB-1888-ndr-jms-fix set default param for endpoint
    DDPB-1856 use Security annotation
    DDPB-1856 replace ROLE_PA
    php-cs-fixer code format
    DDPB-801 Simplify ClientConcact getById endpoint
    DDPB-801 Implement ClientContact DELETE API endpoint
    DDPB-801 CilentContact simplify PUT endpoint
    DDPB-801 Added ClientCOntact Update and getById endpoints
    DDPB-801 fix api field names
    DDPB-801 implement clientContact ADD endpoint
    DDPB-801 Entity, Migration and placeholder endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    Remove `/behat/client` route (#571)
    
    It's not needed any more, since we're filling in the data properly
    DDPB-2624 Replaced deputy rather then just adding as randomly returned incorrect client
    DDPB-2624 Allow reassign of deputyship of a client, changed surname to avoid confusion with case number
    Remove configuration-exposing error message
    
    The error should be apparent to developers, and documenting our environment variables to end users seems like an unnecessary security risk
    Throw error when Behat disabled
    
    Returning the exception won't actually do anything
    php-cs-fixer code format
    DDPB-1053-joint-report-support clean up
    DDPB-1053-joint-report-support clean up
    refactor using class constants
    code format
    DDPB-777 fix behat endpoint
    move report entities inside Report directory
    master code format
    odr coding standard
    dd-1433 remove behat email
    syntax-fix code syntax fix
    dd-1130 more coverage and fixes, mainly on /user endpoint
    dd-1130 add param to disable behat controllers
    dd-1130 fix behat set user token
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1097 move behat app check into API
    dd-922 behat ctrl now prepend emails into mock + refactor
    dd-375 add smtp transport, refactor emails, move mock logic at the controller level
    additional mail log checks
    additional mail log checks
    fix behat controller to delete users
    behat endpoing to delete behat users
    squashed all commits into one
    behat endpoint with email read and reset
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    Update SettingController.php
    DDPB-2025-admin-notifications allow get setting from anynymous user + test
    DDPB-2025-admin-notifications setting entity, endpoint, unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2751 Ensured email address is lowercase before requesting new token
    DDPB 2631 NDR creation on enabling (#545)
    DDPB-2430: Removes unnecessary includes
    DDPB-2430: Fixes missing user search results by adding GROUP BY clause
    DDPB-2430: Fixes missing results in User admin search by adding left join Doctrine pagination
    DDPB-2427: Accepts groups in request to improve performance of user/id/team endpoint
    DDPB-2262-client-named remove dups line
    DDPB-2262-client-named remove logic to update team address
    DDPB-2263 Removed default order that was overriding any filters set
    code-format code format
    DDPB-2125-case-manager-role extend endpoint to case manager
    DDPB-2058-cross-team fix
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team refactor
    DDPB-2058-cross-team more security
    DDPB-2058-cross-team simplify endpoint
    DDPB-2058-cross-team move method + team membership remove
    DDPB-2058-cross-team fix
    DDPB-2058-cross-team better comment
    DDPB-2058-cross-team endpoint to get user info and add to team
    DDPB-2058-cross-team rename method
    DDPB-1997-fix-roles add prof test user + fixes
    coding-standards php-cs-fixer
    DDPB-1948 Added like clause
    DDPB-1818 refactored User entity methods
    DDPB-1818 Fixed permission check on endpoint for edit user
    DDPB-1818 Fixed roles required for add user endpoint
    DDPB-1768 Moved regex into static Client method
    DDPB-1856 use Security annotation
    DDPB-1856 replace deprecated method
    DDPB-1856 replace ROLE_PA
    DDPB-839-ODR-NDR-rename more fixes
    DDPB-813 another fix
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    php-cs-fixer code format
    DDPB-1626 final fixes for behat and unit tests
    Revert "Ddpb 1626 deny admin password reset"
    DDPB-1626 - Removed limit check to lay deputies, disabled unit test
    DDPB-1626 added check for lay deputy role and pass-reset
    DDPB-1626 Removed check for pass-reset only, added Unit test
    DDPB-1626 Reject password resets for Admin users
    DDPB-1711 fix team entity JMS recursion
    DDPB-1509 rename field
    DDPB-1516 Empty Add1, postcode or country doesn’t update team
    DDPB-1447 - Same Address for PA team on PA user update
    
    When a PA updates their address, the team address plus the other PAs addresses are changed to same
    rest-jms-check add missing JMS groups
    DDPB-1170: Ensure that users can be added using a soft deleted email address
    coding-standards php-cs-fixer run
    DDPB-1215 user/get-by-token return strictly-needed groups only
    DDPB-1170: Changes based on Shaun's code review
    DDPB-1170: Correctly identify duplicate emails when editing PA users
    DDPB-1170: Verify email is not in use when editing a PA user
    DDPB-1008 Raised exception earlier and caused unfiltered method to check for soft deleted emails too
    DDPB-1088 - Added remove PA user  endpoint, removed unused code from UserController
    DDPB-1088 - Added remove PA user  endpoint, removed unused code from UserController
    DPB-1097 Configured Entities to repositories. Replaced logic with User Service call
    DDPB-1097 Revised logic, moved from populate method into add and edit, removed team add from edit
    DDPB-1062 Corrected exception message
    DDPB-1062 Default role to team member
    DDPB-1062 Added GET User Team Endpoint
    allow PA admin to add users
    DDPB-1030 team members endpoint
    DDPB-1030 paService creates team + add user temp logic
    DDPB-1014 move user agree into token-protected route to allow pre-login agreement
    DDPB-1015 user.agree entiy, endpoints and tests
    DDPB-1019-pa-team-name move team name to ctor
    DDPB-1019-pa-team-name do not create teams with no name
    DDPB-1019-pa-team-name store/load PA team name
    DDPB-1019 remove paTeamName from user entity and endpoint
    DDPB-1019 add user.jobTitle and user.teamName
    DDPB-1019 refactor
    admin-filters fix ndr search
    admin-filters remove count
    admin-filters working version with no pagination
    admin-filters user/get-all now using query string
    DDPB-622 remove useless code
    DDPB-622 drop audit table and remove role constants
    DDPB-622 remove super user role, remove role class
    DDPB-622 remove role table. role class now static. id deprecated
    admin-users-list-fix JMS group on users list
    refactor using class constants
    code format
    code format
    Ad (#227)
    
    * ad add AD and super users roles + cleanup
    
    * ad refactor
    
    * ad open user endpoints to AD users
    
    * ad user recreate token allows AD
    
    * ad user.adManaged
    
    * ad2 user/count ad
    
    * ad ad can add users
    
    * ad fix role order
    
    * ad update AD role id
    
    * ad keep role Ids until next refactor
    
    * Fixed some merge issues from master into branch
    
    * Updated unit test URL
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    odr-361 persist odr_enabled
    odr lint
    DDPB-336 DELETE /user deletes client and stops when reports exists + GET /user/what/filter endpoint
    master code format
    DDPB-199 fix test and login
    DDPB-199 fix defaeult groups on endpoints
    DDPB-284 recreate token minimise endpoint
    odr coding standard
    dd-1433 token action return complete user
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    dd-1336-user-not-found-redirect user not found return code 419 for redirection to login page
    allow admin to change users' role
    1132 save user reg date on comamnd line, admin area and CASREC creation
    user remove unneeded data
    user-pagination
    dd-1130 fixes
    dd-1130 more coverage and fixes, mainly on /user endpoint
    dd-1130 /contact test + flush method
    dd-1130 add auth tests for user controller
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    dd-1123-oauth removed all oauth stuff
    dd-1127 fixes
    dd-1127 moved emails from frontend into API
    implemented functionality for admin to sort user
    fix for logging user in
    fix endpoint
    dd-794 /user endpoint supports setting token value manually
    enabled application dual mode query
    new query to log in admin users
    dd-100 user token regeneration method + endpoint
    oauth authentication implementation
    change user.phone_work and home to main and alternative
    remove user.phone_mobile
    user.lastLoggedIn property and migration
    more fixes to user login
    fix for user login
    added endpoint to delete user
    added delete api endpoint for deleting user
    converted to lower case user email when adding user or logging in
    squashed all commits into one
    email unique + POST /user throws exception
    refactor /user POST and PUT using same logic to fill in the entity before flushing
    hydrate method to call setters on objects on PUT requests
    /user PUT supports all the other user fields
    fix /user POST role_id
    Better validation
    usercontroller now requires role.role property
    refactor and simplify
    add user set role
    /user endpoint return not found exception and 404 code
    user update endpoint
    user set password endpoint + validation + refactor
    /user/get-by-token endpoint
    email endpoint, tested ok
    route fix
    user creation sends email
    fix routes
    throw exception if user by email does not exist
    fix new form usage naming
    added api to fetch user by email
    refactor
    dynamic input
    REstIOFormatter
    better phpunit
    very basic version of add, list, get one
    POST,PUT,DELETE actions parsing input params
    simple exception handling
    strip out twig, now using json /user /user/1
    endpoint /user returning hardcoded users using twig
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2515: Removes casrec stats related fields from code and db (#528)
    DDPB-1856 use Security annotation
    php-cs-fixer code format
    DDPB-1760-stats-add-column casrec.lastReportSubmittedAt + CSV writing fixes
    DDPB-1720 fix readfile output
    DDPB-1720 comment
    DDPB-1720 move casrec add bulk into service
    DDPB-1720 refactor into casrec service and controller +test
    DDPB-1720 statsService rewrite.tmp
    DDPB-1720 refactor, cleanup and fix tests around casrec
    DDPB-1720 refactor + assert all columns are returned
    DDPB-1720 store additional column + test
    DDPB-1680 casrec verify action now takes client data
    DDPB-1680 refactor all casrec specific operations to casrec service
    DDPB-1680 Add CasRec verification service
    DDPB-1053-joint-report-support update CSV mapping for PA 102, 103, 104
    pa-upload-big-file refactor paService
    Update any non-submitted reports with data from casrec during the CSV file upload
    DDPB-971 remove comment
    DDPB-622 drop audit table and remove role constants
    DDPB-949 casrec support for Corref
    DDPB-936 casrec truncate fix testgs
    DDPB-892 move casrec typeofrep inside ctor
    code format
    DDPB-758 casrec stores typeofrep
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    syntax-fix code syntax fix
    dd-1132 /casrec return more errors details + fix postcode + unit test + better normalisation
    dd-1173 logic to check into casrec before registering, returning error 421
    dd-1173 support up to 50k records + error message + buffering + truncate option + test
    d-1173 /caserec needs json_encoded/gzcompressed/base64 data
    dd-1173 migration, controller, functional test for /casrec
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2629: Upgrade PHP to 7.3 (#560)
    
    * Upgrade base images to use PHP 7
    
    * Install xdebug through APK package
    
    * Remove composer enforcement of PHP 5
    
    * Upgrade doctrine/orm to 2.6.x
    
    2.5.x is exclusively compatible with PHP5, and 2.6.x is exclusively compatible with PHP7
    
    * Clean installation of PHP extensions
    
    * Remove `zend_extension` configs
    
    This is automatically handled by `docker-php-ext-install` and `docker-php-ext-enable` calls
    
    * Upgrade dependencies
    
    Lots of dependencies can upgrade now that the application is running PHP7
    
    * Remove invalid `true` argument from `time()`
    
    * Replace `catch (Exception)` with `catch (Throwable)`
    
    PHP7 split errors and exceptions. This ensures that both are caught, as before.
    
    * Reintroduce specification of PHP version in composer
    DDPB-1997-fix-roles add prof test user + fixes
    DDPB-1856 use Security annotation
    DDPB-1856 replace ROLE_PA
    format code
    format code
    DDPB-800 Changed edit permission to those belonging to same team
    DDPB-797 Moved Note methods outside Report folder. Added delete method
    rest-jms-check update note test
    rest-jms-check add missing JMS groups
    DDPB-797 Fixed entity recursion by just returning id
    note-align refactor
    note-align note save using clientID
    DDPB-800-edit-note createdBY added to GET
    DDPB-800 implement last modified by
    DDPB-800-edit-note refactor and only allow to edit users notes
    DDPB-800-edit-note /note/ID GET and PUT
    DDPB-797 Moved notes association from report to client, amended migration script
    DDPB-797 moved assertion as part of method call
    DDPB-797 Implemented timestampable and createdBy
    DDPB-797 Added Notes endpoint to add note
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    rest-jms-check add missing JMS groups
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    DDPB-723 format code
    DDPB-723 fix groups
    DDPB-723 delete endpoint, fix group and date
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    DDPB-723 money transaction short endpoint, model and test
    code format
    otpp rewrite money transaction endpoints POST PUT DELETE
    otpp transaction delete action
    otpp new report/id/money-transaction to edit single transaction for OTPP
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-2020-prof-refactor code cleanup
    DDPB-1984-prof-current-fees doctrine inheritance + refactor
    DDPB-1984-prof-current-fees adding a fee sets answer to yes
    DDPB-1984 Fixed setting payment fields to null when no payment received
    DDPB-1984 Fixed amounts being set to 0.00. Tidy up
    DDPB-1984-fixed roles and added delete service fee endpoint
    DDPB-1984 More clean up. Fixed payment date
    DDPB-1984 Consolidated database changes, added new fields
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-2045 Looked up bank account associated with report
    DDPB-2045 Trnslated bankAccount ID to bank account on PUT/POST, ordered accounts by ID
    DDPB-2045 Persist Bank Account entity
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-959 add JMS groups to expense and gifts
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic gifts
    refactor using class constants
    code format
    DDPB-728 gifts endpoints
    fix comment
    DDPB-746 expense endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2613 fixed return value to trigger correct log message
    DDPB-2610 Removed call to hard delete in test. Handled by fixtures
    DDPB-2610 reinstated hard delete for tests
    DDPB-2610 Removed unused endpoints
    DDPB-2610 Removed Document softdeleteable. Changed to hard delete
    DDPB-2338 Only set flag to yes if adding a non-deputy document
    DDPB-2338 removed exception for NDRs (needed to post final report)
    DDPB-2338 Set question flag to yes when first document uploaded and null when last document removed, throw exception for NDRs
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename more fixes
    DDPB-1762 working version
    php-cs-fixer code format
    small code alignment
    DDPB-1450 refactor and simplifications
    DDPB-1450 hard delete endpoint only accept soft-delete docs
    DDPB-1450 hard delete document endpoint for ADMIN
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-1522 document.isReportPdf
    DDPB-1400/1503
    DDPB-1466 fix document endpoint
    DDPB-1400 Fixed delete document
    DDPB-1395 reportSubmission entity endpoint
    DDPB-815 Added endpoint for delete
    DDPB-1395 new ROLE for downloading, currently included by ADMINs
    DDPB-1395 report/id/get-documents with documents only
    DDPB-1395 archive filter and endpoint
    DDPB-1395 move endpoint
    DDPB-1395 /document GET DELETE + refactro
    DDPB-815 tmp commit
    DDPB-814-upload rename field to match client
    DDPB-814-upload format code
    DDPB-814-upload remove double check + default datetime
    DDPB-814 added POST endpoint, changed localFilename to filename
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2648: Add "not_deputy" option to declaration question (#552)
    
    * Add `not_deputy` option to declaration question
    
    * Add tests on `setAgreedBehalfDeputy` value check
    
    * Add value check to Ndr::setAgreedBehalfDeputy and test to affirm
    
    * Assert that agreedBehalfDeputy is set
    
    As suggested in peer review, this ensures that `setAgreedBehalfDeputy` doesn't fail silently
    
    * Remove 'not_deputy' option from NDR reports
    
    * Only allow 'not_deputy' on non-lay reports
    
    Achieved by moving `isLayReport` from Client to API
    
    * Add tests for `isLayReport`
    
    * Move 'not_deputy' validity check to controller
    
    It depends on who is submitting it, which is not something the entity has access to
    
    * Deprecate `isLayReport`
    DDPB-2571 Fixed unsubmit date being returned by api
    DDPB-2537 - Rename an un-submitted Pro/PA report in dashboard (#529)
    
    * switches to using class constants for statuses, adds changes needed check in getStatus, refactors isReadyToSubmit() to also check for isDue() rather than adding ad hoc
    
    * adds tests to cover getStatus and getStatusIgnoringDueDate
    
    * now returning unSubmitDate when querying reports
    
    * reverts returning un_submit_date
    
    * drops changes to return changesNeeded satatus
    
    * drops typehint comment
    
    * test fixes
    DDPB-2412 Change PA checklist question (#519)
    
    * Add `deputyChargeAllowedByCourt` property to Checklist
    
    * Correctly handle incoming requests to set `deputyChargeAllowedByCourt`
    DDPB-2518 Moved update code into new Handler
    DDPB-2467: Add estimates question to checklist (#512)
    
    * Add `nextBillingEstimatesSatisfactory` field to checklist
    * Save `nextBillingEstimatesSatisfactory` when sent back to API
    DDPB-2468 Remove Agreed costs option from 105 (#509)
    
    Remove 'Agreed Costs' option from deputy charges
    DDPB-2224 persist fields
    DDPB-2355: Correct const names
    DDPB-2355: Adds unit test for DeputyCostsEstimateReportUpdateHandler
    WIP refactor of Report update handling POC
    WIP refactor of Report update handling POC
    DDPB-2343-cost-links update status cache on edit
    DDPB-2343-cost-links fix fixed costs being deleted in the else branch at any report update
    DDPB-2343: updates interims or fixed cost on update
    DDPB-2343: reset fixed cost if no longer selected
    DDPB-2367: Adds persist of fixed cost response to Report
    DDPB-2343-cost-links label logic except fixed costs
    DDPB-2352 API working for create, update
    DDPB-2351: Adds persist of SCCO related responses to Report
    DDPB-2343-cost-links interim
    DDPB-2343-cost-links interim backend
    DDPB-2343-cost-links has previous store
    DDPB-2343-cost-links how changed section backend
    DDPB-2338 Set question flag to yes when first document uploaded and null when last document removed, throw exception for NDRs
    DDPC-2332 Amended field name and entities : removed "Financial"
    DDPB-2294 Add migration and field into entity for lifestyle
    DDPB-2310-dashboard-performance move method into repo
    DDPB-2310-dashboard-performance isDue fix
    DDPB-2310-dashboard-performance fix unsubmitted in dashboard
    DDPB-2310-dashboard-performance fix other major bug
    DDPB-2310-dashboard-performance refactr
    DDPB-2310-dashboard-performance simplify methods
    DDPB-2310-dashboard-performance fix bug
    DDPB-2310-dashboard-performance hydrate array default
    DDPB-2310-dashboard-performance add comments
    DDPB-2310-dashboard-performance fix test
    DDPB-2310-dashboard-performance comment
    DDPB-2310-dashboard-performance working version of array hydrator
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2253-org-report-unsubmit phpdoc
    DDPB-2253-org-report-unsubmit rename and simplify methods
    DDPB-2253-org-report-unsubmit exclude current report when there is one unsubmitted one
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status use cache only on dashboard
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status remove status set from ctor to fix unit tsts
    DDPB-2244-report-status fixes
    DDPB-2244-report-status add missing hooks
    DDPB-2244-report-status JMS refactor for peformance
    DDPB-2096 check and update report start / end dates
    DDPB-2109 Added last modified fields. Updated API calls to populate
    code-format code format
    Moved code to private method and reused
    Fixed field not persisting, and unit tests
    Revised table structure, variable names and added submission info
    Added unit tests for checklist
    Updated permissions to CASE MANAGER for insert/update checklist
    DDPB-2109 Working API. separated information into 1 : n
    DDPB-2125-case-manager-role extend endpoint for case managers
    DDPB-2121-working api
    tmp commit
    DDPB-2072 Added Migration script and initiated api call, not finished
    DDPB-2020-prof-refactor rename service
    DDPB-2020-prof-refactor code cleanup
    DDPB-2016-due-date-form update due date on report end date changes
    DDPB-1984-prof-current-fees fix yes2no change iwht data
    DDPB-1984-prof-current-fees no answer clear section
    DDPB-1984-prof-current-fees adding a fee sets answer to yes
    DDPB-1984-prof-current-fees no answer deletes explanation
    fix-roles PROF can access dashboard
    DDPB-1984 Added new fields for estimate page
    incomplete-reports logic for re-submission
    incomplete-reports unsubmit method in service + endpoint + test
    DDPB-1984 Consolidated database changes, added new fields
    DDPB-1529 report.unsubmittedSectionsList + endpoint
    DDPB-1951-due-date extend endpoint
    DDPB-1951-due-date report.dueDate with endpoint and tests
    DDPB-1951-due-date remove metadata
    coding-standards php-cs-fixer
    DDPB-1888-ndr-jms-fix default groups for report-get-all
    DDPB-857-unsubmit-reports avoid unsubmitted active report
    DDPB-857-unsubmit-reports report.status unsubmitted status
    DDPB-857-unsubmit-reports unsubmit endpoint
    DDPB-857-unsubmit-reports extend report to be accessed from admin
    DDPB-1856 use Security annotation
    DDPB-1856 fix report endpoint ACL
    DDPB-1856 replace ROLE_PA
    Add secondary sort to dashboard
    
    Produces more consistent ordering where report end dates are identical
    ddpb-1669 remove money transfers when editing to 'no' transfers
    DDPB-1839 Added new field to store debt management text, moved setter outside debts check
    DDPB-1839 Added and set new property
    php-cs-fixer code format
    DDPB-1323 New endpoint and service to add additional documents
    clean up
    DDPB-1400 Answering no with docs
    
    no longer deletes attached uploads
    DDPB-1400-bugfix Answering ‘no documents’ deletes existing docs
    
    As per other sections eg Assets, transactions, gifts…
    DDPB-1398-search rename var
    DDPB-1400 Fixed store question result. Added document status groups
    DDPB-1400 Added wishToUploadDocumentation property and update code
    DDPB-1395 ReportService::submit() with test
    DDPB-1395 move endpoint
    DDPB-1395 /document GET DELETE + refactro
    DDPB-1395 endpoint first version
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-1301-store-submitter store report submittedBy at submit time
    DDPB-1239-report-type-csv-updated report required client in ctor + export report type setting logic into reportservice method
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses fixing syntax
    DDPB-837-fee-expenses store fee
    DDPB-837-fee-expenses store fees exist + status using fees only
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY
    DDPB-1107 Added PA users to getById API call
    DDPB-1093 Added entity manager to report service constructor. changed controller to use new service
    grant all PA access to client list
    admin-filters user/get-all now using query string
    DDPB-967 search report endpoint
    disabled logic to improve performances
    rewrite status and pagination filters in the API
    move PA endpoint to reports
    DDPB-622 drop audit table and remove role constants
    DDPB-949 103 enable using Corref + unit test + refactor
    DDPB-745-money-out-103 disable trigger
    DDPB-745-money-out-103 re-call listener when report.type changes
    DDPB-923 remove report.furtherInfo
    DDPB-918-delete-last-record-logic fix listeners
    DDPB-918-delete-last-record-logic assets
    DDPB-918-delete-last-record-logic expenses
    DDPB-758 use Report.ENABLE_103 constant as a feature flag for 103
    DDPB-890 fix default report type
    refactor using class constants
    DDPB-758 remove court order type stuff
    DDPB-758 set report.type based on CASREC
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    DDPB-723 fully working endpoints
    code format
    format code
    remove report.reviewed
    DDPB-728 gifts endpoints
    DDPB-735 more info endpoint
    DDPB-746 expense endpoint
    DDPB-777 PUT /report edit type
    DDPB-757 report.type now a property. auto set by endpoint, new year report and tests
    fix transaction type (deprecated class) warning breaking API endpoint
    DDPB-768 Debt fix setters and move set logic into common trait
    remove-reset-data remove endpoint to reset data
    otpp endpoint to reset NDR data
    otpp remove legacy code
    otpp setter trim sapce + refactor
    otpp report not assets to add deletes assets
    otpp fix noAssetsToAdd triggers
    otpp reset report actions fix
    otpp report supports metadata string
    otpp rewrite money transaction endpoints POST PUT DELETE
    otpp disable old transaction endpoint to persist
    otpp fix delete transactions
    otpp report reset all data
    otpp endpoint to drop deport data for dev needs
    otpp debts can be saved in steps
    move report entities inside Report directory
    master move report controllers into Report dir
    master code format
    DDPB-199 fix defaeult groups on endpoints
    odr coding standard
    dd-1433 remove formatted endpoint
    dd-1433 completely remove email settings, mailer and factory
    dd-1506-pdf-name mailFactory.createReportEmail now accepts report instead of client
    dd-377-debts null debts before reset
    dd-377-debts only save debts if has_debts is valid
    dd-377-debts only save debts if data is passed
    dd-377-debts debts endpoint unit tst
    dd-377-debts report.hasDebts entity, endpoint, migration
    dd-377-debts endpoint to store debts
    dd-326-client-capacity fix cot
    syntax-fix code syntax fix
    dd-1406-declaration migration, model, endpoint
    dd-1379-collection add transaction.amount array type, unit test updated
    dd-1369 report.no_transfers_to_add POST/PUT
    wip for transfers
    dd-1399-property fix method
    optimise1 use new method
    optimise transaction saving
    optimise-queries preload transaction type, avoids 80 useless queries for GET report request
    gatling accept moneyIn and out with partial data
    accounts_mk2 move pdf generation to service, now checked with manage/availability
    accounts_mk2 attach PDF to report email
    Fixed issue outputting pdf report, simplified the fonts and brought their sizes down to suit print.
    pdf endpoint catch exception
    wkhtml2pdf API call 1st version (not tested)
    Placeholder method for /report/1/pdf
    report.client refactor
    accounts_mk2 report display now taken from API
    accounts_mk2 allow transaction with null value
    accounts_mk2 add report.balanceMismatchExplanation + endpoint + unit test
    accounts_mk2 simplify endpoint
    accounts_mk2 change PUT report transactions keys
    dd-1231 report JMS groups refactor
    dd-1231 doctrine listener for report transaction + logic to save transactions
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 report creation - from endpooint and submission - now adds empty transactions
    dd-327 Corrected the property name used in the request to submit a report. include more fields in the report.
    dd-327 Add reasons why deputies don't all agree when submitting to database scheme. Added tests and code to controller so that if you submit with a reason not all agree, it records the fact.
    dd-1130 /contact test + flush method
    dd-1130 /report submit, update tests + name refactor
    dd-1130 report test refactor, split asset/contact logic into separate controllers
    dd-1130 /report unit test (missin ccontact and decisions
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    dd-1127 add formatted report as email attachement on submit
    dd-1127 moved emails from frontend into API
    DD-1018 Fixed minor issues getting report.
    DD-1018 part way through refactor to use a separate endpoint and table for safeguarding data.
    fix unit test
    url-fix: client and report GET single endpoints check records belonging to userId
    database structural changes for dd-1018
    fix for no asset added on 2nd year report
    fixed bug with 2nd year account transaction totals
    change to new report start and end date
    added code to clone accounts and assets from first year report into 2nd year report
    fix for 2nd year report date
    implement clone 1st year report for 2nd year report
    dd-888 change report/add to report/upsert, supporting 'id' params for edit mode
    merge and fix old duplicate merge
    dd-713 add further info endpoint
    implemented user query filters and add some unit tests
    temporary fix to user filter on report
    fixes for user authentication
    oauth authentication implementation
    fixed have no asset to add
    dd-425 report.reviewed
    logic to update no asset to add record
    implemented logic to handle add,edit and remove reaason for no decisions
    PUT /report supports submitted and submit_date
    PUT /report support start_date and end_date
    implemented delete and edit function for assets
    implemented delete a report contact
    implemented edit report contact action
    add endpoint to delete contacts
    implemented logic to handle form submission for reason for no contacts
    change api to support multiple JMS groups
    dropped decision involvement table
    PUT /report now accepts endDate
    quick fix to filter report by user id
    fix for saving date
    implemented endpoint for listing assets and add new asset
    refactor account to move actions into account controller
    move account endpoint
    squashed all commits into one
    /report PUT supports cotId
    fix for when report has no contacts
    implemented endpoint for getting contacts associated to report
    implemented endpoint to add contact
    GET /report/find-by-id/{id} return report by id
    GET /report/{id} return report by id
    implmented add report
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links fix
    DDPB-2343-cost-links fix delete logic
    DDPB-2343-cost-links prev cost entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic assets
    refactor using class constants
    code format
    otpp fix noAssetsToAdd triggers
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix groups default + other fixes
    DDPB-301 decision and account controller only return needed groups
    syntax-fix code syntax fix
    dd-1399-property fix unit test
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property extend asset test GET on mixed types
    dd-1399-property fix missing setter + JMS groups
    dd-1399-property fix model, unit test, controller
    dd-1399-property asset controller
    accounts_mk2 asset endpoint fix
    dd-1130 fix no assets to add
    dd-1130 report.noAssetsToAdd defaults null
    dd-1130 /asset tests
    dd-1130 refactor asset endpoing naming
    dd-1130 /contact test + flush method
    dd-1130 report test refactor, split asset/contact logic into separate controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status typo
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    master more formatting
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    master move report controllers into Report dir
    safeguarding-rename rename safeguarding into visits and care
    DDPB-199 fix defaeult groups on endpoints
    syntax-fix code syntax fix
    dd-1347-safeg fix setter
    dd-1347-safeg remove old properties, add new one, unittest
    fix safeguarding save
    dd-1130 /safeguarding test
    dd-1130 /contact test + flush method
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    DD-1018 fixed issues with safeguarding model and refactored controller to use a more much more standard pattern for url's for managing an entity.
    Fixed an issue setting the wrong header for content type for JSON responses.
    DD-1018 part way through refactor to use a separate endpoint and table for safeguarding data.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2291 Fixed api to set no_transfers_to_add as false if question answered 'yes'. Same as assets
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic money trnasfers
    refactor using class constants
    code format
    align bank accounts naming
    money transfer supports commas in values
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix groups default + other fixes
    syntax-fix code syntax fix
    dd-1419-transfers more fixes
    dd-1419-transfers change naming for noJS version
    dd-1419-transfers return transferID after creation
    dd-1419-transfers update endpoints
    master deleting/adding transfers reset report.noTransfersToAdd
    dd-1369 DELETE report/{reportId}/money-transfers/{transferId} with unit test
    dd-1369 fix PUT
    dd-1369 transfers PUT and POST need accountFrom.id and accountTo.id
    dd-1369 PUT /report/ID/money-transfers/ID
    dd-1400 POST /report/ID/money-transfers
    dd-1400 /report/ID?groups=transfer unit test and logic
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    rest-jms-check add missing JMS groups
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    otpp adding contacts remove reason for no contacts
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix defaeult groups on endpoints
    syntax-fix code syntax fix
    Report.accounts, decisions, contacts using JMS array types + account PUT
    dd-1130 /asset tests
    dd-1130 /contact test + flush method
    dd-1130 report test refactor, split asset/contact logic into separate controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    master more formatting
    code format
    mental-capacity-fix mental assesment date Y-m-d and wrote missing tests
    Mental assessment date entity field (#230)
    
    * Mental assessment date entity field
    * Updated unit test to include assessment date.
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix groups default + other fixes
    dd-326-client-capacity code format
    dd-326-client-capacity mental capacity unit test
    dd-326-client-capacity entity, endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-2244-report-status action
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    master more formatting
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix groups default + other fixes
    dd-326-client-capacity code format
    action endpoint functional test
    syntax-fix code syntax fix
    dd-1109-next-year-report rename concern->action
    dd-1109-next-year-report simplify concern controller
    dd-1109-next-year-report model, migration and controller
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    php-cs-fixer code format
    DDPB-940-lifestyle-section details yes and no
    DDPB-940-lifestyle-section reset details if answer is negative
    DDPB-940-lifestyle-section fix typo
    DDPB-940 Revised migration script. Added controller for endpoints to update lifestyle entity
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2442: Removes SQL LIMIT on Report Submissions stats query
    DDPB-2359: Adds toDate filter to report-submission/casrec_data (#483)
    
    DDPB-2359: Adds toDate filter to report-submission/casrec_data
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2359: Adds toDate filter to report-submission/casrec_data
    DDPB-2318-report-submission-csv-optimise csv generation service api-based
    DDPB-2240 Added fromDate to filters list overrides other logic
    DDPB-2223 review changes
    DDPB-2223 removed service call to generate CSV and returned raw data to client for CSV generation
    DDPB-2223 BE skeleton to generate CSV
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename more fixes
    DDPB-1762 attach document to NDR + fixes
    DDPB-1762 working version
    DDPB-1718-team-name migration + team name returned from submission endpoint + refactor
    php-cs-fixer code format
    DDPB-1628 Added ordering filters
    DDPB-1474 report submission cleanup logic
    DDPB-1395-bugs rename method
    DDPB-1395-bugs refactor
    DDPB-1395-bugs generalise PUT endpoint for future use
    DDPB-1395-bugs bug 7 - report period
    DDPB-1398-search move logic to repository
    DDPB-1398-search filter by createdBy role with test
    DDPB-1398-search add role_name and report.type to endpoint
    DDPB-1398-search search with counts
    DDPB-1398-search search with unit test
    DDPB-1395 rename role
    DDPB-1395 remove reportSubmission.archived + more tests + refactor
    DDPB-1395 test and JMS performance
    DDPB-1395 JMS groups refactor
    DDPB-1395 fix createdBy
    DDPB-1395 groups refactor
    DDPB-1395 refactor and fixes
    DDPB-1395 reportSubmission entity endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    code-format code format
    DDPB-2045 Looked up bank account associated with report
    DDPB-2045 Added bank account to deputy expenses, fixed api to persist and retrieve
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-959 add JMS groups to expense and gifts
    DDPB-959 expense edit only get needed data
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic expenses
    refactor using class constants
    code format
    fix comment
    DDPB-746 expense endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-2045 Looked up bank account associated with report
    DDPB-2045 Trnslated bankAccount ID to bank account on PUT/POST, ordered accounts by ID
    DDPB-2045 Persist Bank Account entity
    DDPB-1856 use Security annotation
    rest-jms-check fix
    rest-jms-check fix
    rest-jms-check add missing JMS groups
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    otpp rewrite money transaction endpoints POST PUT DELETE
    otpp transaction delete action
    otpp new report/id/money-transaction to edit single transaction for OTPP
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2244-report-status report.status json
    DDPB-2244-report-status simple solution MVP
    code-format code format
    DDPB-2063-account-delete-conf-page rename
    DDPB-2063-account-delete-conf-page rename key
    DDPB-2063-account-delete-conf-page cleanup
    DDPB-2063-account-delete-conf-page ytpo
    endpoint to calculate dependent records
    revert accidentalyl pushed
    endpoint to calculate dependent records
    DDPB-2045 Change BusinessRule exception to have http code 409
    DDPB-2045 Removed translation key warning from logs
    DDPB-2045 Added BusinessRulesException, handled errors on each entity type, returned using new Exception that allows data
    DDPB-2038 Added check for report type having money transfer sections, if so generate error when removing account
    DDPB-1856 use Security annotation
    DDPB-750 improve logic so non bank name type given, bankname is nulled
    DDPB-750 Separate Account requiresSortCode from requiresBankName
    coding-standards php-cs-fixer run
    DDPB-1231 Set translation instead of message
    DDPB-1231-delete-account-with-transfers typo
    DDPB-1231 Added check for transfers and thrown exception
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    align bank accounts naming
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix groups default + other fixes
    DDPB-313 simplify GET /accounts
    DDPB-301 decision and account controller only return needed groups
    syntax-fix remove account closing-date
    syntax-fix remove account.openingDate
    syntax-fix remove closingdateexpl
    syntax-fix remove old tests and closingbalanceexpl
    syntax-fix remove opening date expl
    syntax-fix code syntax fix
    dd-1427-joint-accounts model, migration, endpoint, test
    dd-1426-account-closed move logic to frontend
    dd-1426-account-closed remove isClosed when balance not zero
    dd-1426-account-closed account.isClosed model,controller,unittest
    dd-1415-2 1428
    dd-1415 sortcode not required
    Add comment
    accounts_mk2 allow account openingbalance = 0
    accounts_mk2 add account.account_type
    Changed the route for getting an account to make it more consistent with other controllers. Removed the need to have the opening account date as no longer used.
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 remove accountTransaction creation along with tests
    dd-1102 update endpoints
    dd-1130 /contact test + flush method
    dd-1130 /report unit test (missin ccontact and decisions
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    implemented user query filters and add some unit tests
    dd-94 add explanations
    fixes for user authentication
    dd-588 name refactor
    dd-588 add opening balance explanation model and migration + refactor account endpoint removing duplication and check inputs
    oauth authentication implementation
    DELETE /account/id
    DELETE /account/id
    PUT /account supports all the other fields: bank, sort_code etc..
    change api to support multiple JMS groups
    fix typo
    PUT /account supports closing_date and closing_balance options
    order accounts by newest first
    account set lastEdit null at creation time
    GET /report/get-accounts/ supports serialise group + JMS Account basic group annotation
    add transaction using doctrine repo
    Account transaction supports null value
    PUT /account/ID supports money_in and money_out updates
    create empty transactions on account creation
    DD-77 DD-78 add hasMoreDetails + migrations
    refactor account to move actions into account controller
    move account endpoint
    GET /account/find-by-id/{id}
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix flushes + not started when not set
    DDPB-2244-report-status simplify
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-1856 use Security annotation
    DDPB-1146: Replacing ROLE_LAY_DEPUTY with ROLE_DEPUTY in report controllers
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    code format
    PHP CS Fixes
    
    Addition of the PHP CS fixer config and fixes.
    move report entities inside Report directory
    master move report controllers into Report dir
    DDPB-199 fix groups default + other fixes
    DDPB-301 decision and account controller only return needed groups
    syntax-fix code syntax fix
    accounts_mk2 decision simplification
    dd-1130 /decision endpoint refactor and tests + delete auth fixes
    dd-1130 decision controller refactor
    dd-1130 /contact test + flush method
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    implemented user query filters and add some unit tests
    remove decision.decisionDate
    fixes for user authentication
    oauth authentication implementation
    implemented add and remove decisions
    change api to support multiple JMS groups
    removed decisions title form entity and database
    squashed all commits into one
    remove comment
    decision db migration + remove ctor from Decision
    /decision POST to create decision + /decision/find-by-report-id to get list
    DDPB-2801 Move into api directory for monorepo (#572)
    php code style
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename fixes
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1762 attach document to NDR + fixes
    DDPB-1762 NDR added to reportSubmission and added at submission time
    DDPB-1839 Added ODR debt management field, revised migration revision
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic fix listeners
    refactor using class constants
    state benefits and one off refactor
    code format
    DDPB-768 Debt fix setters and move set logic into common trait
    remove-reset-data remove endpoint to reset data
    DDPB-767 NDR debts deleting when has_debts = no
    otpp reset data deletes income Benefits
    Ddpb 450 ndr due date (#225)
    
    * NDR Start Date
    
    Added the start date to an ODR/NDR entity and the associated controller
    logic to show it.
    
    * Removal of test assertion as Admin now needs to get ODR.
    DDPB-501 state benefits reset moreDetails if checkbox is unticked
    DDPB-501 reset moreDetails if 'no' is selected
    DDPB-500 new endpoints
    DDPB-500 delete expenses when paidForanything=no
    DDPB-498 NDR noAssets deletes assets
    otpp endpoint to reset NDR data
    odr ODR agree options, endpoint, tests
    odr-actions persist actions
    odr lint
    odr expenses: remove planningToClaimExpenses
    odr delete expenses when paidForanything = no
    odr expense endppoint with unit test
    odr no assets to ad fix
    odr fix save one-off
    income benefits endopoint with unit test changes
    odr-income endpoint with unit test
    odr fix syntax
    odr odr debts model endpoint unit test
    odr coding standard
    ddpb-40 ODR submission endpoint with unit test and model updates
    ddpb-40 odr endpoint
    Flush all changes after adding asset (#574)
    
    The previous code was only saving changes to $asset, meaning `setNoAssetToAdd` had no effect
    DDPB-2801 Move into api directory for monorepo (#572)
    php code style
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename fixes
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    rest-jms-check add missing JMS groups
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic ndr expenses and assets
    DDPB-918-delete-last-record-logic assets
    refactor using class constants
    code format
    odr fix asset add
    odr no assets to ad fix
    assets
    syntax-fix code syntax fix
    dd-1399-property fix unit test
    dd-1399-property disable address trait, fix getType, disalbe date setter
    dd-1399-property extend asset test GET on mixed types
    dd-1399-property fix missing setter + JMS groups
    dd-1399-property fix model, unit test, controller
    dd-1399-property asset controller
    accounts_mk2 asset endpoint fix
    dd-1130 fix no assets to add
    dd-1130 report.noAssetsToAdd defaults null
    dd-1130 /asset tests
    dd-1130 refactor asset endpoing naming
    dd-1130 /contact test + flush method
    dd-1130 report test refactor, split asset/contact logic into separate controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    php code style
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename fixes
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-622 drop audit table and remove role constants
    refactor using class constants
    code format
    code format
    safeguarding-rename rename safeguarding into visits and care
    odr coding standard
    odr-visits-care add plan new residence
    ddpb-40 rename JMS groups
    ddpb-40 endpoint + unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    php code style
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename fixes
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    rest-jms-check add missing JMS groups
    DDPB-622 drop audit table and remove role constants
    DDPB-918-delete-last-record-logic fix listeners
    refactor using class constants
    code format
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    php code style
    DDPB-1856 use Security annotation
    DDPB-839-ODR-NDR-rename fixes
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-750 improve logic so non bank name type given, bankname is nulled
    DDPB-750 Separate Account requiresSortCode from requiresBankName
    rest-jms-check update endpoint
    rest-jms-check fix return JMS
    rest-jms-check update endpoint tests
    rest-jms-check add missing JMS groups
    DDPB-622 drop audit table and remove role constants
    cleanup deprecated data
    refactor using class constants
    code format
    align bank accounts naming
    DDPB-703 NDR account joint
    odr rename field to match client
    odr improve account unit test
    odr ODR bank account endpoint with unit test
    syntax-fix remove account closing-date
    syntax-fix remove account.openingDate
    syntax-fix remove closingdateexpl
    syntax-fix remove old tests and closingbalanceexpl
    syntax-fix remove opening date expl
    syntax-fix code syntax fix
    dd-1427-joint-accounts model, migration, endpoint, test
    dd-1426-account-closed move logic to frontend
    dd-1426-account-closed remove isClosed when balance not zero
    dd-1426-account-closed account.isClosed model,controller,unittest
    dd-1415-2 1428
    dd-1415 sortcode not required
    Add comment
    accounts_mk2 allow account openingbalance = 0
    accounts_mk2 add account.account_type
    Changed the route for getting an account to make it more consistent with other controllers. Removed the need to have the opening account date as no longer used.
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 remove accountTransaction creation along with tests
    dd-1102 update endpoints
    dd-1130 /contact test + flush method
    dd-1130 /report unit test (missin ccontact and decisions
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 fix serialiser groups, now converted to array before calls
    dd-1130 fix REquest warnign and move files
    controller refactor: exceptions and param validation
    implemented user query filters and add some unit tests
    dd-94 add explanations
    fixes for user authentication
    dd-588 name refactor
    dd-588 add opening balance explanation model and migration + refactor account endpoint removing duplication and check inputs
    oauth authentication implementation
    DELETE /account/id
    DELETE /account/id
    PUT /account supports all the other fields: bank, sort_code etc..
    change api to support multiple JMS groups
    fix typo
    PUT /account supports closing_date and closing_balance options
    order accounts by newest first
    account set lastEdit null at creation time
    GET /report/get-accounts/ supports serialise group + JMS Account basic group annotation
    add transaction using doctrine repo
    Account transaction supports null value
    PUT /account/ID supports money_in and money_out updates
    create empty transactions on account creation
    DD-77 DD-78 add hasMoreDetails + migrations
    refactor account to move actions into account controller
    move account endpoint
    GET /account/find-by-id/{id}
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    symfony3 more fixes and updates
    unittest-fix move and replace api keys into test boostrap
    fix boostrap message
    bootstrap reset db dynamic via variable
    code format
    code format
    tests Fixtures uncomment restore/backupDb, now disabled
    
    in favour of truncate data instead of full db restore
    DDPB-767 disable BackupDb
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    odr restore bootstrap phpunit
    odr odr debts model endpoint unit test
    syntax-fix fix phpunit user creation
    syntax-fix code syntax fix
    dd-1109-next-year-report remove accidentally committed code
    dd-1109-next-year-report rename concern->action
    report-fixes fix unit tests
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    accounts_mk2_migration restore bootstreap
    accounts_mk2_migration unittest skeleton
    accounts_mk2 phpunit validate schema before starting tests
    better transport mock for health check unit test
    dd-1130 phpunit clear cache at start
    dd-1130 merge self reg into branch, update test using new test helpers
    dd-1130 login and logout with unit test
    phpunit: add db reset at boostrapt time + fixtures + abstract controller for more readable tests
    migrations: merge into 039 and fix tests
    functional test for POST /account
    phpunit bootstrap use migration to add data
    squashed all commits into one
    vagrant remove + unit test using db
    DDPB-2801 Move into api directory for monorepo (#572)
    namespaces Fixtures class, fixes tests, moves to persisting entities in upsertAction and then flushing all together
    DDPB-2136-client-archive-fix force order and fix test assertions
    DDPB-2244-report-status refactor
    DDPB-2244-report-status utility method
    coding-standards php-cs-fixer
    DDPB-839-ODR-NDR-rename fixes
    AbstractReport into ReportInterface
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1762 attach document to NDR + fixes
    php-cs-fixer code format
    DDPB-1720 refactor, cleanup and fix tests around casrec
    DDPB-1398-search search with counts
    format code
    format code
    DDPB-1321 reporttest use real dates to pass new checks
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-799-delete-note fix PUT note + created by deleted check
    DDPB-800-edit-note refactor and only allow to edit users notes
    Change the way the pgdump is generated
    Lets allow the unit test to consume the env vars
    DDPB-1239-report-type-csv-updated report required client in ctor + export report type setting logic into reportservice method
    DDPB1093 Fixed Unit test
    DDPB-1019-pa-team-name store/load PA team name
    DDPB-984 clients always reassigned to lated uploaded PA
    DDPB-971 mformat code
    DDPB-971 Fixtures:deleteReportsData supports additional tables
    DDPB-622 phpunit fix
    cleanup deprecated data
    code format
    DDPB-758 remove court order type stuff
    DDPB-758 casrec stores typeofrep
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    master more formatting
    code format
    align bank accounts naming
    DDPB-746 expense endpoint
    DDPB-757 report.type now a property. auto set by endpoint, new year report and tests
    fix transaction type (deprecated class) warning breaking API endpoint
    tests Fixtures uncomment restore/backupDb, now disabled
    
    in favour of truncate data instead of full db restore
    DDPB-767 speed up db restore in testings
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    safeguarding-rename rename safeguarding into visits and care
    assets
    odr ODR bank account endpoint with unit test
    ddpb-40 groups fix and remove start/end date
    ddpb-40 unit test fixture to create odr and visitsCar
    syntax-fix code syntax fix
    dd-1379-collection add transaction.amount array type, unit test updated
    dd-1399-property extend asset test GET on mixed types
    dd-1399-property fix model, unit test, controller
    dd-1347-safeg fix phpunit fixtures warnings
    report-fixes fix unit tests
    fix stats test
    report.client refactor
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 reduce user conflicts
    dd-1130 /safeguarding test
    dd-1130 /decision endpoint refactor and tests + delete auth fixes
    dd-1130 /contact test + flush method
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 phpunit fixtures dynamic flush
    dd-1130 refactor tests
    rewrite unit tests using fixtures and astract class
    phpunit: add db reset at boostrapt time + fixtures + abstract controller for more readable tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2244-report-status fix coverae
    symfony3 more fixes and updates
    symfony3 symfony 3.4
    phpunit-fix disable cache tokens
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    dd-1109-next-year-report moved tests
    fix unit tests + test migration 053
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 phpunit coverage options
    fix unit tests
    move and fix unit tests
    moved unit test for formatted report from client
    added unit tests to user query filtering
    implemented user query filters and add some unit tests
    squashed all commits into one
    vagrant remove + unit test using db
    working functional test on ADD and GET single user
    add unit tests for entitities
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 authservice unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2357: Converts response to key => value json friendly
    DDPB-2357 Updates unit tests
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    code format
    DDPB-728 gifts endpoints
    DDPB-746 expense endpoint
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    DDPB-199 fix unit test on endpoints
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 teardown and fix test
    dd-1130 /decision endpoint refactor and tests + delete auth fixes
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 unit test classes for controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    move report entities inside Report directory
    master move report controllers into Report dir
    safeguarding-rename rename safeguarding into visits and care
    syntax-fix code syntax fix
    dd-1347-safeg fix setter
    dd-1347-safeg remove old properties, add new one, unittest
    accounts_mk2 fix safeguarding test
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 teardown and fix test
    dd-1130 /safeguarding test
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 unit test classes for controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    rest-jms-check fix
    rest-jms-check update endpoint tests
    code format
    DDPB-723 fix groups
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    DDPB-723 rename
    DDPB-723 money transaction short endpoint, model and test
    format code
    money-rename align money logic naming
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    DDPB-199 fix unit test on endpoints
    syntax-fix code syntax fix
    dd-1399-property fix tst
    dd-1399-property extend asset test GET on mixed types
    dd-1399-property fix model, unit test, controller
    dd-1399-property asset phpunit controller test
    accounts_mk2 asset endpoint fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 teardown and fix test
    dd-1130 /decision endpoint refactor and tests + delete auth fixes
    dd-1130 /asset tests
    dd-1130 /contact test + flush method
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2357: Converts response to key => value json friendly
    DDPB-2357 Updates unit tests
    DDPB-2359: Adds toDate filter to report-submission/casrec_data (#483)
    
    DDPB-2359: Adds toDate filter to report-submission/casrec_data
    DDPB-2359: Adds toDate filter to report-submission/casrec_data
    incomplete-reports split tests
    DDPB-1856 fix test and add note
    DDPB-1856 replace ROLE_PA
    php-cs-fixer code format
    ReportSubmissionControllerTest not relying on order
    DDPB-1628 Fixed unit test
    DDPB-1395-bugs fix search by role
    DDPB-1395-bugs refactor test
    DDPB-1395-bugs generalise PUT endpoint for future use
    DDPB-1395-bugs bug 7 - report period
    DDPB-1398-search filter by createdBy role with test
    DDPB-1398-search add role_name and report.type to endpoint
    DDPB-1398-search search with counts
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2332 more fixes
    DDPB-2136-client-archive-fix force order and fix test assertions
    DDPB-2310-dashboard-performance restore unit test
    DDPB-2310-dashboard-performance mfix test
    DDPB-2244-report-status fix
    DDPB-2244-report-status fix test
    DDPB-2096 Fixed unit test
    code-format code format
    Fixed notices, for unit tests by passing button clicked
    Fixed field not persisting, and unit tests
    Added unit tests for checklist
    DDPB-2020-prof-refactor code cleanup
    DDPB-2016-due-date-form update due date on report end date changes
    DDPB-1984 code cleanup
    incomplete-reports split tests
    incomplete-reports unsubmitting keep submit date
    incomplete-reports unsubmit method in service + endpoint + test
    DDPB-1951-due-date report.dueDate with endpoint and tests
    DDPB-857-unsubmit-reports remove wrong assertion
    DDPB-1888-ndr-jms-fix various JMS cleanup and fixes
    DDPB-1856 fix report endpoint ACL
    php-cs-fixer code format
    DDPB-1720 refactor, cleanup and fix tests around casrec
    DDPB-1645 report.getAvailableSection and hasStarted fix
    DDPB-1053-joint-report-support update PHPUnit tests
    DDPB-1395-bugs update test
    DDPB-1398-search fix test
    DDPB-1398-search search with counts
    DDPB-1398-search search with unit test
    DDPB-1395 remove reportSubmission.archived + more tests + refactor
    DDPB-1395 test and JMS performance
    format code
    format code
    DDPB-1321 reporttest use real dates to pass new checks
    DDPB-1301-store-submitter add submittedBy JSM group + test
    DDPB-1301-store-submitter store report submittedBy at submit time
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses align and fix fee totals
    DDPB-837-fee-expenses typo
    DDPB-837-fee-expenses fee unit test: edit, reset, totals and virtual property
    DDPB-1146: Refactor of integration test
    DDPB-1107-pa-clients-reports-link report.getbyId auth pa checks
    DDPB1093 Fixed Unit test
    DDPB-967 search report endpoint
    rewrite status and pagination filters in the API
    move PA endpoint to reports
    format code
    DDPB-959 move report service with test and fix dependencies
    code format
    DDPB-758 remove court order type stuff
    DDPB-723 fix groups
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    DDPB-723 money transaction short endpoint, model and test
    DDPB-723 fully working endpoints
    code format
    format code
    money-rename align money logic naming
    DDPB-735 more info endpoint
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    otpp fix balance tests after new money transaction changes
    otpp report supports metadata string
    otpp disable old transaction endpoint to persist
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    DDPB-199 fix unit test on endpoints
    DDPB-199 fix test and login
    DDPB-313 simplify GET /accounts
    dd-1433 remove formatted endpoint
    dd-1433 completely remove email settings, mailer and factory
    dd-377-debts null debts before reset
    dd-377-debts debts endpoint unit tst
    dd-326-client-capacity fix test
    syntax-fix code syntax fix
    dd-1406-declaration update test
    master update test
    dd-1379-collection add transaction.amount array type, unit test updated
    dd-1379-collection transactions unit test amount field + refactor
    dd-1397 rename fields and add column, no migration yet
    report-fixes improve phpunit test
    accounts_mk2 fix test
    Report.accounts, decisions, contacts using JMS array types + account PUT
    report.client refactor
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    accounts_mk2 add report.balanceMismatchExplanation + endpoint + unit test
    accounts_mk2 simplify endpoint
    accounts_mk2 change PUT report transactions keys
    dd-1231 fix serialiser
    dd-1231 report JMS groups refactor
    dd-1231 doctrine listener for report transaction + logic to save transactions
    dd-1231 report creation - from endpooint and submission - now adds empty transactions
    dd-327 Corrected the property name used in the request to submit a report. include more fields in the report.
    dd-327 placeholder for test to fix.
    dd-327 Add reasons why deputies don't all agree when submitting to database scheme. Added tests and code to controller so that if you submit with a reason not all agree, it records the fact.
    dd-1130 teardown and fix test
    dd-1130 /contact test + flush method
    dd-1130 /report submit, update tests + name refactor
    dd-1130 report test refactor, split asset/contact logic into separate controllers
    dd-1130 /report unit test (missin ccontact and decisions
    dd-1130 /client unit tests
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 unit test classes for controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    rest-jms-check fix
    rest-jms-check update endpoint tests
    code format
    format code
    money-rename align money logic naming
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    ddpb-1669 add unit test
    code format
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    money transfer supports commas in values
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    DDPB-199 fix unit test on endpoints
    syntax-fix code syntax fix
    dd-1419-transfers more fixes
    dd-1419-transfers fix unit test
    dd-1369 DELETE report/{reportId}/money-transfers/{transferId} with unit test
    dd-1369 fix unit test
    dd-1369 fix PUT
    dd-1369 transfers PUT and POST need accountFrom.id and accountTo.id
    dd-1369 PUT /report/ID/money-transfers/ID
    dd-1400 rename transfer account props in compliance with frontend
    dd-1400 POST /report/ID/money-transfers
    dd-1400 /report/ID?groups=transfer unit test and logic
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    mental-capacity-fix mental assesment date Y-m-d and wrote missing tests
    Mental assessment date entity field (#230)
    
    * Mental assessment date entity field
    * Updated unit test to include assessment date.
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    dd-326-client-capacity mental capacity unit test
    action endpoint functional test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status action
    incomplete-reports split tests
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    dd-326-client-capacity mental capacity unit test
    action endpoint functional test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance rename property
    DDPB-2244-report-status better assertion
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    DDPB-2244-report-status account controller unit test
    DDPB-2063-account-delete-conf-page fix test
    DDPB-2045 asserted response code = 409
    DDPB-2045 Fixed unit test
    DDPB-2045 Added unit test
    DDPB-2045 Added unit test for deleting accounts with transaction
    incomplete-reports split tests
    cleanup test
    Revert "DDPB-801 Disabled tests that were causing failures and memory leaks"
    
    This reverts commit 5c8f100b7f6470125608e22ac153d558f9e2b908.
    DDPB-801 Disabled tests that were causing failures and memory leaks
    code format
    align bank accounts naming
    align-bank-naming typo
    align-bank-naming rename report.accounts into report.bankAccounts
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    master move report controllers into Report dir
    master format unit tests
    master fix unit test accidentally disabled
    DDPB-313 simplify GET /accounts
    DDPB-301 fix test
    syntax-fix code syntax fix
    dd-1427-joint-accounts model, migration, endpoint, test
    dd-1426-account-closed account.isClosed model,controller,unittest
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    accounts_mk2 fix endpoint test after endpoint changed
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 remove accountTransaction creation along with tests
    dd-1102 update endpoints
    dd-1130 teardown and fix test
    dd-1130 /contact test + flush method
    dd-1130 /report submit, update tests + name refactor
    dd-1130 /client unit tests
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 add multiple login test + refactor login helper
    dd-1130 update tests with acl
    dd-1130 refactor tests
    dd-1130 login and logout with unit test
    dd-1130 refactor tests
    rewrite unit tests using fixtures and astract class
    move and fix unit tests
    migrations: merge into 039 and fix tests
    added new php unit test for report cloning and fixed existing ones
    added unit tests to user query filtering
    function test for PUT /account with lastEdit test
    fix tests for balance
    commented out failing test
    clean code
    functional test for POST /account
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status refactor
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    code format
    DDPB-746 expense endpoint
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status hook all the action with status update
    incomplete-reports split tests
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    move report entities inside Report directory
    master move report controllers into Report dir
    syntax-fix code syntax fix
    Report.accounts, decisions, contacts using JMS array types + account PUT
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 teardown and fix test
    dd-1130 /decision endpoint refactor and tests + delete auth fixes
    dd-1130 /asset tests
    dd-1130 /contact test + flush method
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer run
    fix TeamTest
    DDPB1057 - Added Unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2044-corref-update update report types and assertions
    DDPB-1856 Prof deputy for upload + report creation types
    DDPB-1856 replace ROLE_PA
    DDPB-1053-joint-report-support casrec with joint types
    DDPB-1053-joint-report-support update CSV mapping for PA 102, 103, 104
    DDPB-1239-report-type-csv-updated add test cases a3
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    casrec-accents casrec remove accents before matching with unit test
    casrec registration lower case deputy
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    dd-1132 /casrec return more errors details + fix postcode + unit test + better normalisation
    DDPB-2801 Move into api directory for monorepo (#572)
    Add tests to ensure functionality will work in 2020
    Use `` parameter to specify test year context
    DDPB-2388: Updates unit tests for 2019
    DDPB-2357 Updates unit tests
    DDPB-2292 - fixed bug i just introduced, reinstated tests
    DDPB-2292 Fixed Expected report date to cope with current day and month of this year, disabled tests
    DDPB-2189 expectedReportDate set to return null or \DateTime to fix fatal error on unit test, added unit tests for api Client, ensured no previous reports return empty arrays and not null
    format code
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    move and fix unit tests
    dd-1123-oauth removed all oauth stuff
    added unit tests to user query filtering
    fix tests
    squashed all commits into one
    working functional test on ADD and GET single user
    add unit tests for entitities
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB1057 - Added Unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 Added unit tests, revised method signatures to use interfaces
    more fixture namesapce fixes
    phpunit-fix symfony test disable debug mode + optimise more
    coding-standards php-cs-fixer run
    DDPB-1093 Moved Report tests to dedicated Service test. Added placeholder for repo tests
    DDPB-2801 Move into api directory for monorepo (#572)
    align bank accounts naming
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1231 remove account transaction logic and partially move to report
    move and fix unit tests
    dd-1123-oauth removed all oauth stuff
    added unit tests to user query filtering
    dd-588 fix test
    account set create date on creation unit test
    account set last edited now in controller
    fix tests for balance
    removed entity listener + remove db from balance test
    DD-338 logic to update account lastEdit
    fix balance using initial balance
    account totals + unit test
    fix tests
    squashed all commits into one
    working functional test on ADD and GET single user
    add unit tests for entitities
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2648: Add "not_deputy" option to declaration question (#552)
    
    * Add `not_deputy` option to declaration question
    
    * Add tests on `setAgreedBehalfDeputy` value check
    
    * Add value check to Ndr::setAgreedBehalfDeputy and test to affirm
    
    * Assert that agreedBehalfDeputy is set
    
    As suggested in peer review, this ensures that `setAgreedBehalfDeputy` doesn't fail silently
    
    * Remove 'not_deputy' option from NDR reports
    
    * Only allow 'not_deputy' on non-lay reports
    
    Achieved by moving `isLayReport` from Client to API
    
    * Add tests for `isLayReport`
    
    * Move 'not_deputy' validity check to controller
    
    It depends on who is submitting it, which is not something the entity has access to
    
    * Deprecate `isLayReport`
    DDPB-2518 fixed cost fix
    Re-enabled 105 sections and unit test
    DDPB-2424 commented unit test
    DDPB-2343-cost-links total cost considering breakdown
    DDPB-2343-cost-links prof cost balance unit test
    DDPB-2252 logic moved from frontend, setting title as VirtualProperties
    DDPB-2244-report-status hook all the action with status update
    DDPB-2223 Added test for report type
    DDPB-2158 Added more assertions
    DDPB-2158 Fixed NDR to return false and added test
    DDPB-1951-due-date report.dueDate with endpoint and tests
    php-cs-fixer code format
    DDPB-1645 report.getAvailableSection and hasStarted fix
    typo
    DDPB-1053-joint-report-support unit test on config prior to refactor
    format code
    format code
    DDPB-1321 refactor
    DDPB-1321 remove date interval check
    DDPB-1321 rename method
    DDPB-1321 date interval checks
    DDPB-1321 check report cannot be longer than 1y and 1 day
    DDPB-1321 check report has not other unsubmitted reports
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-1239-report-type-csv-updated report required client in ctor + export report type setting logic into reportservice method
    DDPB-1239-report-type-csv-updated decouple report type calculation logic
    coding-standards php-cs-fixer run
    DDPB-837-fee-expenses align and fix fee totals
    DDPB-837-fee-expenses DDPB-1252
    DDPB-1197-103-totals Report.getMoneyIn/OutTotal support for 103
    DDPB-1043 disable 104
    DDPB-1043 casrec normalise values in ctor + 104 rules
    DDPB-1043 ReportTest:testsetTypeBasedOnCasrecRecord refactor
    DDPB-959 move report service with test and fix dependencies
    DDPB-971 code format
    DDPB-949 103 enable using Corref + unit test + refactor
    DDPB-927-balance fix tests
    code format
    align bank accounts naming
    DDPB-776 asset.getValue unit tests
    Ddpb 593 admin stats (#232)
    
    * Update Admin Stats
    * Addition of report due date and submission dates for deputies.
    * Updated service names in DI container to align with Symphony style
    guide.
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    otpp fix balance tests after new money transaction changes
    move report entities inside Report directory
    syntax-fix code syntax fix
    dd-1379-collection add transaction.amount array type, unit test updated
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    accounts_mk2 fix reportTest balance
    accounts_mk2 report balance calculation unit tests
    dd-1231 typo
    dd-1231 remove account transaction logic and partially move to report
    fix unit tests
    move and fix unit tests
    dd-1123-oauth removed all oauth stuff
    added unit tests to user query filtering
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-776 asset.getValue unit tests
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    syntax-fix code syntax fix
    dd-1399-property asset phpunit controller test
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    move and fix unit tests
    dd-1123-oauth removed all oauth stuff
    added unit tests to user query filtering
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2648: Add "not_deputy" option to declaration question (#552)
    
    * Add `not_deputy` option to declaration question
    
    * Add tests on `setAgreedBehalfDeputy` value check
    
    * Add value check to Ndr::setAgreedBehalfDeputy and test to affirm
    
    * Assert that agreedBehalfDeputy is set
    
    As suggested in peer review, this ensures that `setAgreedBehalfDeputy` doesn't fail silently
    
    * Remove 'not_deputy' option from NDR reports
    
    * Only allow 'not_deputy' on non-lay reports
    
    Achieved by moving `isLayReport` from Client to API
    
    * Add tests for `isLayReport`
    
    * Move 'not_deputy' validity check to controller
    
    It depends on who is submitting it, which is not something the entity has access to
    
    * Deprecate `isLayReport`
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer run
    DDPB1057 - Added Unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    fixes further references to Fixtures after adding namespace
    DDPB-2058-cross-team move static method into other class
    DDPB-2020-prof-refactor rename service
    coding-standards php-cs-fixer
    DDPB-1856 Fixed unit tests
    DDPB-1856 fix report type on upload for prof
    DDPB-1856 Prof deputy for upload + report creation types
    DDPB-1856 PaServiceTest prepration for Prof dep
    DDPB-1884-pad-csv pad caseNumber and deputyNo at uplaod time
    DDPB-1718-team-name fix logic
    DDPB-1053-joint-report-support update PHPUnit tests
    phpunit-fix symfony test disable debug mode + optimise more
    format code
    format code
    DDPB-1322 Added unit test and script to amend start date of PA reports
    fix tests after due date column got renamed
    DDPB-807-fix-dob dob fix
    DDPB-807-tests more tests for PA Service
    pa-upload-big-file refactor paService
    DDPB-1239: Fixing unit test following merge
    DDPB-1257: Fixing unit tests following change to PA upload
    DDPB-1239-report-type-csv-updated report type updated with CSV upload
    DDPB-1239-report-type-csv-updated improve test
    coding-standards php-cs-fixer run
    DDPB-1214: Support setting report type for PA upload
    DDPB-1146: Fixing tests
    assert team creation on PA CSV upload
    DDPB-994 address not mandatory
    DDPB-994 test typo
    DDPB-994 PA upload supports d-M-Y and d-M-y
    DDPB-963 simplify test
    parse date unit test and fix year parse
    format code
    DDPB-984 clients always reassigned to lated uploaded PA
    fix test
    DDPB-985 fix duplicates clients due to case number case
    DDPB-971 format code
    DDPB-971 fix test
    DDPB-971 mformat code
    DDPB-971 PA service return errors
    DDPB-971 PA endpoint
    DDPB-971 simplify code
    DDPB-971 paservice to add PA from CSV
    DDPB-971 /pa endpoint and tested service
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2292 Fixed unit test
    DDPB-2189 expectedReportDate set to return null or \DateTime to fix fatal error on unit test, added unit tests for api Client, ensured no previous reports return empty arrays and not null
    php-cs-fixer code format
    DDPB-1771 move method
    DDPB-1771 add type hinting and fix mock returning boolean
    DDPB-1680 update unit test
    DDPB-1511 prevent codep from self-registering if one exists
    EPIC-co-deputies update unit test to account for multi casrec results from repo
    DDPB-971 code format
    DDPB-622 drop audit table and remove role constants
    DDPB-622 remove role class. split migration
    DDPB-622 remove role table. role class now static. id deprecated
    remove useless method
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    dd-1132 fix test
    dd-1173 fix unit tests
    dd-1130 fix
    dd-1130 fixes
    dd-1024 introduced self registration
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2594 Fixed unit tests to test breakdown page
    DDPB-2537 - Rename an un-submitted Pro/PA report in dashboard (#529)
    
    * switches to using class constants for statuses, adds changes needed check in getStatus, refactors isReadyToSubmit() to also check for isDue() rather than adding ad hoc
    
    * adds tests to cover getStatus and getStatusIgnoringDueDate
    
    * now returning unSubmitDate when querying reports
    
    * reverts returning un_submit_date
    
    * drops changes to return changesNeeded satatus
    
    * drops typehint comment
    
    * test fixes
    DDPB-2518 Fixed tests, removed references to having boxes ticked
    DDPB-2518 rem,oved unwanted mock methods from unit tests
    DDPB-2468 Remove Agreed costs option from 105 (#509)
    
    Remove 'Agreed Costs' option from deputy charges
    DDPB-2407: Determines status of Deputy Costs Estimate section
    DDPB-2343-cost-links deputy cost status unit test
    DDPB-2338 unit test fix
    DDPB-2310-dashboard-performance rename property
    DDPB-2244-report-status disable test
    DDPB-2244-report-status fixes
    DDPB-2244-report-status hook all the action with status update
    DDPB-2054 Fixed unit test
    DDPB-2020-prof-refactor code cleanup
    DDPB-1984-prof-current-fees unit test
    DDPB-1839 Fixed unit tests to include all data scenarios
    php-cs-fixer code format
    DDPB-1758-balance-section balance not started when gifts or expenses are not completed + unit test + refactor
    DDPB-1758-balance-section refactor
    DDPB-1758-balance-section merge traits + states done when not included in the report type
    DDPB-1758-balance-section include gifts in balance status + refactor
    DDPB-1758-balance-section change default status
    DDPB-1758-balance-section change balance state incomplate to not-started
    DDPB-1251 Fixed behat tests
    DDPB-1698 refactor + small performance improvement
    EPIC-co-deputies remove warnings. temp
    DDPB-1053-joint-report-support fix test
    DDPB-1053-joint-report-support update PHPUnit tests
    DDPB-1053-joint-report-support use balance section to calculate balance status
    DDPB-1053-joint-report-support rewrite getSectionStatus and update test
    DDPB-1053-joint-report-support unit test on config prior to refactor
    104-unit-tests 104 complete report assertion
    104-unit-tests lifestyle status test
    DDPB1400/1495 - Docs Unit test new expected status
    fix unit test
    DDPB-1400 Fixed status service bug. Added Unit tests
    DDPB-837-fee-expenses improve test
    DDPB-837-fee-expenses report pa fees validation + test + 106 support
    DDPB-837-fee-expenses skip pa check for pa expenses/fees
    DDPB-1199 fix visits care missing assertion
    DDPB-959 move report service with test and fix dependencies
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    DDPB-2058-cross-team move static method into other class
    DDPB-2786: Clone assets and bank accounts after resubmission (#570)
    
    * Split `clonePersistentResources` into separate function
    
    This function can now be called on existing reports too (as in the case described by the bug report)
    
    * Call `clonePersistentResources` when resubmitting a report
    
    When a report is unsubmitted and resubmitted, use `clonePersistentResources` to ensure that assets and accounts for next year's report are copied across too
    
    * Move flush to after entity manager changes have completed
    
    * Mock clonePersistentResources in submit and resubmit tests
    
    * Add test for clonePersistentResources
    
    * Revert 7f79b66e4
    
    The order of operations is more important than I realised
    
    * Small QOL change to the PR template
    
    * Check account/asset existence rather than blindly deleting
    
    * Add test to ensure duplicate resources aren't persisted
    
    * Only clone records across if next year's report was found
    
    * Add out-of-range test for resource cloning
    
    Ensure that if there is no report next year, or next year's report does not have expected dates, the ReportService won't try to clone resources
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance ReportIsDue with tests from frontend
    coding style
    symfony3 more fixes
    symfony3 fix test
    symfony3 more fixes
    DDPB-2020-prof-refactor code cleanup
    incomplete-reports logic for re-submission
    incomplete-reports refactor
    php-cs-fixer code format
    DDPB-1323 Added unit test for submit additional documents
    DDPB-1395 remove reportSubmission.archived + more tests + refactor
    DDPB-1395 rename property
    DDPB-1395 refactor and fixes
    DDPB-1395 test for reportSubmitted
    DDPB-1395 ReportService::submit() with test
    format code
    format code
    DDPB-1321 Report ctor refactor + dependencies and test updated
    DDPB-1239-report-type-csv-updated simplify repeated test
    DDPB-1214: Allow A2/A3 for PA report types
    coding-standards php-cs-fixer run
    DDPB-1093 Moved Report tests to dedicated Service test. Added placeholder for repo tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    php-cs-fixer code format
    DDPB-1680 Fixed test to allow more debugging info
    DDPB-1680 unit test
    DDPB-1680 fix test class name
    DDPB-1680 added CasRecVerificationServiceTest
    DDPB-2801 Move into api directory for monorepo (#572)
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    fix-isScopeActive fix isScopeActive method
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    request-id-formatter logger formatter now adds X-Request-Id
    DDPB-2801 Move into api directory for monorepo (#572)
    symfony3 more fixes
    unittest-fix refactor
    DDPB-1856 client secret checks support inheritance
    DDPB-1856 replace deprecated method
    DDPB-622 fix test
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 headerTokenAuthenticator unit test
    dd-1130 authservice unit test
    dd-1130 add other empty unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 headerTokenAuthenticator unit test
    dd-1130 add other empty unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 userProvider unit test
    dd-1130 add other empty unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 add unit test for handler
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2605 cost estimates breakdown changes (#554)
    
    Updates unit tests.
    Feature/DDPB-2457 - Add general management costs entity and migration (#505)
    
    * creates ProfDeputyManagementCost and migration
    
    * newline
    
    * drops ProfDeputyManagementCost, adds management cost amount to Report, alters migration to reflect new entity structure
    
    * DDPB-2457 Added rough persist code, to be checked and revised
    
    * updates property name for managementcosts to follow existing style, adds assertion to test, fixes date exceptions in tests
    
    * updates more tests to include assertions on managementCosts, resets managementCosts to null on change from assessed to fixed
    
    * adds JMS double type to managementCosts
    
    * drops comment from ReportUpdateHandlerInterface, uses NUMERIC(14, 2) for management_cost column, drops extra updateSectionsStatusCache from updateManagementCost
    
    * moves dataProvider for testUpdatesSingularFields to sit below the test
    
    * defines serialization name for managementCostAmount to ensure it matches client
    
    * renames migration to take into account merges into feature-105
    DDPB-2406: Deletes previous responses when editing cost estimates
    DDPB-2376: Handles persist of More Information
    DDPB-2375: Adds unit tests to Update Handler
    DDPB-2355: Adds unit test for DeputyCostsEstimateReportUpdateHandler
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2518 Added unit test for updateDeputyCostHandler
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1103 new version
    DDPB-2801 Move into api directory for monorepo (#572)
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1103 new version
    dd-1133 rewrite attempts checker with unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    code format
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1103 unit test and logic fixes
    dd-1103 new version
    DDPB-2801 Move into api directory for monorepo (#572)
    incomplete-reports split tests
    coding-standards php-cs-fixer
    DDPB-839-ODR-NDR-rename fix more stuff
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1762 attach document to NDR + fixes
    code format
    DDPB-723 money transaction short endpoint, model and test
    state benefits and one off refactor
    code format
    Ddpb 450 ndr due date (#225)
    
    * NDR Start Date
    
    Added the start date to an ODR/NDR entity and the associated controller
    logic to show it.
    
    * Removal of test assertion as Admin now needs to get ODR.
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    odr ODR agree options, endpoint, tests
    odr-actions persist actions
    odr expenses: remove planningToClaimExpenses
    odr expense endppoint with unit test
    odr fix save one-off
    income benefits endopoint with unit test changes
    odr-income rewrote model and migration. split entities
    odr-income endpoint with unit test
    odr rename method
    odr change group and fixes
    odr update model
    odr odr debts model endpoint unit test
    ddpb-40 ODR submission endpoint with unit test and model updates
    ddpb-40 odr endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    incomplete-reports split tests
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    code format
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    move report entities inside Report directory
    safeguarding-rename rename safeguarding into visits and care
    odr-visits-care add plan new residence
    ddpb-40 endpoint + unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    incomplete-reports split tests
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    odr fix tests
    assets
    syntax-fix code syntax fix
    dd-1399-property fix tst
    dd-1399-property extend asset test GET on mixed types
    dd-1399-property fix model, unit test, controller
    dd-1399-property asset phpunit controller test
    accounts_mk2 asset endpoint fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 teardown and fix test
    dd-1130 /decision endpoint refactor and tests + delete auth fixes
    dd-1130 /asset tests
    dd-1130 /contact test + flush method
    DDPB-2801 Move into api directory for monorepo (#572)
    incomplete-reports split tests
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    rest-jms-check update endpoint
    cleanup deprecated data
    code format
    align bank accounts naming
    DDPB-703 NDR account joint
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    odr fix tests
    odr rename field to match client
    odr improve account unit test
    odr ODR bank account endpoint with unit test
    syntax-fix code syntax fix
    dd-1427-joint-accounts model, migration, endpoint, test
    dd-1426-account-closed account.isClosed model,controller,unittest
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    accounts_mk2 fix endpoint test after endpoint changed
    dd-1231 remove account transaction logic and partially move to report
    dd-1231 remove accountTransaction creation along with tests
    dd-1102 update endpoints
    dd-1130 teardown and fix test
    dd-1130 /contact test + flush method
    dd-1130 /report submit, update tests + name refactor
    dd-1130 /client unit tests
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 add multiple login test + refactor login helper
    dd-1130 update tests with acl
    dd-1130 refactor tests
    dd-1130 login and logout with unit test
    dd-1130 refactor tests
    rewrite unit tests using fixtures and astract class
    move and fix unit tests
    migrations: merge into 039 and fix tests
    added new php unit test for report cloning and fixed existing ones
    added unit tests to user query filtering
    function test for PUT /account with lastEdit test
    fix tests for balance
    commented out failing test
    clean code
    functional test for POST /account
    DDPB-2801 Move into api directory for monorepo (#572)
    incomplete-reports split tests
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    code format
    code format
    DDPB-500 new endpoints
    DDPB-500 new endpoints
    DDPB-2801 Move into api directory for monorepo (#572)
    more fixture namesapce fixes
    code-format code format
    DDPB-2020-prof-refactor rename service
    DDPB-2020-prof-refactor mchagne api route
    DDPB-1856 Fixed unit tests
    DDPB-1856 fix test
    DDPB-1884-pad-csv fix test
    fix tests after due date column got renamed
    pa-upload-big-file refactor
    DDPB-1257: Fixing unit tests following change to PA upload
    DDPB-971 mformat code
    DDPB-971 PA endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    coding style
    symfony3 more fixes
    unittest-fix move and replace api keys into test boostrap
    DDPB-1856 clean up code
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1771 set User.odrEnabled flag based on CASREC match
    DDPB-1720 refactor, cleanup and fix tests around casrec
    DDPB-1680 update unit test
    DDPB-949 casrec support for Corref
    DDPB-892 move casrec typeofrep inside ctor
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    DDPB-400 update test
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    improve test
    fix unit test
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    dd-1173 fix unit tests
    dd-1173 fix self reg test
    dd-1137 selfReg postcode fix tests
    dd-1130 /report submit, update tests + name refactor
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 add multiple login test + refactor login helper
    dd-1130 merge self reg into branch, update test using new test helpers
    dd-1024 introduced self registration
    DDPB-2801 Move into api directory for monorepo (#572)
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    better transport mock for health check unit test
    dd-1130 manage controller test
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 disable smtp check for functional testings
    dd-1130 refactor tests
    dd-1130 manage controller unit tests
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1856 replace ROLE_PA
    format code
    format code
    DDPB-799-delete-note fix PUT note + created by deleted check
    DDPB-799-delete-note update unit test
    DDPB-799 Removed softdeleteable trait, fixed broken test
    disabled note test until 1345 get merged
    rest-jms-check update endpoint tests
    rest-jms-check update note test
    DDPB-800-edit-note createdBY added to GET
    DDPB-800-edit-note refactor and only allow to edit users notes
    DDPB-800-edit-note rename pa2-
    DDPB-800-edit-note comment
    DDPB-800-edit-note PUT unit test
    DDPB-800-edit-note note unit test GET
    DDPB-2801 Move into api directory for monorepo (#572)
    more fixture namesapce fixes
    namespaces Fixtures class, fixes tests, moves to persisting entities in upsertAction and then flushing all together
    Added unit tests for checklist
    unittest-fix move and replace api keys into test boostrap
    DDPB-1997-fix-roles add prof test user + fixes
    DDPB-1856 clean up code
    phpunit-fix symfony test disable debug mode + optimise more
    DDPB-1107-pa-clients-reports-link added PA test fixtures
    DDPB-957 add PA fixtures
    code format
    code format
    tests Fixtures uncomment restore/backupDb, now disabled
    
    in favour of truncate data instead of full db restore
    DDPB-767 speed up db restore in testings
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    fix syntax
    syntax-fix fix phpunit user creation
    syntax-fix code syntax fix
    report-fixes fix unit tests
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1206 casrec normalisation improve + error 425 for caseNumber already used + unit tests
    d-1173 /caserec needs json_encoded/gzcompressed/base64 data
    dd-1103 unit test and logic fixes
    dd-1130 add missing test
    dd-1130 more coverage and fixes, mainly on /user endpoint
    dd-1130 /report submit, update tests + name refactor
    dd-1130 /client unit tests
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 audit log functional test + entity getters
    dd-1130 simplified token expire using redis. test updated. now returning 419 for missing/wrong/expired authtoken
    dd-1130 token expired test
    dd-1130 add multiple login test + refactor login helper
    dd-1130 merge self reg into branch, update test using new test helpers
    dd-1130 auth login controller test cases with missing secret and secret not allwoed
    dd-1130 update tests with acl
    dd-1130 refactor tests
    dd-1130 login and logout with unit test
    dd-1130 1st version of working login with functional test asserting access and login
    dd-1130 manage controller unit tests
    dd-1130 auth controller test with login and login failed
    dd-1130 refactor tests
    rewrite unit tests using fixtures and astract class
    phpunit: add db reset at boostrapt time + fixtures + abstract controller for more readable tests
    DDPB-2801 Move into api directory for monorepo (#572)
    unittest-fix move and replace api keys into test boostrap
    DDPB-622 drop audit table and remove role constants
    DDPB-622 remove super user role, remove role class
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1103 unit test and logic fixes
    dd-1102 fix existing logic
    dd-1133 first unit-tested version of bruteforce blocker by email
    dd-1130 /report submit, update tests + name refactor
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 simplified token expire using redis. test updated. now returning 419 for missing/wrong/expired authtoken
    dd-1130 API return codes
    dd-1130 token expired test
    dd-1130 add multiple login test + refactor login helper
    dd-1130 move authController logic into service
    dd-1130 auth login controller test cases with missing secret and secret not allwoed
    dd-1130 update tests with acl
    dd-1130 refactor tests
    dd-1130 login and logout with unit test
    dd-1130 1st version of working login with functional test asserting access and login
    dd-1130 auth controller test with login and login failed
    DDPB-2801 Move into api directory for monorepo (#572)
    unittest-fix move and replace api keys into test boostrap
    DDPB-1626 final fixes for behat and unit tests
    Revert "Ddpb 1626 deny admin password reset"
    DDPB-1626 - Removed limit check to lay deputies, disabled unit test
    DDPB-1626 removed debug code
    DDPB-1626 Revised order of tests
    DDPB-1626 Revised unit tests
    DDPB-1626 Removed check for pass-reset only, added Unit test
    rest-jms-check fix
    rest-jms-check update endpoint tests
    coding-standards php-cs-fixer run
    disable test
    DDPB-1014 move user agree into token-protected route to allow pre-login agreement
    DDPB-1015 user.agree entiy, endpoints and tests
    DDPB-1019-pa-team-name store/load PA team name
    admin-filters user/get-all now using query string
    DDPB-971 code format
    DDPB-622 remove useless code
    DDPB-622 drop audit table and remove role constants
    DDPB-622 remove role table. role class now static. id deprecated
    code format
    Ad (#227)
    
    * ad add AD and super users roles + cleanup
    
    * ad refactor
    
    * ad open user endpoints to AD users
    
    * ad user recreate token allows AD
    
    * ad user.adManaged
    
    * ad2 user/count ad
    
    * ad ad can add users
    
    * ad fix role order
    
    * ad update AD role id
    
    * ad keep role Ids until next refactor
    
    * Fixed some merge issues from master into branch
    
    * Updated unit test URL
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    master format unit tests
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    allow admin to change users' role
    user-pagination
    dd-1130 user get by token adn recreate token tests
    dd-1130 add missing test
    dd-1130 more coverage and fixes, mainly on /user endpoint
    dd-1130 /report submit, update tests + name refactor
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 add auth tests for user controller
    dd-1130 add multiple login test + refactor login helper
    dd-1130 update tests with acl
    dd-1130 refactor tests
    dd-1130 login and logout with unit test
    dd-1130 refactor tests
    rewrite unit tests using fixtures and astract class
    move and fix unit tests
    dd-1127 moved emails from frontend into API
    added unit tests to user query filtering
    functional test for POST /account
    fix tests
    squashed all commits into one
    rename fields
    imrpove test
    restController
    rename and remove password from user serialization
    REstIOFormatter
    better phpunit
    better unit test
    working functional test on ADD and GET single user
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2415: Adds unit test for performance changes to team/members payload
    DDPB-2801 Move into api directory for monorepo (#572)
    namespaces Fixtures class, fixes tests, moves to persisting entities in upsertAction and then flushing all together
    code-format code format
    DDPB-2025-admin-notifications fixes
    DDPB-2025-admin-notifications remove auth check
    DDPB-2025-admin-notifications allow get setting from anynymous user + test
    DDPB-2025-admin-notifications setting entity, endpoint, unit test
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2515: Removes casrec stats related fields from code and db (#528)
    namespaces Fixtures class, fixes tests, moves to persisting entities in upsertAction and then flushing all together
    php-cs-fixer code format
    DDPB-1720 move tests to servce
    DDPB-1720 move casrec add bulk into service
    DDPB-1720 refactor into casrec service and controller +test
    DDPB-1720 statsService rewrite.tmp
    DDPB-1720 add stats field into endpoint + test
    DDPB-1720 refactor + assert all columns are returned
    DDPB-1720 refactor
    DDPB-1720 store additional column + test
    DDPB-1720 casrec endpoint split tests
    DDPB-1043 casrec normalise values in ctor + 104 rules
    DDPB-971 code format
    DDPB-949 casrec support for Corref
    DDPB-936 casrec truncate fix testgs
    DDPB-892 move casrec typeofrep inside ctor
    DDPB-758 casrec stores typeofrep
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1173 fix test
    dd-1173 support up to 50k records + error message + buffering + truncate option + test
    d-1173 /caserec needs json_encoded/gzcompressed/base64 data
    dd-1173 migration, controller, functional test for /casrec
    DDPB-2801 Move into api directory for monorepo (#572)
    more camelCase
    prefer camelCase
    adds further check for array key existing
    breaks out scenarios from testupsertPut to give a better idea of failure reasons
     DDPB-2517: Allow more complex users in test fixtures (#525) (#527)
    
    * Support team names in user fixture definitions
    
    * Add teams and reports from fixtures
    
    * Flush DB after adding users
    
    This ensures that any teams created are persisted into the database. It doesn't have a big performance overhead, particularly because of the low number of users being imported.
    
    * Create reports for admin users' clients
    
    * Allow users to be assigned to existing clients
    
    * Calculate report start/end date from client court date
    
    * Simplify report creation code slightly
    
    * Check valid client was returned before trying to add
    
    * Update PHPUnit test to account for new fixtures
     DDPB-2517: Allow more complex users in test fixtures (#525)
    
    * Support team names in user fixture definitions
    
    * Add teams and reports from fixtures
    
    * Flush DB after adding users
    
    This ensures that any teams created are persisted into the database. It doesn't have a big performance overhead, particularly because of the low number of users being imported.
    
    * Create reports for admin users' clients
    
    * Allow users to be assigned to existing clients
    
    * Calculate report start/end date from client court date
    
    * Simplify report creation code slightly
    
    * Check valid client was returned before trying to add
    
    * Update PHPUnit test to account for new fixtures
    drops assertion in testupsertPostLayDeputy for NDR existing
    drops unused User dependency
    drops comment
    namespaces Fixtures class, fixes tests, moves to persisting entities in upsertAction and then flushing all together
    ensures new NDR report is generated for lay deputies onl
    DDPB-2136-client-archive-fix force order and fix test assertions
    DDPB-2189 Moved Expected date to api as virtual property, revised prev report data to ensure array is returned, fixed test to reflect new clients in search list
    DDPB-1997-fix-roles fix test
    DDPB-1997-fix-roles add prof test user + fixes
    coding-standards php-cs-fixer
    DDPB-1768 Added unit Controller unit tests
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1838 removed debug
    DDPB-1838 remove problematic assertion
    DDPB-1838 unit test for new endpoint
    fix test
    EPIC-co-deputies simplify client endpoint
    format code
    format code
    DDPB-808-edit-client-details DOB tests simplification
    DDPB-808-edit-client-details assert current report back from API
    DDPB-808-edit-client-details unit tests on controller
    coding-standards php-cs-fixer run
    move PA endpoint to reports
    DDPB-963 working pagination endpoint
    DDPB-963 clean up code
    DDPB-959 move report service with test and fix dependencies
    DDPB-957 /client/get-all endpoint with unit test
    code format
    Tests Namespace Update
    
    Movement of the unit tests to their own namespace.
    PHP CS Fixing of tests directory.
    
    Added the tests directory to the fixing config and run the config.
    ddpb-40 create client also creates ODR if not existing
    syntax-fix code syntax fix
    accounts_mk2_migration split unit tests into two dirs with different boostrap
    dd-1130 teardown and fix test
    dd-1130 /contact test + flush method
    dd-1130 /report submit, update tests + name refactor
    dd-1130 /report unit test (missin ccontact and decisions
    dd-1130 /client unit tests
    dd-1130 refactor test using static client
    dd-1130 /account tests for all the endpoints + /user + various refactor
    dd-1130 unit test classes for controllers
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2610 Removed call to hard delete in test. Handled by fixtures
    DDPB-2610 reinstated hard delete for tests
    DDPB-2610 Removed unused tests added migration to remove delatedAt column
    unittest-fix move and replace api keys into test boostrap
    DDPB-2054 Synced entity method.Replaced documents calls with "deputyDocuments" fixed isIsReportPdf()
    coding-standards php-cs-fixer
    DDPB-839-ODR-NDR-rename fix more stuff
    DDPB-839-ODR-NDR-rename fix annotations
    DDPB-839-ODR-NDR-rename gs
    DDPB-1762 working version
    php-cs-fixer code format
    DDPB-1450 hard delete endpoint only accept soft-delete docs
    DDPB-1450 hard delete document endpoint for ADMIN
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-1522 document.isReportPdf
    DDPB-814 Added assertions to unit test, removed repository reference
    DDPB-814 Added unit test for endpoint
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer
    code format
    format code
    fix syntax
    syntax-fix code syntax fix
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2617: Create a test account for a lay deputy with a co deputy (#549)
    
    * Add support for a codeputy fixture user
    
    This new user has `coDeputyClientConfirmed` set, giving them access to invite codeputies to DigiDeps
    
    * Upgrade Symfony to v3.4.26
    
    * Add pair account for codeputies
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    dd-1433 remove twig, assetic, assets, underigter bundles, clean composer, related yml settings
    Removed old sass files no longer required
    Added Sass compiler to docker image to allow compilation of sass assets
    Added GDS Toolkit as a dependency used to build assets
    Refactored css for formatted report to use sass source and started to break it up into separate files to make it easier to manage.
    Set width of report to be same as A4 page for now to aid sizing, change later to be 960 and 595 for print only.
    Created good balance module for report and the summary for account activity.
    dd-1024 introduced self registration
    sendgrid working, see console command
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    coding style
    symfony3 fix cache and logs dirs
    symfony3 more fixes
    symfony3 clean up and update some libs
    coding-standards php-cs-fixer
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    code format
    format code
    dd-1433 remove twig, assetic, assets, underigter bundles, clean composer, related yml settings
    syntax-fix code syntax fix
    dd-1123-oauth removed all oauth stuff
    dd-1002 enable redis
    timezone set to Europe/London
    timezone set to Europe/London
    implemented oauth2server
    squashed all commits into one
    remove web toolbar, useless for api + optimize task
    dynamic input
    add FOSRest bundle to composer and appKernel
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    symfony3 more fixes and updates
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    coding-standards php-cs-fixer
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    coding-standards php-cs-fixer
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    format code
    dd-1260-symfony-upgrade update symfony 2.7->2.8
    Removed old sass files no longer required
    Added Sass compiler to docker image to allow compilation of sass assets
    Added GDS Toolkit as a dependency used to build assets
    Refactored css for formatted report to use sass source and started to break it up into separate files to make it easier to manage.
    Set width of report to be same as A4 page for now to aid sizing, change later to be 960 and 595 for print only.
    Created good balance module for report and the summary for account activity.
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    coding-standards php-cs-fixer
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    format code
    Removed old sass files no longer required
    Added Sass compiler to docker image to allow compilation of sass assets
    Added GDS Toolkit as a dependency used to build assets
    Refactored css for formatted report to use sass source and started to break it up into separate files to make it easier to manage.
    Set width of report to be same as A4 page for now to aid sizing, change later to be 960 and 595 for print only.
    Created good balance module for report and the summary for account activity.
    dd-1123-oauth removed all oauth stuff
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-1559 clean config
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    DDPB-1087 Add stof/doctrine extension bundle to composer and ORM config
    disable translator
    dd-1433 remove twig, assetic, assets, underigter bundles, clean composer, related yml settings
    logstash v1, no prefix
    line_formatter
    logstash args
    logstash format
    migrate log locations
    dd-1130 fix JMS extension using deprecated method
    fix twig setting for production
    Fix twig cache
    dd-1123-oauth removed all oauth stuff
    dd-1127 moved emails from frontend into API
    dd-1002 redis dns now a param /redis/dsn
    dd-1002 enable redis
    RestInputOuputFormatter: move to services.yml and add logger for exceptions, warn level
    REST plugin supports default json option
    implemented user query filters and add some unit tests
    spike on query filters
    maintain oauth2_client table during build
    oauth authentication implementation
    implemented oauth2server
    commented out sslmode
    squashed all commits into one
    add commented out yml options
    rest listener debug option
    fatal error handler returning JSON
    email endpoint, tested ok
    mailFactory using translation service as a body and subject of the email
    basic mailservice + mail factory, unit tested, command controller, utils, empty sendgrid service
    refactor
    dynamic input
    restController
    REstIOFormatter
    simple exception handling
    strip out twig, now using json /user /user/1
    endpoint /user returning hardcoded users using twig
    behat: composer, test controller, working feature, traits from alpha, debugger, phing task
    added repositories, User and Role classes to conform with symfony authentication/authorization
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    symfony3 fix and clean config
    disable cache services + enable metadata cache array
    disable query cache failing for debt management
    DDPB-1559 JMS file cache. buggy redis usage
    DDPB-1559 doctrine query and result cache - when used
    DDPB-1559 format YML
    DDPB-1559 JMS annotation redis cache
    DDPB-1559 doctrine redis metadata cache
    migrate log locations
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-1720 fix deprecatio notice
    dd-1123-oauth removed all oauth stuff
    implemented oauth2server
    squashed all commits into one
    REstIOFormatter
    strip out twig, now using json /user /user/1
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2637: Tidy up API config files (#562)
    
    * Simplify `test` API config
    
    Remove duplicate and irrelevant rules
    
    * Simplify `dev` API config
    
    Build from `config_prod` so we keep close to production configuration
    
    Remove router config, because it doesn't do anything; remove meaningless monolog setting; remove duplicate cache setting.
    DDPB-2661: replaces file based session storage in test env with redis (#557)
    DDPB-2556: Use common base docker images rather than prebuilt ones (#548)
    
    * Split docker-compose file from Docker repo
    
    * Add `log` to .gitignore
    
    * Copy environment variables into repo
    
    * Use local environment variables rather than external repo
    
    * Add composer container to docker-compose
    
    * Update generated files with new composer build
    
    We're using a newer version of composer, so the built files are slightly different
    
    * Add new nginx container for API
    
    Previously Nginx was installed on the PHP image, we've now separated them. Also implements a new 'digideps' network which allows frontend and API to communicate.
    
    * Use global base images rather than internal registry
    
    We now have access to the entire build chain for the API, rather than using an image from our internal blackbox registry.
    
    * Remove unused conf files
    
    * Output monolog to stderr rather than a file
    
    * Update setup instructions
    
    * Move cache/logs to `var` directory
    
    `var` isn't mounted in Docker, so all the I/O needed for cache and logs doesn't need to be synced by Docker. This leads to _extraordinary_ performance increases.
    
    * Add Redis client to API build
    
    * Remove old logs directory
    
    Logs are now stored in `var`, which is not mounted
    
    * Ensure correct directories exist on container
    
    * Add instructions for installing dependencies to README
    
    * Stop tracking cache and log files now in `var`
    
    * Reintroduce NGINX environment variables
    
    * Update script file locations and users
    
    Also ensure scripts are available in Docker
    
    * Make tests available to API container
    
    * Add postgresql-client to PHP container
    
    This allows it to run commands like `psql` and `psql_dump`
    
    * Output test logs to a file
    
    * Downgrade Postgres to 9.5.13
    
    Alpine client supports 9.5.13 client, so we need to match
    
    * Better parameterise NGINX config
    
    * Remove requirement for API_FIXTURES to be a dir
    
    Effectively means you can continue with just one env variable prefixed API_FIXTURES_ rather than needing a whole array of them
    
    * Remove unused environment variables
    
    * Directly reset database rather than using my_init.d
    
    * Increase memory limit for PHPUnit tests
    
    I tried to avoid doing this, because PHP memory leaks are normally an indication of something else going wrong. But in this case, it's actually matching the configuration currently in use.
    
    * More clearly define cache location
    
    * Remove deprecated links parameters
    
    Everything on the same network can talk to each other, specific links are no longer necessary.
    
    * Separate virtual host and general nginx config files
    
    * Move composer, NPM and nginx into PHP images
    
    * Remove unused web and composer docker config
    
    * Separate Composer into multi-stage build
    
    * Copy entire Dockerfile onto container
    
    * Update script directories and users
    
    * Update missing script user
    
    * Use `confd` to configure environment in scripts
    
    Used to use my_init.d, but that's removed now
    
    * Add default value for OPG_NGINX_INDEX
    
    As well as providing a bit of protection against misconfiguration, this allows hosts to run PHP scripts without needing the full NGINX context
    
    * Add unit tests to API image
    
    * Setup parameters.yml before running API unit tests
    
    * Generate optimised files from composer
    
    * Enable Opcache and pool variables
    
    * Push nginx logs to stdout/err
    
    * Tidy up docker-compose file
    
    * Remove `my_init.d` files
    
    We run scripts more explicitly now
    
    * Update setup instructions in README
    
    * Don't automatically load fixtures
    
    Otherwise we would end up trying to load them on production 🙊
    
    Also, create cache and log directories as part of build
    
    * Upgrade API PHP to 5.6
    
    Minor version upgrade to match frontend
    
    * Update opcache reference
    
    When I upgraded to PHP5.6, the directory containing the opcache extension moved. I've now updated it to point to the correct directory.
    
    * Remove unused docker-compose.yml file
    
    * Ensure PHP-FPM output included in logs
    
    * Install su-exec on API image
    
    This allows us to run commands as other users. It's essential, because otherwise things like `php app/console ...` are run as root, in which case all the directories are created with root permissions. This caused an issue with caches not being accessible by the application.
    
    * Run Symfony console commands as www-data
    
    This ensures that cache files and directories are created under the correct user
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB-2244-report-status fix warnings
    symfony3 fix and clean config
    symfony3 clean up and update some libs
    Added unit tests for checklist
    DDPB-1997-fix-roles add prof test user + fixes
    DDPB-1856 replace ROLE_PA
    DDPB-1734 Reinstated required fields to prevent errors
    DDPB-1734 Replaced roleIds with roleName, removed keys not required for admin,  attempt at getting template to pick them up
    DDPB-1734 Revised parameters fixtures, Added new keys to test config to prevent failing tests
    DDPB-1107-pa-clients-reports-link added PA test fixtures
    DDPB-957 add PA fixtures
    dd-1433 completely remove email settings, mailer and factory
    syntax-fix fix phpunit user creation
    dd-1399-property disable JMS serialiser cache on test env
    accounts_mk2 remove old account logic and tests
    dd-1103 unit test and logic fixes
    better transport mock for health check unit test
    dd-1130 more coverage and fixes, mainly on /user endpoint
    dd-1130 config for test
    add database unit test back on config_test
    commented out dd_api_unit_test from config_test.yml
    squashed all commits into one
    basic mailservice + mail factory, unit tested, command controller, utils, empty sendgrid service
    remove web toolbar, useless for api + optimize task
    vagrant remove + unit test using db
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2637: Tidy up API config files (#562)
    
    * Simplify `test` API config
    
    Remove duplicate and irrelevant rules
    
    * Simplify `dev` API config
    
    Build from `config_prod` so we keep close to production configuration
    
    Remove router config, because it doesn't do anything; remove meaningless monolog setting; remove duplicate cache setting.
    dd-1433 remove twig, assetic, assets, underigter bundles, clean composer, related yml settings
    dd-1369 disable JMS cache
    line_formatter
    migrate log locations
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1127 moved emails from frontend into API
    change development logger level to "warning|
    
    otherwise polluting the log and slowing down
    squashed all commits into one
    remove web toolbar, useless for api + optimize task
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status fix warnings
    symfony3 more fixes and updates
    symfony3 fix and clean config
    DDPB-2125-case-manager-role add ROLE_CASE_MANAGER
    DDPB-2025-admin-notifications fix endpoint
    DDPB-1984-fixed roles and added delete service fee endpoint
    fix YML role inheritance for PROF
    DDPB-1856 config hierarchy
    DDPB-1474 report submission cleanup logic
    DDPB-1450 hard delete document endpoint for ADMIN
    DDPB-1450 endpoint to return soft delete documents, only for admin + phpunit
    DDPB-1395 rename role
    DDPB-1395 new ROLE for downloading, currently included by ADMINs
    DDPB-1146: Creating Symfony role hierarchy for deputy
    DDPB-1014 move user agree into token-protected route to allow pre-login agreement
    DDPB-622 remove super user role, remove role class
    dd1210 feedback split into homepage and report + unit tests
    dd1210 /feedback endpoint doesn't require user login, only client secret
    dd-1103 unit test and logic fixes
    dd-1103 new version
    dd-1133 rewrite attempts checker with unit tests
    dd-1133 first unit-tested version of bruteforce blocker by email
    dd-1130 acl config YML disabled
    dd-1130 timeout set to 1 seconds after client timeout
    dd-1130 restrict firewall exceptions with methods
    dd-1130 expire token setting
    dd-1130 API return codes
    dd-1130 semplified providers: only redis one, and added method to override timeout
    dd-1130 remove security firewall for assets
    dd-1130 open selfregister controller and add secret check
    dd-1130 behat controller open + restclient refactor + password functionalities
    dd-1130 move authController logic into service
    dd-1130 1st version of redis storage for header token
    format file
    dd-1130 add auth provider and authenticator based on token
    dd-1130 1st version of working login with functional test asserting access and login
    dd-1123-oauth removed all oauth stuff
    add manage/elb for load balance checks
    fixes for user authentication
    implemented oauth2 server
    implemented oauth2server
    squashed all commits into one
    modification to security.yml
    endpoint /user returning hardcoded users using twig
    added repositories, User and Role classes to conform with symfony authentication/authorization
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-1856 replace ROLE_PA
    DDPB-839-ODR-NDR-rename parameters.dist fix
    DDPB-839 Restored
    DDPB-839 Global replace ODR -> NDR, renamed files/folders
    DDPB-1734 Replaced roleIds with roleName, removed keys not required for admin,  attempt at getting template to pick them up
    DDPB-1734 Revised parameters fixtures, Added new keys to test config to prevent failing tests
    DDPB-1734 - Added new user fixtures
    DDPB-1677 Added Migration script to align db with entities. Fixed fixtures for db reset
    DDPB-971 PA can access API with deputy permissions
    clean up params dist file
    Ad (#227)
    
    * ad add AD and super users roles + cleanup
    
    * ad refactor
    
    * ad open user endpoints to AD users
    
    * ad user recreate token allows AD
    
    * ad user.adManaged
    
    * ad2 user/count ad
    
    * ad ad can add users
    
    * ad fix role order
    
    * ad update AD role id
    
    * ad keep role Ids until next refactor
    
    * Fixed some merge issues from master into branch
    
    * Updated unit test URL
    dd-1433 cleanup param.dist
    dd-1433 completely remove email settings, mailer and factory
    confirmation-email-leads-client-page report confirmation email link goes to client homepage
    optimise change log level to warning
    sync yml.dist file
    fix build
    dd-1130 add param to disable behat controllers
    dd-1130 login now needs client secret, validated against user role
    domain change
    dd-1130 move user creation to aPI
    dd-1024 set the images in the email to come from the server settings.
    dd-1127 moved emails from frontend into API
    dd-1002 redis dns now a param /redis/dsn
    Remove param from dist file, shouldn't be there
    dd-826 smtp_default auth params
    dd-861 remove sendgrid, enable 2nd smtp
    env variables, update nginx conf for symfony
    optimise docker build and fix parameters.yml.dist
    fixes for user authentication
    fixed have no asset to add
    dd-375 add smtp transport, refactor emails, move mock logic at the controller level
    squashed all commits into one
    Update parameters.yml.dist
    remove quotes from dist file
    move sendgrid stuff into params yml
    mail mock simplification, enabled for behat- emails
    email endpoint, tested ok
    params file now uses local param
    params file now uses local param
    basic mailservice + mail factory, unit tested, command controller, utils, empty sendgrid service
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    Load fixture paramter on demand (#536)
    
    Removing auto-wiring means that you don't have to define the fixture parameter to start the application. Environments which define the parameter can load fixtures, but those which don't can't.
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    WIP refactor of Report update handling POC
    DDPB-2357: Updates /report-submission/casrec_data endpoint to reflect ReportSubmission summary
    DDPB-2318-report-submission-csv-optimise csv generation service api-based
    symfony3 more fixes and updates
    symfony3 fix repos
    symfony3 fix and clean config
    symfony3 clean up and update some libs
    DDPB-2058-cross-team refactor
    DDPB-1720 move casrec add bulk into service
    DDPB-1720 refactor into casrec service and controller +test
    DDPB-1680 refactor all casrec specific operations to casrec service
    DDPB-1680 Add CasRec verification service
    DDPB-797 Implemented timestampable and createdBy
    DDPB-1097 Configured User Entity to use new IsSoftDeleteableTrait. Added migration to alter User table
    DDPB-1097 Configured User Entity to use new IsSoftDeleteableTrait. Added migration to alter User table
    DDPB-1097 Added repositories for User and Team. Added User Service containing logic from populateUser method
    DDPB-1093 Fixed argument for report service
    DDPB-1093 Added entity manager to report service constructor. changed controller to use new service
    DDPB-1093 Defined new report service, moved createNextYear report logic into report service and changed report type to be extracted from casrec CSV upload. Moved Existing Report repository into dedicated folder
    DDPB-723 add report.moneyTransactionsShortExist fields with unit test
    format YML
    remove unused service and simplify stat service due to retire soon
    Ddpb 593 admin stats (#232)
    
    * Update Admin Stats
    * Addition of report due date and submission dates for deputies.
    * Updated service names in DI container to align with Symphony style
    guide.
    DDPB-563 moved stats into service
    dd-1433 remove twig, assetic, assets, underigter bundles, clean composer, related yml settings
    dd-1433 remove WkHtmlToPdfGenerator
    dd-1433 completely remove email settings, mailer and factory
    dd-1360-email-log log email info at mailSender level
    accounts_mk2 move pdf generation to service, now checked with manage/availability
    request-id-formatter logger formatter now adds X-Request-Id
    dd-1231 doctrine listener for report transaction + logic to save transactions
    dd-1163 fix config
    ad: config map to tell which domain to use for activation email based on role
    dd-1130 mail sender unit test
    remove old services
    dd-1130 add auth provider and authenticator based on token
    dd-1130 move provider
    dd-1024 introduced self registration
    dd-1123-oauth removed all oauth stuff
    dd-1127 add formatted report as email attachement on submit
    dd-1127 moved emails from frontend into API
    fixed bug with 2nd year account transaction totals
    RestInputOuputFormatter: move to services.yml and add logger for exceptions, warn level
    dd-826 smtp_default auth params
    dd-861 remove sendgrid, enable 2nd smtp
    implemented user query filters and add some unit tests
    oauth authentication implementation
    implemented oauth2server
    dd-375 add smtp transport, refactor emails, move mock logic at the controller level
    sendgrid support attachments taken from swift_mailer
    squashed all commits into one
    move sendgrid stuff into params yml
    mail mock simplification, enabled for behat- emails
    clean config
    email endpoint, tested ok
    conf clean
    sendgrid working, see console command
    mailFactory using translation service as a body and subject of the email
    basic mailservice + mail factory, unit tested, command controller, utils, empty sendgrid service
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 added update handler to inialise pa fees and expenses
    DDPB-2518 Moved update code into new Handler
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2355: Adds unit test for DeputyCostsEstimateReportUpdateHandler
    WIP refactor of Report update handling POC
    WIP refactor of Report update handling POC
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2612 added update handler to inialise pa fees and expenses
    DDPB-2518 Moved update code into new Handler
    DDPB-2375 Added EntityManager to persist foreign entities
    WIP refactor of Report update handling POC
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB 2463 Fixes API timeout on admin client details page (#514)
    
    
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    
    * DDPB-2463: refactors to account for /v2/client/id endpoint
    
    * DDPB-2463: Adds Client.archivedAt to DTO and improves method names
    
    * DDPB-2463: Fixes Behat
    
    * DDPB-2463: Adds DtoPropertySetterTrait
    DDPB-2463: Addresses timeout on user edit page (#507)
    
    * DDPB-2463: Migrates new code into v2 subfolder
    
    * DDPB-2463: Removes error response handling and sorts client order in query
    
    * DDPB-2463: Updates client order in results
    
    * DDPB-2463: Reverts older Repository classes to previous state
    
    * DDPB-2463: Adds unit tests for Assemblers
    
    * DDPB-2463: Adds unit tests for Repositories
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: Improved code readability
    
    * DDPB-2463: adds unit tests for dtos
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2699 Lay CSV refactor and fix for changing report types (#566)
    DDPB-2801 Move into api directory for monorepo (#572)
    Feature/DDPB-2457 - Add general management costs entity and migration (#505)
    
    * creates ProfDeputyManagementCost and migration
    
    * newline
    
    * drops ProfDeputyManagementCost, adds management cost amount to Report, alters migration to reflect new entity structure
    
    * DDPB-2457 Added rough persist code, to be checked and revised
    
    * updates property name for managementcosts to follow existing style, adds assertion to test, fixes date exceptions in tests
    
    * updates more tests to include assertions on managementCosts, resets managementCosts to null on change from assessed to fixed
    
    * adds JMS double type to managementCosts
    
    * drops comment from ReportUpdateHandlerInterface, uses NUMERIC(14, 2) for management_cost column, drops extra updateSectionsStatusCache from updateManagementCost
    
    * moves dataProvider for testUpdatesSingularFields to sit below the test
    
    * defines serialization name for managementCostAmount to ensure it matches client
    
    * renames migration to take into account merges into feature-105
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2262-client-named remove address from team
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links how changed section backend
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2352 renamed to include deputy in naming convention
    DDPB-2318-report-submission-csv-optimise fix indexes
    DDPB-2318-report-submission-csv-optimise add index on report_submission.created_on
    DDPB-2310-dashboard-performance move to trait + index
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2318-report-submission-csv-optimise fix indexes
    DDPB-2318-report-submission-csv-optimise add index on report_submission.created_on
    DDPB-2310-dashboard-performance move to trait + index
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    Revised table structure, variable names and added submission info
    Removed circular dependency constraint
    DDPB-2109 Working API. separated information into 1 : n
    DDPB-2121-working api
    DDPB-2072 Added Migration script and initiated api call, not finished
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links interim backend
    DDPB-2310-dashboard-performance missing indexes
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2343-cost-links prev cost entity
    DDPB-2343-cost-links how changed section backend
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2610 Added IF EXISTS
    DDPB-2610 Deleted already soft deleted documents prior to removing the field
    DDPB-2610 Removed unused tests added migration to remove delatedAt column
    DDPB-2468 Remove Agreed costs option from 105 (#509)
    
    Remove 'Agreed Costs' option from deputy charges
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    code-format code format
    merge-migrations merge migrations into 181
    typo
    typo
    DDPB-1852-money-cats-other-merge fix and cleanup
    DDPB-1852-money-cats-other-merge add other out cats merge
    DDPB-1852-money-cats-other-merge other insurance migrate
    DDPB-857-unsubmit-reports report.unsubmitDate
    DDPB-1856 replace ROLE_PA
    DDPB-1718 repeat migration to pad deputyNo, not worked on staging
    DDPB-1718-team-name rename migration
    DDPB-1669 fix yes/no transfer answer based on number of transfers
    DDPB-1839 Added ODR debt management field, revised migration revision
    DDPB-1839 Added new field to store debt management text, moved setter outside debts check
    DDPB-1798 move query
    DDPB-1798 NDR column + tests
    DDPB-1645 merge migrations
    DDPB-1645 report.mentalCapacity cascade delete
    DDPB-1645 client.reports cascade delete
    EPIC-co-deputies rename migration in readiness for pull from master
    DDPB-1474 report submission cleanup logic
    DDPB-1509 rename field
    DDPB-1509 Flags to track codeputy status
    DDPB-1053-joint-report-support add HW-PF constants and extend report.type
    DDPB-1560 rename migration
    DDPB-940-lifestyle-section details yes and no
    DDPB-940-lifestyle-section correct field type + move method
    DDPB-940 Revised migration script. Added controller for endpoints to update lifestyle entity
    DDPB-940 Added lifestyle to report - added migration script
    DDPB-1301-store-submitter report.submittedBy
    DDPB-622 remove role table. role class now static. id deprecated
    DDPB-949 casrec support for Corref
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2467: Add estimates question to checklist (#512)
    
    * Add `nextBillingEstimatesSatisfactory` field to checklist
    * Save `nextBillingEstimatesSatisfactory` when sent back to API
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2343-cost-links interim backend
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2468 Remove Agreed costs option from 105 (#509)
    
    Remove 'Agreed Costs' option from deputy charges
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance move to trait + index
    DDPB-2310-dashboard-performance report status cached built on the fly
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2320-fix-report-type fix data
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2367: Adds persist of fixed cost response to Report
    DDPB-2310-dashboard-performance missing indexes
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    Moved merged 204 migration into 205 to ensure it is run
    DDPB-2515: Removes casrec stats related fields from code and db (#528)
    DDPB-2412 Change PA checklist question (#519)
    
    * Add `deputyChargeAllowedByCourt` property to Checklist
    
    * Correctly handle incoming requests to set `deputyChargeAllowedByCourt`
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2376: Handles persist of More Information
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2332 removed unwanted doctrine diffs
    DDPC-2332 Amended field name and entities : removed "Financial"
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2518 removed 2 fields, replaced by single 'howcharged' field, consistent with estimates, revised code that used these fields
    DDPB-2343-cost-links how changed section backend
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    Moved merged 204 migration into 205 to ensure it is run
    DDPB-2375 Added estimate cost entity
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    merge-migrations merge migrations into 181
    DDPB-1559 merge migration
    DDPB-1569 update instructions
    merge-migrations merge migrations
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2294 rename migration file due to conflicts
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2310-dashboard-performance missing indexes
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2262-client-named client.nameDeputy migration and storing
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB-2224 Added migration and fields for Checklist questions
    SSPB-2355: WIP
    DDPB-2355 moved estimates properties into dedicated trait, added migration
    DDPB-2176 Add migration and new field to Checklist
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2136-client-archive-fix add client.archivedAt nullable and indexed
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2351: Adds persist of SCCO related responses to Report
    DDPB-2244-report-status refactor
    DDPB-2244-report-status account controller unit test
    DDPB-2109 Added last modified fields. Updated API calls to populate
    DDPB-2801 Move into api directory for monorepo (#572)
    Documentation update (#565)
    
    * Move PR template into docs folder
    
    * Move rollback procedure into docs folder
    
    * Update README
    
    * Add link to client repo for deployment instructions
    
    * Fix spelling
    Don't add `CREATE SCHEMA public` commands to down migrations (#551)
    
    * Stop trying to create schema in down migrations
    
    * Remove `CREATE SCHEMA public` from migrations
    
    The command doesn't work and is incorrectly added by DBAL: https://github.com/doctrine/dbal/issues/1110
    
    * Update syntax to match code style
    
    * Remove event listener services to separate file
    
    * Remove deprecated step from rollback procedure
    
    You don't need to remove `CREATE SCHEMA public` commands now because this PR does it for you
    
    * Update deleted directory
    
    Deleting `var/cache` itself causes a permissions mishap. Instead, delete the contents of that directory like every other script does.
    DDPB 2645 rollback procedure (#550)
    
    * DDPB-2645: Adds initial ROLLBACK-PROCEDURE.md
    DDPB-2786: Clone assets and bank accounts after resubmission (#570)
    
    * Split `clonePersistentResources` into separate function
    
    This function can now be called on existing reports too (as in the case described by the bug report)
    
    * Call `clonePersistentResources` when resubmitting a report
    
    When a report is unsubmitted and resubmitted, use `clonePersistentResources` to ensure that assets and accounts for next year's report are copied across too
    
    * Move flush to after entity manager changes have completed
    
    * Mock clonePersistentResources in submit and resubmit tests
    
    * Add test for clonePersistentResources
    
    * Revert 7f79b66e4
    
    The order of operations is more important than I realised
    
    * Small QOL change to the PR template
    
    * Check account/asset existence rather than blindly deleting
    
    * Add test to ensure duplicate resources aren't persisted
    
    * Only clone records across if next year's report was found
    
    * Add out-of-range test for resource cloning
    
    Ensure that if there is no report next year, or next year's report does not have expected dates, the ReportService won't try to clone resources
    DDPB-2801 Move into api directory for monorepo (#572)
    Add technical debt document (#569)
    
    * Add technical debt document
    
    * Add tech debt doc as documentation location
    Documentation update (#565)
    
    * Move PR template into docs folder
    
    * Move rollback procedure into docs folder
    
    * Update README
    
    * Add link to client repo for deployment instructions
    
    * Fix spelling
    Create pull request template (#547)
    
    * Create pull request template
    
    * Add more detailed sections
    
    * Fix spaces in PR template
    
    I've just discovered that in MacOS `Alt + [Space]` is different to `[Space]` and breaks Markdown.
    
    * Add instruction to check for NPM security issues
    
    * Update pull_request_template.md
    
    * Add command for checking Composer security issues
    
    * Simplify testing for Composer security issues
    
    Adding `composer.lock` allows the `security:check` command to parse our dependencies. And we aren't version-locking `sensiolabs/security-checker` so the rebuilding will give the latest version and definitions.
    
    * Remove concerns specific to frontend repo
    DDPB-2801 Move into api directory for monorepo (#572)
    Add technical debt document (#569)
    
    * Add technical debt document
    
    * Add tech debt doc as documentation location
    DDPB-2801 Move into api directory for monorepo (#572)
    added elb_healthcheck.html
    DDPB-2801 Move into api directory for monorepo (#572)
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    coding style
    symfony3 remove app_dev.php IP protection. useless fr API
    symfony3 more fixes
    symfony3 more fixes and updates
    symfony3 web files changes
    coding-standards php-cs-fixer
    use flag file for tmp prod mode
    squashed all commits into one
    API: never enable debug (otherwise rendering exception template)
    display errors
    restore app_dev.php
    fatal error handler returning JSON
    fix environment
    added repositories, User and Role classes to conform with symfony authentication/authorization
    change homepage to / and edit templates
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    coding style
    symfony3 web files changes
    coding-standards php-cs-fixer
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    DDPB-2524: Add more fixture users (#533)
    
    * Add DoctrineFixturesBundle
    
    * Add start of new fixtures
    
    * Expand fixtures
    
    * Only auto-create reports for Profs and PAs
    
    * Automatically assign team members to team clients
    
    * Add CasRec records so reports are identified correctly
    
    * Replace `digideps:fixtures` command with Doctrine Fixtures
    
    * Improve user email definition
    
    * Simplify environment variables to just require a password
    
    * Add password setting fixture
    
    Uses config parameter password to set passwords for all created accounts
    
    * Update `composer.lock`
    
    As we have added a new package via composer, we need to include the reflected changes in `composer.lock`. This includes a few minor version bumps for other packages, which is both unavoidable and preferable.
    
    Composer also updated the syntax of `web/config.php`, but the changes make it _more_ backwards compatible so I'm happy to keep them.
    
    * Remove old command line fixture creation
    
    * Replace fixture command for test bootstrap
    
    * Fix 'Case Manager1' account name
    
    * Replace env fixture users with account password
    
    * Add fixtures for unit test users
    
    * Scope fixtures to environment
    
    * Replace `array(..)` with `[..]`
    coding style
    symfony3 web files changes
    coding-standards php-cs-fixer
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    squashed all commits into one
    dig deps symfony project
    DDPB-2801 Move into api directory for monorepo (#572)
    gitignore update
    squashed all commits into one
    phing recreate target + vagrant private network
    fix environment
    dig deps symfony project
