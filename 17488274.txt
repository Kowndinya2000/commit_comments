    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Reinclude SearchableDictionary sample app as a demo of third party inclusion in Quick Search Box.
    
    This reverts commit 3e83e8bc8b969a993b026dab9d13b99b315d9af0.
    Remove SearchableDictionary sample app as it is a demo of third party inclusion in quick search box.
    
    update: remove entry from build.sdk
    Add a "Searchable Dictionary" app to the sample apps that demonstrates being a part of global search.
    
    updated: makefile adjusted so app is part of sdk, and the manifest refers to the correct sdk version.
    
    updated: brushed up docs and formatting per feedback.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 146478: am: CL 146372 Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146478
    AI 146372: Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      BUG=1596727
    
    Automated import of CL 146372
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    docs only.
    add a homepage for the searchable dictionary sample app.
    and make all urls relative
    docs only.
    Add new web pages for sample apps included in the SDK.
    Revise the existing sample app web pages.
    Delete screenshots for notepad and lunar lander (these have
    moved into frameworks/base/docs/html/guide/samples/image/.
    AI 144567: am: CL 144565 Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144567
    AI 144565: Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      BUG=1596727
    
    Automated import of CL 144565
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144567: am: CL 144565 Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144567
    AI 144565: Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      BUG=1596727
    
    Automated import of CL 144565
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 147301: am: CL 147296 Reuse the JetPlayer singleton instance in the initialization of JetBoy instead of destroying it.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147301
    AI 147296: Reuse the JetPlayer singleton instance in the initialization of JetBoy instead of destroying it.
      BUG=1804737
    
    Automated import of CL 147296
    AI 146645: am: CL 146643 Clean up and commenting of the JetBoy JET demo code:
      Fixed JetPlayer initialization code and pause when the app loses focus.
      Removed mute mask hack.
      Cleaned up event ID declaration and check (event value is a byte, not a String).
      Add extensive comments for the JetPlayer code.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146645
    AI 146643: Clean up and commenting of the JetBoy JET demo code:
      Fixed JetPlayer initialization code and pause when the app loses focus.
      Removed mute mask hack.
      Cleaned up event ID declaration and check (event value is a byte, not a String).
      Add extensive comments for the JetPlayer code.
      BUG=1596727
    
    Automated import of CL 146643
    AI 144567: am: CL 144565 Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144567
    AI 144565: Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      BUG=1596727
    
    Automated import of CL 144565
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 146645: am: CL 146643 Clean up and commenting of the JetBoy JET demo code:
      Fixed JetPlayer initialization code and pause when the app loses focus.
      Removed mute mask hack.
      Cleaned up event ID declaration and check (event value is a byte, not a String).
      Add extensive comments for the JetPlayer code.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146645
    AI 146643: Clean up and commenting of the JetBoy JET demo code:
      Fixed JetPlayer initialization code and pause when the app loses focus.
      Removed mute mask hack.
      Cleaned up event ID declaration and check (event value is a byte, not a String).
      Add extensive comments for the JetPlayer code.
      BUG=1596727
    
    Automated import of CL 146643
    AI 144567: am: CL 144565 Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144567
    AI 144565: Improve the JetBoy samples
      - use theme instead of window feature to remove titlebar
      - remove useless Layouts
      - Make custom view works in layout editor.
      - remove some warnings
      BUG=1596727
    
    Automated import of CL 144565
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    AI 144509: Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      BUG=1596727
    
    Automated import of CL 144509
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 146478: am: CL 146372 Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146478
    AI 146372: Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      BUG=1596727
    
    Automated import of CL 146372
    AI 146478: am: CL 146372 Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146478
    AI 146372: Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      BUG=1596727
    
    Automated import of CL 146372
    AI 146478: am: CL 146372 Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146478
    AI 146372: Add audio assets used for the generation of the JET data that is used in the JET SDK sample "JetBoy". This includes the JetCreator project and the Logic file for the music.
      BUG=1596727
    
    Automated import of CL 146372
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix misleading comment.
    
    ExpatParser defaults to UTF-8 if no encoding is specified.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    docs only.
    add a homepage for the searchable dictionary sample app.
    and make all urls relative
    docs only.
    Add new web pages for sample apps included in the SDK.
    Revise the existing sample app web pages.
    Delete screenshots for notepad and lunar lander (these have
    moved into frameworks/base/docs/html/guide/samples/image/.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix NPE in Home sample.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Fix NPE in Home sample.
    Fixes #1949253. Prevents NPE on startup.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 145778: Manual merge changes 145382-145384 from cupcake.
    
    Automated import of CL 145778
    AI 145382: API review: change new media keycode names to avoid ambiguity.
      Updates the key maps.  During this I noticed that the dream keymap didn't have all of the media buttons like the sapphire key map...!  So this is now changed to match.
      BUG=1779435
    
    Automated import of CL 145382
    auto import from //branches/cupcake/...@137873
    Default skin settings for MIPS arch added
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    First pass at a WVGA skin.
    Skins can now provide their own hardware support (via AVDs)
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    First pass at a WVGA skin.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Changes to HMP skin
    
    Added button icons borrowed from donut WVGA skin
    Added HMP-like 800x600 skin
    Added HMP-like 800x600 skin
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Added HMP-like 800x600 skin
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Changes to HMP skin
    
    Added button icons borrowed from donut WVGA skin
    Added HMP-like 800x600 skin
    Changes to HMP skin
    
    Added button icons borrowed from donut WVGA skin
    Added HMP-like 800x600 skin
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Changes to HMP skin
    
    Added button icons borrowed from donut WVGA skin
    Added HMP-like 800x600 skin
    Added HMP-like 800x600 skin
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Added HMP-like 800x600 skin
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Fixed QVGA skin and added WQVGA432 skin.
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    Skins can now provide their own hardware support (via AVDs)
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    Fixed QVGA skin and added WQVGA432 skin.
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    Skins can now provide their own hardware support (via AVDs)
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed QVGA skin and added WQVGA432 skin.
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    New HVGA skin.
    
    BUG: 1944280
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Skins can now provide their own hardware support (via AVDs)
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    New HVGA skin.
    
    BUG: 1944280
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    First pass at a WVGA skin.
    Skins can now provide their own hardware support (via AVDs)
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    Add new trace tool for displaying all the memory regions in a process.
    Add a new program for checking the correctness of the computed stack from a trace.
    
    The check_stack program checks that the generated stack that includes both
    native functions and Java methods (generated from the emulator instruction
    trace plus the method trace) is consistent with the stack of Java methods
    that is computed from the method trace alone. (The method trace is
    generated by the Dalvik interpreter).
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Made code more ISO C++ compatible
    
    That is:
    Defined string constants as static const char rather than static char
    Get rid of typecasting and modifications of constant string in DmTrace::parseAndAddFunction()
    
    Without this modifications sources will fail to compile with g++ 4.4 and above
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    Add support for native (JNI) calls to the trace tools.
    
    Also fix a bug in profile_pid.cpp and add better output to
    stack_dump.cpp.
    Add a new program for checking the correctness of the computed stack from a trace.
    
    The check_stack program checks that the generated stack that includes both
    native functions and Java methods (generated from the emulator instruction
    trace plus the method trace) is consistent with the stack of Java methods
    that is computed from the method trace alone. (The method trace is
    generated by the Dalvik interpreter).
    Add new trace tool for displaying all the memory regions in a process.
    Handle munmap() and add support for tracing JNI (native) calls.
    
    The munmap() kernel calls are traced but the tracing code wasn't doing
    anything with them.  This caused the number of mapped regions in a process
    to grow large in some cases and also caused symbol lookup errors in some
    rare cases.  This change also adds support for new trace record types
    for supporting JNI (native) calls from Java into native code. This helps
    with constructing a more accurate call stack.
    Fix the tracing code that keeps track of the Java method stack.
    
    This fixes a bug that was causing a "stack overflow" because it sometimes
    wasn't popping off a Java method when it should have.  I also changed the
    showStack() method so that instead of always printing to stderr, you can
    pass in a FILE* object to print to.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add support for native (JNI) calls to the trace tools.
    
    Also fix a bug in profile_pid.cpp and add better output to
    stack_dump.cpp.
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Better output for viewing the method trace.
    
    This now keeps track of the names of the methods on the stack instead
    of just the addresses.  This makes it easier to debug when something goes
    wrong.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Made code more ISO C++ compatible
    
    That is:
    Defined string constants as static const char rather than static char
    Get rid of typecasting and modifications of constant string in DmTrace::parseAndAddFunction()
    
    Without this modifications sources will fail to compile with g++ 4.4 and above
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add support for native (JNI) calls to the trace tools.
    
    Also fix a bug in profile_pid.cpp and add better output to
    stack_dump.cpp.
    Add a "-d time" option to stack_dump to dump the stack at the given time.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Handle munmap() and add support for tracing JNI (native) calls.
    
    The munmap() kernel calls are traced but the tracing code wasn't doing
    anything with them.  This caused the number of mapped regions in a process
    to grow large in some cases and also caused symbol lookup errors in some
    rare cases.  This change also adds support for new trace record types
    for supporting JNI (native) calls from Java into native code. This helps
    with constructing a more accurate call stack.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix compiler warnings by changing "char*" to "const char*".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Handle munmap() and add support for tracing JNI (native) calls.
    
    The munmap() kernel calls are traced but the tracing code wasn't doing
    anything with them.  This caused the number of mapped regions in a process
    to grow large in some cases and also caused symbol lookup errors in some
    rare cases.  This change also adds support for new trace record types
    for supporting JNI (native) calls from Java into native code. This helps
    with constructing a more accurate call stack.
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix a memory deallocation error that was crashing q2dm.
    
    Also fix a bunch of compile warnings by changing "char *" to "const char *".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add support for native (JNI) calls to the trace tools.
    
    Also fix a bug in profile_pid.cpp and add better output to
    stack_dump.cpp.
    Better output for viewing the method trace.
    
    This now keeps track of the names of the methods on the stack instead
    of just the addresses.  This makes it easier to debug when something goes
    wrong.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix compiler warnings by changing "char*" to "const char*".
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 149496: Backport emulator-related donut fixes into cupcake.
      This includes the following fixes:
      - remove potential qemud crash at system boot
      - fix GPS fix emulation
      - fix inter-emulator networking (DNS resolution helper now behaves correctly on all IPv6-capable systems)
      - add -prop <name>=<value> option to add system properties on boot
      - allow F5 keybinding for SEARCH on keyboard-less hardware configurations
      - allow skins to provide a "search" button
      - fixed bad QADD/QSUB/QDADD/QDSUB ARM CPU instructions emulation
    
    Automated import of CL 149496
    AI 143204: am: CL 142988 Remove emulator support from user builds.
      Saves us 52K in /system partition.
      BUG=1739507
      Original author: lockwood
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143204
    Automated import from //branches/cupcake/...@142988,142988
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 149496: Backport emulator-related donut fixes into cupcake.
      This includes the following fixes:
      - remove potential qemud crash at system boot
      - fix GPS fix emulation
      - fix inter-emulator networking (DNS resolution helper now behaves correctly on all IPv6-capable systems)
      - add -prop <name>=<value> option to add system properties on boot
      - allow F5 keybinding for SEARCH on keyboard-less hardware configurations
      - allow skins to provide a "search" button
      - fixed bad QADD/QSUB/QDADD/QDSUB ARM CPU instructions emulation
    
    Automated import of CL 149496
    This adds a new helper program (qemu-props) to support the emulated system.
    
    Its purpose is to contact the 'boot-properties' service during the
    boot process and to set the list of system properties read from the
    emulator program through it.
    
    It must be launched from /system/etc/init.goldfish.rc as root.
    
    It depends on the 'boot-properties' service being implemented by the
    emulator (in a later patch). If not available, it will simply timeout.
    
    This also fixes a potential crash in qemud which can happen in the following case:
    
    - client sends a command to a service
    - the service responds with one or more message
    - the service immediately closes the connection before the client can read the data
    
    what happened is that the FDHandler object was buffering out-going packets to the
    client, but the Multiplexer acted on the disconnection immediately. This resulted
    in:
    
    - client_free() being called
    -   fdhandler_shutdown() being called
    -     the FDHandler being placed on the 'closing' list to be able to send
          buffered packets later. And 'receiver_close' being called
    -       client_fd_close() being called, which would call client_free()
            recursively
    -         the second client_free() call would free the object
    -  the first client_free() call would try to free the object again
    -  ==> dlmalloc() detects a double-free and immediately aborts.
    
    the fixes simply avoids the calle to receiver_close() in fdhandler_shutdown()
    since this function is called from an explicit shutdown request from the multiplexer,
    it doesn't correspond to the case where the client has closed the connection itself.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 143204: am: CL 142988 Remove emulator support from user builds.
      Saves us 52K in /system partition.
      BUG=1739507
      Original author: lockwood
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143204
    Automated import from //branches/cupcake/...@142988,142988
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 149496: Backport emulator-related donut fixes into cupcake.
      This includes the following fixes:
      - remove potential qemud crash at system boot
      - fix GPS fix emulation
      - fix inter-emulator networking (DNS resolution helper now behaves correctly on all IPv6-capable systems)
      - add -prop <name>=<value> option to add system properties on boot
      - allow F5 keybinding for SEARCH on keyboard-less hardware configurations
      - allow skins to provide a "search" button
      - fixed bad QADD/QSUB/QDADD/QDSUB ARM CPU instructions emulation
    
    Automated import of CL 149496
    Fix bad qemud crash on emulator startup.
    This adds a new helper program (qemu-props) to support the emulated system.
    
    Its purpose is to contact the 'boot-properties' service during the
    boot process and to set the list of system properties read from the
    emulator program through it.
    
    It must be launched from /system/etc/init.goldfish.rc as root.
    
    It depends on the 'boot-properties' service being implemented by the
    emulator (in a later patch). If not available, it will simply timeout.
    
    This also fixes a potential crash in qemud which can happen in the following case:
    
    - client sends a command to a service
    - the service responds with one or more message
    - the service immediately closes the connection before the client can read the data
    
    what happened is that the FDHandler object was buffering out-going packets to the
    client, but the Multiplexer acted on the disconnection immediately. This resulted
    in:
    
    - client_free() being called
    -   fdhandler_shutdown() being called
    -     the FDHandler being placed on the 'closing' list to be able to send
          buffered packets later. And 'receiver_close' being called
    -       client_fd_close() being called, which would call client_free()
            recursively
    -         the second client_free() call would free the object
    -  the first client_free() call would try to free the object again
    -  ==> dlmalloc() detects a double-free and immediately aborts.
    
    the fixes simply avoids the calle to receiver_close() in fdhandler_shutdown()
    since this function is called from an explicit shutdown request from the multiplexer,
    it doesn't correspond to the case where the client has closed the connection itself.
    AI 146315: am: CL 146314 modify GSM emulation to accomodate 1.0 and 1.1 system images.
      without this, networking doesn't work well when using the 1.1 add-on with
      the cupcake sdk
      Original author: digit
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146315
    AI 146314: modify GSM emulation to accomodate 1.0 and 1.1 system images.
      without this, networking doesn't work well when using the 1.1 add-on with
      the cupcake sdk
      BUG=1787254
    
    Automated import of CL 146314
    AI 144595: Fix the AVD configuration code to support "sdcard.path" in config.ini to indicate an explicit SD Card image file (instead of using the one in the content directory)
      Note that this also fix a bug where the SD Card image was not properly locked in the previous implementation.
      Allow the http-proxy support code to actually manage to receive chunked encoding data, instead of complaining needlessly.
      Introduce a new CharBuffer object that is used indirectly by "-radio <hostdevice>" and "-gps <hostdevice>" options
      Add new documentation for QEMUD and CharDriverState objects
      Update the Audio documentation with ASCII graphics (because I'm an artist too)
      BUG=1750126,1731936
    
    Automated import of CL 144595
    AI 144596: am: CL 144595 Fix the AVD configuration code to support "sdcard.path" in config.ini to indicate an explicit SD Card image file (instead of using the one in the content directory)
      Note that this also fix a bug where the SD Card image was not properly locked in the previous implementation.
      Allow the http-proxy support code to actually manage to receive chunked encoding data, instead of complaining needlessly.
      Introduce a new CharBuffer object that is used indirectly by "-radio <hostdevice>" and "-gps <hostdevice>" options
      Add new documentation for QEMUD and CharDriverState objects
      Update the Audio documentation with ASCII graphics (because I'm an artist too)
      Original author: digit
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144596
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 143204: am: CL 142988 Remove emulator support from user builds.
      Saves us 52K in /system partition.
      BUG=1739507
      Original author: lockwood
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143204
    Automated import from //branches/cupcake/...@142988,142988
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Sensors: Use a native_handle for the data channel instead of a single file descriptor.
    
    This eliminates the requirement that all sensors share a single file descriptor.
    This, along with concurrent changes in other projects, fixes bugs b/1614524 and b/1614481
    
    Signed-off-by: Mike Lockwood <lockwood@android.com>
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add the Term terminal emulator to the default Eclipse project classpath.
    Update Eclipse classpath file to add the android.tts package (path to package + files generated from AIDL).
    IDE: Add ConfigBuildFlags to Eclipse's .classpath
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    fix the build. Gaaah
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Remove individual .gitignore files and move their content to a single top-level one
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add docs/SYSTEM-ISSUES.TXT to list important system issues that NDK developers should be aware of
    Add docs/HOWTO.TXT to list a few important tips for NDK users
    Also remove reference to docs/ROADMAP.TXT from README.TXT (doh)
    Add docs/STABLE-APIS.TXT which contains the list of exposed frozen APIs in the NDK.
    Also update README.TXT and docs/ANDROID-MK.TXT accordingly, to document the use of
    LOCAL_LDLIBS.
    Initial import of new NDK into donut tree
    Add host check for nawk/gawk in build/host-setup.sh
    
    Store the result as HOST_AWK in out/host/config.mk
    Add host check for nawk/gawk in build/host-setup.sh
    
    Store the result as HOST_AWK in out/host/config.mk
    Fix build/host-setup.sh to run as a Bourne shell script and add better host detection:
    - add --help, --verbose options
    - check for GNU Make availability and version by default, override with --no-make-check
    - better traces
    Fix build/host-setup.sh in various ways
    - run as bash script (since Debian's new 'dash' shell doesn't support it)
    - remove obsolete host GCC requirement
    - improve Windows support by using better heuristics for the executable suffix
    - better NDK root directory auto-detection (avoids the need to define ANDROID_NDK_ROOT on some installs)
    Force the use of 32-bit toolchain binaries on 64-bit systems.
    This is used to reduce the number of distributable prebuilt packages
    (i.e. linux-x86_64 is not needed anymore).
    
    Also fix build/tools/build-toolchain.sh to properly copy the GPL and LGPL
    license files into the generated prebuilt packages.
    
    Also add a .gitignore files to get less spew from 'git status'
    Fix the host setup script to work on mac
    Update the NDK docs to reflect the changes from 2 download (NDK+toolchain) to a single download.
    Fix host-setup.sh for cygwin: *-gcc.exe needs to be found
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Remove references to 'cupcake' in all of NDK (replace with 'android-1.5')
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Force the use of 32-bit toolchain binaries on 64-bit systems.
    This is used to reduce the number of distributable prebuilt packages
    (i.e. linux-x86_64 is not needed anymore).
    
    Also fix build/tools/build-toolchain.sh to properly copy the GPL and LGPL
    license files into the generated prebuilt packages.
    
    Also add a .gitignore files to get less spew from 'git status'
    Fix the build-toolchain.sh script which doesn't work due to the new download location of the NDK sources
    and a small typo when using wget. Also make --force-download actually work.
    Initial import of new NDK into donut tree
    Bump release version to android-1.6_r1
    Remove problematic case-insensitive duplicate files.
    Add missing copyright/license disclaimer to build/tools/make-release.sh
    Add a new tool: build/tools/find-case-duplicates.sh
    Bump release version number and speed up make-release.sh script
    Force the use of 32-bit toolchain binaries on 64-bit systems.
    This is used to reduce the number of distributable prebuilt packages
    (i.e. linux-x86_64 is not needed anymore).
    
    Also fix build/tools/build-toolchain.sh to properly copy the GPL and LGPL
    license files into the generated prebuilt packages.
    
    Also add a .gitignore files to get less spew from 'git status'
    Update the NDK packaging script to generate zip archives for all platforms.
    Remove hard-coded path to my home directory in build/tools/make-release.sh.
    Now you need to use the --prebuilt-path=<path> option to specify where to pick up
    the prebuilt toolchain tarballs instead, for example:
    
       build/tools/make-release.sh --prebuilt-path=/home/digit/android/ndk
    
    Add also some other options to change the package prefix / release number / etc
    Fix the NDK packaging script to use git ls-files instead of git-ls-files
    generate zip files on Windows and OS X when packaging NDK releases
    Make the release script work on OS X, and think about ensure the generated tarballs are readable by anyone
    Add a release packaging script
    Remove problematic case-insensitive duplicate files.
    Add missing copyright/license disclaimer to build/tools/make-release.sh
    Add a new tool: build/tools/find-case-duplicates.sh
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Force --no-undefined at link time to generate an error when trying to generate a shared library that references undefined symbols.
    This can be overriden by defining LOCAL_ALLOW_UNDEFINED_SYMBOLS in your Android.mk to 'true'
    Initial import of new NDK into donut tree
    Fix the build-toolchain.sh script which doesn't work due to the new download location of the NDK sources
    and a small typo when using wget. Also make --force-download actually work.
    Fix source download location
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add OpenGL ES headers to the android-4 platform/stable APIs.
    Add OpenGL ES headers to the android-4 platform/stable APIs.
    Add OpenGL ES headers to the android-4 platform/stable APIs.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add OpenGL ES headers to the android-4 platform/stable APIs.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add OpenGL ES headers to the android-4 platform/stable APIs.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Initial import of new NDK into donut tree
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Expose the Zlib headers (<zlib.h> and <zconf.h>) in the android-1.5 NDK sysroot.
    
    This is OK because the Zlib ABI is fixed and stable.
    
    Also get rid of the sample zlib sources since we don't need the static library anymore.
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Fix bad dependency between generated shared libraries and the corresponding installed module.
    Also fixes the "make clean" target by the way.
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Initial import of new NDK into donut tree
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Initial import of new NDK into donut tree
    Add support for LOCAL_ARM_MODE and .arm source file name suffix.
    Also update docs/INSTALL.TXT to explain that MSys is not supported under Windows.
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    This fixes the build to always define the ANDROID macro, and remove an empty -I from the compiler options.
    
    The latter had the effect of removing the benefit of optimization settings, i.e. a typical compiler
    command would look like:
    
       <toolchain-compiler> .... -Isources/<module-path> -I -O2 -g
    
    The "-I -O2" was interpreted literally as "search in '-O2' directory, and the optimization was
    never set to 2 (or 0 in case of debug mode).
    Force --no-undefined at link time to generate an error when trying to generate a shared library that references undefined symbols.
    This can be overriden by defining LOCAL_ALLOW_UNDEFINED_SYMBOLS in your Android.mk to 'true'
    Fix bad automatic dependency computations
    Initial import of new NDK into donut tree
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Ensure LOCAL_LDLIBS is cleared by the $(CLEAR_VARS) script
    Add support for LOCAL_C_INCLUDES in Android.mk, to better match the Android build system.
    Add support for LOCAL_ARM_MODE and .arm source file name suffix.
    Also update docs/INSTALL.TXT to explain that MSys is not supported under Windows.
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Force --no-undefined at link time to generate an error when trying to generate a shared library that references undefined symbols.
    This can be overriden by defining LOCAL_ALLOW_UNDEFINED_SYMBOLS in your Android.mk to 'true'
    Initial import of new NDK into donut tree
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Initial import of new NDK into donut tree
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Fix bad dependency between generated shared libraries and the corresponding installed module.
    Also fixes the "make clean" target by the way.
    Initial import of new NDK into donut tree
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Fix LOCAL_CFLAGS/CPPFLAGS handling to match full Android build system.
    
    Also improve BUILD_SYSTEM directory detection logic in build/core/main.mk
    Handle LOCAL_CPPFLAGS/CFLAGS/CXXFLAGS as claimed by the documentation.
    
    The previous code did only use LOCAL_CFLAGS for both C and C++ sources.
    Fix compilation of assembly files (e.g. foo.S), by removing a typo.
    Add support for LOCAL_C_INCLUDES in Android.mk, to better match the Android build system.
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    This fixes the build to always define the ANDROID macro, and remove an empty -I from the compiler options.
    
    The latter had the effect of removing the benefit of optimization settings, i.e. a typical compiler
    command would look like:
    
       <toolchain-compiler> .... -Isources/<module-path> -I -O2 -g
    
    The "-I -O2" was interpreted literally as "search in '-O2' directory, and the optimization was
    never set to 2 (or 0 in case of debug mode).
    Fix typo which prevented APP_CFLAGS, APP_CXXFLAGS and others to work properly in the NDK build system.
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Fix LOCAL_CFLAGS/CPPFLAGS handling to match full Android build system.
    
    Also improve BUILD_SYSTEM directory detection logic in build/core/main.mk
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Fix bad automatic dependency computations
    Fix bad dependency between generated shared libraries and the corresponding installed module.
    Also fixes the "make clean" target by the way.
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    Fix build/host-setup.sh in various ways
    - run as bash script (since Debian's new 'dash' shell doesn't support it)
    - remove obsolete host GCC requirement
    - improve Windows support by using better heuristics for the executable suffix
    - better NDK root directory auto-detection (avoids the need to define ANDROID_NDK_ROOT on some installs)
    Initial import of new NDK into donut tree
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Initial import of new NDK into donut tree
    Bump release version to android-1.6_r1
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Add android-4 sysroot and use project's default.properties to get the right target.
    
    Note that for now, android-4 contains the same things than android-3.
    Another patch will add OpenGL ES headers and libraries to it.
    Fix LOCAL_CFLAGS/CPPFLAGS handling to match full Android build system.
    
    Also improve BUILD_SYSTEM directory detection logic in build/core/main.mk
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Handle LOCAL_CPPFLAGS/CFLAGS/CXXFLAGS as claimed by the documentation.
    
    The previous code did only use LOCAL_CFLAGS for both C and C++ sources.
    Ensure LOCAL_LDLIBS is cleared by the $(CLEAR_VARS) script
    Fix compilation of assembly files (e.g. foo.S), by removing a typo.
    Add support for LOCAL_C_INCLUDES in Android.mk, to better match the Android build system.
    Add support for LOCAL_ARM_MODE and .arm source file name suffix.
    Also update docs/INSTALL.TXT to explain that MSys is not supported under Windows.
    Fix several typos in the NDK build system that caused quite a few bugs:
    
    - generate thumb code by default (type forced ARM generation)
    
    - make the generation of unoptimized binaries with APP_OPTIM := debug actually work
      (the -O0 -g flags were placed before the -Os -mthumb flags for thumb binaries)
    
    - factor common code from build-executable/shared-library/static-library into build-binary.mk
      and install-binary.mk
    
    - properly add a -L$(SYSROOT)/usr/lib line to make LOCAL_LDLIBS := -lz work as advertized
      (in build-binary.mk)
    
    - add a few missing variables from clear-vars.mk
    Fix build/host-setup.sh to run as a Bourne shell script and add better host detection:
    - add --help, --verbose options
    - check for GNU Make availability and version by default, override with --no-make-check
    - better traces
    Fix build/host-setup.sh in various ways
    - run as bash script (since Debian's new 'dash' shell doesn't support it)
    - remove obsolete host GCC requirement
    - improve Windows support by using better heuristics for the executable suffix
    - better NDK root directory auto-detection (avoids the need to define ANDROID_NDK_ROOT on some installs)
    Fix ChangeLog, since we're rebuilding 1.5_r1, no need to list previous changes.
    Expose <android/log.h> which contains the declaration of /system/lib/liblog.so.
    This allows native application code to send logs to the kernel. Alas !
    
    NOTE: This *is* valid for Cupcake
    Force the use of 32-bit toolchain binaries on 64-bit systems.
    This is used to reduce the number of distributable prebuilt packages
    (i.e. linux-x86_64 is not needed anymore).
    
    Also fix build/tools/build-toolchain.sh to properly copy the GPL and LGPL
    license files into the generated prebuilt packages.
    
    Also add a .gitignore files to get less spew from 'git status'
    Add simple change log to the NDK documentation.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Fix LOCAL_CFLAGS/CPPFLAGS handling to match full Android build system.
    
    Also improve BUILD_SYSTEM directory detection logic in build/core/main.mk
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Add support for LOCAL_C_INCLUDES in Android.mk, to better match the Android build system.
    Add support for LOCAL_ARM_MODE and .arm source file name suffix.
    Also update docs/INSTALL.TXT to explain that MSys is not supported under Windows.
    Add docs/STABLE-APIS.TXT which contains the list of exposed frozen APIs in the NDK.
    Also update README.TXT and docs/ANDROID-MK.TXT accordingly, to document the use of
    LOCAL_LDLIBS.
    Force --no-undefined at link time to generate an error when trying to generate a shared library that references undefined symbols.
    This can be overriden by defining LOCAL_ALLOW_UNDEFINED_SYMBOLS in your Android.mk to 'true'
    remove documentation for unsupported variable (LOCAL_STATIC_WHOLE_LIBRARIES)
    Remove references to 'cupcake' in all of NDK (replace with 'android-1.5')
    Initial import of new NDK into donut tree
    Add docs/LICENSES.TXT which indicates where to find the toolchain sources, as well as the GPL/LGPL text files.
    
    Note: the prebuilt binary packages used by "make-release.sh" have
    been updated to include the COPYING and COPYING.LIB files.
    
    After this patch is commited, you should be able to run "make-release.sh"
    to re-generate release packages that contain docs/LICENSES.TXT as well as COPYING and COPYING.LIB
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add support for LOCAL_C_INCLUDES in Android.mk, to better match the Android build system.
    Add docs/HOWTO.TXT to list a few important tips for NDK users
    Also remove reference to docs/ROADMAP.TXT from README.TXT (doh)
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    More Clean up in the NDK Overview doc
    Remove unwanted comments in the NDK Overview doc.
    Fix minor typos in the NDK docs.
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Fix LOCAL_CFLAGS/CPPFLAGS handling to match full Android build system.
    
    Also improve BUILD_SYSTEM directory detection logic in build/core/main.mk
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add support for LOCAL_ARM_MODE and .arm source file name suffix.
    Also update docs/INSTALL.TXT to explain that MSys is not supported under Windows.
    Update the NDK docs to reflect the changes from 2 download (NDK+toolchain) to a single download.
    Initial import of new NDK into donut tree
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Add OpenGL ES headers to the android-4 platform/stable APIs.
    Rename ndk/build/platforms/android-1.5 into android-3 to match API levels
    Add docs/STABLE-APIS.TXT which contains the list of exposed frozen APIs in the NDK.
    Also update README.TXT and docs/ANDROID-MK.TXT accordingly, to document the use of
    LOCAL_LDLIBS.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add docs/SYSTEM-ISSUES.TXT to list important system issues that NDK developers should be aware of
    Add a bunch of documentation for the Android C library and the JNI interface to the NDK
    Add a bunch of documentation for the Android C library and the JNI interface to the NDK
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    AI 145097: am: CL 144935 ApiDemos contains new API, and we must force the target to cupcake.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145097
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    AI 145097: am: CL 144935 ApiDemos contains new API, and we must force the target to cupcake.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145097
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Initial import of new NDK into donut tree
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add a "unit-tests" sample application to perform unit testing.
    Initial import of new NDK into donut tree
    Initial import of new NDK into donut tree
    AI 145097: am: CL 144935 ApiDemos contains new API, and we must force the target to cupcake.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145097
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Initial import of new NDK into donut tree
    AI 145097: am: CL 144935 ApiDemos contains new API, and we must force the target to cupcake.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145097
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Initial import of new NDK into donut tree
    AI 143204: am: CL 142988 Remove emulator support from user builds.
      Saves us 52K in /system partition.
      BUG=1739507
      Original author: lockwood
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143204
    Automated import from //branches/cupcake/...@142988,142988
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Initial import of new NDK into donut tree
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Initial import of new NDK into donut tree
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Initial import of new NDK into donut tree
    AI 145097: am: CL 144935 ApiDemos contains new API, and we must force the target to cupcake.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145097
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Change the NDK samples package names to be lower case. Also added minSdkVersion=3 in the manifests.
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Initial import of new NDK into donut tree
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    Look for Android.mk in $(APP_PROJECT_PATH)/jni by default.
    
    This gets rid of the 'sources' directory and allows all sources
    of a given Android application to be in the same directory tree
    without using a symlink trick.
    
    Note that apps/<name>/Application.mk is still required though.
    A later release of the NDK will get rid of it too, but the change
    is too drastic for the upcoming release.
    
    The change moves various source files from sources into their
    app/<name>/project/jni directory as well.
    
    The whole documentation is updated to reflect the change.
    Add sample "san-angeles" program to demo OpenGL ES from native code.
    
    Note that the app will only build against an android-4 SDK.
    (Interestingly, the resulting binary runs very well under android-3).
    
    This also adds missing license headers to the 'two-libs' sample.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 146808: am: CL 146806 Make sure we check buffer length when removing escaped chars (like unicode) when parsing Value XML files.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146808
    AI 146806: Make sure we check buffer length when removing escaped chars (like unicode) when parsing Value XML files.
      BUG=1797920
    
    Automated import of CL 146806
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Make traceview compile with the new API from SdkStats.
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Modify archquery to be able to print any system property.
    
    (this is change 4207 that was abandoned due to a merge conflict.)
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fixed a bug in XML parser handler where some words were being split in two. Fixes #1812655.
    
    Properly concatenate characters to create a full word before adding the word to the tree.
    AI 143659: am: CL 143472 Reduce dictionary size.
      Changed the tree structure to have variable length nodes to save an average of 21% on the dictionary size.
      Created a shortened English dictionary for Dream - 50K words.
      Added a shortened Spanish dictionary for Dream - 32K words.
      Original author: yamasani
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143659
    AI 143472: Reduce dictionary size.
      Changed the tree structure to have variable length nodes to save an average of 21% on the dictionary size.
      Created a shortened English dictionary for Dream - 50K words.
      Added a shortened Spanish dictionary for Dream - 32K words.
      BUG=1743626
    
    Automated import of CL 143472
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Update the API of ApkBuilder to make it clearer what is stable and what isn't.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Update the API of ApkBuilder to make it clearer what is stable and what isn't.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    yuv420sp2rgb: a tool to convert from YUV 4:2:0 semiplanar to various RGB formats
    
    Signed-off-by: Iliyan Malchev <malchev@google.com>
    yuv420sp2rgb: a tool to convert from YUV 4:2:0 semiplanar to various RGB formats
    
    Signed-off-by: Iliyan Malchev <malchev@google.com>
    yuv420sp2rgb: a tool to convert from YUV 4:2:0 semiplanar to various RGB formats
    
    Signed-off-by: Iliyan Malchev <malchev@google.com>
    yuv420sp2rgb: a tool to convert from YUV 4:2:0 semiplanar to various RGB formats
    
    Signed-off-by: Iliyan Malchev <malchev@google.com>
    yuv420sp2rgb: a tool to convert from YUV 4:2:0 semiplanar to various RGB formats
    
    Signed-off-by: Iliyan Malchev <malchev@google.com>
    yuv420sp2rgb: a tool to convert from YUV 4:2:0 semiplanar to various RGB formats
    
    Signed-off-by: Iliyan Malchev <malchev@google.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Make traceview compile with the new API from SdkStats.
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add support for add-on based on preview of platforms.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    Display the AVD manager wizard during launches where no compatible AVDs exist.
    AI 143269: am: CL 143143 Update ADT changes.txt with JUnit features, and properly restrict ADT package access.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143269
    AI 143143: Update ADT changes.txt with JUnit features, and properly restrict ADT package access.
      BUG=1743054
    
    Automated import of CL 143143
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Extract String IDs from Layout XML strings.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add Apache Commons Compress to ADT (required by sdklib)
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 145487: am: CL 145204 ADT #1761137: collect_sources_for_sdk.sh fails on the Mac
      It's really time to let the hackish bash/sed version go away,
      especially since it's really really slow, and provide a
      better python version instead.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145487
    AI 145204: ADT #1761137: collect_sources_for_sdk.sh fails on the Mac
      It's really time to let the hackish bash/sed version go away,
      especially since it's really really slow, and provide a
      better python version instead.
      BUG=1761137
    
    Automated import of CL 145204
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change ADT/DDMS plug-ins version to 0.9.3
    Move ADT/DDMS plug-ins to 0.9.2
    Move ADT to 0.9.1
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change ADT/DDMS plug-ins version to 0.9.3
    Move ADT/DDMS plug-ins to 0.9.2
    Move ADT to 0.9.1
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change ADT/DDMS plug-ins version to 0.9.3
    Move ADT/DDMS plug-ins to 0.9.2
    Move ADT to 0.9.1
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change ADT/DDMS plug-ins version to 0.9.3
    Minor fix to the plug-ins license.
    Move ADT/DDMS plug-ins to 0.9.2
    Move ADT to 0.9.1
    AI 146248: am: CL 146233 Update Eclipse feature licenses to mention embedded jar files licences.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146248
    AI 146233: Update Eclipse feature licenses to mention embedded jar files licences.
      BUG=1789489
    
    Automated import of CL 146233
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Initial Contribution
    Change ADT/DDMS plug-ins version to 0.9.3
    Minor fix to the plug-ins license.
    Move ADT/DDMS plug-ins to 0.9.2
    Update ADT feature dependency.
    Move ADT to 0.9.1
    AI 146248: am: CL 146233 Update Eclipse feature licenses to mention embedded jar files licences.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146248
    AI 146233: Update Eclipse feature licenses to mention embedded jar files licences.
      BUG=1789489
    
    Automated import of CL 146233
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add Apache Commons Compress to ADT (required by sdklib)
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Update ADT tests README
    
    BUG 2051310
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add a functional test that renders all the layouts of ApiDemos
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add a functional test that renders all the layouts of ApiDemos
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Initial Contribution
    Add a functional test that renders all the layouts of ApiDemos
    Change ADT/DDMS plug-ins version to 0.9.3
    Move ADT/DDMS plug-ins to 0.9.2
    Move ADT to 0.9.1
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Fix ADT junit test for AndroidManifestParser following API change.
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    Automated import from //branches/donutburger/...@141413,141413
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake/...@137873
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add internal support for screen size/ratio, and version qualifiers.
    
    UI will come later.
    BUG: 2048256, 2048264
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Automated import from //branches/donutburger/...@141413,141413
    auto import from //branches/cupcake_rel/...@141571
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Automated import from //branches/donutburger/...@141413,141413
    auto import from //branches/cupcake_rel/...@141571
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    Add a functional test that renders all the layouts of ApiDemos
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Automated import from //branches/donutburger/...@141413,141413
    auto import from //branches/cupcake_rel/...@141571
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add a functional test that renders all the layouts of ApiDemos
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add a functional test that renders all the layouts of ApiDemos
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change ADT/DDMS plug-ins version to 0.9.3
    Move ADT/DDMS plug-ins to 0.9.2
    Move ADT to 0.9.1
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Enforce adbhost restart if ADBHOST is changed
    Added ADBHOST variable to ADT plugin
    
    Now value of ADBHOST variable is stored in preferences and loaded when adb server is abot to be started
    One can change value of ADBHOST using Android preferences pane
    
    Conflicts:
    
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/AdtPlugin.java
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/preferences/AndroidPreferencePage.java
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 2050564 : Rename ADT 'Android AVD Manager' to 'Android SDK and AVD Manager'
    ADT: Extract String IDs from Layout XML strings.
    Update some class names in plugin.xml that were not updated by the refactoring.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    AI 147402: Fix plugin.xml to match refactoring of the new file wizard.
    
    Automated import of CL 147402
    AI 145099: am: CL 144940 ADT #1722971: Fix refactoring menu contribution for Eclipse 3.3/3.4 on Linux/Mac.
      The fix is that a menu contribution should redefine the menu that it is
      contributing too. In this case it seems the JDT is not yet loaded or at
      least hasn't defined the menu that we're contributing too, so we need to
      define it. This definition is extracted from the jdt.ui/plugin.xml from
      3.4 in order to define the same group names in the same order.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145099
    AI 144940: ADT #1722971: Fix refactoring menu contribution for Eclipse 3.3/3.4 on Linux/Mac.
      The fix is that a menu contribution should redefine the menu that it is
      contributing too. In this case it seems the JDT is not yet loaded or at
      least hasn't defined the menu that we're contributing too, so we need to
      define it. This definition is extracted from the jdt.ui/plugin.xml from
      3.4 in order to define the same group names in the same order.
      BUG=1722971
    
    Automated import of CL 144940
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    AI 143672: am: CL 143499 Fix the icon for the JUnit launch shortcut
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143672
    AI 143499: Fix the icon for the JUnit launch shortcut
      BUG=866690
    
    Automated import of CL 143499
    Automated import from //branches/donutburger/...@142276,142276
    Automated import from //branches/donutburger/...@141809,141809
    Automated import from //branches/donutburger/...@141482,141482
    Automated import from //branches/cupcake/...@142191,142191
    Automated import from //branches/cupcake/...@141808,141808
    Automated import from //branches/donutburger/...@140465,140465
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132569
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add Apache Commons Compress to ADT (required by sdklib)
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Initial Contribution
    Make sure that the android pref folder is always present when queried.
    
    BUG: 2053511
    Add Apache Commons Compress to ADT (required by sdklib)
    Fix the opt-in window for usage stat so that it works when running from ADT.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Classes from com.android.ide.eclipse.adt can now be accessed by other plugins
    ActivityLaunchAction can now execute activity in native debugged mode
    Change ADT/DDMS plug-ins version to 0.9.3
    Add Apache Commons Compress to ADT (required by sdklib)
    Move ADT/DDMS plug-ins to 0.9.2
    Add support for add-on based on preview of platforms.
    Remove the obsolete AVD wizard.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    Export all ADT packages.
    ADT: remove an obsolete import from the manifest.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    ADT: Remove StreamHelper and integrate it in AdtPlugin.
    
    StreamHelper was used before by AdtPlugin, DdmsPlugin and EditorsPlugin. It's now
    only used by AdtPlugin, so the only 2 methods in it can go in AdtPlugin.
    I merged the externalized string in the messages.properties file used by AdtPlugin.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Move ADT to 0.9.1
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    AI 143269: am: CL 143143 Update ADT changes.txt with JUnit features, and properly restrict ADT package access.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143269
    AI 143143: Update ADT changes.txt with JUnit features, and properly restrict ADT package access.
      BUG=1743054
    
    Automated import of CL 143143
    Automated import from //branches/donutburger/...@141482,141482
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Added /opt/mentor prefix to SDK search path
    ADT Export wizard now calls ZipAlign
    Modified checks for adb and emulator tools
    
    Now if adb is absent checkSdkLocation fails,
    but will only print a warning message if emulator is absent
    Disabled check for emulator tool
    
    Make it possible to use ADT with SDK's that does not have emulator ready for the arch
    Added ADBHOST variable to ADT plugin
    
    Now value of ADBHOST variable is stored in preferences and loaded when adb server is abot to be started
    One can change value of ADBHOST using Android preferences pane
    
    Conflicts:
    
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/AdtPlugin.java
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/preferences/AndroidPreferencePage.java
    Valid SDK are now searched in all EA Android SDK subdirs
    
    During AdtPlugin initalization, /opt/embeddedalley/android/sdk is scanned for subdir and first subdir that passes checkOSandVersionId are declared a default SDK path.
    If there are no SDKs found in this directory, it falls back to search in /opt/embeddedalley/droid and than for Google's SDK in ones homedir
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    ADT: make sure to log exceptions that might happen when
    loading the SDK.
    Remove duplicate initialization in AdtPlugin.
    
    The is a remnant of the old #start() method of the Editors Plugin class.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    ADT: Remove StreamHelper and integrate it in AdtPlugin.
    
    StreamHelper was used before by AdtPlugin, DdmsPlugin and EditorsPlugin. It's now
    only used by AdtPlugin, so the only 2 methods in it can go in AdtPlugin.
    I merged the externalized string in the messages.properties file used by AdtPlugin.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    Fix the opt-in window for usage stat so that it works when running from ADT.
    AI 146597: am: CL 146595 ADT #1794560: prevent from loading more than one SDK at once.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146597
    AI 146595: ADT #1794560: prevent from loading more than one SDK at once.
      BUG=1794560
    
    Automated import of CL 146595
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    Automated import from //branches/donutburger/...@141508,141508
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT Export wizard now calls ZipAlign
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143270: am: CL 143149 Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143270
    AI 143156: am: CL 142851 ADT GLE fix #1731389: widgets dropped in <merge> lack their default layout_widht/height.
      Issue: <merge> did not have layout attributes. When new widgets are
      dropped in a layout, GLE only adds layout width/height if the parent
      supports them.
      Fix: Make <merge> have layout attributes from FrameLayout. The ideal
      choice would have been ViewGroup, but since ViewGroup is abstract we
      don't have any ViewDescriptor for it. FrameLayout should provide a
      sensible replacement.
      Note: this requires CL 142780 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143156
    AI 143149: Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      BUG=1743022
    
    Automated import of CL 143149
    Automated import from //branches/cupcake/...@142851,142851
    Automated import from //branches/donutburger/...@140466,140466
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Remove StreamHelper and integrate it in AdtPlugin.
    
    StreamHelper was used before by AdtPlugin, DdmsPlugin and EditorsPlugin. It's now
    only used by AdtPlugin, so the only 2 methods in it can go in AdtPlugin.
    I merged the externalized string in the messages.properties file used by AdtPlugin.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Remove StreamHelper and integrate it in AdtPlugin.
    
    StreamHelper was used before by AdtPlugin, DdmsPlugin and EditorsPlugin. It's now
    only used by AdtPlugin, so the only 2 methods in it can go in AdtPlugin.
    I merged the externalized string in the messages.properties file used by AdtPlugin.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 146736: am: CL 146674 "Target" nomenclature fixes
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146736
    AI 146674: "Target" nomenclature fixes
      BUG=1795612
    
    Automated import of CL 146674
    AI 146634: am: CL 146631 ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146634
    AI 146631: ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      BUG=1793333
    
    Automated import of CL 146631
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    ADT Export wizard now calls ZipAlign
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for add-on based on preview of platforms.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Make CompiledResourcesMonitor#getRClassName more error proof.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Fix a bunch of issues related to packaging the content of libs (NPE with files with no extension, not ignoring ignorable folders). Also fixed an issue when parsing Manifest with <uses-sdk />
    AI 146847: am: CL 146845 Fix detecting "home" activities when parsing the Android Manifest
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146847
    AI 146845: Fix detecting "home" activities when parsing the Android Manifest
      BUG=1798186
    
    Automated import of CL 146845
    AI 144382: am: CL 144366 Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144382
    AI 144366: Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      BUG=1736754
    
    Automated import of CL 144366
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    Automated import from //branches/donutburger/...@142707,142707
    Automated import from //branches/cupcake/...@142584,142584
    Automated import from //branches/donutburger/...@141413,141413
    Automated import from //branches/donutburger/...@140466,140466
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Fix a bunch of issues related to packaging the content of libs (NPE with files with no extension, not ignoring ignorable folders). Also fixed an issue when parsing Manifest with <uses-sdk />
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 143408: am: CL 143407 Prevent reinstalling APKs during launch if they have not been recompiled since the previous launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143408
    AI 143407: Prevent reinstalling APKs during launch if they have not been recompiled since the previous launch.
      BUG=1743026
    
    Automated import of CL 143407
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    Automated import from //branches/donutburger/...@141516,141516
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 145098: am: CL 144938 Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145098
    AI 145096: am: CL 144921 Fix add-on javadoc display in Eclipse (bug #1775744)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145096
    AI 144938: Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      BUG=1775936
    
    Automated import of CL 144938
    AI 144921: Fix add-on javadoc display in Eclipse (bug #1775744)
      BUG=1775744
    
    Automated import of CL 144921
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@136654
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT Export wizard now calls ZipAlign
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@136654
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    AI 143273: am: CL 143259 ADT #1743364: Refactor all wizard classes & their actions together.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143273
    AI 143259: ADT #1743364: Refactor all wizard classes & their actions together.
      BUG=1743364
    
    Automated import of CL 143259
    AI 143157: am: CL 142852 ADT fix #1682502: New XML File Wizard root combo is sometimes empty.
      Two issues in fact:
      1- On some selections the resource type is determined before the
      root values are computed.
      2- Added an sdk target change listener to refresh the project's roots
      if the SDK was still loading or if the project changed targets.
      The New Project Wizard has been updated with a similar sdk change
      listener to refresh the target selector. This is useful when the NPW
      is used before the targets have finished loading, e.g. upon lauching
      Eclipse.
      Note: this requires CL 142690 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143157
    Automated import from //branches/cupcake/...@142852,142852
    Automated import from //branches/donutburger/...@142709,142709
    Automated import from //branches/cupcake/...@142586,142586
    Automated import from //branches/donutburger/...@142276,142276
    Automated import from //branches/cupcake/...@142191,142191
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143273: am: CL 143259 ADT #1743364: Refactor all wizard classes & their actions together.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143273
    AI 143259: ADT #1743364: Refactor all wizard classes & their actions together.
      BUG=1743364
    
    Automated import of CL 143259
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    Plug the Android SDK window as the AVD manager.
    
    - the "manager" button on the AVD selector (when not in manager
      will open the Android SDK window
    
    - the AVD manager in the eclipse toolsbar open the Android SDK
      window as well.
    
    Still left to do:
    - remove the now obsolete AVD wizard
    - figure out what to do with the other pages.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    AI 143273: am: CL 143259 ADT #1743364: Refactor all wizard classes & their actions together.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143273
    AI 143259: ADT #1743364: Refactor all wizard classes & their actions together.
      BUG=1743364
    
    Automated import of CL 143259
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    ADT 1603194: Android Package browser for Instrumentation nodes.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    AI 143273: am: CL 143259 ADT #1743364: Refactor all wizard classes & their actions together.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143273
    AI 143259: ADT #1743364: Refactor all wizard classes & their actions together.
      BUG=1743364
    
    Automated import of CL 143259
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    AI 143273: am: CL 143259 ADT #1743364: Refactor all wizard classes & their actions together.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143273
    AI 143259: ADT #1743364: Refactor all wizard classes & their actions together.
      BUG=1743364
    
    Automated import of CL 143259
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Recreate gen folder after project is created
    
    Moved creation of gen sources folder from PreCompilerBuilder.clean() to NewProjectWizard.createEclipseProject()
    Fix an NPE in the New Project Wizard when no test project is specified
    on the second NPW page.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    ADT 1603194: Android Package browser for Instrumentation nodes.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Update ADT to use the refactored sdklib from previous patch.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    AI 146784: am: CL 146783 Update New project wizard with the less confusing "Build Target" label.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146784
    AI 146783: Update New project wizard with the less confusing "Build Target" label.
      BUG=1795612
    
    Automated import of CL 146783
    AI 146634: am: CL 146631 ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146634
    AI 146631: ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      BUG=1793333
    
    Automated import of CL 146631
    AI 146035: am: CL 146034 ADT #1786173: NPW should not overwritte user-customized path
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146035
    AI 146034: ADT #1786173: NPW should not overwritte user-customized path
      BUG=1786173
    
    Automated import of CL 146034
    AI 144382: am: CL 144366 Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144382
    AI 144366: Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      BUG=1736754
    
    Automated import of CL 144366
    AI 143157: am: CL 142852 ADT fix #1682502: New XML File Wizard root combo is sometimes empty.
      Two issues in fact:
      1- On some selections the resource type is determined before the
      root values are computed.
      2- Added an sdk target change listener to refresh the project's roots
      if the SDK was still loading or if the project changed targets.
      The New Project Wizard has been updated with a similar sdk change
      listener to refresh the target selector. This is useful when the NPW
      is used before the targets have finished loading, e.g. upon lauching
      Eclipse.
      Note: this requires CL 142690 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143157
    Automated import from //branches/cupcake/...@142852,142852
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Automated import from //branches/donutburger/...@142274,142274
    Automated import from //branches/cupcake/...@142190,142190
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add internal support for screen size/ratio, and version qualifiers.
    
    UI will come later.
    BUG: 2048256, 2048264
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Extract String IDs from Layout XML strings.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for the new qualifier in the config selector.
    Add internal support for screen size/ratio, and version qualifiers.
    
    UI will come later.
    BUG: 2048256, 2048264
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for the new qualifier in the config selector.
    Add internal support for screen size/ratio, and version qualifiers.
    
    UI will come later.
    BUG: 2048256, 2048264
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for the new qualifier in the config selector.
    Add internal support for screen size/ratio, and version qualifiers.
    
    UI will come later.
    BUG: 2048256, 2048264
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make CompiledResourcesMonitor#getRClassName more error proof.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add a functional test that renders all the layouts of ApiDemos
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1825491: Provide default choices for <uses-library>
    
    We currently hardcode a list in the PlatformTarget and propagate
    it to the UI via the AndroidTargetParser. This way we can later
    decide to actually get the info from some kind of manifest.
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143156: am: CL 142851 ADT GLE fix #1731389: widgets dropped in <merge> lack their default layout_widht/height.
      Issue: <merge> did not have layout attributes. When new widgets are
      dropped in a layout, GLE only adds layout width/height if the parent
      supports them.
      Fix: Make <merge> have layout attributes from FrameLayout. The ideal
      choice would have been ViewGroup, but since ViewGroup is abstract we
      don't have any ViewDescriptor for it. FrameLayout should provide a
      sensible replacement.
      Note: this requires CL 142780 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143156
    Automated import from //branches/cupcake/...@142851,142851
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1825491: Provide default choices for <uses-library>
    
    We currently hardcode a list in the PlatformTarget and propagate
    it to the UI via the AndroidTargetParser. This way we can later
    decide to actually get the info from some kind of manifest.
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Use the same lock for Sdk class than the one used for loading the SDK.
    
    This will prevent deadlocks when launching Eclipse.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Update ADT to use the refactored sdklib from previous patch.
    AI 143883: am: CL 143881 AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143883
    AI 143881: AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      BUG=1703143
    
    Automated import of CL 143881
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    ActivityLaunchAction can now execute activity in native debugged mode
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1823896: AVD Manager button in the AVD Selector.
    
    Device chooser: avd manager callback + avd list refresh.
    Device chooser: dialog title.
    Device launcher tab: avd manager callaback + avd list refresh.
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ActivityLaunchAction can now execute activity in native debugged mode
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    ActivityLaunchAction can now execute activity in native debugged mode
    continueLaunch() now executed synchronously
    
    There is no point in running continueLaunch in new thread, because it's already executed from context of DebugUI thread
    This helps to keep progress monitor sane
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    Make ADT use new sdklib API
    
    This fixes the build.
    Move package installation logic from ADT to ddmlib.
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    Make IDevice#getSyncService() throws an IOException.
    
    This lets callers differentiate between errors when connecting to adb and
    errors because adb couldn't talk to the device.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Update ADT to use the refactored sdklib from previous patch.
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    Display the AVD manager wizard during launches where no compatible AVDs exist.
    AI 146739: am: CL 146689 Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146739
    AI 146689: Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      BUG=1791664
    
    Automated import of CL 146689
    AI 144382: am: CL 144366 Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144382
    AI 144366: Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      BUG=1736754
    
    Automated import of CL 144366
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    AI 143408: am: CL 143407 Prevent reinstalling APKs during launch if they have not been recompiled since the previous launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143408
    AI 143407: Prevent reinstalling APKs during launch if they have not been recompiled since the previous launch.
      BUG=1743026
    
    Automated import of CL 143407
    AI 143199: am: CL 142978 ADT #1738393: fix typo in launch controller.
      Also fixed some javadoc warnings.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143199
    Automated import from //branches/cupcake/...@142978,142978
    Automated import from //branches/donutburger/...@141516,141516
    Automated import from //branches/donutburger/...@140697,140697
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143199: am: CL 142978 ADT #1738393: fix typo in launch controller.
      Also fixed some javadoc warnings.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143199
    Automated import from //branches/cupcake/...@142978,142978
    Automated import from //branches/donutburger/...@140697,140697
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@138607
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 146847: am: CL 146845 Fix detecting "home" activities when parsing the Android Manifest
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146847
    AI 146845: Fix detecting "home" activities when parsing the Android Manifest
      BUG=1798186
    
    Automated import of CL 146845
    AI 144382: am: CL 144366 Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144382
    AI 144366: Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      BUG=1736754
    
    Automated import of CL 144366
    Automated import from //branches/donutburger/...@141508,141508
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    Make ADT use new sdklib API
    
    This fixes the build.
    First step of a more standalone AvdSelector.
    
    - New/Delete/Info/Refresh/Manager buttons.
    - Ability to set any kind of AVD filter
    - Self-refresh: Selector knows the AvdManager and can refresh itself.
    - Manager mode or simple (selection or checkboxes)
    - Manager mode displays broken AVDs.
    
    Updated the SdkUpdate AVD page and the various use of the Selector in ADT.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Update ADT to use the refactored sdklib from previous patch.
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    ADT #1823896: AVD Manager button in the AVD Selector.
    
    Device chooser: avd manager callback + avd list refresh.
    Device chooser: dialog title.
    Device launcher tab: avd manager callaback + avd list refresh.
    AI 146739: am: CL 146689 Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146739
    AI 146689: Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      BUG=1791664
    
    Automated import of CL 146689
    AI 144254: am: CL 144252 Reload AVDs when displaying the run/debug launch dialog (bug #1683892)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144254
    AI 144252: Reload AVDs when displaying the run/debug launch dialog (bug #1683892)
      BUG=1683892
    
    Automated import of CL 144252
    Automated import from //branches/donutburger/...@140722,140722
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ActivityLaunchAction can now execute activity in native debugged mode
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 144382: am: CL 144366 Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144382
    AI 144366: Activity Launcher filters out unlauncheable activity (bug #1736754)
      Activities that do not have an action, or that are set to not be exported cannot be launched from 'am start...' so they should not be considered when finding an activity to launch.
      BUG=1736754
    
    Automated import of CL 144366
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    Automated import from //branches/donutburger/...@141516,141516
    Automated import from //branches/donutburger/...@140697,140697
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix the DeviceChooserDialog table issues.
    
    On Linux, the gtk table seems to resize itself automatically when the
    layout is computed and forces the last column to resize itself at +18 pixels.
    This has a problematic impact on this dialog as it is not resizable and is
    made to match the size of the content. As the dialog is used time after time
    the last column grows by 18 pixels at every use up to a point where it
    doesn't fit the screen.
    Since storing the columns size is not that useful and I couldn't find a
    way to ignore this first resize, I'm just removing the width storage.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    First step of a more standalone AvdSelector.
    
    - New/Delete/Info/Refresh/Manager buttons.
    - Ability to set any kind of AVD filter
    - Self-refresh: Selector knows the AvdManager and can refresh itself.
    - Manager mode or simple (selection or checkboxes)
    - Manager mode displays broken AVDs.
    
    Updated the SdkUpdate AVD page and the various use of the Selector in ADT.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Update ADT to use the refactored sdklib from previous patch.
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    ADT #1823896: AVD Manager button in the AVD Selector.
    
    Device chooser: avd manager callback + avd list refresh.
    Device chooser: dialog title.
    Device launcher tab: avd manager callaback + avd list refresh.
    AI 146739: am: CL 146689 Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146739
    AI 146689: Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      BUG=1791664
    
    Automated import of CL 146689
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    ActivityLaunchAction can now execute activity in native debugged mode
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    Automated import from //branches/donutburger/...@141781,141781
    Automated import from //branches/cupcake/...@141778,141778
    Automated import from //branches/donutburger/...@140466,140466
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    Automated import from //branches/donutburger/...@141781,141781
    Automated import from //branches/cupcake/...@141778,141778
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Automated import from //branches/donutburger/...@141781,141781
    Automated import from //branches/cupcake/...@141778,141778
    Automated import from //branches/donutburger/...@140466,140466
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    Automated import from //branches/donutburger/...@141781,141781
    Automated import from //branches/cupcake/...@141778,141778
    Automated import from //branches/donutburger/...@140466,140466
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 144322: am: CL 144320 ADT: Fix debugger launch connection when debugging Android JUnit
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144322
    AI 144320: ADT: Fix debugger launch connection when debugging Android JUnit
      BUG=1753089
    
    Automated import of CL 144320
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    AI 143199: am: CL 142978 ADT #1738393: fix typo in launch controller.
      Also fixed some javadoc warnings.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143199
    Automated import from //branches/cupcake/...@142978,142978
    Automated import from //branches/donutburger/...@141463,141463
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake_rel/...@140373
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    Automated import from //branches/donutburger/...@141463,141463
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    Recreate gen folder after project is created
    
    Moved creation of gen sources folder from PreCompilerBuilder.clean() to NewProjectWizard.createEclipseProject()
    gen folder is not removed during clean stage of precompiled builder
    Codename in minsdkversion for release platform shows 'null' in error string
    Also display error on empty minSdkVersion for preview targets.
    
    BUG: 2050928
    ADT: fix PreCompilerBuilder to use minSdkVersion as a string, not an int.
    Add support for add-on based on preview of platforms.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Fix a bunch of issues related to packaging the content of libs (NPE with files with no extension, not ignoring ignorable folders). Also fixed an issue when parsing Manifest with <uses-sdk />
    AI 146352: am: CL 146351 Fix aidl 2 issues: aidl file change for parcelable didnt trigger a recompilation. Folder creation failed if parent folder didn't exist.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146352
    AI 146351: Fix aidl 2 issues: aidl file change for parcelable didnt trigger a recompilation. Folder creation failed if parent folder didn't exist.
      BUG=1789903
    
    Automated import of CL 146351
    AI 146247: am: CL 146229 Fix aidl error parsing (BUG #1789273)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146247
    AI 146229: Fix aidl error parsing (BUG #1789273)
      BUG=1789273
    
    Automated import of CL 146229
    AI 145520: am: CL 145229 Make the mismatch API level/minSdkVersion a warning instead of an error.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145520
    AI 145229: Make the mismatch API level/minSdkVersion a warning instead of an error.
      BUG=1779278
    
    Automated import of CL 145229
    Automated import from //branches/donutburger/...@141508,141508
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 146352: am: CL 146351 Fix aidl 2 issues: aidl file change for parcelable didnt trigger a recompilation. Folder creation failed if parent folder didn't exist.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146352
    AI 146351: Fix aidl 2 issues: aidl file change for parcelable didnt trigger a recompilation. Folder creation failed if parent folder didn't exist.
      BUG=1789903
    
    Automated import of CL 146351
    auto import from //branches/cupcake_rel/...@140373
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Fix a double issue regarding interrupted builds due to pre-existing errors.
    
    First, the ApkBuilder didn't cancel its run if the project had markers from JDT.
    Second, the try/catch on ApkBuilder#build didn't properly test the
    CoreException status severity (used getCode instead of getSeverity), so it did
    not detect cancels being thrown by #abortOnBadSetup and displayed the error
    in the console instead.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Fix a double issue regarding interrupted builds due to pre-existing errors.
    
    First, the ApkBuilder didn't cancel its run if the project had markers from JDT.
    Second, the try/catch on ApkBuilder#build didn't properly test the
    CoreException status severity (used getCode instead of getSeverity), so it did
    not detect cancels being thrown by #abortOnBadSetup and displayed the error
    in the console instead.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Make sure that any exception during the final packaging properly put an error marker on the project (since build failed.
    Fix a bunch of issues related to packaging the content of libs (NPE with files with no extension, not ignoring ignorable folders). Also fixed an issue when parsing Manifest with <uses-sdk />
    AI 143408: am: CL 143407 Prevent reinstalling APKs during launch if they have not been recompiled since the previous launch.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143408
    AI 143407: Prevent reinstalling APKs during launch if they have not been recompiled since the previous launch.
      BUG=1743026
    
    Automated import of CL 143407
    Automated import from //branches/donutburger/...@141557,141557
    Automated import from //branches/donutburger/...@141508,141508
    Automated import from //branches/cupcake/...@141556,141556
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Automated import from //branches/donutburger/...@141508,141508
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake/...@137873
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for the new qualifier in the config selector.
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 144489: am: CL 144487 ADT: Add "New String" refactoring to the other Resource Chooser.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144489
    AI 144487: ADT: Add "New String" refactoring to the other Resource Chooser.
      BUG=1722971
    
    Automated import of CL 144487
    AI 144049: am: CL 144048 ADT #1743364: Uncomment the system resource chooser code.
      Rationale: we want to keep that code around, so we need to compile
      it to make sure it doesn't use obsoleted APIs. That does it.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144049
    AI 144048: ADT #1743364: Uncomment the system resource chooser code.
      Rationale: we want to keep that code around, so we need to compile
      it to make sure it doesn't use obsoleted APIs. That does it.
      BUG=1743364
    
    Automated import of CL 144048
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 144486: ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      BUG=1722971
    
    Automated import of CL 144486
    AI 144488: am: CL 144486 ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144488
    AI 144284: am: CL 144283 ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144284
    AI 144283: ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      BUG=1722971
    
    Automated import of CL 144283
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix wrong path to externalized string file.
    
    This is from the big refactoring that moved everything into internal.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Added "Restart ADB" button to Android preferences page..
    Added ADBHOST variable to ADT plugin
    
    Now value of ADBHOST variable is stored in preferences and loaded when adb server is abot to be started
    One can change value of ADBHOST using Android preferences pane
    
    Conflicts:
    
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/AdtPlugin.java
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/preferences/AndroidPreferencePage.java
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 146634: am: CL 146631 ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146634
    AI 146631: ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      BUG=1793333
    
    Automated import of CL 146631
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    ADT: Extract String IDs from Layout XML strings.
    ADT #1877529: Fixes a couple potential NPEs in content assists.
    
    Can't reproduce the NPE in ContentAssist listed in the
    bug. However if things go really wrong there are a couple
    objects that can be null so let's be defensive about them.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Extract String IDs from Layout XML strings.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 144489: am: CL 144487 ADT: Add "New String" refactoring to the other Resource Chooser.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144489
    AI 144487: ADT: Add "New String" refactoring to the other Resource Chooser.
      BUG=1722971
    
    Automated import of CL 144487
    AI 144284: am: CL 144283 ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144284
    AI 144283: ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      BUG=1722971
    
    Automated import of CL 144283
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Automated import from //branches/donutburger/...@142707,142707
    Automated import from //branches/cupcake/...@142584,142584
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Refactored AndroidXPathFactory into sdklib.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Refactored AndroidXPathFactory into sdklib.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT 1603194: Android Package browser for Instrumentation nodes.
    AI 145402: am: CL 145004 ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145402
    AI 145004: ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      BUG=1761064
    
    Automated import of CL 145004
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT 1603194: Android Package browser for Instrumentation nodes.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    AI 146336: am: CL 146335 ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146336
    AI 146335: ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      BUG=1603194
    
    Automated import of CL 146335
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 146249: am: CL 146237 ADT #1789339: Manifest editor now displays all extra sub-elements.
      Bug description is to add support for <uses-configuration>.
      Currently the Manifest editor already supports <uses-sdk> (which is an
      element node, not an attribute) by exposing it as a manifest attribute.
      That doesn't scale. So instead just provide a tree for all <manifest>
      child elements that are not handled in other pages. Currently that
      contains uses-sdk and uses-configuration but the nice part of it is that
      it will pick up automatically any new manfiest sub elements in the future.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146249
    AI 146237: ADT #1789339: Manifest editor now displays all extra sub-elements.
      Bug description is to add support for <uses-configuration>.
      Currently the Manifest editor already supports <uses-sdk> (which is an
      element node, not an attribute) by exposing it as a manifest attribute.
      That doesn't scale. So instead just provide a tree for all <manifest>
      child elements that are not handled in other pages. Currently that
      contains uses-sdk and uses-configuration but the nice part of it is that
      it will pick up automatically any new manfiest sub elements in the future.
      BUG=1789339
    
    Automated import of CL 146237
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 146249: am: CL 146237 ADT #1789339: Manifest editor now displays all extra sub-elements.
      Bug description is to add support for <uses-configuration>.
      Currently the Manifest editor already supports <uses-sdk> (which is an
      element node, not an attribute) by exposing it as a manifest attribute.
      That doesn't scale. So instead just provide a tree for all <manifest>
      child elements that are not handled in other pages. Currently that
      contains uses-sdk and uses-configuration but the nice part of it is that
      it will pick up automatically any new manfiest sub elements in the future.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146249
    AI 146237: ADT #1789339: Manifest editor now displays all extra sub-elements.
      Bug description is to add support for <uses-configuration>.
      Currently the Manifest editor already supports <uses-sdk> (which is an
      element node, not an attribute) by exposing it as a manifest attribute.
      That doesn't scale. So instead just provide a tree for all <manifest>
      child elements that are not handled in other pages. Currently that
      contains uses-sdk and uses-configuration but the nice part of it is that
      it will pick up automatically any new manfiest sub elements in the future.
      BUG=1789339
    
    Automated import of CL 146237
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT 1603194: Android Package browser for Instrumentation nodes.
    AI 146336: am: CL 146335 ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146336
    AI 146335: ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      BUG=1603194
    
    Automated import of CL 146335
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT 1603194: Android Package browser for Instrumentation nodes.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 146336: am: CL 146335 ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146336
    AI 146335: ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      BUG=1603194
    
    Automated import of CL 146335
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 146336: am: CL 146335 ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146336
    AI 146335: ADT: Rework the Manifest class browser.
      For ADT #1603194, it is desirable to select the Instrumentation
      Runner class from the android.jar. The class browser was filtering
      it out. The class browser has been changed like this:
      - include all source & jar package roots
      - a checkbox let the user toggle between searching only sources
      (of the project) or anything in the classpath (thus include jars.)
      The default is to include everything for the instrumentation and only
      the source for other browsers.
      Also improved a bit the filter by not iterating over the hierarchy
      and filtering out abstract classes (which was not needed before.)
      BUG=1603194
    
    Automated import of CL 146335
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    Automated import from //branches/donutburger/...@142274,142274
    Automated import from //branches/cupcake/...@142190,142190
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Extract String IDs from Layout XML strings.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Force the id of TabWidget to be android:id/tabs
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //branches/cupcake_rel/...@138607
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    Automated import from //branches/donutburger/...@140696,140696
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@131421
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 143156: am: CL 142851 ADT GLE fix #1731389: widgets dropped in <merge> lack their default layout_widht/height.
      Issue: <merge> did not have layout attributes. When new widgets are
      dropped in a layout, GLE only adds layout width/height if the parent
      supports them.
      Fix: Make <merge> have layout attributes from FrameLayout. The ideal
      choice would have been ViewGroup, but since ViewGroup is abstract we
      don't have any ViewDescriptor for it. FrameLayout should provide a
      sensible replacement.
      Note: this requires CL 142780 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143156
    Automated import from //branches/cupcake/...@142851,142851
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143156: am: CL 142851 ADT GLE fix #1731389: widgets dropped in <merge> lack their default layout_widht/height.
      Issue: <merge> did not have layout attributes. When new widgets are
      dropped in a layout, GLE only adds layout width/height if the parent
      supports them.
      Fix: Make <merge> have layout attributes from FrameLayout. The ideal
      choice would have been ViewGroup, but since ViewGroup is abstract we
      don't have any ViewDescriptor for it. FrameLayout should provide a
      sensible replacement.
      Note: this requires CL 142780 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143156
    Automated import from //branches/cupcake/...@142851,142851
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 143156: am: CL 142851 ADT GLE fix #1731389: widgets dropped in <merge> lack their default layout_widht/height.
      Issue: <merge> did not have layout attributes. When new widgets are
      dropped in a layout, GLE only adds layout width/height if the parent
      supports them.
      Fix: Make <merge> have layout attributes from FrameLayout. The ideal
      choice would have been ViewGroup, but since ViewGroup is abstract we
      don't have any ViewDescriptor for it. FrameLayout should provide a
      sensible replacement.
      Note: this requires CL 142780 to compile.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143156
    Automated import from //branches/cupcake/...@142851,142851
    Automated import from //branches/donutburger/...@142274,142274
    Automated import from //branches/cupcake/...@142190,142190
    auto import from //branches/cupcake_rel/...@138607
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    AI 146250: am: CL 146238 ADT #1761064: Properly refresh UiTreeBlock when SDK is reloaded.
      The fix I did last week was just refreshing the UiRootNode
      but it turns out we need to refresh the DescriptorFilters too
      (since they are null when there's no SDK.) So the old fix was
      wrong, what we need is to generate a new tree model when the
      SDK is reloaded.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146250
    AI 146238: ADT #1761064: Properly refresh UiTreeBlock when SDK is reloaded.
      The fix I did last week was just refreshing the UiRootNode
      but it turns out we need to refresh the DescriptorFilters too
      (since they are null when there's no SDK.) So the old fix was
      wrong, what we need is to generate a new tree model when the
      SDK is reloaded.
      BUG=1761064
    
    Automated import of CL 146238
    AI 145402: am: CL 145004 ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145402
    AI 145004: ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      BUG=1761064
    
    Automated import of CL 145004
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 147264: am: CL 147262 ADT #1761055: Pre-select node types when adding node in manifest & resource based on context
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147264
    AI 147262: ADT #1761055: Pre-select node types when adding node in manifest & resource based on context
      BUG=1761055
    
    Automated import of CL 147262
    AI 145402: am: CL 145004 ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145402
    AI 145004: ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      BUG=1761064
    
    Automated import of CL 145004
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    AI 146250: am: CL 146238 ADT #1761064: Properly refresh UiTreeBlock when SDK is reloaded.
      The fix I did last week was just refreshing the UiRootNode
      but it turns out we need to refresh the DescriptorFilters too
      (since they are null when there's no SDK.) So the old fix was
      wrong, what we need is to generate a new tree model when the
      SDK is reloaded.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146250
    AI 146238: ADT #1761064: Properly refresh UiTreeBlock when SDK is reloaded.
      The fix I did last week was just refreshing the UiRootNode
      but it turns out we need to refresh the DescriptorFilters too
      (since they are null when there's no SDK.) So the old fix was
      wrong, what we need is to generate a new tree model when the
      SDK is reloaded.
      BUG=1761064
    
    Automated import of CL 146238
    AI 145402: am: CL 145004 ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145402
    AI 145004: ADT #1761064: Properly refresh manifest activity list on framework reload.
      Issue: when the SDK gets (re)loaded, the uiRootNode changes
      in the UiTreeBlock. However the TreeViewer is using a
      content provider which root node was not updated. The fix is
      to make the content provider dynamically ask for the root
      node to the tree block. Instead of depending on the class
      directly, a new interface is passed for this.
      BUG=1761064
    
    Automated import of CL 145004
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Refactored AndroidXPathFactory into sdklib.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 144284: am: CL 144283 ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144284
    AI 144283: ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      BUG=1722971
    
    Automated import of CL 144283
    Automated import from //branches/donutburger/...@142276,142276
    Automated import from //branches/donutburger/...@141482,141482
    Automated import from //branches/cupcake/...@142191,142191
    auto import from //branches/cupcake_rel/...@141571
    Refactored AndroidXPathFactory into sdklib.
    ADT XML extract string ID: generate Context.getResources() calls
    depending on the Java context of the replacement.
    
    In the input page also display the string ID values.
    ADT XML extract string IDs: display existing IDs of the
    selected file.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    AI 144486: ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      BUG=1722971
    
    Automated import of CL 144486
    AI 144488: am: CL 144486 ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144488
    AI 144284: am: CL 144283 ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144284
    AI 144283: ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      BUG=1722971
    
    Automated import of CL 144283
    ADT: Extract String IDs from Layout XML strings.
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    Automated import from //branches/donutburger/...@142276,142276
    Automated import from //branches/donutburger/...@141823,141823
    Automated import from //branches/donutburger/...@141482,141482
    Automated import from //branches/cupcake/...@142191,142191
    Automated import from //branches/cupcake/...@141822,141822
    auto import from //branches/cupcake_rel/...@141571
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Automated import from //branches/donutburger/...@141482,141482
    auto import from //branches/cupcake_rel/...@141571
    Fix broken XML generated during "Extract string"
    
    BUG: 2066455
    ADT Extract String ID: use Context.getString(id) directly,
    no need for Context.getResources().
    ADT Extract String ID: try to find a method or a field that will
    give the Context for using resource strings.
    ADT XML extract string ID: fix inverted test.
    ADT XML extract string ID: generate Context.getResources() calls
    depending on the Java context of the replacement.
    
    In the input page also display the string ID values.
    ADT XML extract string: allow selection to be the attribute name.
    ADT: Extract String IDs from Layout XML strings.
    
    This would have been part of CL #7041 if I had not forgotten
    a last git commit -a --amend.
    ADT: Extract String IDs from Layout XML strings.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    AI 144486: ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      BUG=1722971
    
    Automated import of CL 144486
    AI 144488: am: CL 144486 ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144488
    AI 144284: am: CL 144283 ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144284
    AI 144283: ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      BUG=1722971
    
    Automated import of CL 144283
    Automated import from //branches/donutburger/...@142708,142708
    Automated import from //branches/cupcake/...@142585,142585
    Automated import from //branches/donutburger/...@142276,142276
    Automated import from //branches/donutburger/...@141823,141823
    Automated import from //branches/donutburger/...@141482,141482
    Automated import from //branches/cupcake/...@142191,142191
    Automated import from //branches/cupcake/...@141822,141822
    auto import from //branches/cupcake_rel/...@141571
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Automated import from //branches/donutburger/...@141482,141482
    auto import from //branches/cupcake_rel/...@141571
    Make the res qualifiers aware of the project target to handle differnt behavior.
    
    First behavior change: \d{3}dpi replaced with hdpi/mdpi/ldpi/nodpi
    ADT XML extract string ID: generate Context.getResources() calls
    depending on the Java context of the replacement.
    
    In the input page also display the string ID values.
    ADT XML extract string IDs: display existing IDs of the
    selected file.
    ADT: Extract String IDs from Layout XML strings.
    
    This would have been part of CL #7041 if I had not forgotten
    a last git commit -a --amend.
    ADT #1843641: fix 'Extract string from layout creates blank string'
    
    Issue was that the 2 input fields where only update when the page
    was correctly validate.
    ADT: Refactoring classes dealing with android resources out of the editor.
    
    Basically:
    editors.resources.manager -> resources.manager
    editors.resources.configurations -> resources.configurations
    
    This is to make it less confusing between the "Resources editors" and the
    class parsing/handling Android resources (either in a project or in the
    framework).
    Also moved the ResourceExplorerView out of the resources editors, and clean
    up a few other misc classes.
    ADT: Move more packages into internal:
    
    editors -> adt.internal.editors.
    
    This also marks the final refactoring of combining previous editors/common
    plugin under the adt package.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    ADT: Move more packages into internal
    
    project.*
    refactorings.*
    
    Also: moved the export wizard from project.export to wizards.export, moved some
    actions out of project into the new internal package actions.
    Moved more ADT packages into internal.
    
    adt.build
    adt.launch.*
    adt.preferences
    
    Also started combining adt and common.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    AI 144486: ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      BUG=1722971
    
    Automated import of CL 144486
    AI 144488: am: CL 144486 ADT: Call the Extract String Refactoring to create a new XML String
      ID when selecting a string reference.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144488
    AI 144284: am: CL 144283 ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144284
    AI 144283: ADT: Enhance Resource Chooser with ability to create new XML strings.
      That's a first pass. There's a fair bit of refactoring
      involved, so it's split in two CLs. Next CL will add more
      functionality.
      BUG=1722971
    
    Automated import of CL 144283
    AI 143886: am: CL 143882 ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143886
    AI 143882: ADT #1743364: Refactor misc UI widgets together in package adt.ui.
      BUG=1743364
    
    Automated import of CL 143882
    Automated import from //branches/donutburger/...@142276,142276
    Automated import from //branches/donutburger/...@141482,141482
    Automated import from //branches/cupcake/...@142191,142191
    auto import from //branches/cupcake_rel/...@141571
    get rid of "new Display()" in SdkStatsService.getUserPermission(), which caused SWT panic
    Fix the opt-in window for usage stat so that it works when running from ADT.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Automated import from //branches/donutburger/...@141809,141809
    Automated import from //branches/cupcake/...@141808,141808
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make sure that the android pref folder is always present when queried.
    
    BUG: 2053511
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add monkeyrunner to code base
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add monkeyrunner to code base
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add monkeyrunner to code base
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add monkeyrunner to code base
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Enable adb forwarding and starting up of monkey server
    Add monkeyrunner to code base
    Add monkeyrunner to code base
    Add monkeyrunner to code base
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add monkeyrunner to code base
    Add monkeyrunner to code base
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix template for java test file to not use deprecated class.
    
    bug: http://code.google.com/p/android/issues/detail?id=3350
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Cleanup SDK packaging: remove alias build files.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Improve the comments in build.xml to help people customize their build.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Cleanup SDK packaging: remove alias build files.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Cleanup SDK packaging: remove alias build files.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@127101
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Cleanup SDK packaging: remove alias build files.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make ApkBuilder create filenames supported by older rules.
    
    'ant install' must know the debug apk filename so newer naming scheme breaks
    on older rule files (1.5 and earlier).
    The fix is to check for the presence of the property naming the debug,
    signed, unaligned package. If the property is present, then we use
    the new naming scheme ({base}[-{config}]-debug-unaligned.apk), else we use
    the old one ({base}-[-{config}]-debug.apk).
    
    Also merge the install/reinstall targets, since 'adb install -r <file>'
    works even if the apk was not yet installed.
    
    DO NOT MERGE
    Fix target for ApiDemos (API is now 4)
    
    Also add some progress output to the ant rules.
    Make the Ant script sign and zipalign release builds.
    
    It will also align debug builds.
    BUG: 2052744
    On project creation, put the app package in build.properties
    
    This enabled 'ant uninstall' to work.
    Also, add an error message to the uninstall rules in case the property
    is not defined.
    
    BUG: 2050451
    Fix the uninstall target in the Ant build script.
    
    the uninstall parameter is a value (the application package), but the Ant
    task was incorrectly using "path" for the argument.
    AI 147177: am: CL 147175 ADT #1801951: "adb.exe" misses the dot in android_rules.xml
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147177
    AI 147175: ADT #1801951: "adb.exe" misses the dot in android_rules.xml
      BUG=1801951
    
    Automated import of CL 147175
    Automated import from //branches/donutburger/...@141594,141594
    Automated import from //branches/cupcake/...@141592,141592
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Update the version of the tools/docs/platforms
    Add default version files into the SDK for docs/tools/platforms.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add notice file to platform folder.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Update the version of the tools/docs/platforms
    Add default version files into the SDK for docs/tools/platforms.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Move ADT/DDMS plug-ins to 0.9.2
    Add support for add-on based on preview of platforms.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Update the version of the tools/docs/platforms
    Add default version files into the SDK for docs/tools/platforms.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Script to strip out unused translations when you change the base strings.xml.
    
    It doesn't really know XML so it is reliant on the translation files
    being straightforwardly formatted, but it seems to work.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add menu + bigger icons for MacOS. Also added name to shell (macos also)
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Fix build: Add SWT dependency to SdkManager.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Fix erroneous assert.
    ADT #1856119: 'android update project' can now update sub-projects.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    AI 147176: am: CL 147174 ADT #1801919: Make default options output a bit more friendly.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147176
    AI 147174: ADT #1801919: Make default options output a bit more friendly.
      BUG=1801919
    
    Automated import of CL 147174
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    ADT #1856119: 'android update project' can now update sub-projects.
    AI 149491: Add 'android update adb' to generate 3rd party USB vendor list for adb to use.
      BUG=1890147
    
    Automated import of CL 149491
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    AI 147027: am: CL 147025 ADT #1795718: disable --mode in "android create project".
      The alias build rules do not work and the flag wasn't even used
      by ProjectCreator anyway. Will reintroduce later.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147027
    AI 147025: ADT #1795718: disable --mode in "android create project".
      The alias build rules do not work and the flag wasn't even used
      by ProjectCreator anyway. Will reintroduce later.
      BUG=1795718
    
    Automated import of CL 147025
    AI 146739: am: CL 146689 Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146739
    AI 146689: Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      BUG=1791664
    
    Automated import of CL 146689
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Add support for add-on based on preview of platforms.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    All actions in AdvManager now receives their own ISdkLog.
    
    Also added 'update' action to AvdSelector.
    Plug the Android SDK window as the AVD manager.
    
    - the "manager" button on the AVD selector (when not in manager
      will open the Android SDK window
    
    - the AVD manager in the eclipse toolsbar open the Android SDK
      window as well.
    
    Still left to do:
    - remove the now obsolete AVD wizard
    - figure out what to do with the other pages.
    AVD creation dialog.
    Misc cleanup from a previous commit.
    Skins can now provide their own hardware support (via AVDs)
    ADT #1856119: 'android update project' can now update sub-projects.
    Add revision to Android targets.
    
    The add-on use the "revision" property of the manifest (if it does not
    exists, it looks for the old deprecated "version" property).
    The platform uses the ro.build.version.incremental which is only an integer
    for builds from the build servers.
    Local builds contain <buildtype>.<username>.<date>.<time>. For those will
    use the date.
    AI 149491: Add 'android update adb' to generate 3rd party USB vendor list for adb to use.
      BUG=1890147
    
    Automated import of CL 149491
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    AI 149397: ADT 1807821 and 1841824: Fixes in android tool
      - Bug 1807821: create avd -f option does nothing.
      - Bug 1841824: NPE during AVD delete or update.
      BUG=1841824,1807821
    
    Automated import of CL 149397
    Moved updateAdb into SdkManager and updated with new adb_usb.ini format.
    
    New format is: 1 number per line. First number is vendor ID count, followed
    by  the vendor IDs themselves. Comment lines starting with # accepted.
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    Fix ADT#1807821: -f option ignored when avd dir already existed.
    
    Also fixed an NPE when parsing some invalid AVDs.
    AI 146740: am: CL 146692 Clean up the output of "android list targets" and fix the image.sysdir.# to only be present if the image folders really contain *.img files.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146740
    AI 146739: am: CL 146689 Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146739
    AI 146692: Clean up the output of "android list targets" and fix the image.sysdir.# to only be present if the image folders really contain *.img files.
      BUG=1795815,1791666
    
    Automated import of CL 146692
    AI 146689: Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      BUG=1791664
    
    Automated import of CL 146689
    AI 145844: am: CL 145394 Fix 'android create project': it was swapping activity and package names (bug #1781137)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145844
    AI 145394: Fix 'android create project': it was swapping activity and package names (bug #1781137)
      BUG=1781137
    
    Automated import of CL 145394
    AI 143883: am: CL 143881 AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143883
    AI 143881: AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      BUG=1703143
    
    Automated import of CL 143881
    AI 143808: am: CL 143754 SdkManager: list unknown AVDs and why they didn't load.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143808
    AI 143754: SdkManager: list unknown AVDs and why they didn't load.
      BUG=1703143
    
    Automated import of CL 143754
    AI 143223: am: CL 143034 ADT #1738834: Properly validate project name, package name and
      activity name for "create project".
      Also validate AVD name for "create avd".
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143223
    Automated import from //branches/cupcake/...@143034,143034
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    SDK Updater, restart ADB after updating tool/addon package.
    
    There's a new setting for this too.
    
    BUG 1922590
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: SettingsController that handles the settings.
    
    There is not any longer any logic in the SettingsPage,
    it is handled now by a "SettingsControllers" which is
    available via UpdaterData. The page only takes care of
    notifying the controller via a callback when settings
    have changed in the UI.
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: Fix the build.
    
    Seems like the server doesn't have Properties.load(Reader)!??!
    SDK Updater: handle HTTP proxy settings, load & save.
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    ADT #1856119: 'android update project' can now update sub-projects.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Make android.bat copy commons-compress to tmp with the other jar files.
    
    BUG: 2039759
    SDK Updater: fix android.bat for Windows to change dirs to the
    temp dir. This removes a locked handle to the SDK/tools and allows
    the update to update its own tools folder.
    SDK Updater: Make it possible for tools to update themselves.
    
    In the bat launcher for Windows, copy all the
    JARs needed to run the UI in a temp folder and execute
    from there.
    
    This allows the updater to update the tools folder
    without locking itself.
    Change scripts to support x86_64 for DDMS.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    Add menu + bigger icons for MacOS. Also added name to shell (macos also)
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    ADT #1715616: "New Android Test Project" wizard.
    
    Also updates eclipse/changes.txt
    AI 146736: am: CL 146674 "Target" nomenclature fixes
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146736
    AI 146674: "Target" nomenclature fixes
      BUG=1795612
    
    Automated import of CL 146674
    AI 146634: am: CL 146631 ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146634
    AI 146631: ADT #1793333: fix Widget disposed in SdkTargetSelector.
      This happens when you open the Windows > Prefs > Android panel
      while an SDK is initially loading or when you change the
      SDK in the pref panel. The target change listener was not
      properly removed since the field was not properly disposed.
      This also removed the multiple selection handling in the
      SdkTargetSelector, which we never use. In the unlikely event
      we want to use it later, it would be trivial to add it back.
      BUG=1793333
    
    Automated import of CL 146631
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    AVD creation dialog.
    Details dialog for AVD from the avd selector.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    All actions in AdvManager now receives their own ISdkLog.
    
    Also added 'update' action to AvdSelector.
    Add tooltips and a legend (AVD selector)
    
    Also added some TODOs
    Properly enable/disable buttons in the AVD selector.
    
    Also fixed a small issue with selection in the checkbox
    mode.
    AVD creation dialog.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Fix IAndroidTarget#isCompatibleBaseFor() for add-ons
    
    BUG: 2042277
    Fix some minor typo
    
    BUG: 2039797
    Fix minor typo and duplicated entry in sdk.atree
    Fix loading of user repository and add refresh when adding/removing.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    All actions in AdvManager now receives their own ISdkLog.
    
    Also added 'update' action to AvdSelector.
    Add tooltips and a legend (AVD selector)
    
    Also added some TODOs
    Properly enable/disable buttons in the AVD selector.
    
    Also fixed a small issue with selection in the checkbox
    mode.
    Plug the Android SDK window as the AVD manager.
    
    - the "manager" button on the AVD selector (when not in manager
      will open the Android SDK window
    
    - the AVD manager in the eclipse toolsbar open the Android SDK
      window as well.
    
    Still left to do:
    - remove the now obsolete AVD wizard
    - figure out what to do with the other pages.
    AVD creation dialog.
    Misc cleanup from a previous commit.
    Details dialog for AVD from the avd selector.
    Add support to delete AVD in the new AvdSelector.
    
    Also: change button order in the update chooser dialog.
    SDK Updater: display icons for local packages.
    First step of a more standalone AvdSelector.
    
    - New/Delete/Info/Refresh/Manager buttons.
    - Ability to set any kind of AVD filter
    - Self-refresh: Selector knows the AvdManager and can refresh itself.
    - Manager mode or simple (selection or checkboxes)
    - Manager mode displays broken AVDs.
    
    Updated the SdkUpdate AVD page and the various use of the Selector in ADT.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    Move the custom widgets for avd/targets/apk-config into internal.widgets
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    ADT #1823896: Ability to add an "extra" action to the AVD Selector.
    
    Used to display the AVD Manager from the Device Chooser/Launch config.
    Used to delete AVDs from the AVD Manager.
    
    In AVD Manager, also hide the Cancel button since actions are
    immediate and not cancelable.
    ADT #1823896: AVD Manager button in the AVD Selector.
    
    Device chooser: avd manager callback + avd list refresh.
    Device chooser: dialog title.
    Device launcher tab: avd manager callaback + avd list refresh.
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    AI 146736: am: CL 146674 "Target" nomenclature fixes
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146736
    AI 146674: "Target" nomenclature fixes
      BUG=1795612
    
    Automated import of CL 146674
    AI 143270: am: CL 143149 Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143270
    AI 143149: Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      BUG=1743022
    
    Automated import of CL 143149
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    SDK Updater: Refactor, polish and complete the progress dialog.
    
    This splits the former ProgressTask in 2 parts:
    ProgressDialog is just the SWT dialog and ProgressTask
    is the task handling.
    
    This helps avoiding confusing SWT Designer each time
    I do a change in the logic. Plus it seems cleaner anyway.
    
    The other thing this CL does is implement the pause/close
    I originally wanted: the pause button is greyed once used
    by the user whilst the task completes. After, it becomes
    a "Close" button if there's a result text displayed.
    Closing the window using the close box is now the same as
    using the pause/close button (to avoid closing the dialog
    with a running thread.)
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: Unzip archives.
    
    This adds the following:
    - unzip archives
    - if dest dir already exists (typicaly update case),
      unzips in a temp dir then swap dirs then delete
      the old install. In case of error, the old archive
      has not been lost.
    - computes stats for download: percentage, speed, time left.
    - compute percent for install, on top of progress bar.
    
    The install code will need to move somewhere
    out of the window. I think I'll put in the Archive
    itself with the window just looping on all archives
    and doing some progress bar bookeeping.
    SDK Updater: Refactor, polish and complete the progress dialog.
    
    This splits the former ProgressTask in 2 parts:
    ProgressDialog is just the SWT dialog and ProgressTask
    is the task handling.
    
    This helps avoiding confusing SWT Designer each time
    I do a change in the logic. Plus it seems cleaner anyway.
    
    The other thing this CL does is implement the pause/close
    I originally wanted: the pause button is greyed once used
    by the user whilst the task completes. After, it becomes
    a "Close" button if there's a result text displayed.
    Closing the window using the close box is now the same as
    using the pause/close button (to avoid closing the dialog
    with a running thread.)
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Sdk Updater: Split UI in window and independant composites.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    Prevent SDK Updater progress dialog from showing off screen.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    Details dialog for AVD from the avd selector.
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: Unzip archives.
    
    This adds the following:
    - unzip archives
    - if dest dir already exists (typicaly update case),
      unzips in a temp dir then swap dirs then delete
      the old install. In case of error, the old archive
      has not been lost.
    - computes stats for download: percentage, speed, time left.
    - compute percent for install, on top of progress bar.
    
    The install code will need to move somewhere
    out of the window. I think I'll put in the Archive
    itself with the window just looping on all archives
    and doing some progress bar bookeeping.
    SDK Updater: Refactor, polish and complete the progress dialog.
    
    This splits the former ProgressTask in 2 parts:
    ProgressDialog is just the SWT dialog and ProgressTask
    is the task handling.
    
    This helps avoiding confusing SWT Designer each time
    I do a change in the logic. Plus it seems cleaner anyway.
    
    The other thing this CL does is implement the pause/close
    I originally wanted: the pause button is greyed once used
    by the user whilst the task completes. After, it becomes
    a "Close" button if there's a result text displayed.
    Closing the window using the close box is now the same as
    using the pause/close button (to avoid closing the dialog
    with a running thread.)
    SDK Updater, restart ADB after updating tool/addon package.
    
    There's a new setting for this too.
    
    BUG 1922590
    BUG 1922588: SDK Updater, Needs better license display
    BUG 2040986 : SDK Updater, platform dependency on tools
    BUG 2039245 : Need to show something in the source if there are no available package
    
    Also moves the "Show updates only" checkbox around.
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    Add a checkbox to only show packages that are updates or new.
    Fix loading of user repository and add refresh when adding/removing.
    SDK Updater: UI to add new sources URL.
    SDK Updater: Cleanup a bunch of todos
    SDK Updater: logic to load/save user sources and to delete them.
    SDK Updater: Update buttons state in local/remote page
    based on selection.
    SDK Updater: fix install of new packages from remote page.
    SDK Updater: select specific archives in the remote page
    also triggers the license/install overview dialog.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: remove UpdaterData() constructor.
    
    We don't really need for SWT Designer.
    Also fix the main window icon to show it again.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    SDK Updater: implement tree check callback on remote page.
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Minor change to make composite constructor compliant with
    SWT designer.
    
    All custom params should be last. SWT Designer expects the first
    arg to be the parent composite.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater stuff.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    SDK Updater, restart ADB after updating tool/addon package.
    
    There's a new setting for this too.
    
    BUG 1922590
    BUG 1922588: SDK Updater, Needs better license display
    Support packages with no license.
    Prevent SDK updater dialog from showing offscreen.
    Add support to delete AVD in the new AvdSelector.
    
    Also: change button order in the update chooser dialog.
    SDK Updater: fix accept callback to update Install Selected button.
    SDK Updater: display icons for local packages.
    SDK Updater: automatically accept packages with no license.
    SDK Updater: use tri-state icon for each potential
    archive: accepted, refused or unknown.
    SDK Updater: update all existing local archives, license click through.
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    First step of a more standalone AvdSelector.
    
    - New/Delete/Info/Refresh/Manager buttons.
    - Ability to set any kind of AVD filter
    - Self-refresh: Selector knows the AvdManager and can refresh itself.
    - Manager mode or simple (selection or checkboxes)
    - Manager mode displays broken AVDs.
    
    Updated the SdkUpdate AVD page and the various use of the Selector in ADT.
    SDK Updater: remove UpdaterData() constructor.
    
    We don't really need for SWT Designer.
    Also fix the main window icon to show it again.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    SDK Updater, restart ADB after updating tool/addon package.
    
    There's a new setting for this too.
    
    BUG 1922590
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: SettingsController that handles the settings.
    
    There is not any longer any logic in the SettingsPage,
    it is handled now by a "SettingsControllers" which is
    available via UpdaterData. The page only takes care of
    notifying the controller via a callback when settings
    have changed in the UI.
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: display icons for local packages.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    BUG 2039245 : Need to show something in the source if there are no available package
    
    Also moves the "Show updates only" checkbox around.
    Also filter the list of Archives to only show the compatible ones.
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: Better handling of fetch errors.
    
    The remote page now shows fetch errors in the tree.
    Using refresh tries to reload error sources.
    SDK Updater: logic to load/save user sources and to delete them.
    SDK Updater: display icons for local packages.
    SDK Updater: different icon theme for the repository items.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    SDK Updater, restart ADB after updating tool/addon package.
    
    There's a new setting for this too.
    
    BUG 1922590
    BUG 1922588: SDK Updater, Needs better license display
    Fix some minor typo
    
    BUG: 2039797
    Make android.bat copy commons-compress to tmp with the other jar files.
    
    BUG: 2039759
    Fix NPE that prevented any package w/o license to be installed.
    
    java.util.Properties#setProperty() doesn't like it when the value is null
    which was the case when a package had no license.
    
    Made sure it won't happen on other properties than the license as well.
    
    Also improved error display when an unexpected Throwable is thrown during
    install (Stack Call is now display if the Throwable has no message).
    
    BUG:2037085
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: detect when install addon or tools to deal with
    updating or restarting adb.
    All actions in AdvManager now receives their own ISdkLog.
    
    Also added 'update' action to AvdSelector.
    SDK Updater: Better handling of fetch errors.
    
    The remote page now shows fetch errors in the tree.
    Using refresh tries to reload error sources.
    SDK Updater: Cleanup a bunch of todos
    SDK Updater: logic to load/save user sources and to delete them.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: fix install of new packages from remote page.
    SDK Updater: remove UpdaterData.Display
    SDK Updater: select specific archives in the remote page
    also triggers the license/install overview dialog.
    SDK Updater: use tri-state icon for each potential
    archive: accepted, refused or unknown.
    SDK Updater: update all existing local archives, license click through.
    Fix the reload of pages after installation of packages.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: SettingsController that handles the settings.
    
    There is not any longer any logic in the SettingsPage,
    it is handled now by a "SettingsControllers" which is
    available via UpdaterData. The page only takes care of
    notifying the controller via a callback when settings
    have changed in the UI.
    SDK Updater: remove UpdaterData() constructor.
    
    We don't really need for SWT Designer.
    Also fix the main window icon to show it again.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    SDK Updater, restart ADB after updating tool/addon package.
    
    There's a new setting for this too.
    
    BUG 1922590
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: SettingsController that handles the settings.
    
    There is not any longer any logic in the SettingsPage,
    it is handled now by a "SettingsControllers" which is
    available via UpdaterData. The page only takes care of
    notifying the controller via a callback when settings
    have changed in the UI.
    SDK Updater: handle HTTP proxy settings, load & save.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 2042088 : SDK Updater: we want to keep getenv(TEMP_SDK_URL)
    
    Renamed the getenv and added one for user sources.
    Added a (naive) check to prevent duplicate URLs.
    
    Also fixed the repositoy.xml download error message, it was not displaying the reason of failure correctly.
    SDK Updater: fix main window to resize.
    
    BUG 2038860
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    AVD Selector: Add a "Start" button to launch the selected AVD in a
    new emulator. Doesn't detect if the AVD is already running; instead
    prints the emulator error.
    Plug the Android SDK window as the AVD manager.
    
    - the "manager" button on the AVD selector (when not in manager
      will open the Android SDK window
    
    - the AVD manager in the eclipse toolsbar open the Android SDK
      window as well.
    
    Still left to do:
    - remove the now obsolete AVD wizard
    - figure out what to do with the other pages.
    AVD creation dialog.
    SDK Updater: Cleanup a bunch of todos
    SDK Updater: logic to load/save user sources and to delete them.
    SDK Updater: display icons for local packages.
    SDK Updater: remove UpdaterData.Display
    SDK Updater: update all existing local archives, license click through.
    Fix the reload of pages after installation of packages.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: SettingsController that handles the settings.
    
    There is not any longer any logic in the SettingsPage,
    it is handled now by a "SettingsControllers" which is
    available via UpdaterData. The page only takes care of
    notifying the controller via a callback when settings
    have changed in the UI.
    SDK Updater: remove UpdaterData() constructor.
    
    We don't really need for SWT Designer.
    Also fix the main window icon to show it again.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    SDK Updater: fix install in new directory.
    
    Also change the getenv hack so that multiple sources
    can be specified, separated by ;
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: handle HTTP proxy settings, load & save.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    Add missing file and remove unused imports
    
    (git commit -a missed it)
    Add menu + bigger icons for MacOS. Also added name to shell (macos also)
    SDK updater: refactor install into Archive.
    SDK Updater: Unzip archives.
    
    This adds the following:
    - unzip archives
    - if dest dir already exists (typicaly update case),
      unzips in a temp dir then swap dirs then delete
      the old install. In case of error, the old archive
      has not been lost.
    - computes stats for download: percentage, speed, time left.
    - compute percent for install, on top of progress bar.
    
    The install code will need to move somewhere
    out of the window. I think I'll put in the Archive
    itself with the window just looping on all archives
    and doing some progress bar bookeeping.
    SDK Updater: Refactor, polish and complete the progress dialog.
    
    This splits the former ProgressTask in 2 parts:
    ProgressDialog is just the SWT dialog and ProgressTask
    is the task handling.
    
    This helps avoiding confusing SWT Designer each time
    I do a change in the logic. Plus it seems cleaner anyway.
    
    The other thing this CL does is implement the pause/close
    I originally wanted: the pause button is greyed once used
    by the user whilst the task completes. After, it becomes
    a "Close" button if there's a result text displayed.
    Closing the window using the close box is now the same as
    using the pause/close button (to avoid closing the dialog
    with a running thread.)
    SDK Updater: fix download URL, fix checksum computation.
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    SDK Updater: Minor change to make composite constructor compliant with
    SWT designer.
    
    All custom params should be last. SWT Designer expects the first
    arg to be the parent composite.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Sdk Updater: Split UI in window and independant composites.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    SDK Updater: Update buttons state in local/remote page
    based on selection.
    SDK Updater: fix install of new packages from remote page.
    SDK Updater: select specific archives in the remote page
    also triggers the license/install overview dialog.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: remove UpdaterData() constructor.
    
    We don't really need for SWT Designer.
    Also fix the main window icon to show it again.
    Centralized the local data, and create new listener mechanism to access it.
    
    Created a permanent SdkManager in UpdaterData (alongside a new AvdManager).
    Pages can request a reload (for example on install/delete of a local package),
    and other pages are notified of SDK changes to update their display (local
    packages, local AVDs, available packages, etc...)
    
    Removed references to UpdaterWindow from the pages (moved some actions
    like installArchives and refreshSources into UpdaterData).
    
    Added a new page for the AVDs. Pretty basic for now (only the current AVD
    display).
    
    Clicking refresh on the Local pages causes a reload which triggers a
    refresh of the listeners pages which properly reloads the AVD page.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Unzip archives.
    
    This adds the following:
    - unzip archives
    - if dest dir already exists (typicaly update case),
      unzips in a temp dir then swap dirs then delete
      the old install. In case of error, the old archive
      has not been lost.
    - computes stats for download: percentage, speed, time left.
    - compute percent for install, on top of progress bar.
    
    The install code will need to move somewhere
    out of the window. I think I'll put in the Archive
    itself with the window just looping on all archives
    and doing some progress bar bookeeping.
    SDK Updater: Refactor, polish and complete the progress dialog.
    
    This splits the former ProgressTask in 2 parts:
    ProgressDialog is just the SWT dialog and ProgressTask
    is the task handling.
    
    This helps avoiding confusing SWT Designer each time
    I do a change in the logic. Plus it seems cleaner anyway.
    
    The other thing this CL does is implement the pause/close
    I originally wanted: the pause button is greyed once used
    by the user whilst the task completes. After, it becomes
    a "Close" button if there's a result text displayed.
    Closing the window using the close box is now the same as
    using the pause/close button (to avoid closing the dialog
    with a running thread.)
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Sdk Updater: Split UI in window and independant composites.
    SDK Updater: use tri-state icon for each potential
    archive: accepted, refused or unknown.
    SDK Updater: Better handling of fetch errors.
    
    The remote page now shows fetch errors in the tree.
    Using refresh tries to reload error sources.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: different icon theme for the repository items.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    SDK Updater: different icon theme for the repository items.
    BUG 2039245 : Need to show something in the source if there are no available package
    
    Also moves the "Show updates only" checkbox around.
    SDK Updater: different icon theme for the repository items.
    BUG 2039245 : Need to show something in the source if there are no available package
    
    Also moves the "Show updates only" checkbox around.
    SDK Updater: Better handling of fetch errors.
    
    The remote page now shows fetch errors in the tree.
    Using refresh tries to reload error sources.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: display icons for local packages.
    First step of a more standalone AvdSelector.
    
    - New/Delete/Info/Refresh/Manager buttons.
    - Ability to set any kind of AVD filter
    - Self-refresh: Selector knows the AvdManager and can refresh itself.
    - Manager mode or simple (selection or checkboxes)
    - Manager mode displays broken AVDs.
    
    Updated the SdkUpdate AVD page and the various use of the Selector in ADT.
    Properly create Image for the icons so that they are transparent.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Sdk Updater: Split UI in window and independant composites.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    Add missing file and remove unused imports
    
    (git commit -a missed it)
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    SDK Updater: use tri-state icon for each potential
    archive: accepted, refused or unknown.
    SDK Updater: use tri-state icon for each potential
    archive: accepted, refused or unknown.
    SDK Updater: icons for packages in remote page.
    
    One of the rationales behind this was to show
    incompatible archives using some icon.
    
    This moves all SDK Updater icons in internal/repository/icons
    and create an ImageFactory available to the remote page via
    the UpdaterData.
    Adds call back to the SDK updater for SDK content notifications.
    
    Make ADT reload the SDK when a new package is installed/removed through the
    SDK Updater.
    Plug the Android SDK window as the AVD manager.
    
    - the "manager" button on the AVD selector (when not in manager
      will open the Android SDK window
    
    - the AVD manager in the eclipse toolsbar open the Android SDK
      window as well.
    
    Still left to do:
    - remove the now obsolete AVD wizard
    - figure out what to do with the other pages.
    SDK Updater: Placeholder pages for about and settings.
    
    These pages are now in the SdkManager project
    with a mechanism to instantiate them from the UI on demand.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Sdk Updater: Split UI in window and independant composites.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    Skeleton App Windows for Sdk Updater built using SWT Designer.
    The window is shown when the "android" tool is invoked with no parameter.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Use Apache Commons Compress instead of java.util.zip
    
    When the SDK installer unarchives the zip files, it is important to keep
    the permissions for executable (Linux/MacOS) or the tools required to
    build applications (aapt, aidl, ...) won't work.
    
    Since java.util.zip does not provide support for permissions, we now
    use the Apache Commons Compress component that allows us to read the
    permission from the archive.
    ADT #1844909: Move sdk-repository XSD and tests from SdkManager to SdkLib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Use Apache Commons Compress instead of java.util.zip
    
    When the SDK installer unarchives the zip files, it is important to keep
    the permissions for executable (Linux/MacOS) or the tools required to
    build applications (aapt, aidl, ...) won't work.
    
    Since java.util.zip does not provide support for permissions, we now
    use the Apache Commons Compress component that allows us to read the
    permission from the archive.
    Add menu + bigger icons for MacOS. Also added name to shell (macos also)
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Add revision to Android targets.
    
    The add-on use the "revision" property of the manifest (if it does not
    exists, it looks for the old deprecated "version" property).
    The platform uses the ro.build.version.incremental which is only an integer
    for builds from the build servers.
    Local builds contain <buildtype>.<username>.<date>.<time>. For those will
    use the date.
    AI 149491: Add 'android update adb' to generate 3rd party USB vendor list for adb to use.
      BUG=1890147
    
    Automated import of CL 149491
    Misc updates on the Sdklib.
    
    - moved some code around
    - made the constant in IAndroidTarget actual constant (they were not final)
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    ADT #1825491: Provide default choices for <uses-library>
    
    We currently hardcode a list in the PlatformTarget and propagate
    it to the UI via the AndroidTargetParser. This way we can later
    decide to actually get the info from some kind of manifest.
    AI 145098: am: CL 144938 Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145098
    AI 144938: Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      BUG=1775936
    
    Automated import of CL 144938
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    SDK Updater: Fix to allow install from directory URL (i.e. auto-guess the
    repository.xml correctly.)
    
    BUG 2039080
    
    Also removed some misc Eclipse 3.5 warnings.
    Add support for add-on based on preview of platforms.
    Use the proper URL for the google repository.
    
    Also fix an NPE.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    ADT Export wizard now calls ZipAlign
    Force UTF-8 encoding for SDK files.
    
    - project .properties files
    - AVD ini files (<name>.ini and config.ini)
    - add-on manifest
    Add menu + bigger icons for MacOS. Also added name to shell (macos also)
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    ADT #1825491: Provide default choices for <uses-library>
    
    We currently hardcode a list in the PlatformTarget and propagate
    it to the UI via the AndroidTargetParser. This way we can later
    decide to actually get the info from some kind of manifest.
    AI 143270: am: CL 143149 Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143270
    AI 143149: Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      BUG=1743022
    
    Automated import of CL 143149
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    AI 143883: am: CL 143881 AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143883
    AI 143881: AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      BUG=1703143
    
    Automated import of CL 143881
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Made default skin customizable via skin/default.ini file
    Fix PlatformTarget#compareTo(IAndroidTarget) again.
    Prevent SDK updater dialog from showing offscreen.
    Add support for add-on based on preview of platforms.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Add revision to Android targets.
    
    The add-on use the "revision" property of the manifest (if it does not
    exists, it looks for the old deprecated "version" property).
    The platform uses the ro.build.version.incremental which is only an integer
    for builds from the build servers.
    Local builds contain <buildtype>.<username>.<date>.<time>. For those will
    use the date.
    AI 149491: Add 'android update adb' to generate 3rd party USB vendor list for adb to use.
      BUG=1890147
    
    Automated import of CL 149491
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    ADT #1825491: Provide default choices for <uses-library>
    
    We currently hardcode a list in the PlatformTarget and propagate
    it to the UI via the AndroidTargetParser. This way we can later
    decide to actually get the info from some kind of manifest.
    AI 145098: am: CL 144938 Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145098
    AI 144938: Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      BUG=1775936
    
    Automated import of CL 144938
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Fixed compilation issue.
    
    Change-Id: I23e56695ae02cdaee4edbf4c55132c8cdeb1bc81
    Signed-off-by: Andrei Dolnikov <andrei_dolnikov@mentor.com>
    Made default skin customizable via skin/default.ini file
    Add a checkbox to only show packages that are updates or new.
    Add support for add-on based on preview of platforms.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Skins can now provide their own hardware support (via AVDs)
    SDK Updater: Cleanup a bunch of todos
    Force UTF-8 encoding for SDK files.
    
    - project .properties files
    - AVD ini files (<name>.ini and config.ini)
    - add-on manifest
    Add SdkManager#reloadSdk().
    Add revision to Android targets.
    
    The add-on use the "revision" property of the manifest (if it does not
    exists, it looks for the old deprecated "version" property).
    The platform uses the ro.build.version.incremental which is only an integer
    for builds from the build servers.
    Local builds contain <buildtype>.<username>.<date>.<time>. For those will
    use the date.
    AI 149491: Add 'android update adb' to generate 3rd party USB vendor list for adb to use.
      BUG=1890147
    
    Automated import of CL 149491
    Misc updates on the Sdklib.
    
    - moved some code around
    - made the constant in IAndroidTarget actual constant (they were not final)
    Update 'android update adb' to the new file format for 3rd USB Vendor IDs.
    
    The new file format is simply 1 ID per line, no need for a count value.
    Lines starting with '#' are comments and therefore ignored.
    Make 'android update adb' write the USB vendor IDs in hexa.
    Moved updateAdb into SdkManager and updated with new adb_usb.ini format.
    
    New format is: 1 number per line. First number is vendor ID count, followed
    by  the vendor IDs themselves. Comment lines starting with # accepted.
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Fix IAndroidTarget#isCompatibleBaseFor() for add-ons
    
    BUG: 2042277
    Add support for add-on based on preview of platforms.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Add revision to Android targets.
    
    The add-on use the "revision" property of the manifest (if it does not
    exists, it looks for the old deprecated "version" property).
    The platform uses the ro.build.version.incremental which is only an integer
    for builds from the build servers.
    Local builds contain <buildtype>.<username>.<date>.<time>. For those will
    use the date.
    AI 149491: Add 'android update adb' to generate 3rd party USB vendor list for adb to use.
      BUG=1890147
    
    Automated import of CL 149491
    Add support for USB Vendor ID in the add-ons.
    
    The add-on manifest can now declare a USB vendor ID with the line
       usb-vendor=<id>
    The ID must be a 16 hexadecimal value in the format 0xABCD.
    
    The 'android' tool now has a new command 'android upate abd' that will create
    a file called 'adb_usb.ini' in ~/.android/
    This file will be read by adb to add support to those new vendor IDs.
    ADT #1825491: Provide default choices for <uses-library>
    
    We currently hardcode a list in the PlatformTarget and propagate
    it to the UI via the AndroidTargetParser. This way we can later
    decide to actually get the info from some kind of manifest.
    AI 146024: am: CL 146023 Make the add-on implement getPath for IAndroidTarget.SAMPLES (only if the add-on actually has samples) (BUG #1781751)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146024
    AI 146023: Make the add-on implement getPath for IAndroidTarget.SAMPLES (only if the add-on actually has samples) (BUG #1781751)
      BUG=1781751
    
    Automated import of CL 146023
    AI 145098: am: CL 144938 Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145098
    AI 144938: Fix the classpath container cache for project targeting add-ons (bug #1775936).
      Also renamed the container for add-ons to include the base platform name (so that at least a version is displayed).
      BUG=1775936
    
    Automated import of CL 144938
    AI 143270: am: CL 143149 Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143270
    AI 143149: Make ADT look for javadoc in docs/reference for the optional libraries (to match the base docs).
      BUG=1743022
    
    Automated import of CL 143149
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    All actions in AdvManager now receives their own ISdkLog.
    
    Also added 'update' action to AvdSelector.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the Ant script sign and zipalign release builds.
    
    It will also align debug builds.
    BUG: 2052744
    On project creation, put the app package in build.properties
    
    This enabled 'ant uninstall' to work.
    Also, add an error message to the uninstall rules in case the property
    is not defined.
    
    BUG: 2050451
    Force UTF-8 encoding for SDK files.
    
    - project .properties files
    - AVD ini files (<name>.ini and config.ini)
    - add-on manifest
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    AI 146771: am: CL 146770 ADT #1797369 fix error "ant windows: com.android.ant.SetupTask cannot be found"
      The path in local.properties should be double-backslashed.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146771
    AI 146770: ADT #1797369 fix error "ant windows: com.android.ant.SetupTask cannot be found"
      The path in local.properties should be double-backslashed.
      BUG=1797369
    
    Automated import of CL 146770
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    On project creation, put the app package in build.properties
    
    This enabled 'ant uninstall' to work.
    Also, add an error message to the uninstall rules in case the property
    is not defined.
    
    BUG: 2050451
    ADT #1909458: fix 'android update project': "build.xml is too old"
    ADT #1856119: 'android update project' can now update sub-projects.
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    AI 143223: am: CL 143034 ADT #1738834: Properly validate project name, package name and
      activity name for "create project".
      Also validate AVD name for "create avd".
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143223
    Automated import from //branches/cupcake/...@143034,143034
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132569
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Properly update the new path of the AVD during an 'android avd move'
    
    BUG: 2048358
    Update comments in AvdManager
    All actions in AdvManager now receives their own ISdkLog.
    
    Also added 'update' action to AvdSelector.
    AVD creation dialog.
    Misc cleanup from a previous commit.
    Skins can now provide their own hardware support (via AVDs)
    Add support to delete AVD in the new AvdSelector.
    
    Also: change button order in the update chooser dialog.
    Force UTF-8 encoding for SDK files.
    
    - project .properties files
    - AVD ini files (<name>.ini and config.ini)
    - add-on manifest
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    ADT #1820114: Provide a quick UI to edit AVD.
    
    This is temporary and will be replaced once we get the standalone AVD UI.
    Fix ADT#1807821: -f option ignored when avd dir already existed.
    
    Also fixed an NPE when parsing some invalid AVDs.
    AI 146983: am: CL 146980 Fix the display of the target hash string when displaying unresolved target errors.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146983
    AI 146980: Fix the display of the target hash string when displaying unresolved target errors.
      BUG=1800971
    
    Automated import of CL 146980
    AI 146778: am: CL 146776 fix NPE in AvdManager
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146778
    AI 146776: fix NPE in AvdManager
      BUG=1791664
    
    Automated import of CL 146776
    AI 146740: am: CL 146692 Clean up the output of "android list targets" and fix the image.sysdir.# to only be present if the image folders really contain *.img files.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146740
    AI 146739: am: CL 146689 Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146739
    AI 146692: Clean up the output of "android list targets" and fix the image.sysdir.# to only be present if the image folders really contain *.img files.
      BUG=1795815,1791666
    
    Automated import of CL 146692
    AI 146689: Broken AVDs are now loaded by default, and we provide a way to fix one (new) type of error (wrong paths to the system image)
      BUG=1791664
    
    Automated import of CL 146689
    AI 145985: am: CL 145929 ADT #1781076: fix missing \n in "android delete avd"
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145985
    AI 145929: ADT #1781076: fix missing \n in "android delete avd"
      BUG=1781076
    
    Automated import of CL 145929
    AI 145468: am: CL 145083 ADT #1777728: fix NPE when AVD list is empty
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145468
    AI 145083: ADT #1777728: fix NPE when AVD list is empty
      BUG=1777728
    
    Automated import of CL 145083
    AI 143883: am: CL 143881 AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143883
    AI 143881: AVD #1703143: delete AVDs not loaded correctly.
      This covers the case where an AVD has an invalid target
      or is missing its AVD folder or the config.ini in it.
      Made some cosmetic cleanup too.
      BUG=1703143
    
    Automated import of CL 143881
    AI 143808: am: CL 143754 SdkManager: list unknown AVDs and why they didn't load.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143808
    AI 143754: SdkManager: list unknown AVDs and why they didn't load.
      BUG=1703143
    
    Automated import of CL 143754
    Automated import from //branches/donutburger/...@140697,140697
    auto import from //branches/cupcake_rel/...@141571
    auto import from //branches/cupcake/...@137873
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    BUG 1922588: SDK Updater, Needs better license display
    BUG 2041701: Release notes content/link in SDK Updater schema
    SDK Updater: Fix to allow install from directory URL (i.e. auto-guess the
    repository.xml correctly.)
    
    BUG 2039080
    
    Also removed some misc Eclipse 3.5 warnings.
    Fix NPE that prevented any package w/o license to be installed.
    
    java.util.Properties#setProperty() doesn't like it when the value is null
    which was the case when a package had no license.
    
    Made sure it won't happen on other properties than the license as well.
    
    Also improved error display when an unexpected Throwable is thrown during
    install (Stack Call is now display if the Throwable has no message).
    
    BUG:2037085
    Fix the update check for doc packages.
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    Make SSL error a bit more human readable.
    BUG 2042088 : SDK Updater: we want to keep getenv(TEMP_SDK_URL)
    
    Renamed the getenv and added one for user sources.
    Added a (naive) check to prevent duplicate URLs.
    
    Also fixed the repositoy.xml download error message, it was not displaying the reason of failure correctly.
    Fix some display string that contained an unused %s and an NPE
    
    This makes the android app crash when the XML cannot be validated.
    SDK Updater: Fix to allow install from directory URL (i.e. auto-guess the
    repository.xml correctly.)
    
    BUG 2039080
    
    Also removed some misc Eclipse 3.5 warnings.
    SDK Updater: refine error handling when fetching sources.
    SDK Updater: Add repository.xml if not specified in URLs
    SDK Updater: Better handling of fetch errors.
    
    The remote page now shows fetch errors in the tree.
    Using refresh tries to reload error sources.
    SDK Updater: logic to load/save user sources and to delete them.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: fix repository.xml to read as binary, not text
    to let the XML decoder handle the charset decoding.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: fix download URL, fix checksum computation.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    SDK Updater: Revamp ITaskMonitor to be able to create sub monitors.
    
    This allows us to nest tasks that share the same
    progress task dialog..
    SDK Updater: Unzip archives.
    
    This adds the following:
    - unzip archives
    - if dest dir already exists (typicaly update case),
      unzips in a temp dir then swap dirs then delete
      the old install. In case of error, the old archive
      has not been lost.
    - computes stats for download: percentage, speed, time left.
    - compute percent for install, on top of progress bar.
    
    The install code will need to move somewhere
    out of the window. I think I'll put in the Archive
    itself with the window just looping on all archives
    and doing some progress bar bookeeping.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    BUG 2042088 : SDK Updater: we want to keep getenv(TEMP_SDK_URL)
    
    Renamed the getenv and added one for user sources.
    Added a (naive) check to prevent duplicate URLs.
    
    Also fixed the repositoy.xml download error message, it was not displaying the reason of failure correctly.
    Fix loading of user repository and add refresh when adding/removing.
    SDK Updater: Cleanup a bunch of todos
    SDK Updater: logic to load/save user sources and to delete them.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 1922590 : SDK Updater, customize message for Windows preventing
    a directory from being renamed.
    SDK Updater: Fix to allow install from directory URL (i.e. auto-guess the
    repository.xml correctly.)
    
    BUG 2039080
    
    Also removed some misc Eclipse 3.5 warnings.
    Use Apache Commons Compress instead of java.util.zip
    
    When the SDK installer unarchives the zip files, it is important to keep
    the permissions for executable (Linux/MacOS) or the tools required to
    build applications (aapt, aidl, ...) won't work.
    
    Since java.util.zip does not provide support for permissions, we now
    use the Apache Commons Compress component that allows us to read the
    permission from the archive.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: provide a "force http" setting.
    
    Note that the setting operates on every source by converting
    the https:// links into http:// before fetching the sources
    or the archives.
    
    This also reorganize some things: the RepoSourceAdapter now
    takes the UpdaterData as parameter (so both Adapters work the
    same) and the label/contentProviders are nested classes instead
    of static classes. Cleanup some stuff that was no longer useful
    such as the RepoSources.TaskFactory (it's in UpdaterData already).
    
    With this change I can install from the dl site over http at home!
    SDK Updater: fix install in new directory.
    
    Also change the getenv hack so that multiple sources
    can be specified, separated by ;
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: fix for new archives.
    
    Fix for detecting MacOS platforms correctly.
    
    Fix to account for new archives with a root folder
    (the root folder is ignored).
    
    Display why archives are not compatible (print
    which OS was not compatible.)
    SDK updater: refactor install into Archive.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    BUG 1922588: SDK Updater, Needs better license display
    Fix NPE that prevented any package w/o license to be installed.
    
    java.util.Properties#setProperty() doesn't like it when the value is null
    which was the case when a package had no license.
    
    Made sure it won't happen on other properties than the license as well.
    
    Also improved error display when an unexpected Throwable is thrown during
    install (Stack Call is now display if the Throwable has no message).
    
    BUG:2037085
    Add a checkbox to only show packages that are updates or new.
    Add support for add-on based on preview of platforms.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: addon id is name+vendor, lower case
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: fix for new archives.
    
    Fix for detecting MacOS platforms correctly.
    
    Fix to account for new archives with a root folder
    (the root folder is ignored).
    
    Display why archives are not compatible (print
    which OS was not compatible.)
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    BUG 1922588: SDK Updater, Needs better license display
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 1922588: SDK Updater, Needs better license display
    BUG 2040986 : SDK Updater, platform dependency on tools
    BUG 2041688 : SDK Updater: better description of extra packages
    Add a checkbox to only show packages that are updates or new.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    Fix api change following a rebase.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 1922588: SDK Updater, Needs better license display
    BUG 2040986 : SDK Updater, platform dependency on tools
    Fix NPE that prevented any package w/o license to be installed.
    
    java.util.Properties#setProperty() doesn't like it when the value is null
    which was the case when a package had no license.
    
    Made sure it won't happen on other properties than the license as well.
    
    Also improved error display when an unexpected Throwable is thrown during
    install (Stack Call is now display if the Throwable has no message).
    
    BUG:2037085
    Add a checkbox to only show packages that are updates or new.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: Cleanup a bunch of todos
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 1922588: SDK Updater, Needs better license display
    Fix comparison of 2 doc packages that have the same codename/revision.
    
    This made the Donut_r1 doc show up as upgrade to the donut_r1 doc.
    BUG: 2037448
    Fix the update check for doc packages.
    Add a checkbox to only show packages that are updates or new.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: update all existing local archives, license click through.
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    BUG 1922588: SDK Updater, Needs better license display
    Add support for add-on based on preview of platforms.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    SDK Updater: Store local source properties when installing.
    
    When installing an archive, a "source.properties" file is saved
    in the directory that contains all the information from the
    source (Source URL, package attributes, archive attributes.)
    
    When loading local packages, these properties are used to
    recreate the local package attributes if present. This is
    also used to indentify local extra packages.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Better guess for the addon folder name.
    
    - Always unzip the archives first and get their root zip dir.
    - Try to reusing an existing addon folder first.
    - Or the root zip dir.
    - Or come up with a better name for the addon folder.
    SDK Updater: addon id is name+vendor, lower case
    SDK Updater: Support local archives
    
    - Change Archive to have a "isLocal" mode.
      - In local mode, Archive.getLocalOsPath gives the install folder.
      - In remote mode, Archive.getUrl gives the download URL.
    - Implement delete on local archive.
    - Started refreshing all sources. Need to revamp the progress
      dialog to share it accross methods first.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactored AndroidXPathFactory into sdklib.
    ADT: Move more packages into internal.
    
    common.project -> adt.internal.project
    adt.resources -> adt.internal.resources
    adt.wizards.* -> adt.internal.wizards
    adt.ui -> adt.internal.ui
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add support for add-on based on preview of platforms.
    BUG 2040986 : SDK Updater, platform dependency on tools
    BUG 2041701: Release notes content/link in SDK Updater schema
    Add support for add-on based on preview of platforms.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: add comments to the XML Schema.
    
    This patch also moves the checksumType at the bottom
    so that the main sdk-repository element definition
    be the first thing in the file.
    ADT #1844909: Tweak XML schema, add more tests.
    
    Change XML schema to allow for empty <libs>, e.g. one can create
    and add-on that doesn't declare any extra lib.
    However enforce that <archives> contains at least one <archive>
    element to prevent someone from declaring a download element
    that cannot actually be downloaded.
    
    Added a couple tests for validation of empty documents.
    ADT #1844909: Move sdk-repository XSD and tests from SdkManager to SdkLib.
    ADT #1844909: SDK manager, define XML schemas & sample XMLs
    
    For reference, there's an XSD primer here:
    - http://www.w3.org/TR/xmlschema-0/#NS
    - http://www.w3schools.com/Schema/
    BUG 2040986 : SDK Updater, platform dependency on tools
    BUG 2041701: Release notes content/link in SDK Updater schema
    Use the proper URL for the google repository.
    
    Also fix an NPE.
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    SDK Updater: Add repository.xml if not specified in URLs
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: SettingsController that handles the settings.
    
    There is not any longer any logic in the SettingsPage,
    it is handled now by a "SettingsControllers" which is
    available via UpdaterData. The page only takes care of
    notifying the controller via a callback when settings
    have changed in the UI.
    SDK Updater: fix repo URL
    SDK Updater: Add optional license elements to XML schema.
    SDK Updater: parse local packages, download and install remote packages.
    
    The install phase is still work in progress.
    The local part needs to display descriptions.
    Buttons callback are generally not implemented yet.
    SDK Updater: display properties of sources and packages.
    SDK Updater: some refactoring and some new features.
    
    The refactoring part involves moving as much as possible stuff
    in SdkLib/internal/repository.
    
    The UI has moved in SdkUiLib/internal/repository except a specific
    public wrapper for calling the Sdk Updater window.
    
    There are also a bunch of new classes to handle the internal
    structures: Package is the base type and to match the XML element
    names we have PlatformPackage, AddonPackage, DocPackage and
    ToolPackage.
    
    All headers have been fixed.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    BUG 2040986 : SDK Updater, platform dependency on tools
    BUG 2041701: Release notes content/link in SDK Updater schema
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Add optional license elements to XML schema.
    ADT #1844909: Tweak XML schema, add more tests.
    
    Change XML schema to allow for empty <libs>, e.g. one can create
    and add-on that doesn't declare any extra lib.
    However enforce that <archives> contains at least one <archive>
    element to prevent someone from declaring a download element
    that cannot actually be downloaded.
    
    Added a couple tests for validation of empty documents.
    ADT #1844909: Move sdk-repository XSD and tests from SdkManager to SdkLib.
    ADT #1844909: SDK manager, define XML schemas & sample XMLs
    
    For reference, there's an XSD primer here:
    - http://www.w3.org/TR/xmlschema-0/#NS
    - http://www.w3schools.com/Schema/
    Generalize usage of AndroidVersion instead of Api level in the SDK packages.
    
    Platform, add-on and doc packages used to use Api Level to figure out
    upgrade logic. This is replaced by AndroidVersion to properly handle
    codename versions.
    SDK Updater: use separate license node in XML. Support extra packages.
    SDK Updater: Fetch source XML, display them in tree.
    
    There's a notion of an asynchronous task with a progress bar & status UI.
    That's still just experimental. Will need some refactoring, etc.
    ADT #1844909: Tweak XML schema, add more tests.
    
    Change XML schema to allow for empty <libs>, e.g. one can create
    and add-on that doesn't declare any extra lib.
    However enforce that <archives> contains at least one <archive>
    element to prevent someone from declaring a download element
    that cannot actually be downloaded.
    
    Added a couple tests for validation of empty documents.
    ADT #1844909: Move sdk-repository XSD and tests from SdkManager to SdkLib.
    ADT #1844909: SDK manager, define XML schemas & sample XMLs
    
    For reference, there's an XSD primer here:
    - http://www.w3.org/TR/xmlschema-0/#NS
    - http://www.w3schools.com/Schema/
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    AI 147013: am: CL 147012 A readme describing the usage and limitations of MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147013
    AI 147012: A readme describing the usage and limitations of MkStubs.
      BUG=1778786
    
    Automated import of CL 147012
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 149620: mkstubs should ignore all the methods/fields/classes with default access.
      External bug: http://code.google.com/p/android/issues/detail?id=2806
      BUG=1901455
    
    Automated import of CL 149620
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    Minor NPE fix.
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 147193: am: CL 147190 Javadoc for MkStubs.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147193
    AI 147190: Javadoc for MkStubs.
      BUG=1778786
    
    Automated import of CL 147190
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 146870: am: CL 146865 Final pass on stubber: properly filter fields and methods.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146870
    AI 146865: Final pass on stubber: properly filter fields and methods.
      BUG=1778786
    
    Automated import of CL 146865
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 146744: am: CL 146720 ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146744
    AI 146720: ADT Jar Stubber: generate stubbed jar.
      This also reorganizes some source so it's 90% refactoring.
      There will be more filtering to do in another CL.
      BUG=1778786
    
    Automated import of CL 146720
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 145911: ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      BUG=1778786
    
    Automated import of CL 145911
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    AI 144539: am: CL 144533 Reformat JetBoy samples to match code style.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144539
    AI 144533: Reformat JetBoy samples to match code style.
      BUG=1596727
    
    Automated import of CL 144533
    AI 144510: am: CL 144509 Checking in Sonivox' JetBoy code sample. The java code still has a FIXME for cleanup and review to be done before final SDK build.
      Original author: jmtrivi
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144510
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make traceview compile with the new API from SdkStats.
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make traceview compile with the new API from SdkStats.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change scripts to support x86_64 for DDMS.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@136594
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make ApkBuilder create filenames supported by older rules.
    
    'ant install' must know the debug apk filename so newer naming scheme breaks
    on older rule files (1.5 and earlier).
    The fix is to check for the presence of the property naming the debug,
    signed, unaligned package. If the property is present, then we use
    the new naming scheme ({base}[-{config}]-debug-unaligned.apk), else we use
    the old one ({base}-[-{config}]-debug.apk).
    
    Also merge the install/reinstall targets, since 'adb install -r <file>'
    works even if the apk was not yet installed.
    
    DO NOT MERGE
    Make the Ant script sign and zipalign release builds.
    
    It will also align debug builds.
    BUG: 2052744
    Update the API of ApkBuilder to make it clearer what is stable and what isn't.
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    Automated import from //branches/donutburger/...@141594,141594
    Automated import from //branches/cupcake/...@141592,141592
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Add support for add-on based on preview of platforms.
    Refactored AndroidXPathFactory into sdklib.
    Enforce codename value for minSdkVersion in the Ant build.
    
    If the Ant project is targetting a preview platform, the manifest must
    declare minSdkVersion to be the platform codename.
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Move some classes that have non ready APIs to internal packages
    
    - com.android.sdklib.avd -> com.android.sdklib.internal.avd
    - com.android.sdklib.project -> com.android.sdklib.internal.project
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Add hosttestlib library.
    
    hosttestlib is a simple JUnit extension framework for tests that need to interact externally (ie
    from a host machine) with an Android device.
    AI 145983: am: CL 145911 ADT #1778786: tool to generate stubbed jar file.
      This is only a preliminary CL. More will follow but this is
      a good start, with the following caveats:
      What it does:
      - take an input jar, a list of includes, a list of excludes.
      - generate actual Java source for the filtered classes.
      What it doesn't do yet:
      - some more work on filtering inner elements (methods, etc.)
      - properly generate inner classes.
      - hide synthetic fields.
      - some classes body are missing
      - directly generate a stubbed bytecode/jar rather than source.
      I'll likely want to keep the source generator for debugging
      purposes or if we want to integrate with a build system instead.
      - classpath will be changed in the final CL to refer to the external
      ASM lib rather than the project. I need the source for debugging
      rigth now.
      - will review comments before submitting.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145983
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add hosttestlib library.
    
    hosttestlib is a simple JUnit extension framework for tests that need to interact externally (ie
    from a host machine) with an Android device.
    Add hosttestlib library.
    
    hosttestlib is a simple JUnit extension framework for tests that need to interact externally (ie
    from a host machine) with an Android device.
    Add hosttestlib library.
    
    hosttestlib is a simple JUnit extension framework for tests that need to interact externally (ie
    from a host machine) with an Android device.
    Add hosttestlib library.
    
    hosttestlib is a simple JUnit extension framework for tests that need to interact externally (ie
    from a host machine) with an Android device.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Backmerged SDK gathering blocking options
    get rid of "new Display()" in SdkStatsService.getUserPermission(), which caused SWT panic
    Make sure that statistic gathering dialog will not appear
    Add OS version to ping service (win/mac only)
    Disable Android statistics gathering
    Fix the opt-in window for usage stat so that it works when running from ADT.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split development/.gitignore into separate gitignore files per project.
    Added missing gitignore for layoutlib_utils.
    Changed mkstubs build path to use prebuilt/asm-3.1 instead of asm-3.1 project.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Fix the opt-in window for usage stat so that it works when running from ADT.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change scripts to support x86_64 for DDMS.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Use bash instead of sh because of the '[[' command
    
    The '[[' command is not guaranteed to be present in /bin/sh, and in fact
    is missing in stock Ubuntu 8.04
    Improve Linux 32-bit JVM detection logic.
    
    Now we detect if the JVM we are about to run is 32-bit or not,
    rather than checking if the CPU is capable of executing 64-bit
    code or not.
    Add work-around for running DDMS on 64-bit Linux.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Move package installation logic from ADT to ddmlib.
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    Make IDevice#getSyncService() throws an IOException.
    
    This lets callers differentiate between errors when connecting to adb and
    errors because adb couldn't talk to the device.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Automated import from //branches/donutburger/...@140700,140700
    Automated import from //branches/donutburger/...@140700,140700
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Added ADBHOST variable to ADT plugin
    
    Now value of ADBHOST variable is stored in preferences and loaded when adb server is abot to be started
    One can change value of ADBHOST using Android preferences pane
    
    Conflicts:
    
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/AdtPlugin.java
            tools/eclipse/plugins/com.android.ide.eclipse.adt/src/com/android/ide/eclipse/adt/internal/preferences/AndroidPreferencePage.java
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    Make IDevice#getSyncService() throws an IOException.
    
    This lets callers differentiate between errors when connecting to adb and
    errors because adb couldn't talk to the device.
    Automated import from //branches/donutburger/...@140700,140700
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    Add support for preview versions of platforms.
    
    ro.build.version.codename is a new property indicating whether a platform
    is in its release form (value = REL) or in development (value = dev branch
    name such as Donut). When the codename indicates a development/preview version
    then the API level must be ignored and this codename is used as a unique
    identifier of the platform.
    
    IAndroidTarget has been changed to return an instance of a new class
    AndroidVersion instead of the api level directly. This class helps deals with
    the logic of comparing version from targets or devices.
    
    This change impacts all of the sdk manager to deal with targets identified by
    codename instead of api level. This in turn impacts everything that relies
    on the sdkmanager: ADT (build, launch, project creation), the AVD manager,
    the SDK updater.
    Move package installation logic from ADT to ddmlib.
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    Make IDevice#getSyncService() throws an IOException.
    
    This lets callers differentiate between errors when connecting to adb and
    errors because adb couldn't talk to the device.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Automated import from //branches/donutburger/...@140700,140700
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make IDevice#getSyncService() throws an IOException.
    
    This lets callers differentiate between errors when connecting to adb and
    errors because adb couldn't talk to the device.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    Make sure we request the Client allocation status even if we fail to open a debugger port for it.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Move package installation logic from ADT to ddmlib.
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    AI 143918: am: CL 143917 ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143918
    AI 143917: ADT Android JUnit: Change logic to provide an explicit project or package to run to the device InstrumentationTestRunner, instead of providing the potentially huge list of test classes. Discontinue support for running all tests in a source folder.
      BUG=1749513
    
    Automated import of CL 143917
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Allow override of default symbol location for native heap library resolution
    
    Default location of the symbols is $ANDROID_PRODUCT_OUT/symbols.
    Setting the env variable ANDROID_SYMBOLS allows you to override this location
    so that DDMS goes look for the symbol in a different location when
    resolving native heap addresses.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Make the ddmlib API use IDevice instead of Device
    
    Device is now private. All the API is using IDevice.
    Updated ddms, ADT, hierarchyviewer and other tools that relied on ddmlib.
    Make IDevice#getSyncService() throws an IOException.
    
    This lets callers differentiate between errors when connecting to adb and
    errors because adb couldn't talk to the device.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 149055: Add initial file for LED content including doxygen code from lights.h
    
    Automated import of CL 149055
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    AI 148985: Adding an initial file for sensors content with doxygen content included from sensors.h.
    
    Automated import of CL 148985
    AI 148129: Missing \ in Pdk.Mk causing build to not go through - Gaurav
    
    Automated import of CL 148129
    AI 148090: Whichdoc = online/offline
      Whichmodule = pdk for clearsilver
    
    Automated import of CL 148090
    AI 147991: make sources appear in online-pdk/guide
      BUG=1815368
    
    Automated import of CL 147991
    AI 147382: am: CL 147379 copy pdk templates sub-directories also.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147382
    AI 147379: copy pdk templates sub-directories also.
      BUG=1801344
    
    Automated import of CL 147379
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Initial Contribution
    Fix typo and update
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    
    Conflicts:
    
            pdk/README
            pdk/docs/guide/build_new_device.jd
            pdk/docs/guide/build_system.jd
            pdk/docs/guide/sensors.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    AI 149080: Change default PDK app engine version to 2
    
    Automated import of CL 149080
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 147991: make sources appear in online-pdk/guide
      BUG=1815368
    
    Automated import of CL 147991
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    AI 148870: Pinging Ryan for Dr No approval.
      ---
      Cloned from CL 147240 by 'g4 patch'.
      Original change by dwarren@dwarren-pdk on 2009/04/21 14:59:50.
      "Making PDK work in SDK environment."
      This CL should be pretty straight forward and should be touching only PDK
      related templates, etc. Turns out we no longer need to touch the highlightNav
      code.
    
    Automated import of CL 148870
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127101
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@125939
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148117: these docs have moved into "guide" directory.
    
    Automated import of CL 148117
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Updated whitespace
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 149502: - Adding sensors to PDK TOC
      - Added initial table of Product Definition file parameters
      - Added initial table of Android.mk LOCAL_* parameters
    
    Automated import of CL 149502
    AI 148967: Cloned from CL 148932 by 'g4 patch'.
      Original change by dwarren@dwarren-pdk on 2009/05/15 16:17:05.
      Adding Build Cookbook to PDK.
    
    Automated import of CL 148967
    Adding new file in debugging section for tcpdump and other network debugging tools.
    Combined early suspend and wake lock content into existing power management document because content was duplicated. Updated TOC to reflect this change.
    Will do a separate CL to clean up the text itself.
    Moving bring_up.html under System section rather than Build section.
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    
    Conflicts:
    
            pdk/README
            pdk/docs/guide/build_new_device.jd
            pdk/docs/guide/build_system.jd
            pdk/docs/guide/sensors.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    New page, release_keys.jd, requested by bug 1884389.
    Small fix (broken link) to display_drivers.jd.
    Audio.jd has new right-side in-page TOC.
    telephony.jd fixes a bug.
    AI 149502: - Adding sensors to PDK TOC
      - Added initial table of Product Definition file parameters
      - Added initial table of Android.mk LOCAL_* parameters
    
    Automated import of CL 149502
    AI 149478: Reorganized the PDK TOC.
      Added Dalvik content to TOC.
    
    Automated import of CL 149478
    Replaced occurences of "porting guide" with platform development kit
    Also added LED documentation to the TOC
    AI 148967: Cloned from CL 148932 by 'g4 patch'.
      Original change by dwarren@dwarren-pdk on 2009/05/15 16:17:05.
      Adding Build Cookbook to PDK.
    
    Automated import of CL 148967
    AI 148799: New TOC for PDK -- should be less cluttered and uses folding to better
      organize
    
    Automated import of CL 148799
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148792: 3 new pages: customization, early_suspend, and wakelock.
    
    Automated import of CL 148792
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Changed "partner/" to new "vendor/" directories
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    New page, release_keys.jd, requested by bug 1884389.
    Small fix (broken link) to display_drivers.jd.
    Audio.jd has new right-side in-page TOC.
    telephony.jd fixes a bug.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Fixed bad link in intro text.
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    New page, release_keys.jd, requested by bug 1884389.
    Small fix (broken link) to display_drivers.jd.
    Audio.jd has new right-side in-page TOC.
    telephony.jd fixes a bug.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Changed "partner/" to new "vendor/" directories
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Updated Platform Developers Guide welcome page, changing focus from 'porting guide' to 'platform developer guide'.  Modelled on the SDK site developers guide.
    Replaced occurences of "porting guide" with platform development kit
    Also added LED documentation to the TOC
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    New page, release_keys.jd, requested by bug 1884389.
    Small fix (broken link) to display_drivers.jd.
    Audio.jd has new right-side in-page TOC.
    telephony.jd fixes a bug.
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Combined early suspend and wake lock content into existing power management document because content was duplicated. Updated TOC to reflect this change.
    Will do a separate CL to clean up the text itself.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    
    Conflicts:
    
            pdk/README
            pdk/docs/guide/build_new_device.jd
            pdk/docs/guide/build_system.jd
            pdk/docs/guide/sensors.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148985: Adding an initial file for sensors content with doxygen content included from sensors.h.
    
    Automated import of CL 148985
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 149055: Add initial file for LED content including doxygen code from lights.h
    
    Automated import of CL 149055
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    New ntro image for camera.html that shows flow for video capture.
    Changed "partner/" to new "vendor/" directories
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148118: 2 new debugging docs.
    
    Automated import of CL 148118
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Changed "partner/" to new "vendor/" directories
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    New page, release_keys.jd, requested by bug 1884389.
    Small fix (broken link) to display_drivers.jd.
    Audio.jd has new right-side in-page TOC.
    telephony.jd fixes a bug.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Removed SDK add-on product specification parameters (likely will add a separate SDK add-on section in the future).
    Removed reference to stack tool in debugging section, which is an internal-only tool.
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148943: Extracted the commentary from the runs to be headers for the log snippets for readability. Will update the steps (and commentary) in a separate CL.
    
    Automated import of CL 148943
    AI 148118: 2 new debugging docs.
    
    Automated import of CL 148118
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    
    Conflicts:
    
            pdk/README
            pdk/docs/guide/build_new_device.jd
            pdk/docs/guide/build_system.jd
            pdk/docs/guide/sensors.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 149502: - Adding sensors to PDK TOC
      - Added initial table of Product Definition file parameters
      - Added initial table of Android.mk LOCAL_* parameters
    
    Automated import of CL 149502
    AI 148128: -Removed "Option1" about using buildspec which is no longer relevant.
      -Updated paths to no longer reference device/
    
    Automated import of CL 148128
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    
    Conflicts:
    
            pdk/README
            pdk/docs/guide/build_new_device.jd
            pdk/docs/guide/build_system.jd
            pdk/docs/guide/sensors.jd
    - Moved the build variants descriptions into build_system
    - Added Makefile stub into sensors.jd as a starting point
    - Small cleanup to build_new_device to reference the PRODUCT_* parameters
    - Fixed URL in the README for app engine testing
    Removed SDK add-on product specification parameters (likely will add a separate SDK add-on section in the future).
    Removed reference to stack tool in debugging section, which is an internal-only tool.
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 149502: - Adding sensors to PDK TOC
      - Added initial table of Product Definition file parameters
      - Added initial table of Android.mk LOCAL_* parameters
    
    Automated import of CL 149502
    AI 148202: Applying changes to build_new_device.jd originally made by Reena in CL 148100. I made her edits by hand. The problem is that I moved all content files from docs to docs/guide and she edited the version in docs (which no longer exists).
    
    Automated import of CL 148202
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 148100: Testing out PDK updates by updating /device/partner/ references in the "building a new device" steps
    
    Automated import of CL 148100
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    Adding new file in debugging section for tcpdump and other network debugging tools.
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 148793: Integrating publicly posted Bluetooth content.
    
    Automated import of CL 148793
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 146204: am: CL 146203 New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146204
    AI 146203: New .jd files, modified Pdk.mk to fix doxygen </div> bug on line 25 of *-source.html files, removed extraneous SDK examples.
      BUG=1646802
    
    Automated import of CL 146203
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 144166: am: CL 144164 Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      Original author: mritter
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144166
    AI 144164: Adding droiddocs/javadocs usage to Pdk-docs to get correct style.
      BUG=1646802
    
    Automated import of CL 144164
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    * Added in-page TOC to all pages.
    * Removed "Introduction" title from all pages.
    AI 149189: Adding dalvik porting guide based on content from the Android source tree under dalvik/docs/porting.html
    
    Automated import of CL 149189
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    New ntro image for camera.html that shows flow for video capture.
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148763: Adding STK to PDK.
    
    Automated import of CL 148763
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Checking in frame-work for new Open source site
    
            modified:   index.jd
    
            modified:   index.jd
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    AI 148105: Assigning to Ryan for Dr No Approval.
      These are new content files for the partner development kit that will be hosted off of source.android.com externally.
    
    Automated import of CL 148105
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 149005: Change from ndk to platform's ndk (pndk), the ability to make your own java callable libraries to c code.
      BUG=1857858
    
    Automated import of CL 149005
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Move some simulator fixes from master to donut.
    In git master they were part of change 700ccfcc01d3081ff74ef5006e8f0dec5ac52a96,
    which was an auto import from //branches/master/...@140412
    The original change was 134529 in perforce.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Make the simulator handle paths like '//data/data/...' the same way the device does.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Move some simulator fixes from master to donut.
    In git master they were part of change 700ccfcc01d3081ff74ef5006e8f0dec5ac52a96,
    which was an auto import from //branches/master/...@140412
    The original change was 134529 in perforce.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Move some simulator fixes from master to donut.
    In git master they were part of change 700ccfcc01d3081ff74ef5006e8f0dec5ac52a96,
    which was an auto import from //branches/master/...@140412
    The original change was 134529 in perforce.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Move some simulator fixes from master to donut.
    In git master they were part of change 700ccfcc01d3081ff74ef5006e8f0dec5ac52a96,
    which was an auto import from //branches/master/...@140412
    The original change was 134529 in perforce.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add missing system properties to sim.
    
    The framework cannot start if certain properties are missing.  This adds
    a couple of properties used by the backup system.
    
    Also fixed a trio of printf/size_t warnings.
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    atree for ppc firmware
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    AI 146944: am: CL 146943 Move JetCreator into tools/Jet/JetCreator. Add demo content and Logic templates in tools/Jet/
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146944
    AI 146943: Move JetCreator into tools/Jet/JetCreator. Add demo content and Logic templates in tools/Jet/
      BUG=1793093
    
    Automated import of CL 146943
    AI 146750: am: CL 146747 Add the JetCreator tools and docs to the SDK (mac/windows only).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146750
    AI 146747: Add the JetCreator tools and docs to the SDK (mac/windows only).
      BUG=1793093
    
    Automated import of CL 146747
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Use a relative path for android.jar, fix debug builds.
    Added HMP-like 800x600 skin
    Make kernel-qemu be per TARGET_ARCH
    Reinclude SearchableDictionary sample app as a demo of third party inclusion in Quick Search Box.
    
    This reverts commit 3e83e8bc8b969a993b026dab9d13b99b315d9af0.
    Cleanup SDK packaging: remove alias build files.
    Remove SearchableDictionary sample app as it is a demo of third party inclusion in quick search box.
    
    update: remove entry from build.sdk
    Remove WQVGA skin from SDK
    Fixed QVGA skin and added WQVGA432 skin.
    Add OSGi.jar to the SDK (required by org.eclipse.jface)
    Revamped QVGA skin and new WVGA 800/854 skins
    
    BUG: 1944280
    BUG 1993354 : Add zipalign to SDK
    Add a "Searchable Dictionary" app to the sample apps that demonstrates being a part of global search.
    
    updated: makefile adjusted so app is part of sdk, and the manifest refers to the correct sdk version.
    
    updated: brushed up docs and formatting per feedback.
    Fix minor typo and duplicated entry in sdk.atree
    Add notice file to platform folder.
    First pass at a WVGA skin.
    Delete non rotating skins and create a QVGA rotating skin.
    
    HVGA-P and HVGA-L were redundant with HVGA which supports both orientations.
    QVGA-P and QVGA-L has been replaced with QVGA which supports both orientations.
    Add default version files into the SDK for docs/tools/platforms.
    Use Apache Commons Compress instead of java.util.zip
    
    When the SDK installer unarchives the zip files, it is important to keep
    the permissions for executable (Linux/MacOS) or the tools required to
    build applications (aapt, aidl, ...) won't work.
    
    Since java.util.zip does not provide support for permissions, we now
    use the Apache Commons Compress component that allows us to read the
    permission from the archive.
    Add GestureBuilder to the samples.
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    Update the SDK packaging to include sdkuilib.
    
    This is now necessary since the 'android' tool has a UI.
    AI 148875: Fix Google add-on to include Streetview, remove the add-account from the SDK (this is google specific), update the google Add-on to rev 2
    
    Automated import of CL 148875
    AI 145622: am: CL 145380 Fixes for add-on build
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145622
    AI 145380: Fixes for add-on build
    
    Automated import of CL 145380
    AI 143879: am: CL 143876 Include hprof-conv in SDK (bug #1640225)
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143879
    AI 143876: Include hprof-conv in SDK (bug #1640225)
      BUG=1640225
    
    Automated import of CL 143876
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132569
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add GestureBuilder to the samples.
    Revert "Package both swt.jar for linux-x86 and linux-x86_64."
    
    This reverts commit 8f346c14d0b09af59801dfc41a112809630ec6f4.
    https://android-git.corp.google.com/g/Gerrit#change,5179
    Package both swt.jar for linux-x86 and linux-x86_64.
    
    This depends on another CL in prebuilt that packages
    both linux-x86/swt/swt.jar and linux-x86/swt_64/swt_64.jar:
    
      https://android-git.corp.google.com/g/5178
    
    The new jar are picked from out/... rather than prebuilt,
    which seems to work better.
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Default skin settings for MIPS arch added
    mgwz.dll must be packaged next to tools/zipalign.exe in the Windows SDK.
    
    BUG 2068812
    BUG 1993354 : Add zipalign to SDK
    BUG 2033924: Add AdbWinUsbApi.dll to prebuilt for Windows SDK
    BUG 2039647 : support customization from calling wrapper script.
    Remove section about USB driver as not everything is directly available anymore
    
    See development/host/windows/usb/readme.txt
    Fix make_windows_sdk to make sure we're not creating
    files as directories :-)
    Change scripts to support x86_64 for DDMS.
    SDK #1800921: Packages the Windows SDK in a temporary location.
    
    This changes make_windows_sdk so that it packages everything
    in a temp dir. Once the build & packaging succeeds, the final
    Zip is copied to the desired location.
    
    The temp dir is *not* cleared on zip errors, which helps in
    diagnosing packaging issues after the fact.
    
    This has no impact on the build process itself (i.e. make
    adb, emulator, etc.) which all happen in $SDK/out anyway.
    
    The temp dir can be passed as an argument. If not provided,
    the default Cygwin $TMP is used. Otherwise /tmp is used.
    
    I also added an usage description when parameters are missing.
    AI 146970: am: CL 146969 Windows SDK fixes for JetCreator
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146970
    AI 146969: Windows SDK fixes for JetCreator
      BUG=1793093
    
    Automated import of CL 146969
    AI 146944: am: CL 146943 Move JetCreator into tools/Jet/JetCreator. Add demo content and Logic templates in tools/Jet/
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146944
    AI 146943: Move JetCreator into tools/Jet/JetCreator. Add demo content and Logic templates in tools/Jet/
      BUG=1793093
    
    Automated import of CL 146943
    AI 146863: am: CL 146862 Fix Windows SDK build.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146863
    AI 146862: Fix Windows SDK build.
      BUG=1793093
    
    Automated import of CL 146862
    AI 146750: am: CL 146747 Add the JetCreator tools and docs to the SDK (mac/windows only).
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 146750
    AI 146747: Add the JetCreator tools and docs to the SDK (mac/windows only).
      BUG=1793093
    
    Automated import of CL 146747
    AI 143879: am: CL 143876 Include hprof-conv in SDK (bug #1640225)
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143879
    AI 143876: Include hprof-conv in SDK (bug #1640225)
      BUG=1640225
    
    Automated import of CL 143876
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Update doc with a better way to ignore windows problematic files.
    Fix cygwin git script, we need some of the external projects.
    Documents various git issues for Windows.
    fix release notes redirect for the SDK package to point to the correct page
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Initial Contribution
    AI 143665: am: CL 143491 ADT #1742875: Document the SDK build process and new cupcake SDK changes.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143665
    AI 143491: ADT #1742875: Document the SDK build process and new cupcake SDK changes.
      BUG=1742875
    
    Automated import of CL 143491
    AI 143665: am: CL 143491 ADT #1742875: Document the SDK build process and new cupcake SDK changes.
      Original author: raphael
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143665
    AI 143491: ADT #1742875: Document the SDK build process and new cupcake SDK changes.
      BUG=1742875
    
    Automated import of CL 143491
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //branches/cupcake_rel/...@138607
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Update ignore file to include new ignoring patterns
    Add test application
    Add build instructions, ignore list and remove obsolete .sln file
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    BUG 2033924: Add AdbWinUsbApi.dll to prebuilt for Windows SDK
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Complete AdbWinApi split: submit prebuild binaries.
    
    As the result of the split, now we have two DLLs that deal with USB driver
    connection on Windows. AdbWinApi.dll deals with legacy driver and LoadLibrary
    AdbWinUsbApi.dll on condition that WINUSB.DLL is installed on user's machine.
    When both DLLs must be installed in the same location in SDK.
    BUG 2033924
    Bump up AdbWinApi.dll version and submit prebuilt AdbWinApi.dll
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    Initial Contribution
    Complete AdbWinApi split: submit prebuild binaries.
    
    As the result of the split, now we have two DLLs that deal with USB driver
    connection on Windows. AdbWinApi.dll deals with legacy driver and LoadLibrary
    AdbWinUsbApi.dll on condition that WINUSB.DLL is installed on user's machine.
    When both DLLs must be installed in the same location in SDK.
    BUG 2033924
    Add .inf file needed for WinUsb framework installation
    Reformat .inf file for better reading and remove redundancies
    Add .inf file needed for WinUsb framework installation
    Add .inf file needed for WinUsb framework installation
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    Initial Contribution
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@127101
    auto import from //branches/cupcake/...@126645
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    Initial Contribution
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Move legacy driver binaries to the legacy driver directory
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Initial Contribution
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Make changes to enable driver build in new location
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Make changes to enable driver build in new location
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@126645
    Initial Contribution
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Copy legacy driver source code as a sample for custom USB drivers
    
    The primary usage for this code is to provide vendors / customers who for some
    reasons are not satisfied with WinUsb, with a sample custom driver code that is
    compliant with our AdbWinApi.dll. So vendors / customers can build their own
    custom USB driver that can be recognized by AdbWinApi, and can be accessible from
    adb.exe
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Bump up AdbWinApi.dll version and submit prebuilt AdbWinApi.dll
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Add test application
    Refactor ADB API dll to support WinUsb
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Add test application
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add build instructions, ignore list and remove obsolete .sln file
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Fix SDK build break caused by including legacy support header into main API header
    
    usb_windows.c doesn't build with adb_legacy_api.h included into adb_api.h
    Since adb_legacy_api.h is not used anywhere outside AdbWinApi.dll project, the simplest
    fix would be to remove its inclusion from adb_api.h
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Refactor ADB API dll to support WinUsb
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Initial Contribution
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Add classes encapsulatinglegacy USB API
    
    Added implementation for endpoints and overlapped I/O support for legacy API support.
    Fix SDK build break caused by including legacy support header into main API header
    
    usb_windows.c doesn't build with adb_legacy_api.h included into adb_api.h
    Since adb_legacy_api.h is not used anywhere outside AdbWinApi.dll project, the simplest
    fix would be to remove its inclusion from adb_api.h
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Bump up AdbWinApi.dll version and submit prebuilt AdbWinApi.dll
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    In this patch set new file (adb_winusb_api.h) has been added where I moved
    typedef that broke the build. Aso, adb_api.cpp and AdbWinApi.cpp were changed
    to include that new header file.
    BUG 2033924
    Revert "Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL"
    which breaks the Windows SDK on Donut.
    
    This reverts commit f855c4e8469e31114fccca4c28aeb01a806a9a48.
    Split AdbWinApi.dll into two dlls to remove dependency on WINUSB.DLL
    
    Move all WINUSB-dependent functionality into AdbWinUsbApi.dll in order to
    enable ADB on condition that WINUSB has not been installed.
    Refactor API classes to support both, WinUsb and Legacy API
    
    To support both, WinUsb and Legacy driver APIs we need to abstract classes
    that depend on driver API details and then implement two sets of the
    actual classes: one for WinUsb, and another for the Legacy drivers, so
    we can choose in runtime which objects should be instantiated, depending
    on what type of driver we have underneath this API.
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add test application
    Add build instructions, ignore list and remove obsolete .sln file
    Add official copyright templates
    
    Signed-off-by: Dave Bort <dbort@android.com>
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add test application
    Refactor ADB API dll to support WinUsb
    Add test application
    Add test application
    Add test application
    Refactor ADB API dll to support WinUsb
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add test application
    Added in simple command scripting to monkey over a TCP socket.
    
    This allows a host program to talk to the monkey over TCP (via adb) and script up specific commands to run.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add getvar and listvar commands to monkey to allow inspection of properties on the device.
    Squashed commit of the following:
    
    commit d36aba1463cf8dca9dea7b4e436a71c6821f341a
    Author: Bill Napier <napier@google.com>
    Date:   Tue Aug 11 16:36:07 2009 -0700
    
        Change disconnect to be the same as if the user had issued a done command.
    
    commit 4ab3ef149e815188105e10febd5a00ee5d0574fc
    Author: Bill Napier <napier@google.com>
    Date:   Tue Aug 11 16:31:16 2009 -0700
    
        Add "done" command to allow multiple sessions.
    Add "type" command to allow strings to be more easily typed.
    Add press/tap and also a command queue for returning multiple events.
    Add "wake" command to wake device up.  Run wake command at first connection.
    Update monkey network readme.
    Added in simple command scripting to monkey over a TCP socket.
    
    This allows a host program to talk to the monkey over TCP (via adb) and script up specific commands to run.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Added in simple command scripting to monkey over a TCP socket.
    
    This allows a host program to talk to the monkey over TCP (via adb) and script up specific commands to run.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Add getvar and listvar commands to monkey to allow inspection of properties on the device.
    Squashed commit of the following:
    
    commit d36aba1463cf8dca9dea7b4e436a71c6821f341a
    Author: Bill Napier <napier@google.com>
    Date:   Tue Aug 11 16:36:07 2009 -0700
    
        Change disconnect to be the same as if the user had issued a done command.
    
    commit 4ab3ef149e815188105e10febd5a00ee5d0574fc
    Author: Bill Napier <napier@google.com>
    Date:   Tue Aug 11 16:31:16 2009 -0700
    
        Add "done" command to allow multiple sessions.
    Add "type" command to allow strings to be more easily typed.
    Add press/tap and also a command queue for returning multiple events.
    Add "wake" command to wake device up.  Run wake command at first connection.
    Added in simple command scripting to monkey over a TCP socket.
    
    This allows a host program to talk to the monkey over TCP (via adb) and script up specific commands to run.
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Added in simple command scripting to monkey over a TCP socket.
    
    This allows a host program to talk to the monkey over TCP (via adb) and script up specific commands to run.
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    AI 143190: am: CL 142951 Change the way we handle monkey throttling. We now will only sleep after complete down/[move]/up sequences. This avoids unwanted long pressing. We will need to add code to explicitly long press at some point.
      Original author: emillar
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143190
    Automated import from //branches/cupcake/...@142951,142951
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132569
    Code drop from //branches/cupcake/...@124589
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    AI 143190: am: CL 142951 Change the way we handle monkey throttling. We now will only sleep after complete down/[move]/up sequences. This avoids unwanted long pressing. We will need to add code to explicitly long press at some point.
      Original author: emillar
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143190
    Automated import from //branches/cupcake/...@142951,142951
    Add getvar and listvar commands to monkey to allow inspection of properties on the device.
    Add "wake" command to wake device up.  Run wake command at first connection.
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    AI 143190: am: CL 142951 Change the way we handle monkey throttling. We now will only sleep after complete down/[move]/up sequences. This avoids unwanted long pressing. We will need to add code to explicitly long press at some point.
      Original author: emillar
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143190
    Automated import from //branches/cupcake/...@142951,142951
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add "type" command to allow strings to be more easily typed.
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Add getvar and listvar commands to monkey to allow inspection of properties on the device.
    Squashed commit of the following:
    
    commit d36aba1463cf8dca9dea7b4e436a71c6821f341a
    Author: Bill Napier <napier@google.com>
    Date:   Tue Aug 11 16:36:07 2009 -0700
    
        Change disconnect to be the same as if the user had issued a done command.
    
    commit 4ab3ef149e815188105e10febd5a00ee5d0574fc
    Author: Bill Napier <napier@google.com>
    Date:   Tue Aug 11 16:31:16 2009 -0700
    
        Add "done" command to allow multiple sessions.
    Added in simple command scripting to monkey over a TCP socket.
    
    This allows a host program to talk to the monkey over TCP (via adb) and script up specific commands to run.
    Rename IActivityWatcher to IActivityController
    Add network statistics collection to monkey runs.
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    AI 143190: am: CL 142951 Change the way we handle monkey throttling. We now will only sleep after complete down/[move]/up sequences. This avoids unwanted long pressing. We will need to add code to explicitly long press at some point.
      Original author: emillar
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143190
    Automated import from //branches/cupcake/...@142951,142951
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Change import for IIntentReceiver since the class has been refactored from android.app to android.content
    Add network statistics collection to monkey runs.
    Add "wake" command to wake device up.  Run wake command at first connection.
    AI 144927: Fix throttling in scripted monkeys (bug #1739843).
      BUG=1739843
    
    Automated import of CL 144927
    AI 143190: am: CL 142951 Change the way we handle monkey throttling. We now will only sleep after complete down/[move]/up sequences. This avoids unwanted long pressing. We will need to add code to explicitly long press at some point.
      Original author: emillar
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143190
    Automated import from //branches/cupcake/...@142951,142951
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@136745
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Moving compatibilty mode option to spare parts
    remove the setting for fancy rotation animation
    AI 143220: am: CL 143022 New spare parts feature.  Spare parts is only in engineering builds, so I am hoping it is okay to check in -- it's the same as updating sample code etc.
      Original author: hackbod
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143220
    Automated import from //branches/cupcake/...@143022,143022
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Removed un-needed options from SpareParts application.
    
    Signed-off-by: Matthew Ranostay <mranostay@embeddedalley.com>
    Removed Battery settings from SpareParts application.
    
    Signed-off-by: Matthew Ranostay <mranostay@embeddedalley.com>
    Moving compatibilty mode option to spare parts
    remove the setting for fancy rotation animation
    AI 143220: am: CL 143022 New spare parts feature.  Spare parts is only in engineering builds, so I am hoping it is okay to check in -- it's the same as updating sample code etc.
      Original author: hackbod
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143220
    Automated import from //branches/cupcake/...@143022,143022
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Removed un-needed options from SpareParts application.
    
    Signed-off-by: Matthew Ranostay <mranostay@embeddedalley.com>
    Moving compatibilty mode option to spare parts
    remove the setting for fancy rotation animation
    AI 143220: am: CL 143022 New spare parts feature.  Spare parts is only in engineering builds, so I am hoping it is okay to check in -- it's the same as updating sample code etc.
      Original author: hackbod
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143220
    Automated import from //branches/cupcake/...@143022,143022
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Define a new activity that lists permissions and apps using that permission with some additional details as well
    First pass.
    AI 147271: am: CL 147269 Remove "show compass" option as it requires Google Maps dependency.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147271
    AI 147269: Remove "show compass" option as it requires Google Maps dependency.
      BUG=1804337
    
    Automated import of CL 147269
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Define a new activity that lists permissions and apps using that permission with some additional details as well
    First pass.
    Add new text display attribute for gles version number
    Teleca 2b changes.
    AI 147271: am: CL 147269 Remove "show compass" option as it requires Google Maps dependency.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147271
    AI 147269: Remove "show compass" option as it requires Google Maps dependency.
      BUG=1804337
    
    Automated import of CL 147269
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add new text display attribute for gles version number
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    AI 147271: am: CL 147269 Remove "show compass" option as it requires Google Maps dependency.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147271
    AI 147269: Remove "show compass" option as it requires Google Maps dependency.
      BUG=1804337
    
    Automated import of CL 147269
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Define a new activity that lists permissions and apps using that permission with some additional details as well
    First pass.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Define a new activity that lists permissions and apps using that permission with some additional details as well
    First pass.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@132276
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Define a new activity that lists permissions and apps using that permission with some additional details as well
    First pass.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add new text display attribute for gles version number
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 147271: am: CL 147269 Remove "show compass" option as it requires Google Maps dependency.
      Original author: xav
      Merged from: //branches/cupcake/...
    
    Automated import of CL 147271
    AI 147269: Remove "show compass" option as it requires Google Maps dependency.
      BUG=1804337
    
    Automated import of CL 147269
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Fix enter key and control keys in Terminal emulator.
    
    Previously the enter key only worked after the trackball had been
    clicked at least once. Fixed by calling setFocibleInTouchMode.
    
    Fix bug where control keys didn't work with the soft keyboard.
    
    Fix some warnings reported by Eclipse IDE. (Missing @Overrides, needless
    imports, unused variables.)
    AI 143272: am: CL 143256 Make the Term emulator work with the most recent keyboard IME.
      + Makes the "Enter" key work again.
      + Makes the "Delete" key delete just one character each time you press it
      instead of two.
      Original author: jackpal
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143272
    AI 143256: Make the Term emulator work with the most recent keyboard IME.
      + Makes the "Enter" key work again.
      + Makes the "Delete" key delete just one character each time you press it
      instead of two.
      BUG=1615131
    
    Automated import of CL 143256
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@131421
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    AI 144372: Cleanup Settings support for enabling and disabling location providers:
      LocationManagerService now listens for changes to settings,
      making LocationManager.updateProviders() unnecessary.
      Removed LocationManager.updateProviders()
      Added Settings.Secure.setLocationProviderEnabled(), which is a thread-safe way
      of enabling or disabling a single location provider.
      This is safer than reading, modifying and writing the LOCATION_PROVIDERS_ALLOWED directly.
      BUG=1729031
    
    Automated import of CL 144372
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127436
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@131421
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    auto import from //branches/cupcake/...@137197
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    Import revised translations.  DO NOT MERGE
    AI 144355: Automated g4 rollback of changelist 144335.
      *** Reason for rollback ***
      Roll back US Spanish import because it made the build too big.
      *** Original change description ***
      Import US Spanish translations, and a few Japanese changes.
    
    Automated import of CL 144355
    AI 144336: am: CL 144335 Import US Spanish translations, and a few Japanese changes.
      Original author: enf
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144336
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    Import revised translations.  DO NOT MERGE
    Import new translations
    AI 144355: Automated g4 rollback of changelist 144335.
      *** Reason for rollback ***
      Roll back US Spanish import because it made the build too big.
      *** Original change description ***
      Import US Spanish translations, and a few Japanese changes.
    
    Automated import of CL 144355
    AI 144336: am: CL 144335 Import US Spanish translations, and a few Japanese changes.
      Original author: enf
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144336
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    Import new translations
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    Import revised translations.  DO NOT MERGE
    Import new translations
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    Import new translations
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Import revised translations.  DO NOT MERGE
    Import new translations
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    Import new translations
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    Import new translations
    AI 149721: Import Portuguese translations.
    
    Automated import of CL 149721
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    Import new translations
    AI 144355: Automated g4 rollback of changelist 144335.
      *** Reason for rollback ***
      Roll back US Spanish import because it made the build too big.
      *** Original change description ***
      Import US Spanish translations, and a few Japanese changes.
    
    Automated import of CL 144355
    AI 144336: am: CL 144335 Import US Spanish translations, and a few Japanese changes.
      Original author: enf
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144336
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    Import new translations
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    auto import from //branches/cupcake/...@126645
    auto import from //branches/cupcake/...@125939
    Code drop from //branches/cupcake/...@124589
    Import revised translations.  DO NOT MERGE
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@127436
    Code drop from //branches/cupcake/...@124589
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Change the SDK, DDMS and Traceview to work with the new SWT libraries.
    
    The SDK now contains 32 and 64 bit version of SWT. DDMS and Traceview
    use the archquery java app to check the architecture of the VM to decide
    which version of SWT should be used to run the apps.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@126645
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Automated import from //branches/donutburger/...@140818,140818
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Add new application for the SDK to let developers build their own gestures
    libraries.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    auto import from //branches/cupcake/...@130745
    Code drop from //branches/cupcake/...@124589
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Add new application for the SDK to let developers build their own gestures
    libraries.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@135843
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    Initial Contribution
    Add new application for the SDK to let developers build their own gestures
    libraries.
    Make GestureBuilder build under the SDK.
    Add new application for the SDK to let developers build their own gestures
    libraries.
    testrunner: Allow spaces in instrumentation arguments and remove check for test
    app presence.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Make runtest wait for instrumentation install before running test.
    
    This attempts to address bug 1872940 where runtest will attempt to
    run the test before all the new packages pushed via adb sync are
    actually installed. This won't completely fix the bug in all cases,
    but hopefully will help most situations.
    Add support for parsing code coverage file path to runtest and related cleanup.
    
    This change is to adapt runtest to the InstrumentationTestRunner change which
    dumps coverage data to the app's local data folder, instead of a fixed file on
    the sdcard.
    
    Also fixed adb_interace.StartInstrumentationForPackage, added better handling
    when generating coverage for tests with unknown coverage targets, and reduced
    the duplicate definitions of the "coverage_targets.xml" definition file.
    runtest.py bug fixes.
    
    Improved error handling, and added support for "size" and "package" arguments.
    Removed deprecated runtest shell script.
    AI 143688: am: CL 143562 Usability fixes for runtest.py
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143688
    AI 143562: Usability fixes for runtest.py
      BUG=1743678
    
    Automated import of CL 143562
    auto import from //depot/cupcake/@136654
    AI 143819: am: CL 143765 Rename tests.xml to test_defs.xml
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143819
    AI 143765: Rename tests.xml to test_defs.xml
      BUG=1746304
    
    Automated import of CL 143765
    auto import from //branches/cupcake_rel/...@140373
    AI 143688: am: CL 143562 Usability fixes for runtest.py
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143688
    AI 143562: Usability fixes for runtest.py
      BUG=1743678
    
    Automated import of CL 143562
    auto import from //depot/cupcake/@136654
    Fix bug 1844502: Add create_test.py to generate Android.mk and AndroidManifest.xml for application tests.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Initial change to add cts tests to runtest.
    
    Adds cts test definitions to the testrunner/test_defs.xml.
    Adds support for runtest --cts arg, which will run all cts tests.
    This temporarily relies on the addition of a 'cts' attribute to the test
    definition - a new xml format may be defined later that changes how cts tests
    are identified.
    
    This change is based on previous unsubmitted CL
    https://android-git.corp.google.com/g/Gerrit#change,1702. The only delta wrt
    to that change is the use of InstrumentationCtsTestRunner.
    
    Update: rebased to latest donut.
    runtest.py bug fixes.
    
    Improved error handling, and added support for "size" and "package" arguments.
    Removed deprecated runtest shell script.
    auto import from //depot/cupcake/@136654
    Fix relative class path arg handling in runtest, and some lint errors.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Make runtest wait for instrumentation install before running test.
    
    This attempts to address bug 1872940 where runtest will attempt to
    run the test before all the new packages pushed via adb sync are
    actually installed. This won't completely fix the bug in all cases,
    but hopefully will help most situations.
    Initial change to add cts tests to runtest.
    
    Adds cts test definitions to the testrunner/test_defs.xml.
    Adds support for runtest --cts arg, which will run all cts tests.
    This temporarily relies on the addition of a 'cts' attribute to the test
    definition - a new xml format may be defined later that changes how cts tests
    are identified.
    
    This change is based on previous unsubmitted CL
    https://android-git.corp.google.com/g/Gerrit#change,1702. The only delta wrt
    to that change is the use of InstrumentationCtsTestRunner.
    
    Update: rebased to latest donut.
    Add support for parsing code coverage file path to runtest and related cleanup.
    
    This change is to adapt runtest to the InstrumentationTestRunner change which
    dumps coverage data to the app's local data folder, instead of a fixed file on
    the sdcard.
    
    Also fixed adb_interace.StartInstrumentationForPackage, added better handling
    when generating coverage for tests with unknown coverage targets, and reduced
    the duplicate definitions of the "coverage_targets.xml" definition file.
    Add a timeout flag to runtest for running native tests on devices.
    Made valgrind optional. Capture the target output.
    
    Don't fail if valgrind (system version not the google3 one) is missing.
    If the test fail, print the output of the test.
    Added .pyc to the gitignore file.
    Add ability to specify relative class paths when using runtest -c
    
    "runtest -c .<className>" will now be equivalent to
    "runtest -c <package>.<className>", where package is the test-app's package as defined in test_defs.xml.
    runtest.py bug fixes.
    
    Improved error handling, and added support for "size" and "package" arguments.
    Removed deprecated runtest shell script.
    Broaden the search for native test files.
    
    Previously we were looking for test files with this pattern: test_*
    I added *_test.[cc|cpp] and *_unittest.[cc|cpp]
    
    The search also scan all the subdirectories of the build_path from
    the test definition.
    
    I added a filtering stage where missing tests are ignored.
    For instance we may have a source file that has not been built for
    the target, in which case it is ignored when we run the target tests.
    
    In android_build.py I added 4 helper functions to get access to the
    build environment:
    - GetHostBin
    - GetProductOut
    - GetTargetSystemBin
    - GetHostOsArch
    
    Replace all the hardcoded linux-x86 strings with the value returned
    by GetHostOsArch.
    Added a method in run_command.py to run a host test.
    The run can also happen under valgrind.
    
    runtest.py: Search for host test as well. Run these under valgrind.
    Added single quotes around the shell command sent to the device.
    Without the quotes, the shell split the command and the echo statement
    gets dropped.
    AI 144980: Fix runtest --coverage.
    
    Automated import of CL 144980
    AI 144500: Added support for some extra make arguments for some testsuite.
      For instance the libstdc++ testsuite requires BIONIC_TESTS=1 to
      actually build the tests.
      * development/testrunner/test_defs.py:
      Parse the new extra_make_args attribute.
      * development/testrunner/runtest.py:
      Added support for extra make arguments. Some testsuite requires this to actually be built.
      Changed the log statement to log what is actually being done.
      * development/testrunner/test_defs.xml:
      Added extra make argument to enable the libstdc++ tests.
    
    Automated import of CL 144500
    AI 144340: Added support to run native tests on the device.
      The tests name must start with 'test_'.
      Tests should return 0 on success, 1 on failure.
      * development/testrunner/test_defs.xml:
      Added new element to represent native tests.
      * development/testrunner/test_defs.py:
      Added handling of the new <test-native> element.
      The testsuite has new IsNative method.
      TestDefinition's iterator is ordered by test names.
      Added GetDescription() method to access the optional description.
      * development/testrunner/runtest.py:
      Print the description next to the test name if applicable
      (runtest_py -l)
      Added a _RunNativeTest method to run a test on the target, report
      the status and clean up the test after the run.
      Added
      BUG=1601432
    
    Automated import of CL 144340
    AI 144262: am: CL 144260 Add constant for test file name in runtest.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 144262
    AI 144260: Add constant for test file name in runtest.
    
    Automated import of CL 144260
    AI 143819: am: CL 143765 Rename tests.xml to test_defs.xml
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143819
    AI 143765: Rename tests.xml to test_defs.xml
      BUG=1746304
    
    Automated import of CL 143765
    AI 143688: am: CL 143562 Usability fixes for runtest.py
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143688
    AI 143562: Usability fixes for runtest.py
      BUG=1743678
    
    Automated import of CL 143562
    auto import from //branches/cupcake_rel/...@140373
    runtest: Remove run_command -> android_build dependency.
    
    This is desired because run_command is used by puppetmaster which should have
    no dependency on android build system.
    Fixed valgrind handling issue.
    
    Turns out valgrind always exits with error code 0 even when a leak is
    detected. Instead we are now looking for an empty output.
    Made valgrind optional. Capture the target output.
    
    Don't fail if valgrind (system version not the google3 one) is missing.
    If the test fail, print the output of the test.
    Added .pyc to the gitignore file.
    runtest.py bug fixes.
    
    Improved error handling, and added support for "size" and "package" arguments.
    Removed deprecated runtest shell script.
    Broaden the search for native test files.
    
    Previously we were looking for test files with this pattern: test_*
    I added *_test.[cc|cpp] and *_unittest.[cc|cpp]
    
    The search also scan all the subdirectories of the build_path from
    the test definition.
    
    I added a filtering stage where missing tests are ignored.
    For instance we may have a source file that has not been built for
    the target, in which case it is ignored when we run the target tests.
    
    In android_build.py I added 4 helper functions to get access to the
    build environment:
    - GetHostBin
    - GetProductOut
    - GetTargetSystemBin
    - GetHostOsArch
    
    Replace all the hardcoded linux-x86 strings with the value returned
    by GetHostOsArch.
    Modified the command to run native test on the host:
    - when valgrind is used, the output is discarded, always.
    - otherwise, the output of the test is printed only when the test failed.
    Added a method in run_command.py to run a host test.
    The run can also happen under valgrind.
    
    runtest.py: Search for host test as well. Run these under valgrind.
    auto import from //depot/cupcake/@136654
    Made valgrind optional. Capture the target output.
    
    Don't fail if valgrind (system version not the google3 one) is missing.
    If the test fail, print the output of the test.
    Added .pyc to the gitignore file.
    Add test definition for cts-gesture.
    
    BUG 2048364
    
    Change-Id: I71b2cc197a9f6809dfb863d919a7fdeae75bd411
    1. Add .c extension to native_test.py so that native test in C can also be picked up by testrunner.
    2. Add netkeystore_test into continuous test cycle.
    Add test definition for cts-telephony.
    
    BUG 2048364
    Fix runtest launchperf test definition.
    
    BUG 2045435
    Since bug 1966269 is fixed, marking calprov tests as continuous=true
    Add the test definition of the vpn tests.
    Removing continuous attribute for the calendar provider tests.
    Removing calprov test suite from continuous build until to get real fix for bug 1966269
    Modify runtest test_defs to adjust for rename of cts-installtests.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Add ApiDemos to the test build, and cts-permission2 tests to test_defs.xml.
    
    This should enable the ApiDemos sample tests to run continuously again.
    Add framework, downloadprovider, improvider and global search
    permission tests to continuous tests.
    Added ASTL tests to the suite.
    Add downloadprovider permission tests runtest shortcut.
    Add runtest test definition for framework-permission
    Change cts-permission runtest def to use proper runner.
    Add GlobalSearch to test definitions.
    Added the test definiton for the cameraLatnecy and the mediamemorystress test
    Initial change to add cts tests to runtest.
    
    Adds cts test definitions to the testrunner/test_defs.xml.
    Adds support for runtest --cts arg, which will run all cts tests.
    This temporarily relies on the addition of a 'cts' attribute to the test
    definition - a new xml format may be defined later that changes how cts tests
    are identified.
    
    This change is based on previous unsubmitted CL
    https://android-git.corp.google.com/g/Gerrit#change,1702. The only delta wrt
    to that change is the use of InstrumentationCtsTestRunner.
    
    Update: rebased to latest donut.
    Added the mediaapitest, mediarecordertest and stress test in the testrunner.So
    the partner can run the test easier.
    Change build path to "packages/app/Camera.apk". So that it will also
    build the application code.
    Add XML Schema for runtest's test_defs.xml file
    Add tests definition (unit tests and stress tests) for Camera.
    Broaden the search for native test files.
    
    Previously we were looking for test files with this pattern: test_*
    I added *_test.[cc|cpp] and *_unittest.[cc|cpp]
    
    The search also scan all the subdirectories of the build_path from
    the test definition.
    
    I added a filtering stage where missing tests are ignored.
    For instance we may have a source file that has not been built for
    the target, in which case it is ignored when we run the target tests.
    
    In android_build.py I added 4 helper functions to get access to the
    build environment:
    - GetHostBin
    - GetProductOut
    - GetTargetSystemBin
    - GetHostOsArch
    
    Replace all the hardcoded linux-x86 strings with the value returned
    by GetHostOsArch.
    AI 145444: am: CL 145062 Took out the muisc player test from the continuous build test.
      Original author: yslau
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145444
    AI 145062: Took out the muisc player test from the continuous build test.
      BUG=1683748,1678380
    
    Automated import of CL 145062
    AI 144500: Added support for some extra make arguments for some testsuite.
      For instance the libstdc++ testsuite requires BIONIC_TESTS=1 to
      actually build the tests.
      * development/testrunner/test_defs.py:
      Parse the new extra_make_args attribute.
      * development/testrunner/runtest.py:
      Added support for extra make arguments. Some testsuite requires this to actually be built.
      Changed the log statement to log what is actually being done.
      * development/testrunner/test_defs.xml:
      Added extra make argument to enable the libstdc++ tests.
    
    Automated import of CL 144500
    AI 144340: Added support to run native tests on the device.
      The tests name must start with 'test_'.
      Tests should return 0 on success, 1 on failure.
      * development/testrunner/test_defs.xml:
      Added new element to represent native tests.
      * development/testrunner/test_defs.py:
      Added handling of the new <test-native> element.
      The testsuite has new IsNative method.
      TestDefinition's iterator is ordered by test names.
      Added GetDescription() method to access the optional description.
      * development/testrunner/runtest.py:
      Print the description next to the test name if applicable
      (runtest_py -l)
      Added a _RunNativeTest method to run a test on the target, report
      the status and clean up the test after the run.
      Added
      BUG=1601432
    
    Automated import of CL 144340
    AI 143819: am: CL 143765 Rename tests.xml to test_defs.xml
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143819
    AI 143765: Rename tests.xml to test_defs.xml
      BUG=1746304
    
    Automated import of CL 143765
    AI 143698: am: CL 143596 Removed all the obsoleted media related functional test suite. (incl, very old meidaProvider,
      RingToneSettings and the flaky Music Player test.
      Original author: yslau
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143698
    AI 143596: Removed all the obsoleted media related functional test suite. (incl, very old meidaProvider,
      RingToneSettings and the flaky Music Player test.
      BUG=1683748,1678380
    
    Automated import of CL 143596
    auto import from //branches/cupcake_rel/...@140373
    auto import from //depot/cupcake/@135843
    auto import from //depot/cupcake/@132589
    auto import from //depot/cupcake/@137055
    testrunner: Allow spaces in instrumentation arguments and remove check for test
    app presence.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Broaden the search for native test files.
    
    Previously we were looking for test files with this pattern: test_*
    I added *_test.[cc|cpp] and *_unittest.[cc|cpp]
    
    The search also scan all the subdirectories of the build_path from
    the test definition.
    
    I added a filtering stage where missing tests are ignored.
    For instance we may have a source file that has not been built for
    the target, in which case it is ignored when we run the target tests.
    
    In android_build.py I added 4 helper functions to get access to the
    build environment:
    - GetHostBin
    - GetProductOut
    - GetTargetSystemBin
    - GetHostOsArch
    
    Replace all the hardcoded linux-x86 strings with the value returned
    by GetHostOsArch.
    auto import from //branches/cupcake_rel/...@140373
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Add support for parsing code coverage file path to runtest and related cleanup.
    
    This change is to adapt runtest to the InstrumentationTestRunner change which
    dumps coverage data to the app's local data folder, instead of a fixed file on
    the sdcard.
    
    Also fixed adb_interace.StartInstrumentationForPackage, added better handling
    when generating coverage for tests with unknown coverage targets, and reduced
    the duplicate definitions of the "coverage_targets.xml" definition file.
    AI 143688: am: CL 143562 Usability fixes for runtest.py
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 143688
    AI 143562: Usability fixes for runtest.py
      BUG=1743678
    
    Automated import of CL 143562
    auto import from //depot/cupcake/@136654
    Fix bug 1844502: Add create_test.py to generate Android.mk and AndroidManifest.xml for application tests.
    auto import from //depot/cupcake/@136654
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Fix bug 1844502: Add create_test.py to generate Android.mk and AndroidManifest.xml for application tests.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Initial change to add cts tests to runtest.
    
    Adds cts test definitions to the testrunner/test_defs.xml.
    Adds support for runtest --cts arg, which will run all cts tests.
    This temporarily relies on the addition of a 'cts' attribute to the test
    definition - a new xml format may be defined later that changes how cts tests
    are identified.
    
    This change is based on previous unsubmitted CL
    https://android-git.corp.google.com/g/Gerrit#change,1702. The only delta wrt
    to that change is the use of InstrumentationCtsTestRunner.
    
    Update: rebased to latest donut.
    Add XML Schema for runtest's test_defs.xml file
    AI 145095: am: CL 144902 Fix default src lookup for code coverage.
      Original author: brettchabot
      Merged from: //branches/cupcake/...
    
    Automated import of CL 145095
    AI 144902: Fix default src lookup for code coverage.
    
    Automated import of CL 144902
    auto import from //depot/cupcake/@135843
    Automated import from //branches/donutburger/...@141815,141815
    Automated import from //branches/cupcake/...@141814,141814
    auto import from //depot/cupcake/@135843
    Fix relative class path arg handling in runtest, and some lint errors.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Fix relative class path arg handling in runtest, and some lint errors.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
    1. Add .c extension to native_test.py so that native test in C can also be picked up by testrunner.
    2. Add netkeystore_test into continuous test cycle.
    runtest: Remove run_command -> android_build dependency.
    
    This is desired because run_command is used by puppetmaster which should have
    no dependency on android build system.
    Fix relative class path arg handling in runtest, and some lint errors.
    Add support for running host java tests to runtest.
    
    With this change, also refactored runtest as follows: Modified the
    test suite schema and python implementation to have an inheritance
    structure.  Each test type has its own python module, which will
    also handle the logic of running the test.
