    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Add jarjar rules to repackage okio to com.android.okio
    
    ... and thereby avoid conflicts with apps.
    
    Bug: 15303726
    Change-Id: I231ffb6a2e60ae47105b781e0da2ae7866eedff1
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Add makefile + jarjar rule for okhttp.
    
    Created a new path android/ that contains android
    specific patches to this code. This is not a long term approach,
    simply a stop gap measure to get this codebase compiling and usable
    under android. For now, this path contains changes to Libcore.java
    to remove OpenJDK dependencies.
    
    This patchset also updates the snapshot to upstream revision
    2a05f0e18f0ae67.
    
    Change-Id: Ic1ef8245109e07c7cf9f59c1e7881b86d357d74f
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Add makefile + jarjar rule for okhttp.
    
    Created a new path android/ that contains android
    specific patches to this code. This is not a long term approach,
    simply a stop gap measure to get this codebase compiling and usable
    under android. For now, this path contains changes to Libcore.java
    to remove OpenJDK dependencies.
    
    This patchset also updates the snapshot to upstream revision
    2a05f0e18f0ae67.
    
    Change-Id: Ic1ef8245109e07c7cf9f59c1e7881b86d357d74f
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Apply upstream commit: Allow HTAB in header values.
    
    This applies upstream commit
    02b08fbde7b1726d7a4c0dc971152751ac82ca0a
    
    Due to deviation between upstream and AOSP, the change was applied
    manually.
    
    RFC 7230 section 3.2 allows HTAB ('\t', '\u0009') inside header
    values as long as there is not more than one in a row:
      https://tools.ietf.org/html/rfc7230#section-3.2
    
    Before this CL, OkHttp previously disallowed HTAB in header values.
    This CL changes behavior to allow any number of consecutive HTABs
    inside a header value; this is more permissive than the RFC, but
    is consistent with how OkHttp currently treats space characters
    (' ', '\u0020').
    
    Bug: 30799514
    
    Test: run cts -m CtsLibcoreTestCases
    Test: run cts -m CtsLibcoreOkHttpTestCases
    
    Change-Id: I0dd68d1697affaf739167174970d52e466a2bc16
    (cherry picked from commit 1917ec9635dea723538ea000b67b105999e58710)
    Relax validation of HTTP header values to retain L/M behavior
    
    This relaxes some validation logic newly introduced in the version
    of OkHttp used in N.
    
    This change leaves the character code validation stricter
    than it was in M by still preventing control codes like \n, \r,
    backspace and delete. It does allow developers to pass
    Java characters > 7F to addRequestProperty() and also receive
    headers from servers which contain characters > 7F.
    
    Android's HttpURLConnection does not follow the HTTP spec as
    it encodes request header values and interprets response
    headers as UTF-8 and not ISO-8859-1.
    
    If a server is expecting or sending ISO-8859-1 encoded characters
    >7F in headers then these will still be corrupted or misinterpreted
    by Android. However, this has been the behavior since L and is not
    changed here.
    
    The OkHttp change which caused characters >7F to generate an
    IllegalArgumentException and partially reverted here:
    https://github.com/square/okhttp/pull/1785
    
    See also: https://github.com/square/okhttp/issues/1998
    https://github.com/square/okhttp/issues/2016
    for recent upstream bugs.
    
    Bug: 28867041
    Bug: https://code.google.com/p/android/issues/detail?id=210205
    Change-Id: Ibdf14d819411a12fcc78d012bfca97db048b7e6e
    Workaround for request header values with trailing '\r' or '\r\n'
    
    Testing is showing an app that appears to
    be setting a request header with a trailing '\r'. This change
    strips the '\r' or '\r\n' iff it is at the end of the value.
    
    (cherry picked from commit 8ef2daccd20f80b439c93af7d7985fb26d1f6b2f)
    
    Bug: 26889631
    Change-Id: I3a521a5272ad0c7cf3b018892516ced9e65f46ca
    Workaround for request header values with trailing '\n'
    
    Testing is showing a high-profile app that appears to
    be setting a request header with a trailing '\n'. This change
    strips the '\n' iff it is at the end of the value.
    
    Bug: 26422335
    Change-Id: Iaf63829574ce73f17b5ab75362144e95a00b4b26
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Use different URL encoding for single quote in query
    
    Single quotes in query parameters in HttpURLConnection changed
    behavior between M and N due to upstream changes in OkHttp:
    in N, single quotes started being encoded as %27 when present in
    query parameters. Unfortunately, this broke several "iTunes remote"
    apps: iTunes appears not to support %27 encoding for single quotes
    in its DAAP server.
    
    Bug: 30405333
    Test: (old) cts test packages android.core.tests.libcore.package.okhttp
        and android.core.tests.libcore.package.libcore
    Change-Id: Ic5ce976d969a733973c7e62cc6747cb679e78ca8
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    This change did not apply cleanly. Upstream FormEncodingBuilder has
    been refactored. Equivalent changes have been made.
    
    Upstream details:
    Comment:
    Never throw converting an HttpUrl to a java.net.URI.
    
    Just do arbitrary amounts of transformation. Sigh.
    
    Closes https://github.com/square/okhttp/issues/2116
    SHA: d77edcc8905148f18a691be180c4f8f366a5ee1b
    
    Bug: 27590872
    Change-Id: Ia12df5dc95c1681c67552b2c7725393508f52c0e
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    
    Upstream details:
    Comment:
    Don't percent-encode non-ASCII characters in fragments
    
    Fixes https://github.com/square/okhttp/issues/1635
    SHA: f4feb0adfcd8e209f90d4fffb6facf5c07f57110
    
    Bug: 27590872
    Change-Id: I827536ced778254103bdbe9d4b54baa4a889c058
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    Encode enough to make URI happy.
    
    Plus a bunch of test cases around this unfortunate case.
    
    Closes https://github.com/square/okhttp/issues/1872
    SHA: 080e7536ab8c2d07db58628f75a4140012e2a581
    
    Bug: 27590872
    Change-Id: I55670bdc97ffe162876b5ec93a150823a0549a40
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    Handle null fragments.
    SHA: e4dd6cfd63b251fba7a37e773f91c6bb4150b6bf
    
    Bug: 27590872
    Change-Id: Ib4ace89fe28cf08cb96cf6d016223583897a253f
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    use URI constructor for encoding fixes - https://github.com/square/okhttp/issues/1872
    SHA: 2a13fe9d83a596ddbfe8299dc75ab33db9130d20
    
    Bug: 27590872
    Change-Id: Ica97a6045a68886d32bfe29bb83cc62f10f98f1f
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Permit space to be encoded as + or %20.
    
    (cherry-picked from commit 6d2dcf2cc543d15cad69d2873760f11037604c8f)
    
    Note: Merged as pull request #1995 (https://github.com/square/okhttp/pull/1995)
    Bug: 26455836
    
    Change-Id: I1e3784f4624028edfd47ecc238f832b6dd7c0880
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Add TCM (TCP Connection Management) support
    
    TCM service indicates to close the TCP idle connections on
    time so that the application servers do not time out on
    connection and wake the modem cellular data connection up
    and cost power.
    
    Change-Id: I7b214a495e751a9d787a9455ab0963f5c354e019
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fixes to ConnectionPool noticed during upstream review
    
    Suggested by Jake Wharton. Minor documentation fixes, plus:
    
    The pool should explicitly re-enter DRAINING state if a
    connection is added to a drained pool. This state change was
    missing.
    
    The pool was implicitly in DRAINING while the pool still had
    connections in it, so the pool would still drain.
    However, adding back connections to a pool that was DRAINING
    but still incorrectly marked as DRAINED would cause a
    new runnable to be scheduled. This would cause the queue of
    scheduled items to grow unnecesarily and the clean up thread
    would continue to operate longer than necessary.
    
    Bug: 18369687
    (cherry picked from commit 6257f0c1c5e6e94d446051f856207782d7188c43)
    
    Change-Id: Id60486a70163679d4f587ea75b71fc438a1d8df0
    Fixes to ConnectionPool noticed during upstream review
    
    Suggested by Jake Wharton. Minor documentation fixes, plus:
    
    The pool should explicitly re-enter DRAINING state if a
    connection is added to a drained pool. This state change was
    missing.
    
    The pool was implicitly in DRAINING while the pool still had
    connections in it, so the pool would still drain.
    However, adding back connections to a pool that was DRAINING
    but still incorrectly marked as DRAINED would cause a
    new runnable to be scheduled. This would cause the queue of
    scheduled items to grow unnecesarily and the clean up thread
    would continue to operate longer than necessary.
    
    Bug: 18369687
    Change-Id: I2228b33f8240890d3736da1a21c8cc852fceec25
    Fix for a socket leak in OkHttp on Android
    
    When the preferred Android network changes from
    cell -> wifi or wifi -> cell the HTTP connection
    pool in use is abandoned to avoid reuse of
    connections on the old network. This was added
    in commit 8bced3e.
    
    The design for the connection pool was such that
    continuous use of the connection pool was required to
    clean up idle / expired connections. If a connection
    pool becomes idle (as when it is dereferenced on a
    network change) it is possible for some connections
    to remain in the pool indefinitely.
    
    After the preferred network change, because the old
    connection pool was no longer referenced the pool
    would be garbage collected and Android's "Strict Mode"
    would complain about sockets not being closed.
    
    The only existing way to avoid this was to call
    "evictAll()", which would have had issues when a
    large number of connections were returned to the pool
    after evictAll() was called. It also wouldn't work
    for SPDY connections which are shared but not reference
    counted, which makes knowing whether it is safe to
    close them difficult. SPDY is not enabled on Android
    by default and so that may have been safe to ignore.
    
    This fix tries to keep the existing cleaning behavior
    intact to avoid introducing new bugs or new thread
    behavior that might impact battery life. It adds a
    new mode to the pool for "draining", which handles
    cleaning up any existing entries in the pool and any
    added after the pool has been placed into draining
    mode.
    
    The drainModeRunnable introduced serves two purposes:
    
    1) While scheduled / executing, it pins the connection
    pool in memory to avoid it being garbage collected.
    2) It continues to close connections (safely) until the
    pool is empty.
    
    If a connection is then added back to the pool the
    drainModeRunnable is restarted.
    
    Bug: 18369687
    (cherry picked from commit ff345b6c0ffcc691e4c3c594f8a222cf81bb325c)
    
    Change-Id: I4e9e530f8e7acedf4b9a806237c8769a10671feb
    Fix for a socket leak in OkHttp on Android
    
    When the preferred Android network changes from
    cell -> wifi or wifi -> cell the HTTP connection
    pool in use is abandoned to avoid reuse of
    connections on the old network. This was added
    in commit 8bced3e.
    
    The design for the connection pool was such that
    continuous use of the connection pool was required to
    clean up idle / expired connections. If a connection
    pool becomes idle (as when it is dereferenced on a
    network change) it is possible for some connections
    to remain in the pool indefinitely.
    
    After the preferred network change, because the old
    connection pool was no longer referenced the pool
    would be garbage collected and Android's "Strict Mode"
    would complain about sockets not being closed.
    
    The only existing way to avoid this was to call
    "evictAll()", which would have had issues when a
    large number of connections were returned to the pool
    after evictAll() was called. It also wouldn't work
    for SPDY connections which are shared but not reference
    counted, which makes knowing whether it is safe to
    close them difficult. SPDY is not enabled on Android
    by default and so that may have been safe to ignore.
    
    This fix tries to keep the existing cleaning behavior
    intact to avoid introducing new bugs or new thread
    behavior that might impact battery life. It adds a
    new mode to the pool for "draining", which handles
    cleaning up any existing entries in the pool and any
    added after the pool has been placed into draining
    mode.
    
    The drainModeRunnable introduced serves two purposes:
    
    1) While scheduled / executing, it pins the connection
    pool in memory to avoid it being garbage collected.
    2) It continues to close connections (safely) until the
    pool is empty.
    
    If a connection is then added back to the pool the
    drainModeRunnable is restarted.
    
    Bug: 18369687
    Change-Id: I7e9bdd0edba84784f667105f52ef80655c1b06ff
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    
    (cherry picked from commit e5baca5e4c9de92820a38e60e289d07f1acaa2ef)
    
    Change-Id: Ica683022e6963a0a4f0c3fd1a33c1b843e307c1a
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    Change-Id: I233c29b79770950b16bc82b36fb47f22369d9bd3
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    
    (cherry picked from commit e5baca5e4c9de92820a38e60e289d07f1acaa2ef)
    
    Change-Id: Ica683022e6963a0a4f0c3fd1a33c1b843e307c1a
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    Change-Id: I233c29b79770950b16bc82b36fb47f22369d9bd3
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    okhttp: Get tcmiface off the boot classpath
    
    Change-Id: I673812111ddf13e522df4447ec071a73ff762c29
    Add TCM (TCP Connection Management) support
    
    TCM service indicates to close the TCP idle connections on
    time so that the application servers do not time out on
    connection and wake the modem cellular data connection up
    and cost power.
    
    Change-Id: I7b214a495e751a9d787a9455ab0963f5c354e019
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Revert "Revert "Add further handling for when a CONNECT incorrectly returns a body.""
    
    This reverts commit 741b3fe53e2c42e8a93f03205e8a4e66f6bea112.
    
    commit 741b3fe53e2c42e8a93f03205e8a4e66f6bea112 was incorrectly
    merged from lollipop-cts-dev into lollipop-mr1-cts-dev.
    
    Bug: 23024485
    Revert "Add further handling for when a CONNECT incorrectly returns a body."
    
    This reverts commit 0f102f51711ecc2ef9f25cbbad2148ee97bdb6cb.
    
    commit 0f102f51711ecc2ef9f25cbbad2148ee97bdb6cb is present in
    lollipop-cts-dev but not lollipop-release. This causes the
    tests to fail when run against a lollipop-release build.
    
    DO NOT MERGE ANYWHERE
    
    Bug: 22546532
    Change-Id: Ib920e2071432d2412e3cddfd2cdbd8a0a55e532b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Add further handling for when a CONNECT incorrectly returns a body.
    
    Before the change:
    If a proxy returns a body and some of the body bytes have
    already been buffered then an IOException is thrown.
    If the body bytes have not been buffered then the handshake will
    fail due to the presence of bytes where the Server HELLO is
    expected, typically with some kind of SSLHandshakeException.
    
    After the change:
    The body bytes are consumed to ensure consistent behavior. The
    handshake will then take place.
    
    History:
    This is an unusual case that would occasionally cause failures
    on Android when a ResponseCache was installed. Android introduced
    a patch to prevent CONNECT responses being cached. Since then,
    OkHttp has changed the code and probably fixed the issue via
    other means. The Android test remained and would sometimes
    experience one exception, sometimes another, depending on the
    state of the buffer.
    
    If the presence of a body is a possibility it would be nice
    to deal with it consistently and deterministically.
    
    The motivation for this change is to make an Android test
    equivalent to the one added here behave consistently and in a
    way that doesn't involve connection fallback.
    
    The only risk with this change is if a proxy is incorrectly
    reporting the content length: this might lead to blocking on
    the body read/skip (as OkHttp would probably do elsewhere if a
    server mis-reports a content-length). This may make connections
    to "bad" proxies slightly more reliable.
    
    Bug: 6754912
    Bug: 18575971
    
    (cherry picked from commit 007b88ad6df622a2e5daacce604637d006ed6212)
    
    Change-Id: Icf9e17a26dd2b1c4024935dfae3e87b2654a220e
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Add further handling for when a CONNECT incorrectly returns a body.
    
    Before the change:
    If a proxy returns a body and some of the body bytes have
    already been buffered then an IOException is thrown.
    If the body bytes have not been buffered then the handshake will
    fail due to the presence of bytes where the Server HELLO is
    expected, typically with some kind of SSLHandshakeException.
    
    After the change:
    The body bytes are consumed to ensure consistent behavior. The
    handshake will then take place.
    
    History:
    This is an unusual case that would occasionally cause failures
    on Android when a ResponseCache was installed. Android introduced
    a patch to prevent CONNECT responses being cached. Since then,
    OkHttp has changed the code and probably fixed the issue via
    other means. The Android test remained and would sometimes
    experience one exception, sometimes another, depending on the
    state of the buffer.
    
    If the presence of a body is a possibility it would be nice
    to deal with it consistently and deterministically.
    
    The motivation for this change is to make an Android test
    equivalent to the one added here behave consistently and in a
    way that doesn't involve connection fallback.
    
    The only risk with this change is if a proxy is incorrectly
    reporting the content length: this might lead to blocking on
    the body read/skip (as OkHttp would probably do elsewhere if a
    server mis-reports a content-length). This may make connections
    to "bad" proxies slightly more reliable.
    
    Bug: 6754912
    Change-Id: I36fff6633b3716e43347ade4e0a175134fb525f9
    Fix NPE in Connection#close when socket == null.
    
    This is a partial cherry-pick of the upstream commit
    c26f9af0489869a9e1873ed5010c65f8464cff26.
    
    bug: 16907112
    
    (cherry picked from commit c2bb00c4a14c9929d9126c39aeda4cb24576ef3e)
    
    Change-Id: I80e451ec1daf55b5ae5c3a76290cf48d5e3de559
    Fix NPE in Connection#close when socket == null.
    
    This is a partial cherry-pick of the upstream commit
    c26f9af0489869a9e1873ed5010c65f8464cff26.
    
    bug: 16907112
    Change-Id: I5ba04499e1f2a2317a597a6e77c659e0dad82167
    Use the socket factory for direct connections as well.
    
    Currently, the passed-in socket factory is only used for
    connections to HTTP proxies. I think this was not the intent of
    the original socket factory change, because the commit message
    said that the "socket factory will be used for all non-proxy
    connections and HTTP proxy connections".  So use it for DIRECT
    connections as well.
    
    Also add a test to check that a socket factory is used if
    specified.
    
    Cherry-pick of https://github.com/square/okhttp/commit/7f763c1a18e342dc4e2840c68ca99c175c37eb93
    
    (cherry picked from commit a83ddf194ffbae04ce536967efff0ec72df70e10)
    
    Change-Id: Ie3d239d8683a51a2b6ab1dc9d443886d0746e68a
    Use the socket factory for direct connections as well.
    
    Currently, the passed-in socket factory is only used for
    connections to HTTP proxies. I think this was not the intent of
    the original socket factory change, because the commit message
    said that the "socket factory will be used for all non-proxy
    connections and HTTP proxy connections".  So use it for DIRECT
    connections as well.
    
    Also add a test to check that a socket factory is used if
    specified.
    
    Cherry-pick of https://github.com/square/okhttp/commit/7f763c1a18e342dc4e2840c68ca99c175c37eb93
    
    Change-Id: I811b08442d1c80be1a0a268eb51c9aa365febf00
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    
    (cherry picked from commit e5baca5e4c9de92820a38e60e289d07f1acaa2ef)
    
    Change-Id: Ica683022e6963a0a4f0c3fd1a33c1b843e307c1a
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    Change-Id: I233c29b79770950b16bc82b36fb47f22369d9bd3
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Respect read timeout on recycled connections.
    
    Partial fix for CTS test : URLConnectionTest#testGetKeepAlive.
    
    (cherry picked from 76739264ce52fe7a6c5c3558dad87b649118deff)
    
    bug: 10211309
    
    Change-Id: I1f94ea1a3449440f749264a7696c18663e872b17
    Respect read timeout on recycled connections.
    
    Partial fix for CTS test : URLConnectionTest#testGetKeepAlive.
    
    Change-Id: I1f94ea1a3449440f749264a7696c18663e872b17
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Merge "Revert "Revert "Disable SPDY support"""
    Revert "Revert "Disable SPDY support""
    
    This reverts commit b1046528f80910a7540435f3a6abb38a391502c4
    
    Bug: 9190726
    Change-Id: Ifc3328c2d02752fbb6f2551b9332aa68bbd2aefd
    Revert "Disable SPDY support"
    
    This reverts commit 089e9c1f20b1f7811373d1f99513163a74e53cbe.
    Disable SPDY support
    
    Bug: 8550454
    Change-Id: Id16e59789b42e14ebee79309097504a86ec69e5a
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    This change did not apply cleanly. Upstream FormEncodingBuilder has
    been refactored. Equivalent changes have been made.
    
    Upstream details:
    Comment:
    Never throw converting an HttpUrl to a java.net.URI.
    
    Just do arbitrary amounts of transformation. Sigh.
    
    Closes https://github.com/square/okhttp/issues/2116
    SHA: d77edcc8905148f18a691be180c4f8f366a5ee1b
    
    Bug: 27590872
    Change-Id: Ia12df5dc95c1681c67552b2c7725393508f52c0e
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    
    Upstream details:
    Comment:
    Don't percent-encode non-ASCII characters in fragments
    
    Fixes https://github.com/square/okhttp/issues/1635
    SHA: f4feb0adfcd8e209f90d4fffb6facf5c07f57110
    
    Bug: 27590872
    Change-Id: I827536ced778254103bdbe9d4b54baa4a889c058
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Add current AOSP class name for OpenSSLSocketImpl
    
    AOSP moved OpenSSLSocketImpl to com.android.org.conscrypt.* so add that
    as the first choice for unbundled apps.
    
    Change-Id: I7bad6533dcb86ee1cac3b15f42dd386bd651eaed
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Allow HttpEngine to retry connections on timeout / interruption.
    
    This reverts behaviour introduced in 60f5406dcc094d043 where HttpEngine
    doesn't attempt to recover connections on timeout / interruption. This
    new behaviour introduced regressions on some devices where we're handed
    a mixture of IPV4 / IPV6 routes but where only one aspect of the network
    (either IPV4 or 6) is functional.
    
    bug: 22779586
    
    (cherry picked from commit 34d6cda57322deb57ccbf57357c084772782375e)
    
    Change-Id: I1036e4c1dbb29e72c0d07a491d49677936f3f154
    Allow HttpEngine to retry connections on timeout / interruption.
    
    This reverts behaviour introduced in 60f5406dcc094d043 where HttpEngine
    doesn't attempt to recover connections on timeout / interruption. This
    new behaviour introduced regressions on some devices where we're handed
    a mixture of IPV4 / IPV6 routes but where only one aspect of the network
    (either IPV4 or 6) is functional.
    
    bug: 22779586
    
    Change-Id: Ibfb645f8d578257965c40a17c56dc7335f76c35b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    (cherry pick from commit 565c2ad69684ef7c23b5aaa3b7f0c7363cef6bd7)
    
    Change-Id: Ib018209c171e2b18d5f4ee2c4f364778f5e239dc
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    Change-Id: I1779e1178f3764c199dd0d1e4b032dcbc92f87c7
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    (cherry-picked from commit b5f9076b16fcc41c3dad31aecfdcfd962a7a1f75)
    
    Change-Id: I4d44e973f906d41a622598e2293d4026fc1ed039
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    Change-Id: Ibe913cb8584331a470716272dcd42c088cbb975e
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Apply okhttp upstream pull request #1011
    
    Fix formatting / parsing for Android
    
    Ensuring that this Android bug is fixed for the next
    Android release:
    https://code.google.com/p/android/issues/detail?id=66135
    
    On Android the SimpleDateFormat for "zzz" returns GMT+00:00.
    This is regrettable but awkward to change as it is existing
    behavior.
    https://code.google.com/p/android/issues/detail?id=66136
    
    This change fixes the format to 'GMT'.
    
    This change also fixes a bug where the platform default
    timezone was used for parsing some date/times and not GMT.
    
    Various tests have been added to prove the behavior when
    timezones are missing and dates are malformed.
    
    (cherry picked from okhttp b36761b7dd5a0743ec5d89fb9adc36b602cc3b4b)
    Bug: https://code.google.com/p/android/issues/detail?id=66135
    Change-Id: I831693bfff884c5d70f8592b47effd368a369859
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    ok-http: Listening to the redirect URL
    
    --Using reflection method we set the data block system property
    and block background data on the device on 3 redirect urls due
    to zero balance in the prepaid sim.
    
    CRs-Fixed: 1033837
    Change-Id: Ie5dc454f1dd259df61c9f73bb9ca33cb3bd3ce58
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    ok-http: Listening to the redirect URL
    
    --Using reflection method we set the data block system property
    and block background data on the device on 3 redirect urls due
    to zero balance in the prepaid sim.
    
    CRs-Fixed: 1033837
    Change-Id: Ie5dc454f1dd259df61c9f73bb9ca33cb3bd3ce58
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Allow HttpEngine to retry connections on timeout / interruption.
    
    This reverts behaviour introduced in 60f5406dcc094d043 where HttpEngine
    doesn't attempt to recover connections on timeout / interruption. This
    new behaviour introduced regressions on some devices where we're handed
    a mixture of IPV4 / IPV6 routes but where only one aspect of the network
    (either IPV4 or 6) is functional.
    
    bug: 22779586
    
    (cherry picked from commit 34d6cda57322deb57ccbf57357c084772782375e)
    
    Change-Id: I1036e4c1dbb29e72c0d07a491d49677936f3f154
    Allow HttpEngine to retry connections on timeout / interruption.
    
    This reverts behaviour introduced in 60f5406dcc094d043 where HttpEngine
    doesn't attempt to recover connections on timeout / interruption. This
    new behaviour introduced regressions on some devices where we're handed
    a mixture of IPV4 / IPV6 routes but where only one aspect of the network
    (either IPV4 or 6) is functional.
    
    bug: 22779586
    
    Change-Id: Ibfb645f8d578257965c40a17c56dc7335f76c35b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    
    (cherry picked from commit e5baca5e4c9de92820a38e60e289d07f1acaa2ef)
    
    Change-Id: Ica683022e6963a0a4f0c3fd1a33c1b843e307c1a
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    Change-Id: I233c29b79770950b16bc82b36fb47f22369d9bd3
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Fix HttpUrlConnection#isUsingProxy.
    
    The earlier implementation disregarded what the
    ProxySelector had to say. We now query the selected
    route (if one has been established).
    
    Fixes compatibility test:
    HttpURLConnectionTest#testUsingProxySelector
    
    (cherry picked from be9eef7153fff0107f609d4276f2ae7ac868258)
    
    bug: 10209026
    
    Change-Id: I3183c50ce21c5a19ac1f34f2ff5648683b526dd7
    Fix HttpUrlConnection#isUsingProxy.
    
    The earlier implementation disregarded what the
    ProxySelector had to say. We now query the selected
    route (if one has been established).
    
    Fixes compatibility test:
    HttpURLConnectionTest#testUsingProxySelector
    
    Change-Id: I3183c50ce21c5a19ac1f34f2ff5648683b526dd7
    Respect read timeout on recycled connections.
    
    Partial fix for CTS test : URLConnectionTest#testGetKeepAlive.
    
    (cherry picked from 76739264ce52fe7a6c5c3558dad87b649118deff)
    
    bug: 10211309
    
    Change-Id: I1f94ea1a3449440f749264a7696c18663e872b17
    Respect read timeout on recycled connections.
    
    Partial fix for CTS test : URLConnectionTest#testGetKeepAlive.
    
    Change-Id: I1f94ea1a3449440f749264a7696c18663e872b17
    Allow certificate inspections after connect.
    
    We don't have to wait for the request to be sent
    before allowing inspection of SSL certs. They can be
    inspected as soon as the connection is established.
    
    Fixes CTS test UrlConnectionTest#testInspectSslAfterConnect
    
    (Cherry picked from 415f345db25a1075e6103e55e7ea735ced0072b)
    
    bug: 10211309
    
    Change-Id: I0bbbc9d394f59df2f86aa35cd368339384770387
    Allow certificate inspections after connect.
    
    We don't have to wait for the request to be sent
    before allowing inspection of SSL certs. They can be
    inspected as soon as the connection is established.
    
    Fixes CTS test UrlConnectionTest#testInspectSslAfterConnect
    
    Change-Id: I0bbbc9d394f59df2f86aa35cd368339384770387
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Avoid a reverse DNS-lookup for a numeric proxy address
    
    When the proxy is specified as an IP address the RouteSelector
    would force a reverse-lookup. This can introduce extra latency
    when the DNS is slow or missing. It also then turns the name
    back into a set of IPs, which may result in the original IP
    address not being given priority.
    
    This is upstream commit:
    https://github.com/square/okhttp/commit/9acd5e7b54fb55f62a5dd16865c30787dfba4c8b
    
    Bug: 18567569
    Bug: 18327075
    (cherry picked from commit 797fdc6cc6bf16372e9464f189b535148f944ce9)
    
    Change-Id: I52b4049095acafd2367530532d8cad7d75b6809a
    Avoid a reverse DNS-lookup for a numeric proxy address
    
    When the proxy is specified as an IP address the RouteSelector
    would force a reverse-lookup. This can introduce extra latency
    when the DNS is slow or missing. It also then turns the name
    back into a set of IPs, which may result in the original IP
    address not being given priority.
    
    This is upstream commit:
    https://github.com/square/okhttp/commit/9acd5e7b54fb55f62a5dd16865c30787dfba4c8b
    
    Bug: 18327075
    Change-Id: Idafd72f4d5b901e267081f924377db4ada9afe1b
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Be consistent about host names in RouteSelector.
    
    Use the host specified by the address, and not URI.getHost().
    
    bug: 18023709
    
    (cherry picked from commit b576bbf122893c6d0ea2846378b9136631784faf)
    
    Change-Id: I013bb48d7ab51c62a19ecfb3063efb7b0c423b1e
    Be consistent about host names in RouteSelector.
    
    Use the host specified by the address, and not URI.getHost().
    
    bug: 18023709
    Change-Id: I2c39c2ce89049130dc00047c8de6f214159144c0
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Strict, modern HostnameVerifier.
    
    This brings OkHostnameVerifier up to date with the intersection of
    RFC 2818 and Baseline Requirements, and adds support for absolute
    domain names.
    
    The changes are:
    * Absolute domain names are supported. All presented hostnames are
      treated as absolute domain names. All domain names in server
      certificates are treated as absolute domain names as well.
    * Wildcard character (*) is permitted only in the left-most domain
      name label and must be the only character in that label. For
      example, *.example.com is permitted, while *a.example.com,
      a*.example.com, a*b.example.com, a.*.example.com are not permitted.
    * Wildcard character (*) must match exactly one domain name label.
      For example, *.example.com matches www.example.com, but does not
      match example.com or www.test.example.com.
    * Wildcard pattern cannot mach single-label domain names: * and *.
      patterns are rejected.
    
    Bug: 18432707
    Bug: 17482685
    Bug: 17548724
    Bug: 17552202
    Bug: 17552202
    Change-Id: I560121f388568d0513a0cee22250b6fc59424b30
    Fix a bug in OkHostnameVerifier wildcard handling.
    
    Wildcard domain name patterns of the form *.remainder are supposed to
    match domain names that exactly match the remainder. Due to a bug,
    the match was not exact but rather a prefix match: domain names
    starting with the remainder would match too.
    
    This CL fixes the issue.
    
    Bug: 18432707
    Change-Id: I2639ff51cabcbd395d4f30a9c69f9895738e0acf
    Remove workaround for *.clients.google.com hostname verication.
    
    This removes the workaround for TLS/SSL server certificate presented
    by android.clients.google.com without Server Name Indication (SNI)
    not matching android.clients.google.com
    (8576f309825e23add080f2a50345ec1884939c39). This type of
    service/provider-specific workaround does not belong into the core
    library. Applications relying on this workaround will now need to use
    SNI or a custom HostnameVerifier.
    
    This is a cherry-pick of upstream commit
    https://github.com/square/okhttp/commit/9549fb4455f54d96a307ce17d280ff55df855470
    
    Bug: 5426333
    
    Change-Id: Iec822ad7395f4bc16323c0b82650d688ab7b299f
    Reinstate the workaround for android.clients.google.com.
    
    Apps still depend on this because this HTTP stack cannot guarantee
    that SNI is used. SNI is not enabled during the failover to SSLv3
    only. This failover logic cannot currently be disabled.
    
    Bug: 5426333
    Bug: 16635883
    Change-Id: I1613c04645be5b828ad7288eea559527f9490da8
    DO NOT MERGE Revert "Remove workaround for *.clients.google.com."
    
    This reverts commit fa38bbf9c7e67011207e31c3372a5a3da765dfe5.
    
    Turns out some apps that connect to android.clients.google.com
    still do not use SNI and thus get served a server cert for
    *.google.com.
    
    Bug: 5426333
    Bug: 16635883
    Change-Id: I9009e031070199a2908ad16ca3d7a0a54ea7abcd
    Remove workaround for *.clients.google.com.
    
    This removes the workaround for broken TLS/SSL server certificates
    that were being presented by android.clients.google.com in early 2012
    (8576f309825e23add080f2a50345ec1884939c39). The server is presenting
    better certificates these days and the workaround is no longer needed.
    
    This is a cherry-pick of upstream commit
    https://github.com/square/okhttp/commit/9549fb4455f54d96a307ce17d280ff55df855470
    
    Bug: 5426333
    
    (cherry picked from commit 66acc6793a519c3bf26ccf1bc2f85fa17c19e5ec)
    
    Change-Id: I3a0cee90391e786f5e469ed3af0b9e4d4aa02307
    Remove workaround for *.clients.google.com.
    
    This removes the workaround for broken TLS/SSL server certificates
    that were being presented by android.clients.google.com in early 2012
    (8576f309825e23add080f2a50345ec1884939c39). The server is presenting
    better certificates these days and the workaround is no longer needed.
    
    This is a cherry-pick of upstream commit
    https://github.com/square/okhttp/commit/9549fb4455f54d96a307ce17d280ff55df855470
    
    Bug: 5426333
    Change-Id: Id70da4adc265724ebd02d5d98f299d6fef4ef6a6
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix knock-ons from upstream okhttp pull #1011
    
    Commit 5093c4f8bd7be79d7c7cd3e00945190105ed9aab
    broke ResponseCacheTest. The test was asserting a string
    using a copy of the old broken implementation.
    
    The test now just uses HttpDate, which now has its own
    tests.
    
    This test fix will pushed upstream to OkHttp.
    
    Change-Id: Ie298ef660d9355f46df05523bb7945dfa0b15034
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix build.
    
    (cherry-pick of cefd6c9fbb2b15cda911fa662b78cad479e8bba4.)
    
    Change-Id: Ic4cdf3f0ef81ccc915717c67e033d80f6d68787a
    Fix build.
    
    Change-Id: Ic4cdf3f0ef81ccc915717c67e033d80f6d68787a
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Add basic URLFilter for HttpURLConnection
    
    This optional filter can be used to allow for blocking HTTP traffic to
    certain URLs, for example in order to prevent accessing sensitive
    content over HTTP instead of HTTPS.
    
    https://github.com/square/okhttp/pull/2275
    
    (cherry-picked from upstream commit 2b1f9a20bac5d99acf5a8be36754e5a1dadaf448)
    Change-Id: I727c2751a745f24969a838d5bb996a976e9f7a56
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Add basic URLFilter for HttpURLConnection
    
    This optional filter can be used to allow for blocking HTTP traffic to
    certain URLs, for example in order to prevent accessing sensitive
    content over HTTP instead of HTTPS.
    
    https://github.com/square/okhttp/pull/2275
    
    (cherry-picked from upstream commit 2b1f9a20bac5d99acf5a8be36754e5a1dadaf448)
    Change-Id: I727c2751a745f24969a838d5bb996a976e9f7a56
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Add basic URLFilter for HttpURLConnection
    
    This optional filter can be used to allow for blocking HTTP traffic to
    certain URLs, for example in order to prevent accessing sensitive
    content over HTTP instead of HTTPS.
    
    https://github.com/square/okhttp/pull/2275
    
    (cherry-picked from upstream commit 2b1f9a20bac5d99acf5a8be36754e5a1dadaf448)
    Change-Id: I727c2751a745f24969a838d5bb996a976e9f7a56
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Allow certificate inspections after connect.
    
    We don't have to wait for the request to be sent
    before allowing inspection of SSL certs. They can be
    inspected as soon as the connection is established.
    
    Fixes CTS test UrlConnectionTest#testInspectSslAfterConnect
    
    (Cherry picked from 415f345db25a1075e6103e55e7ea735ced0072b)
    
    bug: 10211309
    
    Change-Id: I0bbbc9d394f59df2f86aa35cd368339384770387
    Allow certificate inspections after connect.
    
    We don't have to wait for the request to be sent
    before allowing inspection of SSL certs. They can be
    inspected as soon as the connection is established.
    
    Fixes CTS test UrlConnectionTest#testInspectSslAfterConnect
    
    Change-Id: I0bbbc9d394f59df2f86aa35cd368339384770387
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Add basic URLFilter for HttpURLConnection
    
    This optional filter can be used to allow for blocking HTTP traffic to
    certain URLs, for example in order to prevent accessing sensitive
    content over HTTP instead of HTTPS.
    
    https://github.com/square/okhttp/pull/2275
    
    (cherry-picked from upstream commit 2b1f9a20bac5d99acf5a8be36754e5a1dadaf448)
    Change-Id: I727c2751a745f24969a838d5bb996a976e9f7a56
    Fix Http(s)URLConnectionImpl.getInstanceFollowsRedirects()
    
    This is the proposed upstream PR:
    https://github.com/square/okhttp/pull/1939
    
    Bug: 25138800
    Bug: https://code.google.com/p/android/issues/detail?id=190998
    (cherry-picked from commit ceafaf318f1176d96d18ed04355f76fa91a8e12b)
    
    Change-Id: I8101d6d7b89cb931a76d79caa5fbc36470c80024
    Fix Http(s)URLConnectionImpl.getInstanceFollowsRedirects()
    
    This is the proposed upstream PR:
    https://github.com/square/okhttp/pull/1939
    
    Bug: 25138800
    Bug: https://code.google.com/p/android/issues/detail?id=190998
    Change-Id: I3873cb59b8cd95aef2641d6b238ac65341eaba12
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Fix HttpUrlConnection#isUsingProxy.
    
    The earlier implementation disregarded what the
    ProxySelector had to say. We now query the selected
    route (if one has been established).
    
    Fixes compatibility test:
    HttpURLConnectionTest#testUsingProxySelector
    
    (cherry picked from be9eef7153fff0107f609d4276f2ae7ac868258)
    
    bug: 10209026
    
    Change-Id: I3183c50ce21c5a19ac1f34f2ff5648683b526dd7
    Fix HttpUrlConnection#isUsingProxy.
    
    The earlier implementation disregarded what the
    ProxySelector had to say. We now query the selected
    route (if one has been established).
    
    Fixes compatibility test:
    HttpURLConnectionTest#testUsingProxySelector
    
    Change-Id: I3183c50ce21c5a19ac1f34f2ff5648683b526dd7
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Add basic URLFilter for HttpURLConnection
    
    This optional filter can be used to allow for blocking HTTP traffic to
    certain URLs, for example in order to prevent accessing sensitive
    content over HTTP instead of HTTPS.
    
    https://github.com/square/okhttp/pull/2275
    
    (cherry-picked from upstream commit 2b1f9a20bac5d99acf5a8be36754e5a1dadaf448)
    Change-Id: I727c2751a745f24969a838d5bb996a976e9f7a56
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix build.
    
    (cherry-pick of cefd6c9fbb2b15cda911fa662b78cad479e8bba4.)
    
    Change-Id: Ic4cdf3f0ef81ccc915717c67e033d80f6d68787a
    Fix build.
    
    Change-Id: Ic4cdf3f0ef81ccc915717c67e033d80f6d68787a
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Allow certificate inspections after connect.
    
    We don't have to wait for the request to be sent
    before allowing inspection of SSL certs. They can be
    inspected as soon as the connection is established.
    
    Fixes CTS test UrlConnectionTest#testInspectSslAfterConnect
    
    (Cherry picked from 415f345db25a1075e6103e55e7ea735ced0072b)
    
    bug: 10211309
    
    Change-Id: I0bbbc9d394f59df2f86aa35cd368339384770387
    Allow certificate inspections after connect.
    
    We don't have to wait for the request to be sent
    before allowing inspection of SSL certs. They can be
    inspected as soon as the connection is established.
    
    Fixes CTS test UrlConnectionTest#testInspectSslAfterConnect
    
    Change-Id: I0bbbc9d394f59df2f86aa35cd368339384770387
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
    This synced to commit bda555ad61ef55e9ad6e4a30d2e9cfde5fc216ca
    / master / 21st March 2014.
    
    Notably this contains a fix for apps that bundle an older
    copy of OkHttp or which call android.net.http.HttpResponseCache.get()
    or android.net.http.HttpResponseCache.put().
    
    See for details:
    https://github.com/square/okhttp/commit/6cf56de5d0701ff26aa6043c552e17c4665c1287
    https://github.com/square/okhttp/commit/e2599be9e073f1be8e929597c358e2664ab0c9a9
    
    Change-Id: I324ac76d8ee6a615c39dc8e19dc90169528ae072
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Modify tests with parameters to work with CTS
    
    bug:28191590
    Change-Id: I71f51c111c02280f006e5a63a6dc05b833ab8655
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Modify tests with parameters to work with CTS
    
    bug:28191590
    Change-Id: I71f51c111c02280f006e5a63a6dc05b833ab8655
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    (cherry-picked from commit b5f9076b16fcc41c3dad31aecfdcfd962a7a1f75)
    
    Change-Id: I4d44e973f906d41a622598e2293d4026fc1ed039
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    Change-Id: Ibe913cb8584331a470716272dcd42c088cbb975e
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Modify tests with parameters to work with CTS
    
    bug:28191590
    Change-Id: I71f51c111c02280f006e5a63a6dc05b833ab8655
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    (cherry-picked from commit b5f9076b16fcc41c3dad31aecfdcfd962a7a1f75)
    
    Change-Id: I4d44e973f906d41a622598e2293d4026fc1ed039
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    Change-Id: Ibe913cb8584331a470716272dcd42c088cbb975e
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    (cherry-picked from commit b5f9076b16fcc41c3dad31aecfdcfd962a7a1f75)
    
    Change-Id: I4d44e973f906d41a622598e2293d4026fc1ed039
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    Change-Id: Ibe913cb8584331a470716272dcd42c088cbb975e
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Revert "DO NOT MERGE Revert "okio: increase segment size to 8 KiB""
    
    This reverts commit 0051544451555008adbe869b9eed9535d23590c2.
    
    Bug: 24253930
    Change-Id: I086c50b5f198d5723c61188c9aa5df5379a0f3a6
    DO NOT MERGE Revert "okio: increase segment size to 8 KiB"
    
    This reverts commit 147e5ea75d85f64f2b051a11ed1879dfa56050e9.
    
    This CL caused MMS HTTP request failure probably due to a more
    fundamental problem in system. Revert this so that at least the MMS
    issue can be fixed.
    
    b/24630124
    
    Change-Id: I2af9223cf96c00fe28f817360c5e79572db3af10
    okio: increase segment size to 8 KiB
    
    Original import was setting the segment size to 2 KiB with the comment:
      // TODO: Is 2 KiB a good default segment size?
    
    Measurements shows that on encrypted devices download speed from
    playstore is 3x faster using 8 KiB segment buffers.
    
    Bug: 24253930
    Change-Id: I25df01c9c4d1961757d3e1f5bb580965bb2bfdd4
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    DO NOT MERGE: Fix URLConnectionTest.writeTimeouts with large receive buffers
    
    This is upstream okhttp commit 8b19bc471f66ee45c5eed3df6817411d074aabe5.
    https://github.com/square/okhttp/commit/8b19bc471f66ee45c5eed3df6817411d074aabe5
    back-ported to Android's version of OkHttp.
    
    From the upstream commit:
    
    The test relies on small client send / server receive buffers
    to force blocking and generate a timeout.
    
    The switch to make MockWebServer a @Rule (commit
    785d9e94387f404f571775a49c3a9438508bb659) moved the
    MockWebServer.start() call earlier in the test execution.
    Setting the ServerSocketFactory became a no-op so the server
    receive buffer size was left as the default.
    
    The test became reliant on either:
    1) The default server socket receive buffer being small enough
    (e.g. less than the data being transmitted).
    2) The device being too slow to send the requested data in the
    time allowed.
    
    The test was recently made less reliable by:
    1) The okio commit
    f30955cb15eb234f874dd55819686832c960765b, which made the segment
    size bigger (increasing throughput / transfer efficiency).
    2) The OkHttp commit f30955cb15eb234f874dd55819686832c960765b,
    which reduced the amount of data being sent in the test from
    16MB to 2MB.
    3) Recent Android devices have large default buffer sizes. e.g.
    Nexus 5: 1MB, Nexus 5X: 6MB.
    
    Bug: 25459708
    Change-Id: Icaa3255d86d228302931baca0432ea9a5be1e7f0
    Fix URLConnectionTest.writeTimeouts with large receive buffers
    
    This is upstream okhttp commit 8b19bc471f66ee45c5eed3df6817411d074aabe5.
    https://github.com/square/okhttp/commit/8b19bc471f66ee45c5eed3df6817411d074aabe5
    back-ported to Android's version of OkHttp.
    
    From the upstream commit:
    
    The test relies on small client send / server receive buffers
    to force blocking and generate a timeout.
    
    The switch to make MockWebServer a @Rule (commit
    785d9e94387f404f571775a49c3a9438508bb659) moved the
    MockWebServer.start() call earlier in the test execution.
    Setting the ServerSocketFactory became a no-op so the server
    receive buffer size was left as the default.
    
    The test became reliant on either:
    1) The default server socket receive buffer being small enough
    (e.g. less than the data being transmitted).
    2) The device being too slow to send the requested data in the
    time allowed.
    
    The test was recently made less reliable by:
    1) The okio commit
    f30955cb15eb234f874dd55819686832c960765b, which made the segment
    size bigger (increasing throughput / transfer efficiency).
    2) The OkHttp commit f30955cb15eb234f874dd55819686832c960765b,
    which reduced the amount of data being sent in the test from
    16MB to 2MB.
    3) Recent Android devices have large default buffer sizes. e.g.
    Nexus 5: 1MB, Nexus 5X: 6MB.
    
    Bug: 25459708
    Change-Id: Icaa3255d86d228302931baca0432ea9a5be1e7f0
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Bug: 17314604
    (cherry-picked from commit 8bced3e769d315a0a81b89de7a5282f1a85acbf7)
    
    Change-Id: I4b2295ebceca93d55c994857de8554e9bb48b4c5
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Change-Id: I7b62f2bbd306c932dfd8d0ff4fff236ec04405bf
    Bug: 17314604
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Remove NPN support from Android's OkHttp Platform class
    
    The Platform class is used by Android's built-in HttpsURLConnection
    instances. We disable SPDY and HTTP/2 entirely so this should be a
    no-op for apps using Android's HttpsURLConnection.
    
    We run OkHttp's JUnit tests with this version of Platform. The OkHttp
    tests do test SPDY and HTTP/2. ALPN supercedes NPN. The NPN support
    in Android's socket implementation appears buggy and causes test
    failures. Dropping NPN enables us to work around issues in those
    tests.
    
    There has been a pull request to drop NPN support generally from OkHttp
    upstream: https://github.com/square/okhttp/pull/1201
    
    See also:
    https://www.imperialviolet.org/2013/03/20/alpn.html
    https://groups.google.com/a/chromium.org/forum/#!topic/security-dev/eJVxCZ92vvg
    
    Bug: 18705877
    Change-Id: Iea58ba88e79cf1ac8cf08b4be900d27247f219e1
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    (cherry pick from commit 565c2ad69684ef7c23b5aaa3b7f0c7363cef6bd7)
    
    Change-Id: Ib018209c171e2b18d5f4ee2c4f364778f5e239dc
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    Change-Id: I1779e1178f3764c199dd0d1e4b032dcbc92f87c7
    Use hostname aware isCleartextTrafficPermitted
    
    The cleartext traffic blocking feature of
    android.net.NetworkSecurityPolicy is being expanded to provide finer
    grained controls (per hostname). This change integrates the OkHttp
    stack with these finer grained controls.
    
    Bug: 22666071
    Change-Id: I36ffa2f8bd2960cf25cef95b9d11e599c508d14b
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Tidy up HttpsHandler / HttpHandler and change defaults
    
    OkHttp was recently upgraded in AOSP. This is a tidy
    up change to correct some defaults and improve documentation
    of Android settings.
    
    Besides better docs this change mostly focuses on
    ConnectionSpecs.
    
    OkHttp now has a set of default ConnectionSpecs. ConnectionSpecs
    control TLS version and cipher suite selection during connection
    negotiations.
    
    The defaults are not what we want on Android:
    
    Historically, it looks like we don't want HttpsURLConnection
    being redirected to http:// addresses, and HttpURLConnections
    being redirected to https://. This means that we can
    exclude any TLS-based ConnectionSpecs from HttpHandler, and
    cleartext-based ConnectionSpecs from HttpsHandler making that
    choice even more explicit.
    
    TLS versions:
    
    The upgrade effectively had a side-effect of disabling SSLv3
    in all cases. On Android we disable SSLv3 in the default socket
    factory (getEnabledProtocols()), but it is still supported on
    the socket (getSupportedProtocols()).
    
    In the L release, OkHttp would use the default TLS versions
    for the initial connection and SSLv3 only for the fallback
    (i.e. with the default socket factory it would turn it back on
    for the fallback connection).
    
    This change allows for applications that may need to use SSLv3.
    SSLv3 will only be used if there is an installed socket factory
    that enables it by default.
    
    There should be a future change coming to upstream that will
    further alter this behavior because OkHttp will still make
    multiple attempts to connect when it knows it won't work.
    
    Ciphers:
    
    OkHttp is opinionated about the cipher suites to enable
    on a socket. On Android, we want the SocketFactory to determine
    the set of acceptable ciphers and we should just use the default
    enabled set (because the default set may be better than the
    set known when the device shipped, e.g. the socket factory may
    come from GMS or installed by an app and therefore provide better
    ciphers or disable ones that have found to be broken).
    
    This change fixes two failing tests in
    libcore.java.net.URLConnectionTest due to the TLS version
    changes.
    
    Change-Id: Iefc77746695b307a1222faf336d9d6452e974810
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Honor getDefaultHostnameVerifier in HttpsHandler.
    
    This makes HttpsHandler (a provider of HttpsURLConnection
    implementation) honor the contract of HttpsURLConnection which is
    that new instances of HttpsURLConnection will use the
    HostnameVerifier returned by
    HttpsURLConnection.getDefaultHostnameVerifier unless modified by
    HttpsURLConnection.setHostnameVerifier.
    
    To achieve the above, this CL removes a workaround for when this
    library is used in standalone/static way (as opposed to being
    included in the Android platform). In this situation using the
    platform-provided default HostnameVerifier may not be a good idea
    because the platform may be outdated. However, rather than checking
    which HostnameVerifier is offered by the platform by default and
    ignoring if it's the platform-default implementation, the correct
    solution is to explicitly set the verifier to be used by default,
    by invoking HttpsURLConnection.setDefaultHostnameVerifier in the
    same block of code which registers this library's HttpsHandler as
    the provider of HttpsURLConnection instances.
    
    Bug: 18481199
    
    (cherry picked from commit 0d34a8551becc509efc79a4e071fa1f3f5d54687)
    
    Change-Id: I0d865fbcb465287ac71e71882bc00cf1d8b8ec48
    Honor getDefaultHostnameVerifier in HttpsHandler.
    
    This makes HttpsHandler (a provider of HttpsURLConnection
    implementation) honor the contract of HttpsURLConnection which is
    that new instances of HttpsURLConnection will use the
    HostnameVerifier returned by
    HttpsURLConnection.getDefaultHostnameVerifier unless modified by
    HttpsURLConnection.setHostnameVerifier.
    
    To achieve the above, this CL removes a workaround for when this
    library is used in standalone/static way (as opposed to being
    included in the Android platform). In this situation using the
    platform-provided default HostnameVerifier may not be a good idea
    because the platform may be outdated. However, rather than checking
    which HostnameVerifier is offered by the platform by default and
    ignoring if it's the platform-default implementation, the correct
    solution is to explicitly set the verifier to be used by default,
    by invoking HttpsURLConnection.setDefaultHostnameVerifier in the
    same block of code which registers this library's HttpsHandler as
    the provider of HttpsURLConnection instances.
    
    Bug: 18481199
    Change-Id: I975d767647882e09ebfd7a83ef383310140a5dca
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Bug: 17314604
    (cherry-picked from commit 8bced3e769d315a0a81b89de7a5282f1a85acbf7)
    
    Change-Id: I4b2295ebceca93d55c994857de8554e9bb48b4c5
    external/okhttp changes to support connection pool flushing
    
    When the preferred network / default network for a device
    changes we must flush any pooled connections.
    
    This change has a known issue which will be fixed in a
    later commit: Any connections that are in use when
    the pool is cleared can be put (back) into the pool after
    evictAll(). This means those connections will continue to
    reference the old preferred / default network.
    
    Bug: 17314604
    
    (cherry-picked from commit 84f674f3abba1083e1efd94520d516036a3f0b6a)
    
    Change-Id: Ib5dbeb5a90aff68da3dd312f924c2bdb44f6f213
    Enable android.net to reuse OkHttpClient creation logic
    
    Pulling out static factory methods from HttpHandler and
    HttpsHandler. android.net will call these to create
    OkHttpClient instances which they can then further tweak
    for their own purposes.
    
    Bug: 17420465
    
    (cherry-picked from commit c19427fc6c8c1be67970437643c8fe90e328fc6c)
    
    Change-Id: Id4825f6b9599c79594f977fd726beb3465b96e19
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Change-Id: I7b62f2bbd306c932dfd8d0ff4fff236ec04405bf
    Bug: 17314604
    external/okhttp changes to support connection pool flushing
    
    When the preferred network / default network for a device
    changes we must flush any pooled connections.
    
    This change has a known issue which will be fixed in a
    later commit: Any connections that are in use when
    the pool is cleared can be put (back) into the pool after
    evictAll(). This means those connections will continue to
    reference the old preferred / default network.
    
    Bug: 17314604
    Change-Id: Icbe20db77922cdbe1d6965785de7ee59495044de
    Enable android.net to reuse OkHttpClient creation logic
    
    Pulling out static factory methods from HttpHandler and
    HttpsHandler. android.net will call these to create
    OkHttpClient instances which they can then further tweak
    for their own purposes.
    
    Bug: 17420465
    Change-Id: Ib22e79ee3a2fec343dbf518d6f885b18997b0002
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Fix HttpsUrlConnection#setDefaultHostnameVerifier.
    
    okhttp uses an internal verifier (an updated version of
    DefaultHostnameVerifier) unless a verifier is set on the
    client.
    
    Fixes URLConnectionTest#testHttpsWithCustomTrustManager
    
    (cherry picked from 631989e852f3dda9d30547f07cab8ef)
    
    bug: 10211309
    
    Change-Id: I281e1b00382c1c9ccb160f34d5fb79c763c05b70
    Fix HttpsUrlConnection#setDefaultHostnameVerifier.
    
    okhttp uses an internal verifier (an updated version of
    DefaultHostnameVerifier) unless a verifier is set on the
    client.
    
    Fixes URLConnectionTest#testHttpsWithCustomTrustManager
    
    (cherry picked from 631989e852f3dda9d30547f07cab8ef)
    
    bug: 10211309
    
    Change-Id: I281e1b00382c1c9ccb160f34d5fb79c763c05b70
    Fix HttpsUrlConnection#setDefaultHostnameVerifier.
    
    okhttp uses an internal verifier (an updated version of
    DefaultHostnameVerifier) unless a verifier is set on the
    client.
    
    Fixes URLConnectionTest#testHttpsWithCustomTrustManager
    
    Change-Id: I281e1b00382c1c9ccb160f34d5fb79c763c05b70
    Don't follow protocol redirects.
    
    OkHttp allows protocol redirects by default, so turn them
    off explicitly.
    
    Also, let HttpsHandler extend HttpHandler so that they can
    share code that deals with OkHttpClient initialization.
    
    Change-Id: I890456260571abd40a64ab1647eb4e991f5b1c7e
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix for a socket leak in OkHttp on Android
    
    When the preferred Android network changes from
    cell -> wifi or wifi -> cell the HTTP connection
    pool in use is abandoned to avoid reuse of
    connections on the old network. This was added
    in commit 8bced3e.
    
    The design for the connection pool was such that
    continuous use of the connection pool was required to
    clean up idle / expired connections. If a connection
    pool becomes idle (as when it is dereferenced on a
    network change) it is possible for some connections
    to remain in the pool indefinitely.
    
    After the preferred network change, because the old
    connection pool was no longer referenced the pool
    would be garbage collected and Android's "Strict Mode"
    would complain about sockets not being closed.
    
    The only existing way to avoid this was to call
    "evictAll()", which would have had issues when a
    large number of connections were returned to the pool
    after evictAll() was called. It also wouldn't work
    for SPDY connections which are shared but not reference
    counted, which makes knowing whether it is safe to
    close them difficult. SPDY is not enabled on Android
    by default and so that may have been safe to ignore.
    
    This fix tries to keep the existing cleaning behavior
    intact to avoid introducing new bugs or new thread
    behavior that might impact battery life. It adds a
    new mode to the pool for "draining", which handles
    cleaning up any existing entries in the pool and any
    added after the pool has been placed into draining
    mode.
    
    The drainModeRunnable introduced serves two purposes:
    
    1) While scheduled / executing, it pins the connection
    pool in memory to avoid it being garbage collected.
    2) It continues to close connections (safely) until the
    pool is empty.
    
    If a connection is then added back to the pool the
    drainModeRunnable is restarted.
    
    Bug: 18369687
    (cherry picked from commit ff345b6c0ffcc691e4c3c594f8a222cf81bb325c)
    
    Change-Id: I4e9e530f8e7acedf4b9a806237c8769a10671feb
    Fix for a socket leak in OkHttp on Android
    
    When the preferred Android network changes from
    cell -> wifi or wifi -> cell the HTTP connection
    pool in use is abandoned to avoid reuse of
    connections on the old network. This was added
    in commit 8bced3e.
    
    The design for the connection pool was such that
    continuous use of the connection pool was required to
    clean up idle / expired connections. If a connection
    pool becomes idle (as when it is dereferenced on a
    network change) it is possible for some connections
    to remain in the pool indefinitely.
    
    After the preferred network change, because the old
    connection pool was no longer referenced the pool
    would be garbage collected and Android's "Strict Mode"
    would complain about sockets not being closed.
    
    The only existing way to avoid this was to call
    "evictAll()", which would have had issues when a
    large number of connections were returned to the pool
    after evictAll() was called. It also wouldn't work
    for SPDY connections which are shared but not reference
    counted, which makes knowing whether it is safe to
    close them difficult. SPDY is not enabled on Android
    by default and so that may have been safe to ignore.
    
    This fix tries to keep the existing cleaning behavior
    intact to avoid introducing new bugs or new thread
    behavior that might impact battery life. It adds a
    new mode to the pool for "draining", which handles
    cleaning up any existing entries in the pool and any
    added after the pool has been placed into draining
    mode.
    
    The drainModeRunnable introduced serves two purposes:
    
    1) While scheduled / executing, it pins the connection
    pool in memory to avoid it being garbage collected.
    2) It continues to close connections (safely) until the
    pool is empty.
    
    If a connection is then added back to the pool the
    drainModeRunnable is restarted.
    
    Bug: 18369687
    Change-Id: I7e9bdd0edba84784f667105f52ef80655c1b06ff
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Bug: 17314604
    (cherry-picked from commit 8bced3e769d315a0a81b89de7a5282f1a85acbf7)
    
    Change-Id: I4b2295ebceca93d55c994857de8554e9bb48b4c5
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Change-Id: I7b62f2bbd306c932dfd8d0ff4fff236ec04405bf
    Bug: 17314604
    Use hostname aware isCleartextTrafficPermitted
    
    The cleartext traffic blocking feature of
    android.net.NetworkSecurityPolicy is being expanded to provide finer
    grained controls (per hostname). This change integrates the OkHttp
    stack with these finer grained controls.
    
    Bug: 22666071
    Change-Id: I36ffa2f8bd2960cf25cef95b9d11e599c508d14b
    Refactor NetworkSecurityPolicy to be pluggable
    
    This allows us to keep the logic for the NetworkSecurityPolicy in the
    framework instead of in libcore.
    
    Change-Id: I4bf494f79c27729cb17d93d90a91319492270ce9
    Fix HttpURLConnection.setFollowRedirects()
    
    OkHttp's HttpURLConnectionImpl stopped using the static value set
    on HttpURLConnection directly with commit
    e78f117bcbd6b57d783737107f445ef75ecb474a
    and started expecting a new value on OkHttpClient to be set
    instead. This means that HttpURLConnection stopped obeying
    the HttpURLConnection static setting. This change adds the necessary
    behavior back.
    
    Bug: https://code.google.com/p/android/issues/detail?id=194495
    Bug: 25928343
    Change-Id: Ic808f94056d1932f35e8f72746be8362452797db
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Explicitly set Http(s)URLConnection timeouts
    
    The defaults are changing upstream with change
    https://github.com/square/okhttp/commit/0de14e992c228fd9de9fe78417788131bee00902
    to 10 seconds.
    
    If the timeouts are not set explicitly the behavior will change
    next time Android pulls from upstream.
    
    Change-Id: I3702f2a98fbcb547518e50574a504ebd9e81bf68
    Honor NetworkSecurityPolicy regarding cleartext traffic.
    
    This makes okhttp's Android URLStreamHandler instances honor the
    process-wide policy about cleartext network traffic. If cleartext
    network traffic is not permitted, then attempts to open okhttp-backed
    URLConnections will throw an IOException.
    
    Cleartext HTTP attempts violating the policy will now result in
    URLConnection throwing a java.net.SocketException complaining that no
    route to the host could be found because no connection specs are
    available. The message or the exception type could be improved upon
    for easier troubleshooting. However, this is how okhttp decided to
    handle this policy for now. We could intercept connection attempts
    earlier, and throw our own exception, but it's not clear how much
    benefit this additional complexity will provider.
    
    Bug: 19215516
    Change-Id: I38afc86eeee8b1c237e9ae45c4ca884dc7310152
    Tidy up HttpsHandler / HttpHandler and change defaults
    
    OkHttp was recently upgraded in AOSP. This is a tidy
    up change to correct some defaults and improve documentation
    of Android settings.
    
    Besides better docs this change mostly focuses on
    ConnectionSpecs.
    
    OkHttp now has a set of default ConnectionSpecs. ConnectionSpecs
    control TLS version and cipher suite selection during connection
    negotiations.
    
    The defaults are not what we want on Android:
    
    Historically, it looks like we don't want HttpsURLConnection
    being redirected to http:// addresses, and HttpURLConnections
    being redirected to https://. This means that we can
    exclude any TLS-based ConnectionSpecs from HttpHandler, and
    cleartext-based ConnectionSpecs from HttpsHandler making that
    choice even more explicit.
    
    TLS versions:
    
    The upgrade effectively had a side-effect of disabling SSLv3
    in all cases. On Android we disable SSLv3 in the default socket
    factory (getEnabledProtocols()), but it is still supported on
    the socket (getSupportedProtocols()).
    
    In the L release, OkHttp would use the default TLS versions
    for the initial connection and SSLv3 only for the fallback
    (i.e. with the default socket factory it would turn it back on
    for the fallback connection).
    
    This change allows for applications that may need to use SSLv3.
    SSLv3 will only be used if there is an installed socket factory
    that enables it by default.
    
    There should be a future change coming to upstream that will
    further alter this behavior because OkHttp will still make
    multiple attempts to connect when it knows it won't work.
    
    Ciphers:
    
    OkHttp is opinionated about the cipher suites to enable
    on a socket. On Android, we want the SocketFactory to determine
    the set of acceptable ciphers and we should just use the default
    enabled set (because the default set may be better than the
    set known when the device shipped, e.g. the socket factory may
    come from GMS or installed by an app and therefore provide better
    ciphers or disable ones that have found to be broken).
    
    This change fixes two failing tests in
    libcore.java.net.URLConnectionTest due to the TLS version
    changes.
    
    Change-Id: Iefc77746695b307a1222faf336d9d6452e974810
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Bug: 17314604
    (cherry-picked from commit 8bced3e769d315a0a81b89de7a5282f1a85acbf7)
    
    Change-Id: I4b2295ebceca93d55c994857de8554e9bb48b4c5
    external/okhttp changes to support connection pool flushing
    
    When the preferred network / default network for a device
    changes we must flush any pooled connections.
    
    This change has a known issue which will be fixed in a
    later commit: Any connections that are in use when
    the pool is cleared can be put (back) into the pool after
    evictAll(). This means those connections will continue to
    reference the old preferred / default network.
    
    Bug: 17314604
    
    (cherry-picked from commit 84f674f3abba1083e1efd94520d516036a3f0b6a)
    
    Change-Id: Ib5dbeb5a90aff68da3dd312f924c2bdb44f6f213
    Enable android.net to reuse OkHttpClient creation logic
    
    Pulling out static factory methods from HttpHandler and
    HttpsHandler. android.net will call these to create
    OkHttpClient instances which they can then further tweak
    for their own purposes.
    
    Bug: 17420465
    
    (cherry-picked from commit c19427fc6c8c1be67970437643c8fe90e328fc6c)
    
    Change-Id: Id4825f6b9599c79594f977fd726beb3465b96e19
    Alter Android's connection pool behavior on network config changes
    
    Rather than clearing out and closing the shared connection pool
    each time the network changes with evictAll() this ensures that
    later Http(s)URLConnections will reference a new ConnectionPool
    instance.
    
    This is an improvement over the current implementation:
    1) It is obviously non-blocking.
    2) It ensures that connections for the old network config
    and are currently in use are not put back into the shared
    pool.
    
    Change-Id: I7b62f2bbd306c932dfd8d0ff4fff236ec04405bf
    Bug: 17314604
    external/okhttp changes to support connection pool flushing
    
    When the preferred network / default network for a device
    changes we must flush any pooled connections.
    
    This change has a known issue which will be fixed in a
    later commit: Any connections that are in use when
    the pool is cleared can be put (back) into the pool after
    evictAll(). This means those connections will continue to
    reference the old preferred / default network.
    
    Bug: 17314604
    Change-Id: Icbe20db77922cdbe1d6965785de7ee59495044de
    Enable android.net to reuse OkHttpClient creation logic
    
    Pulling out static factory methods from HttpHandler and
    HttpsHandler. android.net will call these to create
    OkHttpClient instances which they can then further tweak
    for their own purposes.
    
    Bug: 17420465
    Change-Id: Ib22e79ee3a2fec343dbf518d6f885b18997b0002
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Don't follow protocol redirects.
    
    OkHttp allows protocol redirects by default, so turn them
    off explicitly.
    
    Also, let HttpsHandler extend HttpHandler so that they can
    share code that deals with OkHttpClient initialization.
    
    Change-Id: I890456260571abd40a64ab1647eb4e991f5b1c7e
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Clean up comments that still reference NPN.
    
    Change-Id: I9d82c48e087cc73d0680f54bef77412f28e693d6
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Remove NPN support from Android's OkHttp Platform class
    
    The Platform class is used by Android's built-in HttpsURLConnection
    instances. We disable SPDY and HTTP/2 entirely so this should be a
    no-op for apps using Android's HttpsURLConnection.
    
    We run OkHttp's JUnit tests with this version of Platform. The OkHttp
    tests do test SPDY and HTTP/2. ALPN supercedes NPN. The NPN support
    in Android's socket implementation appears buggy and causes test
    failures. Dropping NPN enables us to work around issues in those
    tests.
    
    There has been a pull request to drop NPN support generally from OkHttp
    upstream: https://github.com/square/okhttp/pull/1201
    
    See also:
    https://www.imperialviolet.org/2013/03/20/alpn.html
    https://groups.google.com/a/chromium.org/forum/#!topic/security-dev/eJVxCZ92vvg
    
    Bug: 18705877
    Change-Id: Iea58ba88e79cf1ac8cf08b4be900d27247f219e1
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    (cherry pick from commit 565c2ad69684ef7c23b5aaa3b7f0c7363cef6bd7)
    
    Change-Id: Ib018209c171e2b18d5f4ee2c4f364778f5e239dc
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    Change-Id: I1779e1178f3764c199dd0d1e4b032dcbc92f87c7
    SCSV support
    
    This adds the TLS fallback SCSV token.
    
    (cherry picked from commit e256f2c51cf406843a7ed0364399f79a63a085f6)
    
    Bug: 17750026
    Change-Id: Ic7f68698af3fb26d449583421a139ca8ecda156f
    SCSV support
    
    This adds the TLS fallback SCSV token.
    
    Bug: 17750026
    (cherry-picked from commit e256f2c51cf406843a7ed0364399f79a63a085f6)
    
    Change-Id: I9ca3e12a8a430e647bd5421fb6fee32dba360a8c
    SCSV support
    
    This adds the TLS fallback SCSV token.
    
    Bug: 17750026
    (cherry-picked from commit e256f2c51cf406843a7ed0364399f79a63a085f6)
    
    Change-Id: Icdbe6f896ce76b00c738a4df5d53e7b702524bc6
    SCSV support
    
    This adds the TLS fallback SCSV token.
    
    Bug: 17750026
    Change-Id: I3dfc3b0af6ede2d240218a667869be64d0a0268d
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Track change to JSSE provider
    
    Change-Id: I93f95fe62d776996d3ea291822f2687133dd3e3c
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Temporary workaround for whatsapp issues.
    
    Use the RFC-2732 specified hostname (for IPv6 literals) in places where it
    makes sense to do so. We pass it to Socket factories / Authenticators and use
    it in the request line as well.
    
    bug: 26769689
    
    (cherry picked from commit cdf3c4bc9e853c99d82d4c1dfc907ef2694f2ed7)
    
    Change-Id: Icfdce464b4f6e4eeb9ec6161103aab3040b2adbb
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Improve tests for TLS fallback.
    
    This is a small improvement over the changes that were submitted to
    Android when TLS_FALLBACK_SCSV was introduced.
    
    Previously the tests would cripple the server to use a low quality
    protocol so the TLS_FALLBACK_SCSV check would pass for all connection
    attempts.
    
    Some tests for APIs not used in Android were suppressed.
    
    This change modifies that approach. Instead it:
    
    1) Introduces a test client socket factory that ignores any attempt
    to set the TLS_FALLBACK_SCSV cipher. This means that the server will
    not attempt to enforce the fallback check.
    2) Pulls out some test infrastructure for use across tests.
    3) Re-enables / modifies the tests that were suppressed.
    
    The ideal solution would be to disable TLS_FALLBACK_SCSV checks in
    the MockWebServer for the tests that are supposed to simulate servers
    that do not perform TLS_FALLBACK_SCSV checks. However, we do not
    currently have a mechanism to do this.
    
    This change also adjusts tests that test fallback to explicitly
    enable SSLv3 for server-side socket factories. The Android default
    was changed to disable SSLv3 (though it is still supported). An
    up-coming change should remove the need for this.
    
    Change-Id: Ib4a57bc106928c0dd0653376341527fba7a8a00c
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    
    Upstream details:
    Comment:
    Don't percent-encode non-ASCII characters in fragments
    
    Fixes https://github.com/square/okhttp/issues/1635
    SHA: f4feb0adfcd8e209f90d4fffb6facf5c07f57110
    
    Bug: 27590872
    Change-Id: I827536ced778254103bdbe9d4b54baa4a889c058
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Use different URL encoding for single quote in query
    
    Single quotes in query parameters in HttpURLConnection changed
    behavior between M and N due to upstream changes in OkHttp:
    in N, single quotes started being encoded as %27 when present in
    query parameters. Unfortunately, this broke several "iTunes remote"
    apps: iTunes appears not to support %27 encoding for single quotes
    in its DAAP server.
    
    Bug: 30405333
    Test: (old) cts test packages android.core.tests.libcore.package.okhttp
        and android.core.tests.libcore.package.libcore
    Change-Id: Ic5ce976d969a733973c7e62cc6747cb679e78ca8
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    This change did not apply cleanly. Upstream FormEncodingBuilder has
    been refactored. Equivalent changes have been made.
    
    Upstream details:
    Comment:
    Never throw converting an HttpUrl to a java.net.URI.
    
    Just do arbitrary amounts of transformation. Sigh.
    
    Closes https://github.com/square/okhttp/issues/2116
    SHA: d77edcc8905148f18a691be180c4f8f366a5ee1b
    
    Bug: 27590872
    Change-Id: Ia12df5dc95c1681c67552b2c7725393508f52c0e
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    
    Upstream details:
    Comment:
    Don't percent-encode non-ASCII characters in fragments
    
    Fixes https://github.com/square/okhttp/issues/1635
    SHA: f4feb0adfcd8e209f90d4fffb6facf5c07f57110
    
    Bug: 27590872
    Change-Id: I827536ced778254103bdbe9d4b54baa4a889c058
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    Encode enough to make URI happy.
    
    Plus a bunch of test cases around this unfortunate case.
    
    Closes https://github.com/square/okhttp/issues/1872
    SHA: 080e7536ab8c2d07db58628f75a4140012e2a581
    
    Bug: 27590872
    Change-Id: I55670bdc97ffe162876b5ec93a150823a0549a40
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    Handle null fragments.
    SHA: e4dd6cfd63b251fba7a37e773f91c6bb4150b6bf
    
    Bug: 27590872
    Change-Id: Ib4ace89fe28cf08cb96cf6d016223583897a253f
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    use URI constructor for encoding fixes - https://github.com/square/okhttp/issues/1872
    SHA: 2a13fe9d83a596ddbfe8299dc75ab33db9130d20
    
    Bug: 27590872
    Change-Id: Ica97a6045a68886d32bfe29bb83cc62f10f98f1f
    Permit space to be encoded as + or %20.
    
    (cherry-picked from commit 6d2dcf2cc543d15cad69d2873760f11037604c8f)
    
    Note: Merged as pull request #1995 (https://github.com/square/okhttp/pull/1995)
    Bug: 26455836
    
    Change-Id: I1e3784f4624028edfd47ecc238f832b6dd7c0880
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Fix for a socket leak in OkHttp on Android
    
    When the preferred Android network changes from
    cell -> wifi or wifi -> cell the HTTP connection
    pool in use is abandoned to avoid reuse of
    connections on the old network. This was added
    in commit 8bced3e.
    
    The design for the connection pool was such that
    continuous use of the connection pool was required to
    clean up idle / expired connections. If a connection
    pool becomes idle (as when it is dereferenced on a
    network change) it is possible for some connections
    to remain in the pool indefinitely.
    
    After the preferred network change, because the old
    connection pool was no longer referenced the pool
    would be garbage collected and Android's "Strict Mode"
    would complain about sockets not being closed.
    
    The only existing way to avoid this was to call
    "evictAll()", which would have had issues when a
    large number of connections were returned to the pool
    after evictAll() was called. It also wouldn't work
    for SPDY connections which are shared but not reference
    counted, which makes knowing whether it is safe to
    close them difficult. SPDY is not enabled on Android
    by default and so that may have been safe to ignore.
    
    This fix tries to keep the existing cleaning behavior
    intact to avoid introducing new bugs or new thread
    behavior that might impact battery life. It adds a
    new mode to the pool for "draining", which handles
    cleaning up any existing entries in the pool and any
    added after the pool has been placed into draining
    mode.
    
    The drainModeRunnable introduced serves two purposes:
    
    1) While scheduled / executing, it pins the connection
    pool in memory to avoid it being garbage collected.
    2) It continues to close connections (safely) until the
    pool is empty.
    
    If a connection is then added back to the pool the
    drainModeRunnable is restarted.
    
    Bug: 18369687
    (cherry picked from commit ff345b6c0ffcc691e4c3c594f8a222cf81bb325c)
    
    Change-Id: I4e9e530f8e7acedf4b9a806237c8769a10671feb
    Fix for a socket leak in OkHttp on Android
    
    When the preferred Android network changes from
    cell -> wifi or wifi -> cell the HTTP connection
    pool in use is abandoned to avoid reuse of
    connections on the old network. This was added
    in commit 8bced3e.
    
    The design for the connection pool was such that
    continuous use of the connection pool was required to
    clean up idle / expired connections. If a connection
    pool becomes idle (as when it is dereferenced on a
    network change) it is possible for some connections
    to remain in the pool indefinitely.
    
    After the preferred network change, because the old
    connection pool was no longer referenced the pool
    would be garbage collected and Android's "Strict Mode"
    would complain about sockets not being closed.
    
    The only existing way to avoid this was to call
    "evictAll()", which would have had issues when a
    large number of connections were returned to the pool
    after evictAll() was called. It also wouldn't work
    for SPDY connections which are shared but not reference
    counted, which makes knowing whether it is safe to
    close them difficult. SPDY is not enabled on Android
    by default and so that may have been safe to ignore.
    
    This fix tries to keep the existing cleaning behavior
    intact to avoid introducing new bugs or new thread
    behavior that might impact battery life. It adds a
    new mode to the pool for "draining", which handles
    cleaning up any existing entries in the pool and any
    added after the pool has been placed into draining
    mode.
    
    The drainModeRunnable introduced serves two purposes:
    
    1) While scheduled / executing, it pins the connection
    pool in memory to avoid it being garbage collected.
    2) It continues to close connections (safely) until the
    pool is empty.
    
    If a connection is then added back to the pool the
    drainModeRunnable is restarted.
    
    Bug: 18369687
    Change-Id: I7e9bdd0edba84784f667105f52ef80655c1b06ff
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    
    (cherry picked from commit e5baca5e4c9de92820a38e60e289d07f1acaa2ef)
    
    Change-Id: Ica683022e6963a0a4f0c3fd1a33c1b843e307c1a
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    Change-Id: I233c29b79770950b16bc82b36fb47f22369d9bd3
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Permit space to be encoded as + or %20.
    
    (cherry-picked from commit 6d2dcf2cc543d15cad69d2873760f11037604c8f)
    
    Note: Merged as pull request #1995 (https://github.com/square/okhttp/pull/1995)
    Bug: 26455836
    
    Change-Id: I1e3784f4624028edfd47ecc238f832b6dd7c0880
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Apply upstream changes for timeout / pooled connection issue
    
    This change contains two upstream commits:
    
    Okio:
    
    Upstream commit: a4aee7d9594a2eae48cd274163003e0566719b91
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 08:19:39 2015 -0400
    
        Change Timeout.throwIfReached() to throw InterruptedIOException
    
        Previously this was throwing IOException, but nothing was anticipated
        that. This is slightly semantically incorrect; the thread wasn't
        interrupted. But it's much more convenient to use a single exception
        type for both timeouts.
    
        Also add a new type, ForwardingTimeout.
    
    OkHttp:
    
    Upstream commit: 4df674f8c5e2c07d881b4f2780922c7d15940814
    
    Author: jwilson <jwilson@squareup.com>
    Date:   Sat May 16 10:35:59 2015 -0400
    
        Don't share timeouts between pooled connections.
    
        This was causing crashes.
    
        Closes https://github.com/square/okio/issues/133
    
    Bug: 21799272
    Change-Id: I6f38fa8aae7dfaa74361500b75ecd09f41eb1f91
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Apply upstream commit: Allow HTAB in header values.
    
    This applies upstream commit
    02b08fbde7b1726d7a4c0dc971152751ac82ca0a
    
    Due to deviation between upstream and AOSP, the change was applied
    manually.
    
    RFC 7230 section 3.2 allows HTAB ('\t', '\u0009') inside header
    values as long as there is not more than one in a row:
      https://tools.ietf.org/html/rfc7230#section-3.2
    
    Before this CL, OkHttp previously disallowed HTAB in header values.
    This CL changes behavior to allow any number of consecutive HTABs
    inside a header value; this is more permissive than the RFC, but
    is consistent with how OkHttp currently treats space characters
    (' ', '\u0020').
    
    Bug: 30799514
    
    Test: run cts -m CtsLibcoreTestCases
    Test: run cts -m CtsLibcoreOkHttpTestCases
    
    Change-Id: I0dd68d1697affaf739167174970d52e466a2bc16
    (cherry picked from commit 1917ec9635dea723538ea000b67b105999e58710)
    Relax validation of HTTP header values to retain L/M behavior
    
    This relaxes some validation logic newly introduced in the version
    of OkHttp used in N.
    
    This change leaves the character code validation stricter
    than it was in M by still preventing control codes like \n, \r,
    backspace and delete. It does allow developers to pass
    Java characters > 7F to addRequestProperty() and also receive
    headers from servers which contain characters > 7F.
    
    Android's HttpURLConnection does not follow the HTTP spec as
    it encodes request header values and interprets response
    headers as UTF-8 and not ISO-8859-1.
    
    If a server is expecting or sending ISO-8859-1 encoded characters
    >7F in headers then these will still be corrupted or misinterpreted
    by Android. However, this has been the behavior since L and is not
    changed here.
    
    The OkHttp change which caused characters >7F to generate an
    IllegalArgumentException and partially reverted here:
    https://github.com/square/okhttp/pull/1785
    
    See also: https://github.com/square/okhttp/issues/1998
    https://github.com/square/okhttp/issues/2016
    for recent upstream bugs.
    
    Bug: 28867041
    Bug: https://code.google.com/p/android/issues/detail?id=210205
    Change-Id: Ibdf14d819411a12fcc78d012bfca97db048b7e6e
    okhttp: add workaround in RequestTest for \r
    
    (cherry picked from commit 2a168a5cf9e08f207172aa0d3a8395a2b7b7434f)
    
    Bug: 26422335
    Bug: 26889631
    Bug: 27606665
    Change-Id: I47fc0480552b8151ecdfe9c237848b49b9dedf98
    Workaround for request header values with trailing '\r' or '\r\n'
    
    Testing is showing an app that appears to
    be setting a request header with a trailing '\r'. This change
    strips the '\r' or '\r\n' iff it is at the end of the value.
    
    (cherry picked from commit 8ef2daccd20f80b439c93af7d7985fb26d1f6b2f)
    
    Bug: 26889631
    Change-Id: I3a521a5272ad0c7cf3b018892516ced9e65f46ca
    Workaround for request header values with trailing '\n'
    
    Testing is showing a high-profile app that appears to
    be setting a request header with a trailing '\n'. This change
    strips the '\n' iff it is at the end of the value.
    
    Bug: 26422335
    Change-Id: Iaf63829574ce73f17b5ab75362144e95a00b4b26
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    A rollup of recent upstream commits for OkHttp
    
    squareup/okhttp commits from:
    0a197466608681593cc9be9487965a0b1d5c244c
    to:
    b609edd07864d7191dcda8ba1f6c833c9fe170ad
    
    squareup/okio commits from:
    654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to
    82358df7f09e18aa42348836c614212085bbf045
    
    Changes that might affect Android:
    1) Cache control request headers: If-None-Match
    or If-Modified-Since sent, never both.
    2) Make okhttp behave more like a private, not a
    shared cache.
    3) SSLPeerUnverifiedException now thrown on
    hostname verification errors, not IOException.
    
    Change-Id: I3a2e8ae9bebfec84eaf8eb2aaa70085fa40fadd5
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Android modifications to OkHttp
    
    Re-introduce Android integration classes and
    make the modifications necessary to get OkHttp/Okio
    to compile against Android.
    
    The only Android-specific change made over prior versions
    of this code is in Platform to remove the toURILenient()
    method (no longer used by OkHttp).
    
    This commit also includes pending PR
    https://github.com/square/okhttp/pull/1858
    to fix two tests on Android:
    com.squareup.okhttp.URLConnectionTest#connectViaHttpsWithSSLFallback
    com.squareup.okhttp.CallTest#recoverFromTlsHandshakeFailure_Async
    
    Bug: 22943975
    Bug: 23553256
    Change-Id: I4c718c96fbd5fe3f2353ce422f8de3b95d0b75ee
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Improve tests for TLS fallback.
    
    This is a small improvement over the changes that were submitted to
    Android when TLS_FALLBACK_SCSV was introduced.
    
    Previously the tests would cripple the server to use a low quality
    protocol so the TLS_FALLBACK_SCSV check would pass for all connection
    attempts.
    
    Some tests for APIs not used in Android were suppressed.
    
    This change modifies that approach. Instead it:
    
    1) Introduces a test client socket factory that ignores any attempt
    to set the TLS_FALLBACK_SCSV cipher. This means that the server will
    not attempt to enforce the fallback check.
    2) Pulls out some test infrastructure for use across tests.
    3) Re-enables / modifies the tests that were suppressed.
    
    The ideal solution would be to disable TLS_FALLBACK_SCSV checks in
    the MockWebServer for the tests that are supposed to simulate servers
    that do not perform TLS_FALLBACK_SCSV checks. However, we do not
    currently have a mechanism to do this.
    
    This change also adjusts tests that test fallback to explicitly
    enable SSLv3 for server-side socket factories. The Android default
    was changed to disable SSLv3 (though it is still supported). An
    up-coming change should remove the need for this.
    
    Change-Id: Ib4a57bc106928c0dd0653376341527fba7a8a00c
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Improve tests for TLS fallback.
    
    This is a small improvement over the changes that were submitted to
    Android when TLS_FALLBACK_SCSV was introduced.
    
    Previously the tests would cripple the server to use a low quality
    protocol so the TLS_FALLBACK_SCSV check would pass for all connection
    attempts.
    
    Some tests for APIs not used in Android were suppressed.
    
    This change modifies that approach. Instead it:
    
    1) Introduces a test client socket factory that ignores any attempt
    to set the TLS_FALLBACK_SCSV cipher. This means that the server will
    not attempt to enforce the fallback check.
    2) Pulls out some test infrastructure for use across tests.
    3) Re-enables / modifies the tests that were suppressed.
    
    The ideal solution would be to disable TLS_FALLBACK_SCSV checks in
    the MockWebServer for the tests that are supposed to simulate servers
    that do not perform TLS_FALLBACK_SCSV checks. However, we do not
    currently have a mechanism to do this.
    
    This change also adjusts tests that test fallback to explicitly
    enable SSLv3 for server-side socket factories. The Android default
    was changed to disable SSLv3 (though it is still supported). An
    up-coming change should remove the need for this.
    
    Change-Id: Ib4a57bc106928c0dd0653376341527fba7a8a00c
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    (cherry picked from commit cd57d9eb83acc7a13ee576bfa22d4c490316ac18)
    Fix regression in the HTTP request line
    
    Adds a test that demonstrates a regression from M in
    the HTTP request line when a proxied connection
    is made. It only affects URLs with empty paths (i.e. ones
    without even a '/' after the host / authority). For
    example, on M the request line for a request to
    new URL("http://myhost").openConnection() would be:
    
    GET http://myhost HTTP/1.1
    
    but on N, without this change, it would be:
    
    GET http://myhost/ HTTP/1.1
    
    This change reverts to the M behavior.
    
    Bug: 29983827
    Test: CtsLibcoreOkHttpTestCases and CtsLibcoreTestCases
    Change-Id: I117bca1371e5311b85e0cee0d3d2528191ade182
    Relax validation of HTTP header values to retain L/M behavior
    
    This relaxes some validation logic newly introduced in the version
    of OkHttp used in N.
    
    This change leaves the character code validation stricter
    than it was in M by still preventing control codes like \n, \r,
    backspace and delete. It does allow developers to pass
    Java characters > 7F to addRequestProperty() and also receive
    headers from servers which contain characters > 7F.
    
    Android's HttpURLConnection does not follow the HTTP spec as
    it encodes request header values and interprets response
    headers as UTF-8 and not ISO-8859-1.
    
    If a server is expecting or sending ISO-8859-1 encoded characters
    >7F in headers then these will still be corrupted or misinterpreted
    by Android. However, this has been the behavior since L and is not
    changed here.
    
    The OkHttp change which caused characters >7F to generate an
    IllegalArgumentException and partially reverted here:
    https://github.com/square/okhttp/pull/1785
    
    See also: https://github.com/square/okhttp/issues/1998
    https://github.com/square/okhttp/issues/2016
    for recent upstream bugs.
    
    Bug: 28867041
    Bug: https://code.google.com/p/android/issues/detail?id=210205
    Change-Id: Ibdf14d819411a12fcc78d012bfca97db048b7e6e
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    Encode enough to make URI happy.
    
    Plus a bunch of test cases around this unfortunate case.
    
    Closes https://github.com/square/okhttp/issues/1872
    SHA: 080e7536ab8c2d07db58628f75a4140012e2a581
    
    Bug: 27590872
    Change-Id: I55670bdc97ffe162876b5ec93a150823a0549a40
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    use URI constructor for encoding fixes - https://github.com/square/okhttp/issues/1872
    SHA: 2a13fe9d83a596ddbfe8299dc75ab33db9130d20
    
    Bug: 27590872
    Change-Id: Ica97a6045a68886d32bfe29bb83cc62f10f98f1f
    Fix URLConnectionTest.writeTimeouts with large receive buffers
    
    This is upstream okhttp commit 8b19bc471f66ee45c5eed3df6817411d074aabe5.
    https://github.com/square/okhttp/commit/8b19bc471f66ee45c5eed3df6817411d074aabe5
    back-ported to Android's version of OkHttp.
    
    From the upstream commit:
    
    The test relies on small client send / server receive buffers
    to force blocking and generate a timeout.
    
    The switch to make MockWebServer a @Rule (commit
    785d9e94387f404f571775a49c3a9438508bb659) moved the
    MockWebServer.start() call earlier in the test execution.
    Setting the ServerSocketFactory became a no-op so the server
    receive buffer size was left as the default.
    
    The test became reliant on either:
    1) The default server socket receive buffer being small enough
    (e.g. less than the data being transmitted).
    2) The device being too slow to send the requested data in the
    time allowed.
    
    The test was recently made less reliable by:
    1) The okio commit
    f30955cb15eb234f874dd55819686832c960765b, which made the segment
    size bigger (increasing throughput / transfer efficiency).
    2) The OkHttp commit f30955cb15eb234f874dd55819686832c960765b,
    which reduced the amount of data being sent in the test from
    16MB to 2MB.
    3) Recent Android devices have large default buffer sizes. e.g.
    Nexus 5: 1MB, Nexus 5X: 6MB.
    
    Bug: 25459708
    Change-Id: Icaa3255d86d228302931baca0432ea9a5be1e7f0
    Fix visibility of test method that prevents tests running
    
    Unfortunately, the version of the test committed was not the one
    verified. This is a test-only change.
    
    Bug: 25311563
    Bug: 25138800
    Change-Id: Id6ff0e1207e7962800290a1670de6e45f3b31e71
    Fix Http(s)URLConnectionImpl.getInstanceFollowsRedirects()
    
    This is the proposed upstream PR:
    https://github.com/square/okhttp/pull/1939
    
    Bug: 25138800
    Bug: https://code.google.com/p/android/issues/detail?id=190998
    Change-Id: I3873cb59b8cd95aef2641d6b238ac65341eaba12
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Revert "Revert "Add further handling for when a CONNECT incorrectly returns a body.""
    
    This reverts commit 741b3fe53e2c42e8a93f03205e8a4e66f6bea112.
    
    commit 741b3fe53e2c42e8a93f03205e8a4e66f6bea112 was incorrectly
    merged from lollipop-cts-dev into lollipop-mr1-cts-dev.
    
    Bug: 23024485
    Revert "Add further handling for when a CONNECT incorrectly returns a body."
    
    This reverts commit 0f102f51711ecc2ef9f25cbbad2148ee97bdb6cb.
    
    commit 0f102f51711ecc2ef9f25cbbad2148ee97bdb6cb is present in
    lollipop-cts-dev but not lollipop-release. This causes the
    tests to fail when run against a lollipop-release build.
    
    DO NOT MERGE ANYWHERE
    
    Bug: 22546532
    Change-Id: Ib920e2071432d2412e3cddfd2cdbd8a0a55e532b
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    (cherry-picked from commit b5f9076b16fcc41c3dad31aecfdcfd962a7a1f75)
    
    Change-Id: I4d44e973f906d41a622598e2293d4026fc1ed039
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    Change-Id: Ibe913cb8584331a470716272dcd42c088cbb975e
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Reduce flakiness of OkHttp tests
    
    Copy of the test changes from a pending upstream
    pull-request:
    https://github.com/square/okhttp/pull/1348
    
    ----
    
    Android has been receiving reports of some tests being flaky
    on what are probably lower-spec devices.
    
    This introduces delays into tests where sockets are being
    poisoned after the entire response body has been written to
    them *and* where there are follow-up requests.
    
    Bug: 18953235
    Change-Id: Ic2d281a3faad6082819ef6d57b3489bcd6dbd474
    (cherry picked from commit 75a7afac9b6b5866cde46c3d3158227391175701)
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Reduce flakiness of OkHttp tests
    
    Copy of the test changes from a pending upstream
    pull-request:
    https://github.com/square/okhttp/pull/1348
    
    ----
    
    Android has been receiving reports of some tests being flaky
    on what are probably lower-spec devices.
    
    This introduces delays into tests where sockets are being
    poisoned after the entire response body has been written to
    them *and* where there are follow-up requests.
    
    Bug: 18953235
    Change-Id: Ic2d281a3faad6082819ef6d57b3489bcd6dbd474
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Add further handling for when a CONNECT incorrectly returns a body.
    
    Before the change:
    If a proxy returns a body and some of the body bytes have
    already been buffered then an IOException is thrown.
    If the body bytes have not been buffered then the handshake will
    fail due to the presence of bytes where the Server HELLO is
    expected, typically with some kind of SSLHandshakeException.
    
    After the change:
    The body bytes are consumed to ensure consistent behavior. The
    handshake will then take place.
    
    History:
    This is an unusual case that would occasionally cause failures
    on Android when a ResponseCache was installed. Android introduced
    a patch to prevent CONNECT responses being cached. Since then,
    OkHttp has changed the code and probably fixed the issue via
    other means. The Android test remained and would sometimes
    experience one exception, sometimes another, depending on the
    state of the buffer.
    
    If the presence of a body is a possibility it would be nice
    to deal with it consistently and deterministically.
    
    The motivation for this change is to make an Android test
    equivalent to the one added here behave consistently and in a
    way that doesn't involve connection fallback.
    
    The only risk with this change is if a proxy is incorrectly
    reporting the content length: this might lead to blocking on
    the body read/skip (as OkHttp would probably do elsewhere if a
    server mis-reports a content-length). This may make connections
    to "bad" proxies slightly more reliable.
    
    Bug: 6754912
    Bug: 18575971
    
    (cherry picked from commit 007b88ad6df622a2e5daacce604637d006ed6212)
    
    Change-Id: Icf9e17a26dd2b1c4024935dfae3e87b2654a220e
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Improve tests for TLS fallback.
    
    This is a small improvement over the changes that were submitted to
    Android when TLS_FALLBACK_SCSV was introduced.
    
    Previously the tests would cripple the server to use a low quality
    protocol so the TLS_FALLBACK_SCSV check would pass for all connection
    attempts.
    
    Some tests for APIs not used in Android were suppressed.
    
    This change modifies that approach. Instead it:
    
    1) Introduces a test client socket factory that ignores any attempt
    to set the TLS_FALLBACK_SCSV cipher. This means that the server will
    not attempt to enforce the fallback check.
    2) Pulls out some test infrastructure for use across tests.
    3) Re-enables / modifies the tests that were suppressed.
    
    The ideal solution would be to disable TLS_FALLBACK_SCSV checks in
    the MockWebServer for the tests that are supposed to simulate servers
    that do not perform TLS_FALLBACK_SCSV checks. However, we do not
    currently have a mechanism to do this.
    
    This change also adjusts tests that test fallback to explicitly
    enable SSLv3 for server-side socket factories. The Android default
    was changed to disable SSLv3 (though it is still supported). An
    up-coming change should remove the need for this.
    
    Change-Id: Ib4a57bc106928c0dd0653376341527fba7a8a00c
    Add further handling for when a CONNECT incorrectly returns a body.
    
    Before the change:
    If a proxy returns a body and some of the body bytes have
    already been buffered then an IOException is thrown.
    If the body bytes have not been buffered then the handshake will
    fail due to the presence of bytes where the Server HELLO is
    expected, typically with some kind of SSLHandshakeException.
    
    After the change:
    The body bytes are consumed to ensure consistent behavior. The
    handshake will then take place.
    
    History:
    This is an unusual case that would occasionally cause failures
    on Android when a ResponseCache was installed. Android introduced
    a patch to prevent CONNECT responses being cached. Since then,
    OkHttp has changed the code and probably fixed the issue via
    other means. The Android test remained and would sometimes
    experience one exception, sometimes another, depending on the
    state of the buffer.
    
    If the presence of a body is a possibility it would be nice
    to deal with it consistently and deterministically.
    
    The motivation for this change is to make an Android test
    equivalent to the one added here behave consistently and in a
    way that doesn't involve connection fallback.
    
    The only risk with this change is if a proxy is incorrectly
    reporting the content length: this might lead to blocking on
    the body read/skip (as OkHttp would probably do elsewhere if a
    server mis-reports a content-length). This may make connections
    to "bad" proxies slightly more reliable.
    
    Bug: 6754912
    Change-Id: I36fff6633b3716e43347ade4e0a175134fb525f9
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    Change-Id: I5f5eb648f4a5f2022c63acd7c903aac88e178d9a
    Fixing broken OkHttp CTS test
    
    Bug: 17962997
    Bug: 17750026
    (cherry picked from commit 95d1a1316ee04d39d55102e65daaacb97f5d42f8)
    
    Change-Id: I75caa1d9a19b402b050b9230df58c67bd1b107dd
    Fixing broken OkHttp CTS test
    
    Bug: 17962997
    Bug: 17750026
    Change-Id: Icbc48a8c30857b3afb0175ac4b341626d4b3dfe8
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Use the socket factory for direct connections as well.
    
    Currently, the passed-in socket factory is only used for
    connections to HTTP proxies. I think this was not the intent of
    the original socket factory change, because the commit message
    said that the "socket factory will be used for all non-proxy
    connections and HTTP proxy connections".  So use it for DIRECT
    connections as well.
    
    Also add a test to check that a socket factory is used if
    specified.
    
    Cherry-pick of https://github.com/square/okhttp/commit/7f763c1a18e342dc4e2840c68ca99c175c37eb93
    
    (cherry picked from commit a83ddf194ffbae04ce536967efff0ec72df70e10)
    
    Change-Id: Ie3d239d8683a51a2b6ab1dc9d443886d0746e68a
    Use the socket factory for direct connections as well.
    
    Currently, the passed-in socket factory is only used for
    connections to HTTP proxies. I think this was not the intent of
    the original socket factory change, because the commit message
    said that the "socket factory will be used for all non-proxy
    connections and HTTP proxy connections".  So use it for DIRECT
    connections as well.
    
    Also add a test to check that a socket factory is used if
    specified.
    
    Cherry-pick of https://github.com/square/okhttp/commit/7f763c1a18e342dc4e2840c68ca99c175c37eb93
    
    Change-Id: I811b08442d1c80be1a0a268eb51c9aa365febf00
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Reapply an upstream OkHttp change to Android for HttpUrl
    
    Manually reapplied change from upstream to address HttpUrl encoding issues.
    
    Upstream details:
    Comment:
    Don't percent-encode non-ASCII characters in fragments
    
    Fixes https://github.com/square/okhttp/issues/1635
    SHA: f4feb0adfcd8e209f90d4fffb6facf5c07f57110
    
    Bug: 27590872
    Change-Id: I827536ced778254103bdbe9d4b54baa4a889c058
    Apply upstream OkHttp HttpUrl fix
    
    Upstream information:
    Comment:
    Encode enough to make URI happy.
    
    Plus a bunch of test cases around this unfortunate case.
    
    Closes https://github.com/square/okhttp/issues/1872
    SHA: 080e7536ab8c2d07db58628f75a4140012e2a581
    
    Bug: 27590872
    Change-Id: I55670bdc97ffe162876b5ec93a150823a0549a40
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    
    (cherry picked from commit f6af62d5c9bb5e15649a80ebae973463e8e2dc46)
    
    Change-Id: I3172789a17384666eba732a7782573e08f06a48c
    Fix transparent gzip for basic auth.
    
    Externally reported Android bug:
    https://code.google.com/p/android/issues/detail?id=74026
    
    Thanks to mattpan91 for the report.
    
    The issue was fixed in OkHttp 2.0. It has now been back-ported to 1.6.
    
    This is a cherry pick from the okhttp_16 branch:
    https://github.com/square/okhttp/commit/e8fee51087a062384f52e11400ff4a104a00a2b2
    
    The merge was not entirely straightforward: Android is currently not quite
    on 1.6; it is close and it was only the package for the files that differed
    for existing files. There is an additional class (Job) that had to be patched
    that the version Android has and 1.6 does not have. The class is probably not
    used on Android.
    
    The okhttp CTS tests pass, modulo some tests known to be flaky.
    
    Bug: 16628050
    Bug: https://code.google.com/p/android/issues/detail?id=74026
    Change-Id: Ic179947f9f3664a4f2a7fcde435ec9fb7f1ae340
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    (cherry pick from commit 565c2ad69684ef7c23b5aaa3b7f0c7363cef6bd7)
    
    Change-Id: Ib018209c171e2b18d5f4ee2c4f364778f5e239dc
    Fixing SNI, ALPN, NPN support for some cases
    
    Fixing the case where the socket implementation is not in the package or
    with the exact name we expect. We now use something like duck-typing.
    
    Bug: 18014455
    Change-Id: I1779e1178f3764c199dd0d1e4b032dcbc92f87c7
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp through to Feb 20.
    
    This is commit 4b7e0b733fe7597bd58014311cbed8592ca313ac
    on branch master at
    
    https://github.com/square/okhttp
    
    Change-Id: I68c40a8a0c7518933b6ac124c886d21f4823a809
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Fix flaky test Spdy3ConnectionTest.receiveGoAway().
    
    Closes https://github.com/square/okhttp/issues/1660
    (cherry-picked from upstream submit 7f6df401808d904d7065b4e83c8c4c4399079d8a)
    
    Bug: 21212159
    Change-Id: Iabb917e90076c851ed10fcac379298f2e6f6558c
    Fix flaky test Spdy3ConnectionTest.receiveGoAway().
    
    Closes https://github.com/square/okhttp/issues/1660
    (cherry-picked from upstream submit 7f6df401808d904d7065b4e83c8c4c4399079d8a)
    
    Bug: 21212159
    Change-Id: Iabb917e90076c851ed10fcac379298f2e6f6558c
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    am 08e99bfb: am f5d93b07: Merge "Upgrade OkHttp to newer code"
    
    * commit '08e99bfb5844e79b7fe3af4d05914209ead6da55':
      Upgrade OkHttp to newer code
    Upgrade OkHttp to newer code
    
    This update includes changes up to
    68affbd24d63620e1785ea847f1936760947b9ae / master /
    14th March 2014.
    
    Importantly, it contains a DiskLruCache fix which
    broke several apps.
    https://github.com/square/okhttp/issues/646
    
    Change-Id: I8a489e6d0937a58fad10423154bad939ea4da868
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Avoid a reverse DNS-lookup for a numeric proxy address
    
    When the proxy is specified as an IP address the RouteSelector
    would force a reverse-lookup. This can introduce extra latency
    when the DNS is slow or missing. It also then turns the name
    back into a set of IPs, which may result in the original IP
    address not being given priority.
    
    This is upstream commit:
    https://github.com/square/okhttp/commit/9acd5e7b54fb55f62a5dd16865c30787dfba4c8b
    
    Bug: 18567569
    Bug: 18327075
    (cherry picked from commit 797fdc6cc6bf16372e9464f189b535148f944ce9)
    
    Change-Id: I52b4049095acafd2367530532d8cad7d75b6809a
    Avoid a reverse DNS-lookup for a numeric proxy address
    
    When the proxy is specified as an IP address the RouteSelector
    would force a reverse-lookup. This can introduce extra latency
    when the DNS is slow or missing. It also then turns the name
    back into a set of IPs, which may result in the original IP
    address not being given priority.
    
    This is upstream commit:
    https://github.com/square/okhttp/commit/9acd5e7b54fb55f62a5dd16865c30787dfba4c8b
    
    Bug: 18327075
    Change-Id: Idafd72f4d5b901e267081f924377db4ada9afe1b
    Changes for dealing with more granular TLS connection fallback
    
    This change also enabled OkHttp to handle socket factories that
    produce sockets that do not not enable all the protocols that might
    be part of the fallback strategy. e.g. to avoid enabling SSLv3 when
    SSLv3 is not enabled by default.
    
    If a socket is encountered that does not support, e.g., TLSv1.2 the
    negotiation is not attempted or failed; the strategy simply falls
    back until it finds a TlsConfiguration that can work. If none will
    work an exception is thrown.
    
    The majority of this change is dealing with the fact that it is not
    easy to know in advance which TLS/SSL protocol versions are supported
    by a socket without having a socket instance. OkHttp currently
    assumes that TLS configuration can be predetermined.
    
    RouteSelector no longer deals with TLS fallback. This is now handled
    by the Connection instead.
    
    A later CL will modify the fallback strategy to try various TLS
    versions (when supported) instead of switching immediately to SSLv3.
    This change allows Android to switch with minimal code changes, at
    least until we take a newer version of OkHttp where it may be easier.
    
    Bug: 13228108
    Change-Id: If76b0b5699c22601f21c9afe494d7089ac2fa55c
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow callers to pass in a custom host resolver implementation.
    
    An HTTP client interacts with the network in two main ways: DNS
    lookups and connections to HTTP servers. OkHttp already abstracts
    the latter by allowing callers to pass in custom SocketFactory
    objects, but does not yet abstract the former.
    
    This change takes the existing internal Dns interface, which is
    currently used for testing, and turns it into a publicly
    accessible HostResolver interface. This allows callers to
    completely abstract all network interaction points.
    
    Examples of what this can be used for:
    
    1. Use alternative DNS implementations with different
       performance / caching / ordering / parallelization / ...
       characteristics than standard InetAddress.getAllByName.
    2. Resolve hosts using different DNS servers than the system
       resolvers, or even non-DNS protocols (e.g., MDNS or even
       NetBIOS/WINS) that are not supported by the system resolver.
    3. Do DNS lookups on specific networks, similarly to what
       android_getaddrinfofornet does.
    
    Backport of upstream change:
    https://github.com/square/okhttp/commit/b19860c9297197a5055ac2ffd6edaedf693c1a85
    
    Change-Id: I6e488acd938067e4c078c6ffe4d5eddb5f3951de
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    
    (cherry picked from commit e5baca5e4c9de92820a38e60e289d07f1acaa2ef)
    
    Change-Id: Ica683022e6963a0a4f0c3fd1a33c1b843e307c1a
    Allow specifying a socket factory for connections.
    
    This socket factory will be used for all non-proxy connections and HTTP proxy connections.
    
    This is a clean cherry-pick of:
      https://github.com/square/okhttp/commit/ff5390d6dcaf79ef09a3ef94dbb7e8ac39572a7f
    
    That was committed about two weeks after we pulled our current
    snapshot, so we would have picked this change up on the next
    sync with upstream.
    
    Bug: 11826069
    Change-Id: I233c29b79770950b16bc82b36fb47f22369d9bd3
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit abc8c9a30bc0c5a9a
    
    Change-Id: I5331e760f09aaae0a267c50829f01eb7a68d76e1
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    (cherry-picked from commit b5f9076b16fcc41c3dad31aecfdcfd962a7a1f75)
    
    Change-Id: I4d44e973f906d41a622598e2293d4026fc1ed039
    Fix for HttpURLConnection not always throwing SocketTimeoutException
    
    Contains upstream changes:
    Okio: https://github.com/square/okio/pull/154
    OkHttp: https://github.com/square/okhttp/pull/1698 (pending)
    
    Bug: 21396523
    Change-Id: Ibe913cb8584331a470716272dcd42c088cbb975e
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Apply upstream commit: Allow HTAB in header values.
    
    This applies upstream commit
    02b08fbde7b1726d7a4c0dc971152751ac82ca0a
    
    Due to deviation between upstream and AOSP, the change was applied
    manually.
    
    RFC 7230 section 3.2 allows HTAB ('\t', '\u0009') inside header
    values as long as there is not more than one in a row:
      https://tools.ietf.org/html/rfc7230#section-3.2
    
    Before this CL, OkHttp previously disallowed HTAB in header values.
    This CL changes behavior to allow any number of consecutive HTABs
    inside a header value; this is more permissive than the RFC, but
    is consistent with how OkHttp currently treats space characters
    (' ', '\u0020').
    
    Bug: 30799514
    
    Test: run cts -m CtsLibcoreTestCases
    Test: run cts -m CtsLibcoreOkHttpTestCases
    
    Change-Id: I0dd68d1697affaf739167174970d52e466a2bc16
    (cherry picked from commit 1917ec9635dea723538ea000b67b105999e58710)
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Apply okhttp upstream pull request #1011
    
    Fix formatting / parsing for Android
    
    Ensuring that this Android bug is fixed for the next
    Android release:
    https://code.google.com/p/android/issues/detail?id=66135
    
    On Android the SimpleDateFormat for "zzz" returns GMT+00:00.
    This is regrettable but awkward to change as it is existing
    behavior.
    https://code.google.com/p/android/issues/detail?id=66136
    
    This change fixes the format to 'GMT'.
    
    This change also fixes a bug where the platform default
    timezone was used for parsing some date/times and not GMT.
    
    Various tests have been added to prove the behavior when
    timezones are missing and dates are malformed.
    
    (cherry picked from okhttp b36761b7dd5a0743ec5d89fb9adc36b602cc3b4b)
    Bug: https://code.google.com/p/android/issues/detail?id=66135
    Change-Id: I831693bfff884c5d70f8592b47effd368a369859
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix OkHttp test failure for fast devices
    
    On a fast device the ThreadInterruptTest#interruptWritingRequestBody
    would consistently fail.
    
    The issue is probably a combination of socket buffering and the data
    volume chosen by the test. The test was written to assume that
    read-side throttling would prevent the writer from writing its data
    within 500 millis. After ~500 millis the write thread would be
    interrupted and the test would pass.
    
    On a fast device the test would write all the test data
    in ~ 125 millis and the test would fail. The interruption would then
    trigger on a later test
    (typically URLConnectionTest#authenticateWithGetAndTransparentGzip),
    breaking that test as well.
    
    If there is sufficient socket-level read/write buffering it is
    possible the data being written will just fill the socket buffers
    and the writer will terminate early. If the data to be written is
    increased from 2 to 10 MB the test passes.
    
    Bug: 17516838
    (cherry-picked from commit e3bfefb13c93006a2fbe22363572a314f6c18659)
    
    Change-Id: Id832c366611d19a0e771b5dfb58a716b17221f95
    Fix OkHttp test failure for fast devices
    
    On a fast device the ThreadInterruptTest#interruptWritingRequestBody
    would consistently fail.
    
    The issue is probably a combination of socket buffering and the data
    volume chosen by the test. The test was written to assume that
    read-side throttling would prevent the writer from writing its data
    within 500 millis. After ~500 millis the write thread would be
    interrupted and the test would pass.
    
    On a fast device the test would write all the test data
    in ~ 125 millis and the test would fail. The interruption would then
    trigger on a later test
    (typically URLConnectionTest#authenticateWithGetAndTransparentGzip),
    breaking that test as well.
    
    If there is sufficient socket-level read/write buffering it is
    possible the data being written will just fill the socket buffers
    and the writer will terminate early. If the data to be written is
    increased from 2 to 10 MB the test passes.
    
    Bug: 17516838
    Change-Id: I54b5de9527d9737e6c987b6a9c4f62578f4f8fb7
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Fix DisconnectTest for devices with large socket buffers
    
    Similar to commit e3bfefb13c93006a2fbe22363572a314f6c18659
    but for DisconnectTest. The buffer sizes are large on some
    devices so the expectation that they take a lot of time to
    stream data is invalid because they just write into the
    buffers.
    
    Bug: 18703696
    Change-Id: I6127b044bf7fefc192f577d0b035deacbc54dd5f
    New disconnect strategy.
    
    Support asynchronous disconnects by breaking the socket only, which
    should cause the thread using that socket to trigger clean-up.
    
    Upstream commit: https://github.com/square/okhttp/commit/9c302131491d05a4ca0209ef21770592c01f76fa
    
    Bug: 18083851
    (cherry picked from commit 87ed7244fb53ae2bac9f23c033bbd5f23ac269f8)
    
    Change-Id: Ia16147cb84eb9e73af48a2771ef734fbb7baa8f5
    Fix OkHttp test failure for fast devices
    
    On a fast device the ThreadInterruptTest#interruptWritingRequestBody
    would consistently fail.
    
    The issue is probably a combination of socket buffering and the data
    volume chosen by the test. The test was written to assume that
    read-side throttling would prevent the writer from writing its data
    within 500 millis. After ~500 millis the write thread would be
    interrupted and the test would pass.
    
    On a fast device the test would write all the test data
    in ~ 125 millis and the test would fail. The interruption would then
    trigger on a later test
    (typically URLConnectionTest#authenticateWithGetAndTransparentGzip),
    breaking that test as well.
    
    If there is sufficient socket-level read/write buffering it is
    possible the data being written will just fill the socket buffers
    and the writer will terminate early. If the data to be written is
    increased from 2 to 10 MB the test passes.
    
    Bug: 17516838
    (cherry-picked from commit e3bfefb13c93006a2fbe22363572a314f6c18659)
    
    Change-Id: Id832c366611d19a0e771b5dfb58a716b17221f95
    Fix OkHttp test failure for fast devices
    
    On a fast device the ThreadInterruptTest#interruptWritingRequestBody
    would consistently fail.
    
    The issue is probably a combination of socket buffering and the data
    volume chosen by the test. The test was written to assume that
    read-side throttling would prevent the writer from writing its data
    within 500 millis. After ~500 millis the write thread would be
    interrupted and the test would pass.
    
    On a fast device the test would write all the test data
    in ~ 125 millis and the test would fail. The interruption would then
    trigger on a later test
    (typically URLConnectionTest#authenticateWithGetAndTransparentGzip),
    breaking that test as well.
    
    If there is sufficient socket-level read/write buffering it is
    possible the data being written will just fill the socket buffers
    and the writer will terminate early. If the data to be written is
    increased from 2 to 10 MB the test passes.
    
    Bug: 17516838
    Change-Id: I54b5de9527d9737e6c987b6a9c4f62578f4f8fb7
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull upstream fixes from OkHttp
    
        This synced to commit b21b40e480cdcd09b618e399a349556de509d88d
        / master / 1st April 2014.
    
        Notably this contains a fix for apps that bundle an older
        copy of OkHttp or which call android.net.http.HttpResponseCache.get()
        or android.net.http.HttpResponseCache.put().
    
        See for details:
        https://github.com/square/okhttp/pull/672
    
    Change-Id: I90acd9f9946014e834ea203dbc62cdcf7bc80cc6
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Upgrade to the latest OkHttp.
    
    Note the internal package name has changed from libcore.net.http
    to com.squareup.okhttp.
    
    Change-Id: Ib0eb4bdd69f24f2a255975460bd001e59657ddcc
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Strict, modern HostnameVerifier.
    
    This brings OkHostnameVerifier up to date with the intersection of
    RFC 2818 and Baseline Requirements, and adds support for absolute
    domain names.
    
    The changes are:
    * Absolute domain names are supported. All presented hostnames are
      treated as absolute domain names. All domain names in server
      certificates are treated as absolute domain names as well.
    * Wildcard character (*) is permitted only in the left-most domain
      name label and must be the only character in that label. For
      example, *.example.com is permitted, while *a.example.com,
      a*.example.com, a*b.example.com, a.*.example.com are not permitted.
    * Wildcard character (*) must match exactly one domain name label.
      For example, *.example.com matches www.example.com, but does not
      match example.com or www.test.example.com.
    * Wildcard pattern cannot mach single-label domain names: * and *.
      patterns are rejected.
    
    Bug: 18432707
    Bug: 17482685
    Bug: 17548724
    Bug: 17552202
    Bug: 17552202
    Change-Id: I560121f388568d0513a0cee22250b6fc59424b30
    Fix a bug in OkHostnameVerifier wildcard handling.
    
    Wildcard domain name patterns of the form *.remainder are supposed to
    match domain names that exactly match the remainder. Due to a bug,
    the match was not exact but rather a prefix match: domain names
    starting with the remainder would match too.
    
    This CL fixes the issue.
    
    Bug: 18432707
    Change-Id: I2639ff51cabcbd395d4f30a9c69f9895738e0acf
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Sync OkHttp to version 1.1.1
    
    The new version fixes a handful of behavior and performance
    bugs.
    
    Change-Id: I413f9e463fc780aede5da9f3474c1af107bdf45c
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update okhttp to commit b48247968a.
    
    Includes mechanism to turn of SPDY on a per request
    basis. Leaves SPDY turned off by default.
    
    Change-Id: Ie7a0c7ebfd37d5d2653266e7b6925a2f346323ad
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Update okhttp to a more recent commit.
    
    Updating to upstream commit : 7b106923e078ac2435e8c8ce9d615f9903106ed8
    / 7th Mar 2014 / main branch.
    
    The following changes were made to Android-only code:
    1) HttpsHandler has been changed to deal with the fix for:
    https://github.com/square/okhttp/issues/184 (commit 5d7fdba).
    2) Platform.java changed to accomodate changes in okhttp Platform
    method signatures.
    3) .mk file updates to reflect src directory changes.
    
    The following changes were made to OkHttp code:
    1) Removal of org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
    annotation from okio/src/main/java/okio/DeflaterSink.java
    
    Change-Id: I644a883482ac7ee7d029785f110a2ca00762419b
    Update okhttp.
    
    Updated to commit 19a21936ffbb5e358799af9e4fb7306af45f38.
    
    This also moves src/ to okhttp/src/ to stay faithful
    to the original okhttp tree & to make it easier to pull
    updates.
    
    Change-Id: Ia1971823f31e5c6957d831f368e3a1fcce38d44d
    Update OkHttp to commit cc4633943800572673c03b32d0b2bc9a08ae184d
    
    Change-Id: Iae4b2c5a102cc5341f73593e003af3ee28400cbe
    Update okhttp to commit c84d84d1ca6911534fe993e
    
    - Fixes a couple of test cases in URLConnectionTest
      related to null header values.
    - Fixes a locking related crash observed in tests.
    
    Change-Id: I8c48f29b33e3509d177c5ffb7d8b772dc97d8174
    Upgrade to the latest OkHttp, with changes through 2013-Feb-01.
    
    This is OkHttp commit 2137b7a72518cfac088757ef6d0fb3d085bf6e3d
    Most notable changes are improvements to ConnectionPool (fixing
    infinite loops!) and upgrading to SPDY/3.
    
    Change-Id: Icd9e5e3857a45f9b68a164b920d33f48cdddb780
    Update okhttp to the latest version.
    
    This is the version on okhttp master
    commit 21e9c8398867f983e8c3cf29c6382690c1e4785d
    
    Change-Id: I4332ee63741c8784eb00b63d636780ae3408b1e9
    Initial checkin for okhttp.
    
    This is a snapshot of the okhttp git repository at commit
    d6ac2b9819831db4b08e1da9c8b4abff2bcca379.
    
    This change does not contain an Android.mk file or build rules.
    These will be added in a dependant change.
    
    Change-Id: I99cf2f5566dd202b0028b3eb0773ea6fecfe1173
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Pull latest code from upstream okhttp and okio
    
    This change contains the OkHttp and Okio changes without
    modification. The only additions are the
    MODULE_LICENSE_APACHE2 files.
    
    This corresponds closely to OkHttp 2.5.0 and
    Okio 1.6.0. Behavior changes are documented in
    CHANGELOG.md.
    
    This change does not compile as is. The next
    commit makes the Android modifications required.
    
    okhttp: 4305dc3fabeab392eb56f2db51538e06c3a54e51
    okio: 313436764bf35794e158c6171e319fee868298df
    
    Change-Id: I97ce07ff0472cdbce09f588863a1e5ccdcea0c20
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    (cherry-picked from 7aeaaefc891f6221f4b2cce536b1c1e816e09794)
    Bug: 20566983
    
    Change-Id: Ib818478513ec712b1391b82e2376fc410eaaa737
    Rollup of upstream OkHttp and Okio changes
    
    OkHttp from: b5811711b141b230e4e58f577c79cfbf4c2d4028
    to: 3c61fdb2ba9d1ebe0419b93cfbd4e94ffc857fe3
    
    Okio from: b40f99a950cb407eff52537a97420bd253a64f63
    to: b76b6903ef05546c5aef249ea6b2b679bc43094b
    
    Both "to" are head as of 20150505.
    
    Patches applied cleanly without conflicts except for
    okio/okio/src/test/java/okio/BufferedSourceTest.java
    which has local Android changes to account for Android
    CTS only supporting Junit 4.10.
    
    There are various changes included most of which will
    not affect Android.
    
    OkHttp changes of note for Android:
    
    1) Improvements to TLS negotiation.
    Upstream commit 60f5406dcc094d0431420139bd002e8bdd4ea5d5
    https://github.com/square/okhttp/pull/1388
    
    2) Fix for CTS tests on Android.
    Upstream commit fb155c47661ede5da395dfb4e620867263b8c8e7
    https://github.com/square/okhttp/pull/1555
    
    3) Switch to using Okio for form URL encoding
    Upstream commit 2a4c1f288d284d3266b5aec4decb167a3af0a976
    https://github.com/square/okhttp/pull/1563
    
    4) Fix Vary caching on Android.
    Upstream commit b7baf23d86305762ea4e42adc4054c0840eca5ca
    https://github.com/square/okhttp/pull/1590
    
    5) Report some TLS issues during negotiation (not all)
    Upstream commit 71ead1911be28c1cae1eef765abf23724b776981
    https://github.com/square/okhttp/pull/1596
    
    Okio changes of note for Android:
    
    1) Fix for truncated GZIP streams
    Upstream commit 3e25d85bc4ad3c6f1622b0438b3976804958fbfb
    https://github.com/square/okhttp/issues/1540
    
    Additional android-specific changes:
    
    Suppress a new test that requires JUnit 4.11 and Gson in the
    Android.mk file.
    
    Change-Id: I98ed1cc1debf7e03c5895bec38ea5cf9e402b144
    Roll-up of upstream OkHttp and Okio changes
    
    OkHttp:
    From b609edd07864d7191dcda8ba1f6c833c9fe170ad
    to b40f99a950cb407eff52537a97420bd253a64f63
    
    Okio:
    From 654ddf5e8f6311fda77e429c22d5e0e15f713b8d
    to b5811711b141b230e4e58f577c79cfbf4c2d4028
    
    Both "to" are head as of 20150413.
    
    Patches applied cleanly without conflicts.
    
    This submission will break some CTS tests due
    to https://github.com/square/okhttp/issues/1552
    Solutions will be made upstream and patched in.
    The CTS tests broken are related to SPDY/HTTP2
    which are not used by Android's embedded OkHttp.
    
    Change-Id: I84d55b6f5c8dbc05148e86bd9421a2c393b563d4
    Pull latest OkHttp code from upstream
    
    okio:
    
    okio is now managed upstream as a separate project but has
    been included here as a sub directory: the okio version here
    is intended only for use with OkHttp.
    okio is synced to upstream commit
    82358df7f09e18aa42348836c614212085bbf045.
    See okio/README.android for local changed needed to make it
    compile.
    
    okhttp:
    
    This is effectively an upgrade from a snapshot close to
    OkHttp 1.5 with Android additions to a snapshot close to
    OkHttp 2.2.
    okhttp was synced to upstream commit
    0a197466608681593cc9be9487965a0b1d5c244c
    See README.android for local changes needed to make it
    compile.
    
    Most of the old Android changes have been pushed upstream
    and other upstream changes have been made to keep OkHttp
    working on Android.
    
    TLS fallback changes have not been upstreamed yet:
    bcce0a3d26d66d33beb742ae2adddb3b7db5ad08
    ede2bf1af0917482da8ccb7b048130592034253d
    
    This means that some CTS tests will start to fail. A later
    commit will fix those changes when it has been accepted
    upstream.
    
    There are associated changes in libcore and frameworks/base.
    
    Change-Id: I0a68b27b1ec7067be452671bc591edfd84e310f2
