    Cosmetic change to README.md to trigger CI build
    Cosmetic change to README.md to trigger CI build
    Add setup steps to readme
    updated README for new dotenv version
    Add codeclimate and coverage badges to readme
    Force SSL
    - and added a .env.example file
    add google analytics to readme
    add ENV variable desc into readme
    rails setup
    Initial commit
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    [ruby_2_2_2] Upgrade to Ruby 2.2.2 - #93321178
    Updates Ruby and Rails versions
    
    * Use Ruby 2.2.1
    * Use Rails 4.2.1
    More rails setup
    
    - added the govuk_frontend gems
    - removed turbolinks
    - set ruby version to 2.1.5
    rails setup
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [assets_on_s3] Ability to build assets on S3
    
    On an AWS instance that's correctly part of the right instance group,
    you can now push assets to an S3 bucket with the command
    "bundle exec rake assets:sync"
    
    - Added asset_sync gem
    - Added config for asset_sync that allows for discovery of the server's
      instance permissions, so that it can communicate with the correct
      S3 bucket
    - Added a new section to the settings.yml file for AWS-related things.
    - Set default values for the different environments.
    [clean_up_dotenv_files] removed unnecessary 'export' from the front of the .env files
    
    Although the export clause is supported by dotenv, it's inconsistent.
    remove solicitor search components
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Set database names in database yml
    
    Setting the db name in .env causes only the creation of the
    development database, since rake tasks such as db:create are ran by
    default in development environment.
    
    This has the consequence of not respecting setup rake tasks,
    reproducible by running rake db:create:all and noticing the output of
    " development already exists>" in triplicate (one per env).
    
    .env files have also been updated to reflect the change.
    [secret_key_base_in_settings] Value should not be hex-formatted
    
    Yaml will parse items starting with 0x as if they are hex, and then
    return the numeric value to whatever called the yaml read.
    
    When this happens with the secret key base, it causes a rails error,
    since Rails is expecting a string rather than a BigInt.
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Remove space inside parentheses, add to rubocop
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    [fix_failing_build_573] Fixed failing build
    
    * Removed trailing whitespace
    * Increased the size of Metrics/LineLength to match the actual codebase for now
    * Replaced .kind_of?() -> .is_a?()
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
    [add_sentry_config] Add Sentry config
    
    Add sentry config and parameters
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [asset_content_encoding] Revert to known-good fog-aws version
    
    The asset_sync gem uses fog-aws to upload assets to S3. However fog-aws > 0.1.2 sets the Content-Encoding to null value.
    
    This gem can be removed once https://github.com/fog/fog-aws/issues/130 is correctly resolved
    Update omniauth-dsds gem to 0.9.0
    Upgrade Rails to 4.2.2
    
    Security fixes
    update dsds-omniauth gem to v0.8.1 to fix bug with login spec helper
    update dsds-omniauth gem to v0.8.0
    Fix date time helper for interview and solicitor arrival times
    Update BUNDLED WITH to 1.10.3 in Gemfile.lock
    
    As long as everyone is running a version of Bundler
    above 1.10, bundler versions will not decrease this
    BUNDLED WITH version, but it can possibly increase
    
    https://github.com/bundler/bundler/issues/3697
    [assets_on_s3] Ability to build assets on S3
    
    On an AWS instance that's correctly part of the right instance group,
    you can now push assets to an S3 bucket with the command
    "bundle exec rake assets:sync"
    
    - Added asset_sync gem
    - Added config for asset_sync that allows for discovery of the server's
      instance permissions, so that it can communicate with the correct
      S3 bucket
    - Added a new section to the settings.yml file for AWS-related things.
    - Set default values for the different environments.
    rename 'extensions' files to 'main'
    Update Gemfile.lock, causes changes on bundle
    
    This was not added when the corresponding change
    was made to the Gemfile
    Update govuk_elements_rails to pick up new error validation styles.
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Update Gem version and corresponding factory
    
    The updated gem version adds a phone number to
    organisations
    Remove explicit require of jasmine-core gem.
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Add jasmine and rubocop checks to Guardfile. Set phantomjs version in Gemfile.
    Add jasmine for javascript testing.
    update omniauth-dsds gem to raise unauthorized errors on login when users have no roles
    update omniauth-dsds gem to version that checks roles
    Add the drs-auth_client gem and configure it
    Initial pass extracting discrete user policies
    Update  assets gems (govuk, sass)
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
    Show solicitor its firms defence requests in dashboard
    Add login_with_user() helper to allow custom user fields to be
    mocked on profile.
    Update gem version and User factories accordingly
    Bump to omniauth-dsds to latest version
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    Updates Ruby and Rails versions
    
    * Use Ruby 2.2.1
    * Use Rails 4.2.1
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    [logstash_format_logging] Added lograge and logstash-event in production
    - Removed unused gem
    - Fixed controller
    WIP
    Added codeclimate coverage reporter
    Update rspec-rails gem
    Add simplecov to test suite
    Add Sucker Punch and use delayed email processing
    
    - fix gem versions to currently used
    Remove spring
    Seed solicitors from search API
    
    Generate all emails from the search api, so we
    have a login corresponding to the email for each
    solicitor result
    Defence request can be closed with required note
    - removed simple_form used gov forms
    - cleaned up flash and errors
    Removed bootstrap added govuk framework
    dashboard notifications of new DR's
    - move to 'transitions' state machine
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Add simple states gem
    Added tests for refreshing dashboard
    
    https://www.pivotaltracker.com/story/show/86712830
    Install audited gem
    Set up poltergeist, webmock, database cleaner for javacript feature specs.
    Added new attributes to DefenceRequest
    -  added validations
    Added bootstrap form and phoney for phone validations
    Add solicitors_search action for defence requests controller
    
    - This will soon return js that will display a list
    of solicitors on the new page.
    add quiet assets gem
    add 12 factor gem
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Configure devise and secrets
    Added defence_request controller
    - configured rspec
    - defence_request controller
    Add devise gem
    
    - added user model to devise
    - added temp default route
    More rails setup
    
    - added the govuk_frontend gems
    - removed turbolinks
    - set ruby version to 2.1.5
    rails setup
    Remove ineffectual setting port in Procfile.
    Port is set via UNICORN_PORT env variable.
    Add app server config for heroku:
    * Procfile
    * Unicorn config file
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [add_build_info_to_container] Add build info to container file
    
    Add fields as per https://github.com/ministryofjustice/incident-response-schemas/blob/master/ping-dot-json-schema.json
    [moj_ci_and_registry] Added support for an internal MOJ CI and Registry
    
    * support for an environment-supplied DOCKER_PUBLISH_PREFIX parameter to Makefile
    * Make minor changes to the Docker file to support concurrent builds on the same machine
      at the same time
    * Add a test environment, so that we can run tests in docker containers
    [docker_container_repository_92999546] Added temporary holding registry config
    
    Until we have the secure repo and build system configured, we are going to use the public docker registry
    
    * Reverted to the old way of handling multiple Dockerfiles, since CircleCI runs an older Docker release
    * Improve caching of docker containers as per https://circleci.com/docs/docker#caching-docker-layers
    * Build and push Docker containers on builds against certain branches
    * Ensure that we set the Rails environment to Production before building assets
    * Circleci overrides database.yml by default, which then gets committed to the Docker containers.
      Additionally it installs things in vendor and other places. We now force a git clean before building
      the container, so that only the things that should definitely be in the container are in the container.
    * Add production database.yml config entry
    * On building a docker container, force the filesystem timestamp to all be the same value. This helps
      ensure cacheability, since docker considers a timestamp difference to mean a change, and
      git doesn't preserve timestamps across builds.
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    Added defence_request controller
    - configured rspec
    - defence_request controller
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
    [install_phantomjs_1_9_8] Install 1.9.8
    
    Upgraded to phantomJS 1.9.8 so that Jasmine doesn't download an updated version. Fixes #94491484
    
    URL for PhantomJS: https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    rails setup
    rails setup
    [install_phantomjs_1_9_8] Install 1.9.8
    
    Upgraded to phantomJS 1.9.8 so that Jasmine doesn't download an updated version. Fixes #94491484
    
    URL for PhantomJS: https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2
    [docker_container_repository_92999546] Added temporary holding registry config
    
    Until we have the secure repo and build system configured, we are going to use the public docker registry
    
    * Reverted to the old way of handling multiple Dockerfiles, since CircleCI runs an older Docker release
    * Improve caching of docker containers as per https://circleci.com/docs/docker#caching-docker-layers
    * Build and push Docker containers on builds against certain branches
    * Ensure that we set the Rails environment to Production before building assets
    * Circleci overrides database.yml by default, which then gets committed to the Docker containers.
      Additionally it installs things in vendor and other places. We now force a git clean before building
      the container, so that only the things that should definitely be in the container are in the container.
    * Add production database.yml config entry
    * On building a docker container, force the filesystem timestamp to all be the same value. This helps
      ensure cacheability, since docker considers a timestamp difference to mean a change, and
      git doesn't preserve timestamps across builds.
    Changed current work directory, and set to use the rails console by default
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [install_phantomjs_1_9_8] Install 1.9.8
    
    Upgraded to phantomJS 1.9.8 so that Jasmine doesn't download an updated version. Fixes #94491484
    
    URL for PhantomJS: https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2
    [moj_ci_and_registry] Added support for an internal MOJ CI and Registry
    
    * support for an environment-supplied DOCKER_PUBLISH_PREFIX parameter to Makefile
    * Make minor changes to the Docker file to support concurrent builds on the same machine
      at the same time
    * Add a test environment, so that we can run tests in docker containers
    [docker_container_repository_92999546] Added temporary holding registry config
    
    Until we have the secure repo and build system configured, we are going to use the public docker registry
    
    * Reverted to the old way of handling multiple Dockerfiles, since CircleCI runs an older Docker release
    * Improve caching of docker containers as per https://circleci.com/docs/docker#caching-docker-layers
    * Build and push Docker containers on builds against certain branches
    * Ensure that we set the Rails environment to Production before building assets
    * Circleci overrides database.yml by default, which then gets committed to the Docker containers.
      Additionally it installs things in vendor and other places. We now force a git clean before building
      the container, so that only the things that should definitely be in the container are in the container.
    * Add production database.yml config entry
    * On building a docker container, force the filesystem timestamp to all be the same value. This helps
      ensure cacheability, since docker considers a timestamp difference to mean a change, and
      git doesn't preserve timestamps across builds.
    Changed current work directory, and set to use the rails console by default
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    [use_moj_base_container] Use MOJ base container
    
    Use MOJ base container as the base of our containers. This way we
    include things from their secure registry, any security changes, and so
    forth.
    [ruby_2_2_2] Upgrade to Ruby 2.2.2 - #93321178
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    [docker_file_adjustments] Improve cacheability of Docker builds
    
    Moved away from the ruby-webapp-onbuild base. As ruby-webapp-onbuild added the source code as one of the first steps, any source code change would invalidate the cache for every later action
    [docker_and_vagrant_create] Initial changes
    [moj_ci_and_registry] Added support for an internal MOJ CI and Registry
    
    * support for an environment-supplied DOCKER_PUBLISH_PREFIX parameter to Makefile
    * Make minor changes to the Docker file to support concurrent builds on the same machine
      at the same time
    * Add a test environment, so that we can run tests in docker containers
    [use_moj_base_container] Use MOJ base container
    
    Use MOJ base container as the base of our containers. This way we
    include things from their secure registry, any security changes, and so
    forth.
    [docker_container_repository_92999546] Added temporary holding registry config
    
    Until we have the secure repo and build system configured, we are going to use the public docker registry
    
    * Reverted to the old way of handling multiple Dockerfiles, since CircleCI runs an older Docker release
    * Improve caching of docker containers as per https://circleci.com/docs/docker#caching-docker-layers
    * Build and push Docker containers on builds against certain branches
    * Ensure that we set the Rails environment to Production before building assets
    * Circleci overrides database.yml by default, which then gets committed to the Docker containers.
      Additionally it installs things in vendor and other places. We now force a git clean before building
      the container, so that only the things that should definitely be in the container are in the container.
    * Add production database.yml config entry
    * On building a docker container, force the filesystem timestamp to all be the same value. This helps
      ensure cacheability, since docker considers a timestamp difference to mean a change, and
      git doesn't preserve timestamps across builds.
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    [docker_file_adjustments] Improve cacheability of Docker builds
    
    Moved away from the ruby-webapp-onbuild base. As ruby-webapp-onbuild added the source code as one of the first steps, any source code change would invalidate the cache for every later action
    [docker_and_vagrant_create] Initial changes
    [docker_file_adjustments] Adjusted docker config. Added binary into git tree.
    
    * Renamed Dockerfiles to match the full environment names
    * Added phantomjs-1.9.7-linux-x86_64.tar.bz2 to repo
    * Added script to clean up docker container and reduce duplication
    * Added makefile
    * Removed Vagrantfile since we aren't using it
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    rails setup
    Remove solicitor_time_of_arrival from DefenceRequest
    Add custody_suite_uid to defence_request table
    
    This migration requires all defence requests to be deleted prior to running. This is because the new field is required and all defence requests need to have it
    added state_updated_at timestamp to defence_request
    will update the timestamp every time the state changes
    Change appropriate_adult_reason to string type and validate it's value is set to an appropriate locale key.
    Remove defaults from radio button properties
    
    This is appropriate_adult, fit_for_interview and interpreter_required.
    remove investigating officers shoulder number field from defence request
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Persist the 'not given' fields
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Remove unused fields of defence request
    
    This includes solicitor_name, solicitor_firm, scheme, phone_number, custody_number and custody_address. Solicitor and custody will be eventually stored as remote uuid
    regenerate schema
    Roll over to next DSCC number character suffix when default suffix for a month has 99,999 numbers
    Convert dscc_number to text, and add trigram index
    
    The purpose of the cast is because the index will
    only work on text fields. The index will allow
    searching via regular expressions to be much
    faster (which will be part of the upcoming number
    generation method)
    
    Using gist opposed to gin index as the data will
    be changing a lot, gist is 10 times faster to
    index, but 3 times slower to recall.
    
    We cannot create a unique gist index, but it
    should not matter as we will be using a lock
    to handle race conditions, and will validate
    uniqueness in AR as an extra check.
    Add organisation_uid index.
    Add organisation_uid to DefenceRequest.
    Add indices to the UID fields on DefenceRequest
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Stop CSO editing solicitor info on "duty" DR
    Remove closed state and feedback field from defence request.
    CSO provides reason aborted when aborting request.
    Add data migration to update "open" DRs to be "acknowledged"
    Raise on unpermitted params across all envs
    
    Setting ActionController to raise on unpermitted params can save a lot
    of debugging time in test/dev.
    
    It will also be the default setting at some point in the near future.
    Allow solicitor to update solicitor_time_of_arrival
    - add form to show page for solicitors
    Associate a CCO with a DR on opening
    - add association
    - alter policy
    Fix params for DR form, and add age field.
    WIP
    migrating changes, new schema
    Add interview start time to DR form
    
    Solicitor notification callback is called when
    the value changes, this is soon to be filled with
    an email action.
    
    Currently the interview start time cannot be
    blank when it is rendered on the edit page, this
    isn't ideal because the user doesn't have the
    option to *not* add an interview time when doing
    an edit. However, the time select box will drop
    out and become a text box when this branch is
    merged so the issue is not worth dealing with now.
    Add solicitors to defence requests
    
    We will seed our solicitor users in the same way
    as the search api for alpha, so any solicitor
    returned will correspond to a login in our system.
    
    There is a label still being rendered for email
    on the form but I am leaving it for now as the
    form will change a lot with rebase.
    fix specs to use correct field labels
    Defence request can be closed with required note
    - added feedback and close actions to defence_Request
    - added validator for feedback
    Fix rebase issue
    Add DSCC number field to defence requests
    
    - No validation as the request starts without a
    number by default, and we don't know what format
    the number has.
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Set up open->close state transition for DR
    CSO Dashboard
    - added timestamps to defence_request
    - tests for dashboard refresh
    
    https://www.pivotaltracker.com/story/show/86712830
    Install audited gem
    Change adult and appropriate_adult fields to be booleans instead of strings
    Added new attributes to DefenceRequest
    -  added validations
    Make Defence Requests ActiveRecord models
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Add devise gem
    
    - added user model to devise
    - added temp default route
    Remove User seeds
    Seeds /= 10
    Update user email seeds to match search api
    Seed solicitors from search API
    
    Generate all emails from the search api, so we
    have a login corresponding to the email for each
    solicitor result
    Give seed solicitors different emails (Doh)
    Add solicitor users to seeds
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Create CCO (Call Center Operative) role.
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Configure devise and secrets
    rails setup
    Remove defaults from radio button properties
    
    This is appropriate_adult, fit_for_interview and interpreter_required.
    Change appropriate_adult_reason to string type and validate it's value is set to an appropriate locale key.
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Add devise gem
    
    - added user model to devise
    - added temp default route
    CSO Dashboard
    - added timestamps to defence_request
    - tests for dashboard refresh
    
    https://www.pivotaltracker.com/story/show/86712830
    add type to migration to make it reversible
    remove investigating officers shoulder number field from defence request
    Add DSCC number field to defence requests
    
    - No validation as the request starts without a
    number by default, and we don't know what format
    the number has.
    Allow solicitor to update solicitor_time_of_arrival
    - add form to show page for solicitors
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Added new attributes to DefenceRequest
    -  added validations
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Install audited gem
    Defence request can be closed with required note
    - added feedback and close actions to defence_Request
    - added validator for feedback
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    rebase fixes
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    added state_updated_at timestamp to defence_request
    will update the timestamp every time the state changes
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Add solicitors to defence requests
    
    We will seed our solicitor users in the same way
    as the search api for alpha, so any solicitor
    returned will correspond to a login in our system.
    
    There is a label still being rendered for email
    on the form but I am leaving it for now as the
    form will change a lot with rebase.
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove unused fields of defence request
    
    This includes solicitor_name, solicitor_firm, scheme, phone_number, custody_number and custody_address. Solicitor and custody will be eventually stored as remote uuid
    Make Defence Requests ActiveRecord models
    Fix params for DR form, and add age field.
    Roll over to next DSCC number character suffix when default suffix for a month has 99,999 numbers
    Add organisation_uid to DefenceRequest.
    Remove solicitor_time_of_arrival from DefenceRequest
    Change adult and appropriate_adult fields to be booleans instead of strings
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Set up open->close state transition for DR
    Add organisation_uid index.
    Add indices to the UID fields on DefenceRequest
    Persist the 'not given' fields
    Add interview start time to DR form
    
    Solicitor notification callback is called when
    the value changes, this is soon to be filled with
    an email action.
    
    Currently the interview start time cannot be
    blank when it is rendered on the edit page, this
    isn't ideal because the user doesn't have the
    option to *not* add an interview time when doing
    an edit. However, the time select box will drop
    out and become a text box when this branch is
    merged so the issue is not worth dealing with now.
    Remove closed state and feedback field from defence request.
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    CSO provides reason aborted when aborting request.
    Add custody_suite_uid to defence_request table
    
    This migration requires all defence requests to be deleted prior to running. This is because the new field is required and all defence requests need to have it
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Add data migration to update "open" DRs to be "acknowledged"
    Associate a CCO with a DR on opening
    - add association
    - alter policy
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    rails setup
    rails setup
    rails setup
    rails setup
    Return empty relation if role not expected, and render proper 403
    rails setup
    rails setup
    rails setup
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    Ensure that parentheses are required on method definitions
    Implement blank properly on all field objects
    
    Fixes a bug where forms would fail to submit even
    when there were no errors.
    Mostly working
    Memoize error proc method
    Fix for blank hour/min errors on date time fields
    
    If hour/min was blank then they were being cast to
    0.
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Ensure that parentheses are required on method definitions
    Add solicitor and appropriate adult fields
    working dates/times needs tests etc
    Mostly working
    Intercept mail if sandboxed
    
    Email interceptor to send to a test email address
    if we set an option in the environment variables.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Add DSCC number to case details email
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    remove unneeded attr_reader
    use state_updated_at timestamp for state status sidebar on defence request details page
    use DefenceRequestPresenter to render defence request state on details page
    extract DefenceRequestPresenter as a first class model
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Extract final transitions
    Delegate attributes directly to DefenceRequest from DefenceRequestForm
    Refactor DefenceRequestForm to accept params in constructor
    Refactor internals of DefenceRequestForm
    Remove solicitor_time_of_arrival from DefenceRequest
    Fix bug for multiple errors per field
    
    We only want to display a single error per field
    on the form. Unless they are mutually exclusive,
    the message should be the same, so we can just
    select the first message from a list, when
    choosing what to display.
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    Whitespace fixes
    Tidy up access of translation from form builder
    
    Instead of defining a funky new place for
    translations, we can just define them in the
    standard place and get `human_attribute_name` for
    free.
    Use form object for edit, fix i18n.
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Remove virtual attributes list from defence request form
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Clean up forms
    Ensure that parentheses are required on method definitions
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove AppropriateAdult field object
    Remove FitForInterview field object
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove closed state and feedback field from defence request.
    Delegate form fields to those before casting
    
    Before: filling in a field like Age as a string
    would cast the value to `0`, which would then be
    resurfaced when the page was re-rendered with
    errors. Instead we can delegate to the attribute
    before it was cast to refill the form with the
    exact values that were input before the attempt
    to submit.
    Fix rerendering for validation errors
    Add solicitor and appropriate adult fields
    working dates/times needs tests etc
    Mostly working
    wip2
    WIP
    Use factory to build new DefenceRequests and assign custody
    extract DefenceRequestPresenter as a first class model
    Remove draft colours from dashboard
    
    Draft requests are soon to disappear from the
    dashboard.
    Fix indentation
    Different colours for each dr state on cso dash
    Rename Dashboard DefenceRequest to Presenter
    
    The whole dashboard object is a presenter, but
    this change makes it slightly more obvious what
    the inner class is for.
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Use consistent style for instance variable names
    Fix rubocop offences
    Dashboard changes (WIP)
    Make routes more user friendly
    
    Users will only see one dashboard, so it doesn't
    make sense to use default restful paths.
    Use single show action for dashboards
    
    Select what level of visibility we want based
    on the id passed in, lovely REST.
    Stop using scopes for active / closed
    
    We shouldn't be using scopes anywhere outside
    the policies where we can compose them. Since
    we need to pull out the active and closed
    requests to the dashboard, we should just filter
    the ruby objects there.
    Move active/closed dr logic do dashboard object
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Use single role method on service user
    
    We should keep the logic for what role the user
    has in one single place. Even if this is likely
    to change.
    Expose organisation and roles on the ServiceUser
    Introduce ServiceUser to decorate the omni auth user
    Calculate Day values dynamically
    
    Previously Day::TODAY would just stick with the
    same date that it had when the class was loaded.
    Add "Day after tomorrow" to future date choosers
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    Delete un-needed mailer code
    Remove resend_details functionality
    Add scope for filtering by custody_suite_uid
    Validate presence of circumstances of arrest
    Remove unused defence request scope
    added state_updated_at timestamp to defence_request
    will update the timestamp every time the state changes
    Change appropriate_adult_reason to string type and validate it's value is set to an appropriate locale key.
    Remove defaults from radio button properties
    
    This is appropriate_adult, fit_for_interview and interpreter_required.
    Dashboard doesn't list draft DRs
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Persist the 'not given' fields
    Rubocop...
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Stop using scopes for active / closed
    
    We shouldn't be using scopes anywhere outside
    the policies where we can compose them. Since
    we need to pull out the active and closed
    requests to the dashboard, we should just filter
    the ruby objects there.
    Clean up DefenceRequest model
    Rename scopes after removal of 'finished'
    Add Closed/Active tabs to solicitor dashboard
    
    - Add closed route
    - Add links to Solicitor dashboard
    - Make responsive
    - add finished to solicitor policy scope
    Finish -> Complete, no more mandatory comment
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    reenable audits for defence request model
    Roll over to next DSCC number character suffix when default suffix for a month has 99,999 numbers
    Refactor DSCC number generation
    * cleanup query and return dscc_number and updated_at values
    * extract dscc generation into seperate class
    * set return values on defence request
    Correct policy test for accepted requests
    
    Previously incorrectly being tested using
    acknowledged requests. Lead to correcting the
    policy implementation to reflect the policy test
    descriptions (and other dependent tests)
    Generation of unique dscc numbers on acknowledge
    Convert dscc_number to text, and add trigram index
    
    The purpose of the cast is because the index will
    only work on text fields. The index will allow
    searching via regular expressions to be much
    faster (which will be part of the upcoming number
    generation method)
    
    Using gist opposed to gin index as the data will
    be changing a lot, gist is 10 times faster to
    index, but 3 times slower to recall.
    
    We cannot create a unique gist index, but it
    should not matter as we will be using a lock
    to handle race conditions, and will validate
    uniqueness in AR as an extra check.
    Delete unused has_solicitor() method.
    Add method to return defence requests associated with solicitor's firm.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Change DR controller to use 'alert' in flash
    Stop CSO editing solicitor info on "duty" DR
    CCO and solicitor see aborted request details on show view.
    Show aborted requests on CCO dashboard.
    Remove closed state and feedback field from defence request.
    CSO provides reason aborted when aborting request.
    Add aborted state + abort event transitions. Refactor rspec.
    Replace Open state with Acknowledged state
    Queue action on DRs that are in a draft state
    Change scopes to include draft and queued states
    Rename created state to draft
    
    No functionality change yet, until we put in the
    queued state.
    Validate numerically of detainee age
    
    This is the only field on the DR form that needs
    to be cast to something, but is not handled by
    a field object. We need to validate numerically
    or someone could input `"Jeff"` and it would end
    up being `0` as `"Jeff".to_i => 0`
    WIP
    use gds styling for interview start time
    - after_commit clobber builders to allow interview_start_time to return attribute
    instead of builder
    - correct validations
    Added gds dates for date of birth and time of arrival
    Refactor validations
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Use guards for transition events
    
    Previously we had to duplicate logic in the policy
    because `can_transition` does not respect guards.
    Add Sucker Punch and use delayed email processing
    
    - fix gem versions to currently used
    Restrict editing of opened/accepted Drs
    
    After a DR has been opened or accepted, no longer
    allow editing of details that may be critical to
    the integrity of the request. Ie, if the age of
    the detainee changes then it may change the need
    for a solicitor to be present, in these cases a
    request should be closed and recreated with
    correct details.
    Associate a CCO with a DR on opening
    - add association
    - alter policy
    DR action and policy for resending details
    Fix params for DR form, and add age field.
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    WIP
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    Add interview start time to DR form
    
    Solicitor notification callback is called when
    the value changes, this is soon to be filled with
    an email action.
    
    Currently the interview start time cannot be
    blank when it is rendered on the edit page, this
    isn't ideal because the user doesn't have the
    option to *not* add an interview time when doing
    an edit. However, the time select box will drop
    out and become a text box when this branch is
    merged so the issue is not worth dealing with now.
    Add solicitors to defence requests
    
    We will seed our solicitor users in the same way
    as the search api for alpha, so any solicitor
    returned will correspond to a login in our system.
    
    There is a label still being rendered for email
    on the form but I am leaving it for now as the
    form will change a lot with rebase.
    Defence request can be closed with required note
    - added feedback and close actions to defence_Request
    - added validator for feedback
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Only open defence requests if they can transition
    
    - Also added in a policy for opening DRs to keep
    consistent with our guarding of actions.
    
    - Changed `open` state to `opened` for consistency
    in past-tense state naming.
    Switch validations based on solicitor type
    dashboard notifications of new DR's
    - move to 'transitions' state machine
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Set up open->close state transition for DR
    Fix bug for submitting no scheme
    
    The scheme field was disabled, and not being sent
    in the form, leading to a validation error. Wasn't
    picked up because the test didn't enable js. Just
    remove the validation on scheme as we can use nil
    to represent No scheme.
    Add auditing to defence requests
    Add "No Scheme" to list of schemes.
    Disable Solicitor name and firm fields when duty is selected
    Added new attributes to DefenceRequest
    -  added validations
    Make Defence Requests ActiveRecord models
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    [fix_failing_build_573] Fixed failing build
    
    * Removed trailing whitespace
    * Increased the size of Metrics/LineLength to match the actual codebase for now
    * Replaced .kind_of?() -> .is_a?()
    validate defence request before attempting to generate a dscc number
    Roll over to next DSCC number character suffix when default suffix for a month has 99,999 numbers
    update comments
    Refactor DSCC number generation
    * cleanup query and return dscc_number and updated_at values
    * extract dscc generation into seperate class
    * set return values on defence request
    rails setup
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Add discrete strategies for transitions
    Only save dr once at the end when acknowledging
    
    It doesn't make sense for us to be saving multiple
    times during the course of the request. We should
    just check that the request is valid before
    assigning a dscc_number (since it is a pain to
    get the number back after it has been assigned
    if we need to rollback)
    Save defence_request after acknowledge
    
    We were not saving the request after adding a
    organisation_uid, so no association to a firm
    /solicitor was being made.
    Use ServiceRegistry for Drs::AuthClient
    Assign organisation_uid on acknowledge transition
    Add warning note about dscc number generation
    Fix generating dscc_number on acknowledge
    
    This somehow got lost in a rebase.
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Uniform strategy API and add missing unit tests
    Extract final transitions
    Add discrete strategies for transitions
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Extract final transitions
    Add discrete strategies for transitions
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Extract final transitions
    Add discrete strategies for transitions
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Uniform strategy API and add missing unit tests
    Extract final transitions
    Add discrete strategies for transitions
    Finish -> Complete, no more mandatory comment
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Extract final transitions
    Add discrete strategies for transitions
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Added start time to the notification email
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Add DSCC number to case details email
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Delete un-needed mailer code
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Removed bootstrap added govuk framework
    solicitor admin detail page states
    WIP
    solicitor admin detail page states
    WIP
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    notification fixing
    improve HTML for notifications in DLs
    WIP
    remove stupid comment
    solicitor admin detail page states
    WIP
    solicitor admin dashboard static mockup
    WIP
    solicitor admin detail page states
    WIP
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    removed references to accelerated claims
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    Namespace dr resource and interview start times.
    Namespace dashboard routes to custody_suite
    Refactor cso dashboard views, delete other roles.
    
    It was weird that we were calling partials in
    the `defence_request` directory, when this is
    all logic relating to the dashboard. Not really
    an index page.
    Namespace dashboard routes to custody_suite
    Refactor cso dashboard views, delete other roles.
    
    It was weird that we were calling partials in
    the `defence_request` directory, when this is
    all logic relating to the dashboard. Not really
    an index page.
    Namespace dashboard routes to custody_suite
    Refactor cso dashboard views, delete other roles.
    
    It was weird that we were calling partials in
    the `defence_request` directory, when this is
    all logic relating to the dashboard. Not really
    an index page.
    Namespace dashboard routes to custody_suite
    Make dashboard refresh work with responsive list
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Namespace dashboard routes to custody_suite
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Namespace dashboard routes to custody_suite
    Refactor cso dashboard views, delete other roles.
    
    It was weird that we were calling partials in
    the `defence_request` directory, when this is
    all logic relating to the dashboard. Not really
    an index page.
    Namespace dashboard routes to custody_suite
    Namespace dr resource and interview start times.
    Namespace dashboard routes to custody_suite
    Refactor cso dashboard views, delete other roles.
    
    It was weird that we were calling partials in
    the `defence_request` directory, when this is
    all logic relating to the dashboard. Not really
    an index page.
    Use single show action for dashboards
    
    Select what level of visibility we want based
    on the id passed in, lovely REST.
    Move active/closed dr logic do dashboard object
    Add Closed/Active tabs to solicitor dashboard
    
    - Add closed route
    - Add links to Solicitor dashboard
    - Make responsive
    - add finished to solicitor policy scope
    Fix dashboard link on show page
    removed commented policy checks
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    First draft of the responsive defence requests list
    Conditionally load dashbord poller
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Namespace dr resource and interview start times.
    Namespace dashboard routes to custody_suite
    Renaming classes to match domain language
    Move section edit links to partials for re-use
    fix floats/address layout for show draft page
    update cso form and details view with content tweaks
    Remove empty parenthesis at method call
    Update design of draft page and add feature tests
    Add edit_draft template to use before DR is sumbmitted
    Add show page for Draft and update details display
    Namespace dr resource and interview start times.
    Namespace dr resource and interview start times.
    Use form object for edit, fix i18n.
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Fix edit page for draft
    Allow editing detainee or case details from the show page
    Add edit_draft template to use before DR is sumbmitted
    Namespace dr resource and interview start times.
    Namespace dr resource and interview start times.
    Namespace dashboard routes to custody_suite
    Typo fix
    Fix for passing invalid tab param to show page
    Create header partial for defence request show page
    switch icons to font-awesome icons
    Preserve the part form parameter and use it as a tab identified
    Renaming classes to match domain language
    Allow editing detainee or case details from the show page
    redo tabs CSS from scratch to cater for all IEs
    use DefenceRequestPresenter to render defence request state on details page
    add sass color for submitted requests
    add status sidebar to show page with dummy content
    fix address multi-line display
    update cso form and details view with content tweaks
    Add show page for Draft and update details display
    add Not specified option for gender on Defence Request form
    Stop showing Dscc label when it hasn't been given
    Fix defence request page title when name not given
    More robust testing
    
    - altered js to set fields as readonly (not disabled)
    - add test to confirm changing from not given and back
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    When JS disabled, hide tab header and show "Detentions details" heading.
    Implement design for "Interview" and "Denention details" tabs.
    Change tab label to "Detention details". Change single to double quotes.
    Move detainee summary fields above tabs in show view.
    Change link text.
    Show detainee name and DSCC number in page heading.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Remove fields from templates
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Move edit solicitor arrival time view to its own path. Link to from show view.
    Remove duplicate solicitor name on dr show page
    Fix dashboard link on show page
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add reason for appropriate adult to DR show page
    
    https://www.pivotaltracker.com/story/show/90595206
    CCO and solicitor see aborted request details on show view.
    Show aborted requests on CCO dashboard.
    Remove closed state and feedback field from defence request.
    use form object for sol time of arrival on show
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Fix devise panels for assesment
    Fix styling as request for alpha assesment
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Refactor solicitor arrival time
    - update policy to only allow solicitor to change time from show
    - allow blank in forms
    Allow solicitor to update solicitor_time_of_arrival
    - add form to show page for solicitors
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Namespace dr resource and interview start times.
    Change date format and update copy
    Renaming classes to match domain language
    Move section edit links to partials for re-use
    Display circumstances and comments with multiple lines
    update cso form and details view with content tweaks
    Add show page for Draft and update details display
    Namespace dr resource and interview start times.
    Remove solicitor time of arrival
    
    We won't need this functionality at all, at least at this stage of the product
    Enable inline or non javascript change of interview time
    Add "Day after tomorrow" to future date choosers
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    update cso form and details view with content tweaks
    remove investigating officers shoulder number field from defence request
    When JS disabled, hide tab header and show "Detentions details" heading.
    Style for box around interview and arrival times.
    Rename controller to InterviewStartTimesController to be consistent with SolicitorArrivalTimesController.
    Add today/tomorrow toggle to all time entry inputs.
    Implement design for "Interview" and "Denention details" tabs.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Namespace dr resource and interview start times.
    Create header partial for defence request show page
    Namespace dr resource and interview start times.
    Change date format and update copy
    Tidy up access of translation from form builder
    
    Instead of defining a funky new place for
    translations, we can just define them in the
    standard place and get `human_attribute_name` for
    free.
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Renaming classes to match domain language
    Move section edit links to partials for re-use
    Allow setup a class for display_value helper
    update cso form and details view with content tweaks
    Change appropriate adult reason input to radio buttons on form.
    Add show page for Draft and update details display
    Namespace dr resource and interview start times.
    Remove arrival time policy check
    Add `optional` option to form builder fields
    Fix labelling duplication with date times
    Use form_group() helper around validated form groups on form.
    Use text_field_input() to render text inputs on defence request form.
    Add "Day after tomorrow" to future date choosers
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    add custom hint text for date fields
    update cso form and details view with content tweaks
    Preset Arrest, arrival and detention authorized
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Change form labels to bold and headlines to be bigger
    Add today/tomorrow toggle to all time entry inputs.
    DRY date and time partial
    Fix a few form visual issues
    Display dscc number as a label on DR form
    
    As the number is now generated automatically, it
    should not be editable.
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove granular editing permissions
    
    We have decided to take the robust approach of
    locking down any editing of requests unless they
    are "owned" by a particular person, be it cso
    or cco. If it turns out that there are some
    details that need to be edited at any point, that
    will hopefully become more clear later
    DRY up and refactor partials for DR form
    Use dashes instead of underscores for css names
    Fix styling as request for alpha assesment
    Set @policy in the controller
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Namespace dr resource and interview start times.
    update cso form and details view with content tweaks
    Change form labels to bold and headlines to be bigger
    Fix a few form visual issues
    Remove granular editing permissions
    
    We have decided to take the robust approach of
    locking down any editing of requests unless they
    are "owned" by a particular person, be it cso
    or cco. If it turns out that there are some
    details that need to be edited at any point, that
    will hopefully become more clear later
    DRY up and refactor partials for DR form
    Fix styling as request for alpha assesment
    Set @policy in the controller
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Namespace dr resource and interview start times.
    Add the date hint back
    Add form_group() helper to form builder.
    Use it to render date_of_birth on form.
    update cso form and details view with content tweaks
    Remove placeholder text from date(time) fields
    Auto tab to next field when full on date(time)s
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    Use generic disable javascript on defence request form. Delete unneeded js.
    Change form labels to bold and headlines to be bigger
    Fix 'not given' checkbox labels
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Mostly working
    wip2
    WIP
    Added gds dates for date of birth and time of arrival
    Namespace dr resource and interview start times.
    Namespace dashboard routes to custody_suite
    Remove unused cso policy actions
    Preserve the part form parameter and use it as a tab identified
    update cso form and details view with content tweaks
    Cancel link for new record links to dashboard
    
    Also the differentiation between draft and other states for edit doesn't seem necessary. All Cancel links on the edit form can go to the show page
    Add edit_draft template to use before DR is sumbmitted
    DRY date and time partial
    Remove closed state and feedback field from defence request.
    CSO provides reason aborted when aborting request.
    WIP
    Fix accept and proceed button styling
    Fix to buttons caused by rebase and tidy
    Make TextArea form builder class to separate from TextField
    Make the address a textarea
    Namespace dr resource and interview start times.
    Radio button field set for indented field
    Remove unused options for radio button field set
    Use form_group() to render appropriate_adult_reason and interpreter_type.
    Add form_group() helper to form builder.
    Use it to render date_of_birth on form.
    Use text_field_input() to render text inputs on defence request form.
    Add text_field_input() helper to form builder.
    Use it for detainee_name input on form.
    Use radio_button_fieldset helper for all radio fieldsets on form.
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Change the address field to textarea
    use form label helper to render labels for gender radio buttons
    update cso form and details view with content tweaks
    Add panel-indent style to show/hide divs.
    Change appropriate adult reason input to radio buttons on form.
    Don't preselect radio buttons in the DR form
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    Add transgender option for gender on defence request form
    add Not specified option for gender on Defence Request form
    Use generic disable javascript on defence request form. Delete unneeded js.
    Fixed html dropped in rebase.
    Use new show hide javascript on defence request form.
    Change form labels to bold and headlines to be bigger
    Fix 'not given' checkbox labels
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Fix a few form visual issues
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove AppropriateAdult field object
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Added working appropriate adult field object
    DRY up and refactor partials for DR form
    Added gds dates for date of birth and time of arrival
    Use dashes instead of underscores for css names
    Fix devise panels for assesment
    Don't override error_proc in application config
    
    Use a class to set the field width so that error_proc doesn't need
    to be overridden because it wraps the label and field separately
    and breaks the adjacent selector. This also makes it work in IE6.
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Namespace dr resource and interview start times.
    Add "Day after tomorrow" to future date choosers
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    Add today/tomorrow toggle to all time entry inputs.
    DRY date and time partial
    Fix a few form visual issues
    Remove fields from templates
    removed commented policy checks
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Remove granular editing permissions
    
    We have decided to take the robust approach of
    locking down any editing of requests unless they
    are "owned" by a particular person, be it cso
    or cco. If it turns out that there are some
    details that need to be edited at any point, that
    will hopefully become more clear later
    DRY up and refactor partials for DR form
    Target solicitor-details with class not id.
    
    There should only be one solicitor details on a
    page, and there are currently no custom styles
    for the element. But using a class is consistent
    with the rest of the panels on the form.
    Fix styling as request for alpha assesment
    Set @policy in the controller
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Namespace dr resource and interview start times.
    Remove unused options for radio button field set
    Add `optional` option to form builder fields
    Use form_group() helper around validated form groups on form.
    Use text_field_input() to render text inputs on defence request form.
    Use radio_button_fieldset helper for all radio fieldsets on form.
    update cso form and details view with content tweaks
    Content and style for unfit for interview section.
    Add panel-indent style to unfit for interview div.
    Don't preselect radio buttons in the DR form
    move aside inside comments field label on defence request form for accessibility
    moved comments fields aside text into i18n
    Display "optional" form labels as light grey
    Add comments example as an aside next to the comments field
    mark investigating officer fields on defence request form as optional
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    remove investigating officers shoulder number field from defence request
    Use new show hide javascript on defence request form.
    Change form labels to bold and headlines to be bigger
    Remove fields from templates
    Remove FitForInterview field object
    Remove FitForInterview field object
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Don't override error_proc in application config
    
    Use a class to set the field width so that error_proc doesn't need
    to be overridden because it wraps the label and field separately
    and breaks the adjacent selector. This also makes it work in IE6.
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Namespace dr resource and interview start times.
    Namespace dr resource and interview start times.
    Namespace dr resource and interview start times.
    Namespace dr resource and interview start times.
    Namespace dr resource and interview start times.
    Move template logic to a helper
    
    There's no easy way of testing this helper explicitly, so I'm relying on the feature test to cover this
    Use the form builder to render errors
    Add labels to the interview time form
    Enable inline or non javascript change of interview time
    Add logout link
    
    https://www.pivotaltracker.com/story/show/93266326
    Update user profile links
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    fixed user links
    WIP
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    Allow users to change password
    
    https://www.pivotaltracker.com/story/show/86704942
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    enable user tracking in google analytics
    add google analytics tracking snippet to all pages
    Refactor `flash_messages` and remove partial.
    use form object for sol time of arrival on show
    Banner style fix
    
    https://www.pivotaltracker.com/story/show/88910524
    Use field translations for validation message
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Fixed error messages partial
    - Fixed error and flash handling to use govuk
    Removed bootstrap added govuk framework
    Fix labelling duplication with date times
    tidy up broken field alignments in IE6/7
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    remove extra unneeded label wrapping date-time form elements
    add custom hint text for date fields
    update cso form and details view with content tweaks
    Date choosers use yesterday and today
    Remove placeholder text from date(time) fields
    Auto tab to next field when full on date(time)s
    use local_assigns in views to check if variable is set
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    Remove deprecated data attributes
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Change form labels to bold and headlines to be bigger
    Add today/tomorrow toggle to all time entry inputs.
    DRY date and time partial
    Mostly working
    wip2
    WIP
    Added gds dates for date of birth and time of arrival
    Fix form styling
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Refactor solicitor arrival time
    - update policy to only allow solicitor to change time from show
    - allow blank in forms
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Add error style classes to error summary section.
    Refactor object error messages
    Fix form styling
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Use field translations for validation message
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Fixed error messages partial
    - Fixed error and flash handling to use govuk
    Removed bootstrap added govuk framework
    add auth/failure route for users that access service app with no roles
    Update styling of the abort defence request form
    Rebase and remove solicitor search implementation
    Extract final transitions
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    rename 'extensions' files to 'main'
    initial reorg for IE versions
    switch icons to font-awesome icons
    add status sidebar to show page with dummy content
    Enable javascript for IE 6.
    Remove unused js_partial() view helper.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Remove word partial and use errors/flash partial
    Banner style fix
    
    https://www.pivotaltracker.com/story/show/88910524
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    move google analytics snippet to just inside <head> as per google docs
    add google analytics tracking snippet to all pages
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    Refactored after PR comments
    - cleaned up specs
    - altered render use everywhere
    - altered to use url helpers in the defence request controller
    Altered new defence request form to add new attributes
    - added bootstrap_rails_forms
    - used different layout for dashboard
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    Add devise gem
    
    - added user model to devise
    - added temp default route
    More rails setup
    
    - added the govuk_frontend gems
    - removed turbolinks
    - set ruby version to 2.1.5
    rails setup
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    Introduce ServiceUser to decorate the omni auth user
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Front end and controller for closing of DR
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Configure devise and secrets
    rails setup
    Make routes more user friendly
    
    Users will only see one dashboard, so it doesn't
    make sense to use default restful paths.
    Use single show action for dashboards
    
    Select what level of visibility we want based
    on the id passed in, lovely REST.
    Rename DefenceRequestAuthorization to DefenceRequestConcern.
    Let individual controllers decide where defence request id comes from.
    Move common authorization code into mixin.
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Rebase and remove solicitor search implementation
    Extract final transitions
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Removed bootstrap added govuk framework
    Namespace dashboard routes to custody_suite
    Rename DefenceRequestAuthorization to DefenceRequestConcern.
    Let individual controllers decide where defence request id comes from.
    Move common authorization code into mixin.
    Assign organisation_uid on acknowledge transition
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Add discrete strategies for transitions
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    use DefenceRequestPresenter to render defence request state on details page
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Return empty relation if role not expected, and render proper 403
    Move authorisation actions inside DR controller
    
    - The main reason for this is we now want the
    record passed into authorised to be an actual
    instance, instead of just the class. This will
    allow us to check if the record can transition
    from within the policy. We could still do this in
    the application controller but the metaprogramming
    would start to get out of hand.
    Convert to model based auth, add solicitor auth.
    
    The reason for converting to model based auth is
    so we can create scopes using pundit, so we can
    decide which DefenceRequests to surface on the
    index page.
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Use single role method on service user
    
    We should keep the logic for what role the user
    has in one single place. Even if this is likely
    to change.
    Namespace dashboard routes to custody_suite
    add auth/failure route for users that access service app with no roles
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    [add_ping_endpoint] Return 500 errors when the version information is not available
    [add_ping_endpoint] Add ping endpoint as per support requirements
    
    Add ping endpoint that returns version information
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Add /status route to return OK
    Authorise CSO for the changed defence request in :create and :update
    Use factory to build new DefenceRequests and assign custody
    use DefenceRequestPresenter to render defence request state on details page
    Ensure that parentheses are required on method definitions
    Rename DefenceRequestAuthorization to DefenceRequestConcern.
    Let individual controllers decide where defence request id comes from.
    Move common authorization code into mixin.
    Syntax change.
    Move methods in common to mixin module.
    Enable inline or non javascript change of interview time
    rails setup
    Namespace dr resource and interview start times.
    Refactor DefenceRequestForm to accept params in constructor
    Fix Rubocop offence
    Enable inline or non javascript change of interview time
    update interview start time now accepts the correct parameters
    Rename controller to InterviewStartTimesController to be consistent with SolicitorArrivalTimesController.
    Refactor interview start time controller to use DefenceRequestConcern methods.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Namespace dr resource and interview start times.
    Remove resend_details functionality
    Authorise CSO for the changed defence request in :create and :update
    Refactor DefenceRequestForm to accept params in constructor
    Always white list part/tab value in DefenceRequestController
    Fix for passing invalid tab param to show page
    Remove unused cso policy actions
    Don't include helpers in DefenceRequestsController
    Preserve the part form parameter and use it as a tab identified
    Fix edit page for draft
    Allow editing detainee or case details from the show page
    Add edit_draft template to use before DR is sumbmitted
    Add show page for Draft and update details display
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Rename DefenceRequestAuthorization to DefenceRequestConcern.
    Let individual controllers decide where defence request id comes from.
    Move common authorization code into mixin.
    Move methods in common to mixin module.
    Move edit solicitor arrival time view to its own path. Link to from show view.
    remove redundant policy setting from actions
    removed commented policy checks
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Initial pass extracting discrete user policies
    Extract final transitions
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Generation of unique dscc numbers on acknowledge
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove AppropriateAdult field object
    Remove FitForInterview field object
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Change DR controller to use 'alert' in flash
    Stop CSO editing solicitor info on "duty" DR
    Refactor before actions in dr controller
    
    `new_defence_request` was not needed, because the
    new and create actions defence on the form,
    not a defence_request instance.
    
    We were also manually setting the policy on `new`
    and `create` for no reason.
    Show aborted requests on CCO dashboard.
    Remove closed state and feedback field from defence request.
    CSO provides reason aborted when aborting request.
    CSO can abort request via dashboard.
    Replace Open state with Acknowledged state
    Use except instead of only for find_defence_reques
    
    ..t (list for only was getting quite long)
    Queue action on DRs that are in a draft state
    Change scopes to include draft and queued states
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Rename created state to draft
    
    No functionality change yet, until we put in the
    queued state.
    Add negative feature test cases for DR actions
    Add negative test cases for dr actions in features
    rename method
    DRY up index and refresh
    refactor dr controller
    use form object for sol time of arrival on show
    Added working appropriate adult field object
    - Removed unused gem
    - Fixed controller
    Added policy back for create action
    Use DRForm for sol time of arrival update
    Use DateTimeField for timeofarrival on show page
    Add solicitor and appropriate adult fields
    working dates/times needs tests etc
    Mostly working
    wip2
    WIP
    Handle unauthorised DR viewing more gracefully
    use gds styling for interview start time
    - after_commit clobber builders to allow interview_start_time to return attribute
    instead of builder
    - correct validations
    Added gds dates for date of birth and time of arrival
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Change accepted action to accept (grammar)
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Refactor solicitor arrival time
    - update policy to only allow solicitor to change time from show
    - allow blank in forms
    Set @policy in the controller
    CSO/DSCC/Solicitor add expected time of arrival
    - refactored policy for readability
    - corrected policy for editing
    - broke out edit form into partials controlled by policies
    Allow solicitor to update solicitor_time_of_arrival
    - add form to show page for solicitors
    Restrict editing of opened/accepted Drs
    
    After a DR has been opened or accepted, no longer
    allow editing of details that may be critical to
    the integrity of the request. Ie, if the age of
    the detainee changes then it may change the need
    for a solicitor to be present, in these cases a
    request should be closed and recreated with
    correct details.
    Associate a CCO with a DR on opening
    - add association
    - alter policy
    Add resend details action to dashboard.
    Apply dashboard design
    - brought dashboard designs in line with new designs
    - fixed dashboard refresh for solicitor
    - fixed policy naming conventions
    Convert appropriate adult param to boolean.
    
    This params function is getting out of hand
    and is going to be the first point of refactoring
    in sprint 3.
    Fix params for DR form, and add age field.
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    DSCC can mark Defence Request as accepted
    - add update and accept to form
    - add accepted to dashboard
    - refactor controller
    WIP
    Add solicitors to defence requests
    
    We will seed our solicitor users in the same way
    as the search api for alpha, so any solicitor
    returned will correspond to a login in our system.
    
    There is a label still being rendered for email
    on the form but I am leaving it for now as the
    form will change a lot with rebase.
    Defence request can be closed with required note
    - added feedback and close actions to defence_Request
    - added validator for feedback
    - Fixed error and flash handling to use govuk
    Removed bootstrap added govuk framework
    Break out DR open into a separate action
    Move authorisation actions inside DR controller
    
    - The main reason for this is we now want the
    record passed into authorised to be an actual
    instance, instead of just the class. This will
    allow us to check if the record can transition
    from within the policy. We could still do this in
    the application controller but the metaprogramming
    would start to get out of hand.
    Only open defence requests if they can transition
    
    - Also added in a policy for opening DRs to keep
    consistent with our guarding of actions.
    
    - Changed `open` state to `opened` for consistency
    in past-tense state naming.
    Add DSCC number to Defence Request Form
    
    - Readonly for anyone except the DSCC
    Dashboard notifications of new DR's
    - a cco update causes the state to change to open
    Dashboard notifications of new DR's
    - alter controller and dashboard views to return both 'new' and 'created'
    - refactor dashboard views
    Convert to model based auth, add solicitor auth.
    
    The reason for converting to model based auth is
    so we can create scopes using pundit, so we can
    decide which DefenceRequests to surface on the
    index page.
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Fix rebase.
    Front end and controller for closing of DR
    Refactored after PR comments
    - cleaned up specs
    - altered render use everywhere
    - altered to use url helpers in the defence request controller
    Edit a DR
    - added a update and edit actions
    - partails for the form and shared with new
    - policies for cso
    
    https://www.pivotaltracker.com/story/show/86902518
    CSO Dashboard
    - added timestamps to defence_request
    - tests for dashboard refresh
    
    https://www.pivotaltracker.com/story/show/86712830
    Added dashbaord refresh using ajax
    
    https://www.pivotaltracker.com/story/show/86712830
    Search firms as well as solicitors
    
    Very hacky, decided to do this quickly before we
    figure out exactly how we want the search to work.
    Will probably involve changing the search API.
    Fix DateTime parsing bug for DefenceRequests
    
    Also made the test case more robust, was passing
    previously by the error page containing the
    solicitor's name.
    Bye random whitespace
    Fix for solicitors_search action for names with spaces
    
    (or other invalid url characters)
    Fix rebase issue
    Added new actions and policy for defence_request_controller
    Add solicitors_search action for defence requests controller
    
    - This will soon return js that will display a list
    of solicitors on the new page.
    Pluralise DefenceRequest controller, policies, routes.
    Namespace dashboard routes to custody_suite
    use DefenceRequestPresenter to render defence request state on details page
    Use consistent style for instance variable names
    Dashboard changes (WIP)
    Use single show action for dashboards
    
    Select what level of visibility we want based
    on the id passed in, lovely REST.
    Move active/closed dr logic do dashboard object
    Dashboard tabs for all users
    Rename scopes after removal of 'finished'
    Add Closed/Active tabs to solicitor dashboard
    
    - Add closed route
    - Add links to Solicitor dashboard
    - Make responsive
    - add finished to solicitor policy scope
    removed commented policy checks
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Make dashboard refresh work with responsive list
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    notification fixing
    gif workaround for IE6
    tidy up broken field alignments in IE6/7
    initial reorg for IE versions
    notification fixing
    tidy up broken field alignments in IE6/7
    initial reorg for IE versions
    rename 'extensions' files to 'main'
    WIP
    solicitor admin dashboard static mockup
    WIP
    remove empty h1 element
    Make whole defence request row clickable for cso
    Use sass variables for state colours
    Remove draft colours from dashboard
    
    Draft requests are soon to disappear from the
    dashboard.
    Different colours for each dr state on cso dash
    Styling for cso dashboard table
    Style for box around interview and arrival times.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Fix tabs layout for tablet media.
    Rename scopes after removal of 'finished'
    Refactor tabs partial
    Add Closed/Active tabs to solicitor dashboard
    
    - Add closed route
    - Add links to Solicitor dashboard
    - Make responsive
    - add finished to solicitor policy scope
    First draft of the responsive defence requests list
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    DRY up dashboard css
    Fix broken rebase
    Use dashes instead of underscores for css names
    Break out css into separate files
    solicitor admin dashboard static mockup
    get everything out of extensions into specific stylesheets
    add sass color tint for completed defence requests
    add sass color for submitted requests
    add status sidebar to show page with dummy content
    Use sass variables for state colours
    solicitor admin detail page states
    WIP
    Change interview time style to match design
    remove redundant imports
    fix floats/address layout for show draft page
    Add show page for Draft and update details display
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    remove solicitor search components
    display date and time for interviews that are not today
    Style for box around interview and arrival times.
    Remove unneeded imports.
    Move tabs css into separate file. Add back .active_tab style.
    Change padding in tab label.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Use class for search results close functionality
    
    IE6 doesn't support css targeting using data
    attributes
    Use dashes instead of underscores for css names
    Break out css into separate files
    get everything out of extensions into specific stylesheets
    initial reorg for IE versions
    switch icons to font-awesome icons
    add status sidebar to show page with dummy content
    Move tabs css into separate file. Add back .active_tab style.
    Break out css into separate files
    Fix devise panels for assesment
    Don't override error_proc in application config
    
    Use a class to set the field width so that error_proc doesn't need
    to be overridden because it wraps the label and field separately
    and breaks the adjacent selector. This also makes it work in IE6.
    Fix styling as request for alpha assesment
    Fix date format
    Change styling of search close
    Devise style fix
    
    https://www.pivotaltracker.com/story/show/88910524
    Banner style fix
    
    https://www.pivotaltracker.com/story/show/88910524
    Fix to buttons caused by rebase and tidy
    rebase fixup
    Changed styling as per Kate
    Apply dashboard design
    - brought dashboard designs in line with new designs
    - fixed dashboard refresh for solicitor
    - fixed policy naming conventions
    render solicitor details text
    Add styling to defence request form.
    
    Also split out shared js into separate file as it
    is needed in new and create views.
    WIP
    Sort of fix for the dashboard width issue
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    fix layout issues with solicitor search results
    close solicitor search results on ESC or clicking Close link
    Refactored after PR comments
    - cleaned up specs
    - altered render use everywhere
    - altered to use url helpers in the defence request controller
    Edit a DR
    - added a update and edit actions
    - partails for the form and shared with new
    - policies for cso
    
    https://www.pivotaltracker.com/story/show/86902518
    Add button to solicitor search.
    Altered new defence request form to add new attributes
    - added bootstrap_rails_forms
    - used different layout for dashboard
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    Break out css into separate files
    rename 'extensions' files to 'main'
    solicitor admin detail page states
    rename 'extensions' files to 'main'
    get everything out of extensions into specific stylesheets
    initial reorg for IE versions
    add status sidebar to show page with dummy content
    fix address multi-line display
    Make compatible with latest govuk-elements css.
    style aside text hints on defence request form in line with gds guidelines
    Display "optional" form labels as light grey
    Add comments example as an aside next to the comments field
    Add show page for Draft and update details display
    Create colour variable for disable-background.
    Fix disabled style for input. Change disabled background colour.
    Improve spacing bellow text fields
    Change form labels to bold and headlines to be bigger
    Convert govuk_elements_extensions from sass to scss syntax.
    rename 'extensions' files to 'main'
    Removed bootstrap added govuk framework
    switch icons to font-awesome icons
    solicitor admin detail page states
    remove redundant imports
    get everything out of extensions into specific stylesheets
    initial reorg for IE versions
    one final hack for IE6
    redo tabs CSS from scratch to cater for all IEs
    fix tabs to float correctly in low IEs
    Make compatible with latest govuk-elements css.
    Convert govuk_elements_extensions from sass to scss syntax.
    Reduce tab label font size for mobile.
    Move tabs css into separate file. Add back .active_tab style.
    Change padding in tab label.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Use class for search results close functionality
    
    IE6 doesn't support css targeting using data
    attributes
    Use dashes instead of underscores for css names
    Break out css into separate files
    remove redundant imports
    get everything out of extensions into specific stylesheets
    get everything out of extensions into specific stylesheets
    get everything out of extensions into specific stylesheets
    notification fixing
    improve HTML for notifications in DLs
    WIP
    solicitor admin detail page states
    WIP
    Add error style classes to error summary section.
    remove redundant imports
    get everything out of extensions into specific stylesheets
    get everything out of extensions into specific stylesheets
    solicitor admin detail page states
    get everything out of extensions into specific stylesheets
    solicitor admin detail page states
    remove redundant imports
    get everything out of extensions into specific stylesheets
    initial reorg for IE versions
    switch icons to font-awesome icons
    add sass color tint for completed defence requests
    add sass color for submitted requests
    add status sidebar to show page with dummy content
    solicitor admin detail page states
    WIP
    remove redundant imports
    get everything out of extensions into specific stylesheets
    get everything out of extensions into specific stylesheets
    notification fixing
    WIP
    solicitor admin detail page states
    remove redundant imports
    get everything out of extensions into specific stylesheets
    get everything out of extensions into specific stylesheets
    get everything out of extensions into specific stylesheets
    tidy up broken field alignments in IE6/7
    get everything out of extensions into specific stylesheets
    solicitor admin detail page states
    Override the framework default for error borders
    
    We don't want the red border around our inputs,
    since we are extending other bits from the frame-
    work, we have to explicitly override the border
    to be the original.
    remove redundant imports
    get everything out of extensions into specific stylesheets
    remove redundant imports
    get everything out of extensions into specific stylesheets
    remove redundant imports
    get everything out of extensions into specific stylesheets
    gif workaround for IE6
    First draft of the responsive defence requests list
    rails setup
    solicitor admin detail page states
    Auto tab to next field when full on date(time)s
    Use generic disable javascript on defence request form. Delete unneeded js.
    Use new show hide javascript on defence request form.
    When JS disabled, hide tab header and show "Detentions details" heading.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Remove unused javascript.
    Replace js_alt_text.js with remove_nonjs.coffee.
    Move setup JS into separate files.
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Ready styling of radio button surrounds
    Removed bootstrap added govuk framework
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    More rails setup
    
    - added the govuk_frontend gems
    - removed turbolinks
    - set ruby version to 2.1.5
    rails setup
    Remove unneeded eq(0) calls from JS.
    Remove text from input/textarea when it is hidden or disabled.
    Improve class description comments. Minor refactorings.
    Change generic javascript to enable/disable input when corresponding input is unchecked/checked.
    Add generic javascript for disabling input when radio is checked.
    Introduce javascript event to init form components
    
    This is to allow these to be initialised both on a page load and also when forms are loaded inline using AJAX
    Auto tab to next field when full on date(time)s
    Make whole defence request row clickable for cso
    Use generic disable javascript on defence request form. Delete unneeded js.
    Use new show hide javascript on defence request form.
    Move setup JS into separate files.
    fix href so that links look like links in IE
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    Date choosers use yesterday and today
    Auto tab to next field when full on date(time)s
    More descriptive variable name in DateChooser
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Remove space inside parentheses, add to rubocop
    Spec date chooser js leaves blank date fields blank on page load.
    Focus day input field after today/tomorrow toggle click.
    Add on click event only once to each toggle element.
    Enable both Today and Tomorrow links if set date is not equal to today or tomorrow.
    Set Today link active when date being updated is set to tomorrow's date.
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Conditionally load dashbord poller
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    Move setup JS into separate files.
    When JS disabled, hide tab header and show "Detentions details" heading.
    Remove unused javascript.
    Replace js_alt_text.js with remove_nonjs.coffee.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Ready styling of radio button surrounds
    only enable / disable defence_request form elements when creating a DR
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Move js for dash refresh ajax back in to index view
    Removed bootstrap added govuk framework
    solicitor admin detail page states
    Auto tab to next field when full on date(time)s
    Remove unneeded eq(0) calls from JS.
    Remove text from input/textarea when it is hidden or disabled.
    Improve class description comments. Minor refactorings.
    Bind on all radio inputs in fieldset for triggering show/hide.
    Add generic javascript for hiding input and showing it when radio is checked.
    Move template logic to a helper
    
    There's no easy way of testing this helper explicitly, so I'm relying on the feature test to cover this
    prefix custody number on CSO dashboard with "CN:"
    Different colours for each dr state on cso dash
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Use i18n for arriving/arrival dashboard text
    Fix rubocop offences
    Styling for cso dashboard table
    Fix tab css
    Use single show action for dashboards
    
    Select what level of visibility we want based
    on the id passed in, lovely REST.
    renamed helper method
    Refactor tabs partial
    Remove solicitor time of arrival
    
    We won't need this functionality at all, at least at this stage of the product
    Fix date time helper for interview and solicitor arrival times
    Change date format and update copy
    Fix labelling duplication with date times
    Don't include helpers in DefenceRequestsController
    Preserve the part form parameter and use it as a tab identified
    update cso form and details view with content tweaks
    Date choosers use yesterday and today
    Change appropriate adult reason input to radio buttons on form.
    Display "optional" form labels as light grey
    Add comments example as an aside next to the comments field
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    Fix defence request page title when name not given
    More robust testing
    
    - altered js to set fields as readonly (not disabled)
    - add test to confirm changing from not given and back
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    display date and time for solicitor arrival times that are not today
    display date and time for interviews that are not today
    Style for box around interview and arrival times.
    Add today/tomorrow toggle to all time entry inputs.
    Implement design for "Interview" and "Denention details" tabs.
    Add house_name to detainee_address() output.
    Move detainee summary fields above tabs in show view.
    Fix date chooser helper - broken `if` statement.
    Ensure that parentheses are required on method definitions
    Enable both Today and Tomorrow links if set date is not equal to today or tomorrow.
    Set Today link active when date being updated is set to tomorrow's date.
    Delete some unused methods (shown up by simplecov)
    Add "No Scheme" to list of schemes.
    Population of defence request form on clicking chosen result.
    Fix bug for multiple errors per field
    
    We only want to display a single error per field
    on the form. Unless they are mutually exclusive,
    the message should be the same, so we can just
    select the first message from a list, when
    choosing what to display.
    Only render error message, not field label.
    Tidy up access of translation from form builder
    
    Instead of defining a funky new place for
    translations, we can just define them in the
    standard place and get `human_attribute_name` for
    free.
    Use form object for edit, fix i18n.
    Add text_field_input() helper to form builder.
    Use it for detainee_name input on form.
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Add error style classes to error summary section.
    Preserve the part form parameter and use it as a tab identified
    Allow setup a class for display_value helper
    update cso form and details view with content tweaks
    Change date and time format to render time first
    Add show page for Draft and update details display
    Remove unused js_partial() view helper.
    Styling for cso dashboard table
    Render Yes/No for boolean value instead of tick/cross.
    Implement design for "Interview" and "Denention details" tabs.
    Add display_value() view helper method.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Ensure that parentheses are required on method definitions
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Style changes, and remove redundant `html_safe`s
    Refactor object error messages
    Refactor `flash_messages` and remove partial.
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Fix date format
    Delete some unused methods (shown up by simplecov)
    move js partials into own directory
    Apply dashboard design
    - brought dashboard designs in line with new designs
    - fixed dashboard refresh for solicitor
    - fixed policy naming conventions
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    rename per page javascript files to be .html (cause they are)
    Defence request can be closed with required note
    - removed simple_form used gov forms
    - cleaned up flash and errors
    Removed ActiveModel inclusion form app helper
    - Fixed error and flash handling to use govuk
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    Altered new defence request form to add new attributes
    - added bootstrap_rails_forms
    - used different layout for dashboard
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    rails setup
    Make TextArea form builder class to separate from TextField
    Use FormGroup as base class for other elements
    Fix error span display
    
    errors were previously invisible because the
    error message was a list not a string.
    Move form builder to builders directory, split up
    Make TextArea form builder class to separate from TextField
    Make TextArea form builder class to separate from TextField
    Make the address a textarea
    Use FormGroup as base class for other elements
    Move form builder to builders directory, split up
    Add `optional` option to form builder fields
    Use FormGroup as base class for other elements
    Move form builder to builders directory, split up
    tidy up method
    Radio button field set for indented field
    Remove unused options for radio button field set
    Use FormGroup as base class for other elements
    Move form builder to builders directory, split up
    Use single role method on service user
    
    We should keep the logic for what role the user
    has in one single place. Even if this is likely
    to change.
    Initial pass extracting discrete user policies
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Remove unused code from auto-generated app policy
    
    Huge test coverage increase...
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    Convert to model based auth, add solicitor auth.
    
    The reason for converting to model based auth is
    so we can create scopes using pundit, so we can
    decide which DefenceRequests to surface on the
    index page.
    Allow CSO to edit an accepted request
    Authorise CSO for the changed defence request in :create and :update
    Test custody suite assignment for cso policy rules
    Remove solicitor time of arrival
    
    We won't need this functionality at all, at least at this stage of the product
    Remove arrival time policy check
    Remove unused cso policy actions
    CSO can only list (dashboard) requests from the same suite
    Update policies to allow / disable editing
    cso can change interview start time for all but aborted defence requests
    remove solicitor search components
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Finish -> Complete, no more mandatory comment
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Initial pass extracting discrete user policies
    [remove_circle_ci] Removed CircleCI integration
    
    Removed CircleCI config. See https://github.com/ministryofjustice/defence-request-service-auth/pull/88 for
    more details
    Extract final transitions
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    Introduce flag to disable dashboard refresh
    Remove long waits for dashboard refresh.
    Relax simplecov coverage requirements
    
    This will cause single integration specs to fail
    very often because they touch lots of files and
    will be very unlikely to be above 90% coverage.
    only use codeclimate formatter in CI environment
    Change load order of CodeClimate reporter so it does not interfere with Simplecov HTML reporter
    Use different tabs in coverage report for Policies, Services and Validators
    allow POSTing of coverage stats to codeclimate in test env
    Added codeclimate coverage reporter
    Configure simplecov to generate artifacts under circleci
    Add coverage to circleci artifacts
    Add simplecov to test suite
    Test that an email has been sent in feature spec.
    Fix the failing capybara/js tests
    log poltergeist to file to fix CI
    Convert to model based auth, add solicitor auth.
    
    The reason for converting to model based auth is
    so we can create scopes using pundit, so we can
    decide which DefenceRequests to surface on the
    index page.
    Set up poltergeist, webmock, database cleaner for javacript feature specs.
    Altered new defence request form to add new attributes
    - added bootstrap_rails_forms
    - used different layout for dashboard
    Initial new action for defence requests
    
    - For now just testing that we can select duty or own
    solicitor to reveal a search box.
    
    - Added login helper for specs.
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Added defence_request controller
    - configured rspec
    - defence_request controller
    Delete un-needed mailer code
    Namespace dr resource and interview start times.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Sort out failing specs relating to old datetimes
    use gds styling for interview start time
    - after_commit clobber builders to allow interview_start_time to return attribute
    instead of builder
    - correct validations
    Add DSCC number to case details email
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Added start time to the notification email
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    stop escaping js.erb values for solicitor lookup
    Search firms as well as solicitors
    
    Very hacky, decided to do this quickly before we
    figure out exactly how we want the search to work.
    Will probably involve changing the search API.
    Clear the solicitor list when making a new search.
    Search firms as well as solicitors
    
    Very hacky, decided to do this quickly before we
    figure out exactly how we want the search to work.
    Will probably involve changing the search API.
    Feature spec for searching for a solicitor and populating form.
    rubocop likes dbl qoutes
    use state_updated_at timestamp for state status sidebar on defence request details page
    extract DefenceRequestPresenter as a first class model
    Remove solicitor_time_of_arrival from DefenceRequest
    Use factory to build new DefenceRequests and assign custody
    Validate presence of circumstances of arrest
    Remove obsolete traits from DR factory
    Allow editing detainee or case details from the show page
    Preset Arrest, arrival and detention authorized
    Change appropriate adult reason input to radio buttons on form.
    Remove defaults from radio button properties
    
    This is appropriate_adult, fit_for_interview and interpreter_required.
    remove investigating officers shoulder number field from defence request
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Remove the fields from factories
    Finish -> Complete, no more mandatory comment
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Roll over to next DSCC number character suffix when default suffix for a month has 99,999 numbers
    Refactor DSCC number generation
    * cleanup query and return dscc_number and updated_at values
    * extract dscc generation into seperate class
    * set return values on defence request
    Remove acknowledged drs without dscc number from
    tests
    
    Since dscc numbers are generated when the
    acknowledgement occurs, there no longer needs
    to be this distinction.
    Generation of unique dscc numbers on acknowledge
    Use new dscc number format in factories
    Factories use Time instead of DateTime
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add reason for appropriate adult to DR show page
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove closed state and feedback field from defence request.
    Replace Open state with Acknowledged state
    Queue action on DRs that are in a draft state
    Rename created state to draft
    
    No functionality change yet, until we put in the
    queued state.
    Sort out failing specs relating to old datetimes
    Make dscc_number factory slimmer
    
    Although it could potentially be used to create
    an invalid object, the trait should do what it
    says on the tin. I think it predated the
    `:opened` trait, it doesn't seem to need the
    extra attributes any more.
    Added gds dates for date of birth and time of arrival
    Fix testing of Defence Request transitions
    
    The existing transition testing code was left over
    from using the `simple_states` gem, so it was
    accidentally not testing anything in a lot of
    places: eg. asserting that a statement doesn't
    throw an exception instead of returning false on
    failure, or asserting that a model cannot perform
    a transition that does not exist.
    Restrict editing of opened/accepted Drs
    
    After a DR has been opened or accepted, no longer
    allow editing of details that may be critical to
    the integrity of the request. Ie, if the age of
    the detainee changes then it may change the need
    for a solicitor to be present, in these cases a
    request should be closed and recreated with
    correct details.
    Associate a CCO with a DR on opening
    - add association
    - alter policy
    Remove duplicate DR trait in factory
    Add resend details action to dashboard.
    DR action and policy for resending details
    Solicitor Dashboard
    most of this was already implemented, I've just added some tests
    Fix copy in feature specs and add translations.
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    DSCC can mark Defence Request as accepted
    - add update and accept to form
    - add accepted to dashboard
    - refactor controller
    Only open defence requests if they can transition
    
    - Also added in a policy for opening DRs to keep
    consistent with our guarding of actions.
    
    - Changed `open` state to `opened` for consistency
    in past-tense state naming.
    Dashboard notifications of new DR's
    - alter controller and dashboard views to return both 'new' and 'created'
    - refactor dashboard views
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Added tests for refreshing dashboard
    
    https://www.pivotaltracker.com/story/show/86712830
    Test CSO being able to edit requests from the same custody suite
    Change user factories to use ServiceUser
    Fix solicitor specs after dashboard changes
    add auth/failure route for users that access service app with no roles
    Add method to return defence requests associated with solicitor's firm.
    Update gem version and User factories accordingly
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Stop using non-example emails in factories
    
    Noticed this when setting up ds-auth app, which
    had copy-pasta setup.
    Add resend details action to dashboard.
    Solicitor Dashboard
    most of this was already implemented, I've just added some tests
    Convert to model based auth, add solicitor auth.
    
    The reason for converting to model based auth is
    so we can create scopes using pundit, so we can
    decide which DefenceRequests to surface on the
    index page.
    Use factory to build new DefenceRequests and assign custody
    Fix solicitor specs after dashboard changes
    Update Gem version and corresponding factory
    
    The updated gem version adds a phone number to
    organisations
    Add organisation factory
    Refactor DefenceRequestForm to accept params in constructor
    Confirm changes to uncertain error messages
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Clean up forms
    Ensure that parentheses are required on method definitions
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove closed state and feedback field from defence request.
    Add test for defence request form
    Fix for blank hour/min errors on date time fields
    
    If hour/min was blank then they were being cast to
    0.
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    Configure chronic for british date format
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Implement blank properly on all field objects
    
    Fixes a bug where forms would fail to submit even
    when there were no errors.
    Spec for date time field
    subject refactor for date field spec
    Add tests for date field
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Implement blank properly on all field objects
    
    Fixes a bug where forms would fail to submit even
    when there were no errors.
    subject refactor for date field spec
    Add tests for date field
    Expose organisation and roles on the ServiceUser
    Introduce ServiceUser to decorate the omni auth user
    Delete un-needed mailer code
    Namespace dr resource and interview start times.
    Add scope for filtering by custody_suite_uid
    Validate presence of circumstances of arrest
    Remove unused defence request scope
    added state_updated_at timestamp to defence_request
    will update the timestamp every time the state changes
    Use validates_inclusion_of() in spec.
    Change appropriate_adult_reason to string type and validate it's value is set to an appropriate locale key.
    Remove defaults from radio button properties
    
    This is appropriate_adult, fit_for_interview and interpreter_required.
    Remove space inside parentheses, add to rubocop
    Dashboard changes (WIP)
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Clean up DefenceRequest model
    Finish -> Complete, no more mandatory comment
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    fix acknowledge state tests to have dscc_numbers
    Remove acknowledged drs without dscc number from
    tests
    
    Since dscc numbers are generated when the
    acknowledgement occurs, there no longer needs
    to be this distinction.
    Generation of unique dscc numbers on acknowledge
    Refactoring
    Add method to return defence requests associated with solicitor's firm.
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Remove closed state and feedback field from defence request.
    Remove repetition of event list array.
    Add aborted state + abort event transitions. Refactor rspec.
    Replace Open state with Acknowledged state
    Queue action on DRs that are in a draft state
    Rename created state to draft
    
    No functionality change yet, until we put in the
    queued state.
    Validate numerically of detainee age
    
    This is the only field on the DR form that needs
    to be cast to something, but is not handled by
    a field object. We need to validate numerically
    or someone could input `"Jeff"` and it would end
    up being `0` as `"Jeff".to_i => 0`
    Sort out failing specs relating to old datetimes
    use gds styling for interview start time
    - after_commit clobber builders to allow interview_start_time to return attribute
    instead of builder
    - correct validations
    Added gds dates for date of birth and time of arrival
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Fix testing of Defence Request transitions
    
    The existing transition testing code was left over
    from using the `simple_states` gem, so it was
    accidentally not testing anything in a lot of
    places: eg. asserting that a statement doesn't
    throw an exception instead of returning false on
    failure, or asserting that a model cannot perform
    a transition that does not exist.
    Fix params for DR form, and add age field.
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Add interview start time to DR form
    
    Solicitor notification callback is called when
    the value changes, this is soon to be filled with
    an email action.
    
    Currently the interview start time cannot be
    blank when it is rendered on the edit page, this
    isn't ideal because the user doesn't have the
    option to *not* add an interview time when doing
    an edit. However, the time select box will drop
    out and become a text box when this branch is
    merged so the issue is not worth dealing with now.
    Only open defence requests if they can transition
    
    - Also added in a policy for opening DRs to keep
    consistent with our guarding of actions.
    
    - Changed `open` state to `opened` for consistency
    in past-tense state naming.
    Switch validations based on solicitor type
    dashboard notifications of new DR's
    - move to 'transitions' state machine
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Set up open->close state transition for DR
    Fix bug for submitting no scheme
    
    The scheme field was disabled, and not being sent
    in the form, leading to a validation error. Wasn't
    picked up because the test didn't enable js. Just
    remove the validation on scheme as we can use nil
    to represent No scheme.
    Added new attributes to DefenceRequest
    -  added validations
    Calculate Day values dynamically
    
    Previously Day::TODAY would just stick with the
    same date that it had when the class was loaded.
    Remove superfluous require
    Separate tab text for CSOs
    
    opened/completed instead of active/closed
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    [fix_failing_build_573] Fixed failing build
    
    * Removed trailing whitespace
    * Increased the size of Metrics/LineLength to match the actual codebase for now
    * Replaced .kind_of?() -> .is_a?()
    validate defence request before attempting to generate a dscc number
    Roll over to next DSCC number character suffix when default suffix for a month has 99,999 numbers
    Refactor DSCC number generation
    * cleanup query and return dscc_number and updated_at values
    * extract dscc generation into seperate class
    * set return values on defence request
    Use factory to build new DefenceRequests and assign custody
    Update Defence Request transition strategy specs
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Extract final transitions
    Uniform strategy API and add missing unit tests
    Update Defence Request transition strategy specs
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Uniform strategy API and add missing unit tests
    Extract final transitions
    Finish -> Complete, no more mandatory comment
    Update Defence Request transition strategy specs
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Extract final transitions
    Update Defence Request transition strategy specs
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Uniform strategy API and add missing unit tests
    Extract final transitions
    Remove space inside parentheses, add to rubocop
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Coherent context description
    Save defence_request after acknowledge
    
    We were not saving the request after adding a
    organisation_uid, so no association to a firm
    /solicitor was being made.
    Use factory instead of a spy
    Introduce configurable auth api client mock
    Use ServiceRegistry for Drs::AuthClient
    Assign organisation_uid on acknowledge transition
    Add acknowledge transition dscc number spec.
    Update Defence Request transition strategy specs
    Specialise defence request transitions API
    
    This allows each defence request transition strategy to have a hard
    dependency on knowing how to call both the transition predicate method
    and the transition method (`.can_transition_type?` and `.transition_type`)
    on the passed in defence request.
    
    This is justifiable to the extend that strategies are specialized around
    a specific transition and knowledge of methods calls is the lowest form
    of coupling possible.
    
    The trade-off implied allows us to remove the use of exceptions for
    control flow and passing down the `transition_to` key continuously,
    along with a more cohesive, specialised API for each strategy.
    Uniform strategy API and add missing unit tests
    Namespace dr resource and interview start times.
    Remove arrival time policy check
    Change the address field to textarea
    Spec fieldset surrounds radio inputs for show hide markup.
    Spec disable-when and show-when attributes set on form and there are matching input ids.
    [add_ping_endpoint] Return 500 errors when the version information is not available
    [add_ping_endpoint] Add ping endpoint as per support requirements
    
    Add ping endpoint that returns version information
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Add /status route to return OK
    Namespace dashboard routes to custody_suite
    Change user factories to use ServiceUser
    Add logout link
    
    https://www.pivotaltracker.com/story/show/93266326
    add auth/failure route for users that access service app with no roles
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Split up dashboard spec, and other desc changes.
    Create solicitor role
    Change dashboard header, and hide actions based on role.
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    Configure devise and secrets
    Namespace dr resource and interview start times.
    Authorise CSO for the changed defence request in :create and :update
    Field objects look up errors from defence request
    
    Instead of adding multiple errors, validating
    individual attributes, we just want field objects
    to yield a single error.
    
    If a message can't be looked up from a supplied
    error proc, then the default error type is added
    to the object, `:invalid`.
    Add text_field_input() helper to form builder.
    Use it for detainee_name input on form.
    update cso form and details view with content tweaks
    Preset Arrest, arrival and detention authorized
    Remove save_and_open page in spec.
    Change appropriate adult reason input to radio buttons on form.
    Update design of draft page and add feature tests
    Fix defence request management spec
    
    This probably needs to be looked at and taken apart
    Add transgender option for gender on defence request form
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    add Not specified option for gender on Defence Request form
    Namespace dr resource and interview start times.
    Test custody suite assignment for cso policy rules
    Confirm changes to uncertain error messages
    Fix for blank hour/min errors on date time fields
    
    If hour/min was blank then they were being cast to
    0.
    Refactor feature tests for changing interview time
    Create feature test for interview time scenarios
    
    There are validation scenarios missing
    feature spec for changing interview time
    Namespace dr resource and interview start times.
    Namespace dashboard routes to custody_suite
    Fix test after rebase
    Fix for passing invalid tab param to show page
    Remove solicitor_time_of_arrival from DefenceRequest
    CSO can only list (dashboard) requests from the same suite
    Validate presence of circumstances of arrest
    fix bug with test spec matcher using wrong font icon
    Remove legacy 'defence request management spec'
    Namespace dashboard routes to custody_suite
    Renaming classes to match domain language
    update cso form and details view with content tweaks
    Test that dashboard page is displayed after submitting DR
    Update design of draft page and add feature tests
    Test CSO being able to edit requests from the same custody suite
    CSO can only list (dashboard) requests from the same suite
    fix bug with test spec matcher using wrong font icon
    Preserve the part form parameter and use it as a tab identified
    Renaming classes to match domain language
    Allow editing detainee or case details from the show page
    CSO can only list (dashboard) requests from the same suite
    Dashboard doesn't list draft DRs
    Fix cso specs
    
    A bunch of tests involving performing actions from
    the dashboard are pending - will be moved to
    invididual files as the functionality will now be
    on the show page.
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Dashboard tabs for all users
    Correct tests
    Add discrete strategies for transitions
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    Replace login_with_role() usage with new login_with() method
    Rename login_with_user() to login_with()
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Make abort specs consistent with existing style
    CSO provides reason aborted when aborting request.
    CSO can abort request via dashboard.
    Replace Open state with Acknowledged state
    Queue action on DRs that are in a draft state
    Rename created state to draft
    
    No functionality change yet, until we put in the
    queued state.
    Remove long waits for dashboard refresh.
    Split up dashboard spec, and other desc changes.
    Change date and time format to render time first
    Rubocop...
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Implement design for "Interview" and "Denention details" tabs.
    Add display_value() view helper method.
    prefix custody number on CSO dashboard with "CN:"
    Remove solicitor time of arrival
    
    We won't need this functionality at all, at least at this stage of the product
    Fix date time helper for interview and solicitor arrival times
    update cso form and details view with content tweaks
    Display "optional" form labels as light grey
    Add comments example as an aside next to the comments field
    Fix defence request page title when name not given
    Change copy for not given
    Fix failing test
    More robust testing
    
    - altered js to set fields as readonly (not disabled)
    - add test to confirm changing from not given and back
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    display date and time for solicitor arrival times that are not today
    display date and time for interviews that are not today
    Style for box around interview and arrival times.
    Add house_name to detainee_address() output.
    Move detainee summary fields above tabs in show view.
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    Date choosers use yesterday and today
    Remove placeholder text from date(time) fields
    Auto tab to next field when full on date(time)s
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    Remove unused code.
    Remove space inside parentheses, add to rubocop
    Spec date chooser js leaves blank date fields blank on page load.
    Focus day input field after today/tomorrow toggle click.
    Show three field date inputs when JS is enabled.
    Enable both Today and Tomorrow links if set date is not equal to today or tomorrow.
    Set Today link active when date being updated is set to tomorrow's date.
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Fix describe text in spec.
    Remove unused code.
    Remove unneeded eq(0) calls from JS.
    Remove text from input/textarea when it is hidden or disabled.
    Change generic javascript to enable/disable input when corresponding input is unchecked/checked.
    Add generic javascript for disabling input when radio is checked.
    Remove placeholder text from date(time) fields
    Auto tab to next field when full on date(time)s
    Remove unused code.
    Remove unneeded eq(0) calls from JS.
    Remove text from input/textarea when it is hidden or disabled.
    Bind on all radio inputs in fieldset for triggering show/hide.
    Add generic javascript for hiding input and showing it when radio is checked.
    Add jasmine for javascript testing.
    Make TextArea form builder class to separate from TextField
    Make the address a textarea
    Remove unused options for radio button field set
    Move form builder to builders directory, split up
    Extract form builder methods into classes
    Add form_group() helper to form builder.
    Use it to render date_of_birth on form.
    Add text_field_input() helper to form builder.
    Use it for detainee_name input on form.
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Uniform strategy API and add missing unit tests
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Make the dashboard spec helper clearer
    
    Re-added wait_for_ajax, also made the refresh
    variable a semantically correct name, and added
    a large comment about why we need this helper.
    Remove long waits for dashboard refresh.
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    Added tests for refreshing dashboard
    
    https://www.pivotaltracker.com/story/show/86712830
    Use truncation for database cleaning in tests
    
    Postgres will complain about nested transactions
    in tests including dscc number generation. Tests
    are slightly slower, switching between strategies
    depending on test content doesn't seem worth the
    obfuscation it would cause.
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    Remove unused method from mock auth api helper
    Fix solicitor specs after dashboard changes
    Introduce configurable auth api client mock
    Fix Rubocop offences
    Use ServiceRegistry for Drs::AuthClient
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Tighter restrictions on editing/updating DRs
    
    - CSOs / CCOs cannot edit DRs unless they are
    created or opened respectively.
    
    - The policy spec was getting quite complicated,
    and I realised that we were not checking that
    actions were forbidden, so there is a new matcher
    to alleviate some of the pain.
    Convert to model based auth, add solicitor auth.
    
    The reason for converting to model based auth is
    so we can create scopes using pundit, so we can
    decide which DefenceRequests to surface on the
    index page.
    Use ActiveJob::TestAdapter for testing queued jobs
    
    Using Action Mailer's deliver_later to send emails can result in
    intermittent test failures when not enough time has passed for the
    Sucker Punch library to perform the jobs. Fix this by using the
    TestAdapter which can perform the jobs immediately.
    
    https://www.pivotaltracker.com/story/show/88609450
    Namespace dashboard routes to custody_suite
    CSO can only list (dashboard) requests from the same suite
    Change user factories to use ServiceUser
    Update design of draft page and add feature tests
    add auth/failure route for users that access service app with no roles
    Correct tests
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Replace login_with_role() usage with new login_with() method
    Rename login_with_user() to login_with()
    Show solicitor its firms defence requests in dashboard
    Add login_with_user() helper to allow custom user fields to be
    mocked on profile.
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    update cso form and details view with content tweaks
    Change appropriate adult reason input to radio buttons on form.
    remove investigating officers shoulder number field from defence request
    add custody number to defence request
    add custody number to defence request form
    add custody number to defence request show page
    add Not specified option for gender on Defence Request form
    Use single text field for dates in DateTime vals
    
    The designs specify using a single field for
    dates in date time values, but we will still use
    the 3 separate year, month, day approach for
    stand alone dates
    More robust testing
    
    - altered js to set fields as readonly (not disabled)
    - add test to confirm changing from not given and back
    
    https://www.pivotaltracker.com/story/show/93690578
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    Fix test after fields removal
    Rebase and remove solicitor search implementation
    Add discrete strategies for transitions
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Allow CSO to edit an accepted request
    Authorise CSO for the changed defence request in :create and :update
    Test custody suite assignment for cso policy rules
    Remove solicitor time of arrival
    
    We won't need this functionality at all, at least at this stage of the product
    Remove arrival time policy check
    Remove unused cso policy actions
    CSO can only list (dashboard) requests from the same suite
    Update policies to allow / disable editing
    cso can change interview start time for all but aborted defence requests
    remove solicitor search components
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Finish -> Complete, no more mandatory comment
    Refactor DR policy into role based policies
    
    - create a PolicyContext class that interpolates the policy class
    name based on user role
    - move defence request policy clauses to discreet policies
    - add a helper to check for a clause and test it or return false
    - move the specs to discreet files
    - fix the matchers to allow for the Policy attr's
    Add ServiceRegistry
    [add_shoryuken] Fixed missing newline
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [add_ping_endpoint] Return 500 errors when the version information is not available
    [add_ping_endpoint] Add ping endpoint as per support requirements
    
    Add ping endpoint that returns version information
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    rails setup
    [add_sentry_config] Add Sentry config
    
    Add sentry config and parameters
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [clean_up_true_false_yaml_handling] Simplified true/false handling in Yaml
    
    The ERB code would place the string true/false in the YAML. When the YAML is
    then parsed, the true/false is evaluated as an actual true/false, rather than a
    string containing "true" or "false".
    
    We thus do not need to check the string equivalent value in the yaml
    [assets_on_s3] Ability to build assets on S3
    
    On an AWS instance that's correctly part of the right instance group,
    you can now push assets to an S3 bucket with the command
    "bundle exec rake assets:sync"
    
    - Added asset_sync gem
    - Added config for asset_sync that allows for discovery of the server's
      instance permissions, so that it can communicate with the correct
      S3 bucket
    - Added a new section to the settings.yml file for AWS-related things.
    - Set default values for the different environments.
    remove solicitor search components
    Allow setting `force_ssl` as env var
    
    Motivation behind this is so we can disable
    forcing ssl in the smoke test environment.
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    Product name change to Defence request service
    
    https://www.pivotaltracker.com/story/show/90549054
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Introduce flag to disable dashboard refresh
    Make the dashboard spec helper clearer
    
    Re-added wait_for_ajax, also made the refresh
    variable a semantically correct name, and added
    a large comment about why we need this helper.
    allow sandbox email address to be an ENV variable with a default fallback
    Moved default_url_options to settings
    add google analytics tracking snippet to all pages
    Intercept mail if sandboxed
    
    Email interceptor to send to a test email address
    if we set an option in the environment variables.
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    Removed bootstrap added govuk framework
    CSO Dashboard
    - added timestamps to defence_request
    - tests for dashboard refresh
    
    https://www.pivotaltracker.com/story/show/86712830
    Add solicitors_search action for defence requests controller
    
    - This will soon return js that will display a list
    of solicitors on the new page.
    Configure devise and secrets
    Disable default error proc
    
    This is what accelerated claims did, which our
    form builder is based off. We don't want all of
    our elements to be wrapped in a div, it breaks
    all the css.
    
    https://github.com/ministryofjustice/accelerated_claims/commit/835b1c086648dc3b36a264033c315c2df1165c4d
    Require service registry manually
    
    The service registry singleton has a store that
    added to in the initializers, this means trouble
    if the class gets reloaded - and the store gets
    clobbered.
    Update service name.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    Raise on unpermitted params across all envs
    
    Setting ActionController to raise on unpermitted params can save a lot
    of debugging time in test/dev.
    
    It will also be the default setting at some point in the near future.
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Added gds dates for date of birth and time of arrival
    Don't override error_proc in application config
    
    Use a class to set the field width so that error_proc doesn't need
    to be overridden because it wraps the label and field separately
    and breaks the adjacent selector. This also makes it work in IE6.
    Fix copy in feature specs and add translations.
    Moved default_url_options to settings
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Defence request can be closed with required note
    - removed simple_form used gov forms
    - cleaned up flash and errors
    Removed bootstrap added govuk framework
    rails setup
    allow pulling of AWS credentials from ENV
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [secret_key_base_in_settings] Migrate config/secrets.yml to always use Settings.rails.secret_key_base
    Configure devise and secrets
    rails setup
    [docker_container_repository_92999546] Added temporary holding registry config
    
    Until we have the secure repo and build system configured, we are going to use the public docker registry
    
    * Reverted to the old way of handling multiple Dockerfiles, since CircleCI runs an older Docker release
    * Improve caching of docker containers as per https://circleci.com/docs/docker#caching-docker-layers
    * Build and push Docker containers on builds against certain branches
    * Ensure that we set the Rails environment to Production before building assets
    * Circleci overrides database.yml by default, which then gets committed to the Docker containers.
      Additionally it installs things in vendor and other places. We now force a git clean before building
      the container, so that only the things that should definitely be in the container are in the container.
    * Add production database.yml config entry
    * On building a docker container, force the filesystem timestamp to all be the same value. This helps
      ensure cacheability, since docker considers a timestamp difference to mean a change, and
      git doesn't preserve timestamps across builds.
    Set database names in database yml
    
    Setting the db name in .env causes only the creation of the
    development database, since rake tasks such as db:create are ran by
    default in development environment.
    
    This has the consequence of not respecting setup rake tasks,
    reproducible by running rake db:create:all and noticing the output of
    " development already exists>" in triplicate (one per env).
    
    .env files have also been updated to reflect the change.
    default database config to nil when not specified and let ENV['DATABASE_URL'] take precedence
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    More rails setup
    
    - added the govuk_frontend gems
    - removed turbolinks
    - set ruby version to 2.1.5
    rails setup
    [run_in_docker_compose_92624756] Initial version
    [unicorn_config_cleanups_and_unify_gitignore] Unicorn and .gitignore cleanups
    
    * Make .gitignore standard across projects
    * Make .gitignore support keeping subdirectories in the tmp/ directory
    * Change Unicorn to log stderr and stdout into the log directory, unless run from Foreman
    [git_deploy] Integrated PR feedback
    [git_deploy] Added git-deploy
    
    * Integrated https://github.com/mislav/git-deploy as a temporary solution for deployments
    * Make Unicorn socket and pids relative to the unicorn.rb file
    * Configured Unicorn - Added PID file
    * Configured Unicorn - Added socket with the best-practice backlog of 64, so that
      errors fail-over faster
    * Added tmp/pids and tmp/sockets creation to deploy
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Add app server config for heroku:
    * Procfile
    * Unicorn config file
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Set custom default port for server in development
    rails setup
    Namespace dr resource and interview start times.
    Remove resend_details functionality
    Namespace dashboard routes to custody_suite
    solicitor admin detail page states
    WIP
    WIP
    Enable inline or non javascript change of interview time
    [add_ping_endpoint] Add ping endpoint as per support requirements
    
    Add ping endpoint that returns version information
    remove solicitor search components
    Rename controller to InterviewStartTimesController to be consistent with SolicitorArrivalTimesController.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Make routes more user friendly
    
    Users will only see one dashboard, so it doesn't
    make sense to use default restful paths.
    Use single show action for dashboards
    
    Select what level of visibility we want based
    on the id passed in, lovely REST.
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Move edit solicitor arrival time view to its own path. Link to from show view.
    Add Closed/Active tabs to solicitor dashboard
    
    - Add closed route
    - Add links to Solicitor dashboard
    - Make responsive
    - add finished to solicitor policy scope
    add auth/failure route for users that access service app with no roles
    Rebase and update
    Extract final transitions
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    CSO provides reason aborted when aborting request.
    CSO can abort request via dashboard.
    Replace Open state with Acknowledged state
    Queue action on DRs that are in a draft state
    Add /status route to return OK
    Change accepted action to accept (grammar)
    Allow solicitor to update solicitor_time_of_arrival
    - add form to show page for solicitors
    Add resend details action to dashboard.
    WIP
    Defence request can be closed with required note
    - added feedback and close actions to defence_Request
    - added validator for feedback
    Removed bootstrap added govuk framework
    Break out DR open into a separate action
    Front end and controller for closing of DR
    Added dashbaord refresh using ajax
    
    https://www.pivotaltracker.com/story/show/86712830
    Allow users to change password
    
    https://www.pivotaltracker.com/story/show/86704942
    Add solicitors_search action for defence requests controller
    
    - This will soon return js that will display a list
    of solicitors on the new page.
    Pluralise DefenceRequest controller, policies, routes.
    Added defence_request controller
    - configured rspec
    - defence_request controller
    Add devise gem
    
    - added user model to devise
    - added temp default route
    rails setup
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    display oauth failure page in development
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Use ActiveJob::TestAdapter for testing queued jobs
    
    Using Action Mailer's deliver_later to send emails can result in
    intermittent test failures when not enough time has passed for the
    Sucker Punch library to perform the jobs. Fix this by using the
    TestAdapter which can perform the jobs immediately.
    
    https://www.pivotaltracker.com/story/show/88609450
    Intercept mail if sandboxed
    
    Email interceptor to send to a test email address
    if we set an option in the environment variables.
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    Add devise gem
    
    - added user model to devise
    - added temp default route
    rails setup
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    Use ActiveJob::TestAdapter for testing queued jobs
    
    Using Action Mailer's deliver_later to send emails can result in
    intermittent test failures when not enough time has passed for the
    Sucker Punch library to perform the jobs. Fix this by using the
    TestAdapter which can perform the jobs immediately.
    
    https://www.pivotaltracker.com/story/show/88609450
    Stop trying to send emails in test
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    Stop rendering exception pages in test
    
    - This means rack test will actually abort when
    an exception is thrown.
    
    - Was originally set in order to manually debug
    ajax, we should only turn exception pages on
    temporarily in future and not commit the change.
    Turn on exceptions for test server logs
    
    - Really hard to debug ajax otherwise as exceptions
    do not make it through to the terminal.
    rails setup
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    [force_ssl_bugfix] Corrected the setting name for force_ssl
    
    The environment variable wasn't being honored by rails, and was defaulting to false.
    Allow setting `force_ssl` as env var
    
    Motivation behind this is so we can disable
    forcing ssl in the smoke test environment.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Normalise test setup across applications
    
    * Avoid duplicating dependency requirements
    * Split concerns between rails_helper / spec_helper
    * Move database cleaner and action mailer configs into support files
    [unify_environment_settings] Cleaned handling of environment variables
    
    * Changed so that we use ENV.fetch instead of ENV[] - this way we receive
      errors if variables are not defined, rather than just undefined behaviour.
    * Migrate to Dotenv 2.0.0
    * Adjust .env config files to match Dotenv 2.0.0 structure
    * Cleaned up naming of some environment variables
    * Grouped and cleaned up the config/settings.yml file
    * Corrected config of config.action_mailer.default_url_options to use the url
      rather than the mailserver name
    * Migrated database.yml to use ENV variables universally
    * Added unicorn config using UNICORN_PORT environment variable to match other
      Ministry of Justice projects
    * The Settings.dsds.solicitor_search_domain wasn't just a domain. The setting
      included a full url fragment, including https:// or http:// so I renamed it
      Settings.dsds.solicitor_search_url_prefix instead
    * Set enable_starttls_auto to true on our mail config, since it's recommended to be
      true by both https://sendgrid.com/docs/Integrate/Frameworks/rubyonrails.html and
      https://devcenter.heroku.com/articles/sendgrid
    [logstash_format_logging] Added lograge and logstash-event in production
    Use ActiveJob::TestAdapter for testing queued jobs
    
    Using Action Mailer's deliver_later to send emails can result in
    intermittent test failures when not enough time has passed for the
    Sucker Punch library to perform the jobs. Fix this by using the
    TestAdapter which can perform the jobs immediately.
    
    https://www.pivotaltracker.com/story/show/88609450
    Force SSL
    - and added a .env.example file
    Add notification emails on interview time change
    
    The email itself doesn't look amazing right now
    because we don't have the show page that the
    solicitor should be able to go to. Coming soon
    though!
    Add devise gem
    
    - added user model to devise
    - added temp default route
    rails setup
    Fix bug for multiple errors per field
    
    We only want to display a single error per field
    on the form. Unless they are mutually exclusive,
    the message should be the same, so we can just
    select the first message from a list, when
    choosing what to display.
    Confirm changes to uncertain error messages
    Correct key for unfit_for_interview error
    Add missing translation for detainee address
    Update en.yml for error messages on DefenceRequest
    Change date format and update copy
    Tidy up access of translation from form builder
    
    Instead of defining a funky new place for
    translations, we can just define them in the
    standard place and get `human_attribute_name` for
    free.
    Use form object for edit, fix i18n.
    Use form_group() helper around validated form groups on form.
    Use form_group() to render appropriate_adult_reason and interpreter_type.
    Add text_field_input() helper to form builder.
    Use it for detainee_name input on form.
    Use radio_button_fieldset helper for all radio fieldsets on form.
    Add form builder for error validation rendering.
    Add method to create radio button fieldsets.
    Use this method to render defence request gender radio buttons.
    Prefix attribute label keys in en.yml locales file.
    Add error style classes to error summary section.
    Add "Day after tomorrow" to future date choosers
    Genericize date chooser links
    
    We now have the need for different fields
    to have different links e.g. "today", "tomorrow",
    "yesterday". The javascript should be able to
    handle custom links defined in the markup, instead
    of hard coding each link.
    add custom hint text for date fields
    update cso form and details view with content tweaks
    Date choosers use yesterday and today
    Content and style for unfit for interview section.
    Change appropriate adult reason input to radio buttons on form.
    Change appropriate_adult_reason to string type and validate it's value is set to an appropriate locale key.
    prefix custody number on CSO dashboard with "CN:"
    moved comments fields aside text into i18n
    Update design of draft page and add feature tests
    Add show page for Draft and update details display
    Added label_text_for_form helper to render form labels with \"optional\" text if needed
    Added optional text to form labels for interview time and comments on defence request form
    Add transgender option for gender on defence request form
    remove "(optional)" from date of birth form label
    add Not specified option for gender on Defence Request form
    Use i18n for arriving/arrival dashboard text
    Fix cso specs
    
    A bunch of tests involving performing actions from
    the dashboard are pending - will be moved to
    invididual files as the functionality will now be
    on the show page.
    Fix cco dashboard specs
    Separate tab text for CSOs
    
    opened/completed instead of active/closed
    Fix defence request page title when name not given
    Change copy for not given
    Remove Age field
    - Remove all traces of the age attribute, finally.
    - Allow js to repopulate the 'not given' fields if unchecked again
    - fix validations for 'not given'
    
    https://www.pivotaltracker.com/story/show/93690578
    add not given option for dob
    
    https://www.pivotaltracker.com/story/show/93690578
    Allow 'not given for name and address
    
    https://www.pivotaltracker.com/story/show/93690578
    Unified address field for detainee address
    
    https://www.pivotaltracker.com/story/show/93690578
    remove solicitor search components
    Remove 'own' solicitor functionality
    
    - for MVP1 the own solicitor is out of scope
    
    https://www.pivotaltracker.com/story/show/93690572
    Add logout link
    
    https://www.pivotaltracker.com/story/show/93266326
    Style for box around interview and arrival times.
    Add today/tomorrow toggle to all time entry inputs.
    Implement design for "Interview" and "Denention details" tabs.
    Change tab label to "Detention details". Change single to double quotes.
    Move detainee summary fields above tabs in show view.
    Change link text.
    Show detainee name and DSCC number in page heading.
    WIP for @robmckinnon
    - Needs to be updated to use latest designs from @kateapp
    - Needs tests to cover interview time etc
    - Probably change controller actions to update edit not new create
    - Check logic surrounding displaying and editing of times on interview
    tab
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    Add cancel button to arrival time edit view.
    Move edit solicitor arrival time view to its own path. Link to from show view.
    Add Closed/Active tabs to solicitor dashboard
    
    - Add closed route
    - Add links to Solicitor dashboard
    - Make responsive
    - add finished to solicitor policy scope
    Finish -> Complete, no more mandatory comment
    Render defence requests for solicitor dashboard
    
    There is some information missing or temporary (custody will be connected via uid rather then having details in the db).
    Extract final transitions
    Extract transitions resource
    
    This extracts a resource responsible for managing the state transitions
    of defence requests. It doesn't move the actions that require user
    input: these will be pulled out into their own resources in another PR.
    Add interpreter fields to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add unfit_for_interview_reason to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add fit for interview to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of detention authorised to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add time of arrest to DR
    
    https://www.pivotaltracker.com/story/show/90595206
    Add extra case details to defence request
    
    https://www.pivotaltracker.com/story/show/90595206
    Change allegations to offences on defence requests
    
    https://www.pivotaltracker.com/story/show/90595206
    Add address to detainee details
    
    https://www.pivotaltracker.com/story/show/90595206
    Add appropriate_adult_reason to Defence request
    
    - added validation if appropriate_adult required
    - disabled when appropriate_adult not required
    
    https://www.pivotaltracker.com/story/show/90595206
    Stop CSO editing solicitor info on "duty" DR
    Remove closed state and feedback field from defence request.
    CSO provides reason aborted when aborting request.
    CSO can abort request via dashboard.
    Replace Open state with Acknowledged state
    Queue action on DRs that are in a draft state
    Add negative feature test cases for DR actions
    Add solicitor and appropriate adult fields
    WIP
    use gds styling for interview start time
    - after_commit clobber builders to allow interview_start_time to return attribute
    instead of builder
    - correct validations
    Added gds dates for date of birth and time of arrival
    Fix form styling
    Refactor validations
    Added govuk date and time fields and validations
    - added errors helper for multiple errors on object
    - added DateTimeBuilder
    - added validations
    Change accepted action to accept (grammar)
    Use field translations for validation message
    Fix devise panels for assesment
    Fix styling as request for alpha assesment
    added missing i18
    - moved 'content' files to locale specific versions
    https://www.pivotaltracker.com/story/show/88618676
    add solicitor_time_of_arrival to dashboard
    Allow solicitor to update solicitor_time_of_arrival
    - add form to show page for solicitors
    Add resend details action to dashboard.
    rebase fixup
    Apply dashboard design
    - brought dashboard designs in line with new designs
    - fixed dashboard refresh for solicitor
    - fixed policy naming conventions
    Fix after rebase
    Fix copy in feature specs and add translations.
    Add styling to defence request form.
    
    Also split out shared js into separate file as it
    is needed in new and create views.
    DSCC can mark Defence Request as accepted
    - added show action and page
    - added mailer action for details
    - added scope for solicitor policies
    DSCC can mark Defence Request as accepted
    - add update and accept to form
    - add accepted to dashboard
    - refactor controller
    WIP
    Defence request can be closed with required note
    - added feedback and close actions to defence_Request
    - added validator for feedback
    - Added partials for controller/action
    - Added i18n where missing
    - Imported moj_template for reference
    - added static pages as per accelerated_claims
    Removed bootstrap added govuk framework
    Break out DR open into a separate action
    Add DSCC number to Defence Request Form
    
    - Readonly for anyone except the DSCC
    Dashboard notifications of new DR's
    - alter controller and dashboard views to return both 'new' and 'created'
    - refactor dashboard views
    Create solicitor role
    Alter DefenceRequest validations and add seeds
    - remove full phone number validations
    - change detainee to just save one name
    - alter validations to only check presence
    - add test users seed data
    - added heroku schedule to reset test DB
    
    https://www.pivotaltracker.com/story/show/87704886
    Front end and controller for closing of DR
    Edit a DR
    - added a update and edit actions
    - partails for the form and shared with new
    - policies for cso
    
    https://www.pivotaltracker.com/story/show/86902518
    Display "Contact DSCC" when no results found
    Change dashboard header, and hide actions based on role.
    Display "No Results" if no solicitors are found from search
    Add missing i18n strings
    Allow users to change password
    
    https://www.pivotaltracker.com/story/show/86704942
    Altered new defence request form to add new attributes
    - added bootstrap_rails_forms
    - used different layout for dashboard
    Pundit authorization
    
    - added the gem
    - defence_request inherestits from a base controller
    - added initial tests
    
    https://www.pivotaltracker.com/story/show/86704942
    rails setup
    rails setup
    rails setup
    [add_sentry_config] Add Sentry config
    
    Add sentry config and parameters
    always initialize shoryuken
    Intercept mail if sandboxed
    
    Email interceptor to send to a test email address
    if we set an option in the environment variables.
    Style for box around interview and arrival times.
    [assets_on_s3] Ability to build assets on S3
    
    On an AWS instance that's correctly part of the right instance group,
    you can now push assets to an S3 bucket with the command
    "bundle exec rake assets:sync"
    
    - Added asset_sync gem
    - Added config for asset_sync that allows for discovery of the server's
      instance permissions, so that it can communicate with the correct
      S3 bucket
    - Added a new section to the settings.yml file for AWS-related things.
    - Set default values for the different environments.
    rails setup
    rails setup
    Require service registry manually
    
    The service registry singleton has a store that
    added to in the initializers, this means trouble
    if the class gets reloaded - and the store gets
    clobbered.
    Use ServiceRegistry for Drs::AuthClient
    Add the drs-auth_client gem and configure it
    convert single quotes to dbl quotes
    indent case statement to match rubocop rules
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    add Statsd collector with stub statsd client
    rails setup
    rename 'extensions' files to 'main'
    initial reorg for IE versions
    switch icons to font-awesome icons
    remove solicitor search components
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    Remove excessive indirection
    
    At this point is not justifiable to introduce partials for each of the
    user type partials, resulting in excessive indirection. Removing them
    allows for less calls to `render` and for a simpler `Dashboard` object.
    Extracts Dashboard Resource
    
    This extracts a dashboard resource from DefenceRequestsController:
    this enables a simpler `DefenceRequestsController` and offers an object
    that can take be extended without further overloading the views or the
    defence request model.
    
    It also gets eliminates unnecessary queries that were made by
    "DefenceRequestsController#get_defence_request_scopes" and corresponding
    duplicate calls to `render` in the view. The css classes passed down to
    render as `type` were also seemingly only used to facilitate testing.
    In a previous PR, it was ensured that each test creates only the set of
    data it needs and, therefore, these have become unnecessary as well.
    Removed bootstrap added govuk framework
    Styling added
    
    - added devise views
    - added bootstrap and minimal changes for moj
    - styled flash messages
    
    https://www.pivotaltracker.com/story/show/86704942
    rails setup
    Configure chronic for british date format
    Use non-padded date formatting
    
    Now our date strings are like "1 May 2015" instead
    of " 1 May 2015"
    Solicitor can toggle arrival date between Today and Tomorrow when JS enabled.
    rails setup
    Tell OmniAuth to use rails logger
    
    https://github.com/intridea/omniauth#logging
    Converts application to use oAuth
    
    * Enable Postgres uuid-ossp extension
    * Use Postgres uuid type
    * Change Defence Request associations to use UUIDs
    * Add Omniauth-dsds gem and due spec support
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    rails setup
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    [git_deploy] Added git-deploy
    
    * Integrated https://github.com/mislav/git-deploy as a temporary solution for deployments
    * Make Unicorn socket and pids relative to the unicorn.rb file
    * Configured Unicorn - Added PID file
    * Configured Unicorn - Added socket with the best-practice backlog of 64, so that
      errors fail-over faster
    * Added tmp/pids and tmp/sockets creation to deploy
    [deploy-slack-message] Added slack deploy message
    [git_deploy] Added git-deploy
    
    * Integrated https://github.com/mislav/git-deploy as a temporary solution for deployments
    * Make Unicorn socket and pids relative to the unicorn.rb file
    * Configured Unicorn - Added PID file
    * Configured Unicorn - Added socket with the best-practice backlog of 64, so that
      errors fail-over faster
    * Added tmp/pids and tmp/sockets creation to deploy
    [deploy-slack-message] Added slack deploy message
    [git_deploy] Added git-deploy
    
    * Integrated https://github.com/mislav/git-deploy as a temporary solution for deployments
    * Make Unicorn socket and pids relative to the unicorn.rb file
    * Configured Unicorn - Added PID file
    * Configured Unicorn - Added socket with the best-practice backlog of 64, so that
      errors fail-over faster
    * Added tmp/pids and tmp/sockets creation to deploy
    [unicorn_config_cleanups_and_unify_gitignore] Unicorn and .gitignore cleanups
    
    * Make .gitignore standard across projects
    * Make .gitignore support keeping subdirectories in the tmp/ directory
    * Change Unicorn to log stderr and stdout into the log directory, unless run from Foreman
    rails setup
    [unicorn_config_cleanups_and_unify_gitignore] Unicorn and .gitignore cleanups
    
    * Make .gitignore standard across projects
    * Make .gitignore support keeping subdirectories in the tmp/ directory
    * Change Unicorn to log stderr and stdout into the log directory, unless run from Foreman
    rails setup
    [add_shoryuken] Add Shoryuken job processor
    
    - Add Shoryuken as the default background job processor in production
    - The job processor in use is now determined by a system setting / environment variable
    - Add a new Docker container that is solely for running background processes
    
    Example job - Add to app/jobs/my_worker.rb:
    
    ```
    require_relative '../../lib/active_job_config'
    
    class MyWorker < ActiveJob::Base
      queue_as ActiveJobConfig.queue(:myworker)
    
      rescue_from ActiveJob::DeserializationError do |e|
        Shoryuken.logger.error ex
        Shoryuken.logger.error ex.backtrace.join("\n")
      end
    
      def perform(body)
        puts body
      end
    end
    ```
    
    And then in config/shoryuken.yml:
    ```
    queues:
      - [<%= "#{ENV.fetch("ACTIVE_JOB_QUEUE_PREFIX")}_myworker_queue" %>, 1]
    ```
    Add ServiceRegistry
    [correct_version_file_name] File should be called .version.yml rather than just .version
    [add_ping_endpoint] Return 500 errors when the version information is not available
    [add_ping_endpoint] Add ping endpoint as per support requirements
    
    Add ping endpoint that returns version information
    rails setup
    rails setup
    Run jasmine tests as part of default rake task.
    [fix_all_single_quotes] Double quote everything
    
    Change all single quoted strings to double quotes, so that the codebase matches our coding standard.
    
    Note that I've changed standard rails components in config/* and bin/*
    etc. The reasoning for this is a little complicated:
    
    1) I could exclude bin/* - but that way if someone creates a new bin/foo it won't be checked
    2) I could exclude individual items like bin/bundle, bin/rails etc - but if someone does change it,
       their change won't be checked by rubocop
    
    The same applies for other files, like things in config/* that are built by standard configs.
    
    After some discussion with Anson, we've decided to replace all occurrences. The downside is that
    if/when we do a rails upgrade, someone will have to compare a single-vs-double-quoted version of
    the files in bin/* and similar to see if there are changes that need to be incorporated.
    [rubocop] Integrated Rubocop
    
    * Integrated GDS ruby style guide - https://github.com/alphagov/styleguides
    * Integrated changes to style guide as per https://github.com/alphagov/styleguides/pull/69
      and https://github.com/alphagov/styleguides/pull/70
    * Changed the GDS style guide to use double quotes everywhere
    * Generated a Rubcop todo file with "rubocop --auto-gen-config"
    * Included Rubocop in the Gem file
    * Added Rubocop to run on "bundle exec rake"
    * Added circle.yml to run "bundle exec rake", and fix ruby version
