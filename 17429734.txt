    Update README.md
    
    Pointing out few err in the release version. As this is the first document anyone would Read.
    
    -Corrected released version. Removed old references.
    PS : I also use this file to restore my "base" folder with older original version when new EPICS version is released. This way I can keep all of my compiled version isolated.
    add doxygen+gh-pages
    Update version numbers for 3.15.8-DEV (3.15.7.1-DEV)
    Update version numbers
    
    Also contains some reformatting in README.md
    Amend documentation filenames in README
    
    Also deleted old README.1st
    Convert HTML in README.md to Github Markdown
    Rename README to .md
    Update version numbers in documentation to 7.0.2
    Update version numbers in documentation
    Update README's list of files
    Remove EpicsHostArch
    Rename Site.{cshrc,profile} to unix.{csh,sh}
    Update documentation/README files
    Updated links to new EPICS website at Argonne
    
    Only done for documents that are still present in EPICS 7.
    Update version numbers in documentation to 7.0.1.1
    
    Also recreated README.1st from README.html
    Version number updates in secondary documents
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Update version numbers in documents for 3.15.6
    Update version numbers in docs
    Removed references to VxWorks 5.x
    Update version numbers in documentation for 3.15.3
    Update some version numbers in documentation
    doc: HTML: fix typos and list of files in documentation directory
    Update version numbers for 3.15.1-rc1
    Update version number to 3.15.0.2
    doc: Delete old TOC entry.
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    Edit README files, set version numbers.
    Delete remnants of Aix and Borland.
    Delete filterWarnings.pl script
    
    Was only used on HPUX which we don't support any more.
    documentation: Regenerate README.1st, add instructions to .html
    
    I use the elinks program to convert the .html into the text format.
    documentation/README: We now require vxWorks 5.5 or later
    Removing old 3.14 and 3.13 notes.
    documentation: Various updates...
    
    Removed the Converting... files for older releases
    No known problems yet.
    Updated README.html and regenerated README.1st from it.
    Added windows-x64 target to the Release notes.
    Updated file and directory sizes for R3.14.11.
    More updates for R3.14.11.
    More updates for R3.14.11.
    Deleted HPUX support files.
    More updates and format changes
    Reformatted and updated contents.
    Updated the lists of supported architectures.
    Modified minimum version of Perl to 5.6 (not tested!) and gnumake to 3.81.
    Added gcc version requirement.
    Added new host and cross targets. Updated source tree size.
    Added GNU readline or Tecla library software requirements.
    Changed path requirements for WIN32 builds.
    Updates to make files general. Updated for R3.14.7.
    R3.14.6 updates.
    Updated for R3.14.4.
    3.14.2 => 3.14.3
    Added Release Approval line to checklist.
    Added note about R3.13 shared libraries.
    Updated for R3.14.2
    Add comment about linux building with shared libraries by default
    Updated solaris path info.
    Updates for R3.14.1.
    Minor edits; mainly that tech-talk is now the only EPICS mailing list we ever
    talk about in public.
    Changed required gnumake version to 3.78.1
    Updated required gnumake version to 3.79.
    Added darwin-ppc.
    Updated release number.
    Updates for R3.14.0beta2.
    Moved from $(TOP)
    Fix URL to EPICS home page.
    Tool file description updates.
    Updated for R3.14.0.beta1.
    Updated for header dependancy changes.
    Updated documentation for alpha3 release.
    Updated for alpha2.
    Updates for R33.14.0alpha2.
    Updates for R3.14.0alpha2.
    Added R3.13 compatibility configuration paragraph.
    Fixed directory structure and modified infor about README.htm location.
    Many items added.
    Initial version.
    Edits to the Record Ref index page
    add doxygen+gh-pages
    Update versions after tagging
    Rolf Keitel's POD documentation for dbCommon (from the Wiki)
    
    I split his two "Fields Common to ..." sections back into separate docs,
    added links between them all, and made the appropriate build changes.
    Also added these and the aai/aao records to the documentation index.
    Add new POD output files to RecordReference index
    Add a document containing Record Reference links
    add doxygen+gh-pages
    add doxygen+gh-pages
    doc
    const init a char array from a string value
    Support undefine in RELEASE files
    Document ARM architecture adjustments
    Fix Cygwin TCP_NODELAY issue from Paul Chu & Freddie
    Release notes updated
    update release notes
    add doxygen+gh-pages
    Name generated junitfiles '<testname>-results.xml'
    
    - following an idea by Freddie Akeroyd,
      to allow better distinction from other xml files
    Set next development versions
    Update version numbers for release
    
    With both libcom and database having minor version bumps I
    concluded that this couldn't be 7.0.3.2 and should really
    be numbered 7.0.4
    Final Release Notes update, added bug links
    Add and document the macro IOCSHFUNCDEF_HAS_USAGE
    update release notes
    Update versions after tagging
    Release Notes changes for 3.15.8
    Warn if deprecated state record is used
    iocsh: add usage messages
    Build system release notes
    Add some release notes
    Adjust RELEASE file variable name recognition
    
    I was asked to support the use of hyphens `-` in names.
    Update the wording of the Release Notes entry
    caRepeater /dev/null
    Add Release Notes entry about dsets
    Fix release headers in Release Notes
    Fine-tune Release Notes formatting
    Update version numbers for 3.15.8-DEV (3.15.7.1-DEV)
    Update version numbers
    
    Also contains some reformatting in README.md
    update release notes
    Fix some Markdown issues in RELEASE_NOTES.md
    Configure linux targets to detect GNU Readline automatically
    Word-wrap release notes to 80 columns
    Release notes describing Record POD changes
    Document use of epicsProve.pl
    
    Also replaced UTF-8 smart-quotes and m-dashes with ASCII/Markdown
    Fix markdown formatting issue
    Convert RELEASE_NOTES from html to .md
    
    Reformat relocations table, escape words with underscores
    inside `back-ticks`.
    renamed RELEASE_NOTES.html -> RELEASE_NOTES.md
    update release notes
    update RELEASE_NOTES
    Define pdevLibVME on non-VME RTEMS targets
    doc
    Update version numbers in documentation to 7.0.2
    More release notes
    
    Forgot to stage...
    update release notes
    Update release notes again, more detail
    Release Note updates
    
    VxWorks minimum version, and more about joinable threads.
    update release notes
    update release notes
    Release Notes
    Added decimation filter, documentation and tests
    Expand Release Note entry for as-hostname changes.
    as-hostname address review comments
    Don't clear caClientCallbackThreadId in CA's exit handler
    Update Base version numbers for next patch release
    Release Notes for commits since 7.0.2.1
    Changes after creating the 7.0.2.1 tag
    Document the macOS -flat_namespace flag change
    update release notes
    Document macOS Mojave fix
    dbStatic: Removed old DCT_ macros and routines
    Fix dbhcr before iocInit
    Update Release Notes version number to 7.0.3
    Reminder to read external submodule release notes too
    Release notes updated
    Link to Launchpad's milestone page for the bug list
    Add release notes for the QueueShow additions
    Documentation updates before 7.0.2-rc1
    Added release notes re handling of event numbers >= NUM_TIME_EVENTS.
    Release Notes for the rtems-test branch
    Update Release Notes
    Correct mbbi/oDirect release note entry
    
    Better wording from Dirk.
    
    Fixes LP: #1777985
    Add RULES_COMMON
    
    This adds new make targets 'PRINT.<var-name>' and 'show-makefiles'
    which are useful for debugging build problems.
    Set version to 3.15.6-DEV, prepare new release notes chapter
    Update version to 3.15.6, remove "not released" from release notes
    mention epicsEnvUnset in RELEASE_NOTES.html
    Release notes about iocLogServer
    Latest Xcode also doesn't like compiling system() for iOS
    Add fix to Release Notes
    Added a simpler startup/EpicsHostArch for backwards-compatibility
    
    Many downstream modules seem to be using the EpicsHostArch script in
    their CI build scripts and would break if we remove that. I created
    a new version that finds and execs the Perl script directly.
    
    Also reworded and expanded the Release Notes about the EpicsHostArch
    scripts.
    Remove macLib warning indicators
    
    Only add ',undefined' tags to macLib output when we aren't
    suppressing warnings, e.g. using msi's -V flag.
    Release notes for PUTF/RPRO update
    recGbl: Prevent record alarm severities > INVALID_ALARM
    msi: Source code reformatting, typo fixes, unify messages
    
    Added lots of debug tracing macros.
    Release notes.
    Fix for lp: #1730727
    
    Post monitors on all array-length record fields (often NORD)
    when their values get changed.
    Documentation updates for 3.14.12.8
    Merged Dirk Zimoch's info_fields branch into 3.16
    
    Used --squash to drop noisy history.
    Modified the dbli output format slightly.
    Release notes for dbTest changes
    Remove EpicsHostArch
    Rename Site.{cshrc,profile} to unix.{csh,sh}
    Add HOWTO: Converting Wiki Record Reference to POD
    Start release notes for tidy-startup branch.
    Document branch recombination
    Update Release Notes with link-updates changes
    Replace > with &gt; in Release Notes code examples
    Updated Release Notes for Base-3.14.12.8
    doc: update release notes
    add release note
    Adjust old INT64 Release Notes entry for db_access users
    update RELEASE_NOTES for named event fix
    Updated RELEASE_NOTES.html with soft event fix.
    Describe recent 3.16-only fixes in Release Notes
    
    Preparing for Base-3.16.2 at some point.
    Update version numbers in documentation to 7.0.1.1
    
    Also recreated README.1st from README.html
    Some wording about the source reorganization
    Merge 'ignore-siml-failure' and document.
    Restore dbVerify() to dbStaticLib
    Clarify release entry wording
    doc: add simulation mode changes to release notes
    Release Notes
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Release Notes entry
    Posix epicsEventWaitWithTimeout() max delay
    
    Limit timeouts on Posix to max-out at 10 years.
    Adds a test that will fail when that time-out hits Y2038 on
    systems where time_t is still a 32-bit integer.
    Final documentation updates
    Add make targets test-results and clean-tests
    
    These are mainly intended for CI builds.
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Add support for a CONFIG_SITE.local file
    Various Release Notes tweaks
    EPICS_CA_AUTO_MAX_ARRAY_BYTES -> EPICS_CA_AUTO_ARRAY_BYTES
    add EPICS_CA_MCAST_TTL
    
    may be necessary/helpful for mcast search/beacon usage
    across sub-nets.
    update RELEASE_NOTES
    update RELEASE_NOTES
    Demonstrate and use numeric literals in calc args
    std/link: all calc example
    Enhancements to subArray record & soft device support
    
    Permit record's use as a look-up-table by reading constant
    input array data in dset::read_sa() routine.
    
    Move sub-array operation into a separate function.
    Extract subarray from constant INP value at device init.
    Reduce the work done inside readLocked() to a minimum.
    Limit NELM value to at most MALM in record init routine.
    Updates to Release Notes and links.html
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    update notes
    Update release notes as per Michael's review comment
    Update release notes with opt-in instructions
    Update release notes, C++ instructions are tested
    Update release notes entry
    use new typed rset only if UNTYPED_RSET is not defined, adapted release notes
    
    Also moved the old definition(s) to a separate header file named oldRecSup.h
    to avoid cluttering the new header file.
    added release notes entry
    Fix HTML entities
    Fix CA server bind issue from Freddie Akeroyd
    Better protection against bad periodic scan rates
    Set version to 3.15.5-DEV, close 3.15.5 chapter in release notes
    Update CONFIG_BASE_VERSION for 3.15.5, remove "not released" from RELEASE_NOTES
    Release note updates
    Merged commit 12741 from Michael's pcas-fake-dynamic branch
    Mention dbRenameRecord() removal in release notes
    dbStatic: only sort records alphabetically if explicitly configured (default: no sorting)
    Add release note info for the epicsTime change
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    GeneralTime updates to improve time provider synchronization
    Start documenting changes
    MS build config updates, suppress warning C4344
    Provide a systemd service file for caRepeater
    
    Also changes how the sysvinit files are generated to use
    the expandVars.pl script and rules instead of sed.
    Set version to 3.15.4-DEV, close 3.15.4 chapter in release notes
    Update CONFIG_BASE_VERSION for 3.15.4, remove "not released" from RELEASE_NOTES
    Convert GUI_ promptgroup strings to new-style
    documentation dir; Added Release note
    New "getenv" device support for string input types
    libCom: NTP Time Provider adjusts to OS tick rate changes
    
    Allow the NTP Time provider (used on VxWorks and RTEMS only)
    to adapt to changes in the OS clock tick rate after the provider
    has been initialized.
    
    Changing the tick rate after iocInit() is not advisable,
    other software might still misbehave if initialized before
    an OS tick rate change.
    
    Back-ported from the 3.15 branch (commit 12468).
    Applied Till's fix for lp:1581212
    Added CROSS_COMPILER_RUNTEST_ARCHS
    Add additional RELEASE file checks
    
    These checks are important for mixing Debian modules with
    privately-built applications.
    Add rule to install libraries before linking executables
    
    The rule must be disabled for building libCom and gdd though.
    Update release notes
    Release notes for lp:1563191
    Release Notes
    Clean-up after lp:1558206 fix
    Updated Changelog
    The usual post-tag updates
    Reformat Release Notes slightly
    Clean up build rules, remove CapFast & dbst support
    edit RELEASE_NOTES.html
    Clean up Release Notes merge
    Fix for RTEMS NTP sync issue
    Fix Release Notes for last commit
    Changes from patch in lp:1539791
    update release notes
    update release notes
    dbQuietMacroWarnings control
    update release notes
    update release notes
    update release notes
    update release notes
    Set version back to -DEV, add "not released" to RELEASE_NOTES
    Update CONFIG_BASE_VERSION for 3.15.3, remove "not released" from RELEASE_NOTES
    Make the NTPTime provider optional on VxWorks
    release note for new locking
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    libCom: Make readline support clean up on epicsExit()
    libCom: epicsReadline refactoring
    Removed the last vestiges of RSET::get_value()
    Show how to make time providers backwards-compatible
    Update version numbers in documentation for 3.15.3
    documentation: put back red "not released yet" header to RELEASE_NOTES
    documentation: remove red "not released yet" header from RELEASE_NOTES
    dbstatic: raise link field length limit to 256 by bumping internal buffer size
    Trivial spacing changes in RELEASE_NOTES
    Release notes for ao-convert changes
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    Support MinGW cross-builds on linux-x86 and x86_64
    Applied rtems-build-gesys-loadable-objects.patch
    Release notes for CMD_ variables
    Back-ported dbLoadRecordsHook from the 3.15 branch
    Extended asTrapWrite to provide put data
    
    Backwards-compatible enhancement to the asTrapWrite API to provide
    listener routines with the data being put by the client.
    The asTrapWriteMessage structure is extended with 3 new fields
    for data type, element count and a pointer to the source buffer.
    
    Tim Mooney requested this enhancement for his caPutRecorder code,
    which doesn't work if the record overwrites the new value within
    its process() routine, e.g. when jogging a motor record.
    Back-ported the tapfiles build target from 3.15
    
    This is the version that works on Windows.
    Deprecate and remove all uses of PATH_FILTER
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    Tweak to callback API.
    Set version numbers for 3.16.0.0-DEV
    Set version snapshot back to -DEV
    R3.15.1
    Fix epicsStrnEscapedFromRaw() and epicsStrnRawFromEscaped()
    
    Major rewrites; the original epicsStrnRawFromEscaped() could read
    beyond the end of the input buffer if the input count ended in the
    middle of an octal or hex escape sequence. Zero termination did not
    always match the return count, and hex escapes were always 2 digits,
    contrary to the C standard.
    
    New versions don't use epicsSnprintf() or sscanf() for hex and octal
    conversions, so should be slightly faster.
    
    Added 81 new tests to check the above issues.
    Update version numbers for 3.15.1-rc1
    Make shared library version numbers use 3 components
    Fix buffer overflow in epicsStrnRawFromEscaped
    
    lp:1388313
    dbStatic: Added hook routine for dbLoadRecords()
    
    Requested by Tim Mooney for use by Autosave.
    See the Release Notes for documentation.
    
    This commit also corrects the decorations for recGblAlarmHook.
    Add relPaths.sh target to convertRelease.pl
    
    This is a /bin/sh syntax version of the dllPath.bat file,
    needed to run IOCs under Cygwin when SHARED_LIBRARIES=YES.
    Various fixes
    
    * VxWorks 5.5.2 doesn't like C++-style variable declarations in C code
    * Older MS compiler doesn't have strto[u]ll
    * Wrote release note entry for iocshLoad command.
    documentation: add parallel callback threads to RELEASE_NOTES
    Reject NULL callback functions in ca_array_*_callback
    
    Fixes lp:1369626
    Updated concatenated database definition files
    libCom/posix: Drop SCHED_FIFO before exec() in child process
    
    osiSpawnDetachedProcess() switches to SCHED_OTHER after fork() so
    the new program will not be real-time unless is requests it itself.
    Only happens when USE_POSIX_THREAD_PRIORITY_SCHEDULING = YES
    Added concatenated database definition files
    add release note
    Add epicsScanLLong and epicsScanULLong macros and tests.
    Document the 64-bit integer types and support routines.
    Added documentation for memlock_all to the release notes
    Document changes.
    Release Notes for loading support.
    
    To Do:
     * Test that -l the flag to registerRecordDeviceDriver.pl works
       as expected on Windows.
     * Modify example template, or create a new template.
     * Work out if/how this affects VxWorks, can we generate a munch
       file that works the same way as a shared library?
     * Test on all arch's, especially Darwin & Windows.
    Final spinlock tidying-up
    
    * Abort epicsSpinTest() if epicsSpinCreate() returns NULL
    * Adjust RELEASE_NOTES that describe the implementations.
    release notes
    Allow appended .db files to omit record type
    
    This .db file syntax is now legal, provided the
    named record already exists:
    
      record("*", "named") {
        field(VAL, 10)
      }
    Document briefly.
    Fix some HTML character escapes.
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    configure: Fix for Ben's INC_osclass issue
    
    Janet developed the fix, I documented it.
    cap5: Added CA->version function
    
    Documented.
    docs: Update Release Notes.
    Document changes.
    libCom: Added echo command to iocsh
    libCom: Added macro EPICS_UNUSED to compilerDependencies.h
    
    Stop unnecessary warnings.
    Allow user specified db substitution file suffix.
    libCom: NTP Time Provider adjusts to OS tick rate changes
    
    Allow the NTP Time provider (used on VxWorks and RTEMS only)
    to adapt to changes in the OS clock tick rate after the provider
    has been initialized.
    
    Changing the tick rate after iocInit() is not advisable,
    other software might still misbehave if initialized before
    an OS tick rate change.
    doc: Add newEpicsMutex to Release Notes.
    doc: Prepare release notes for 3.14.12.5
    
    In case there ever is one.
    Changed EPICS to Release 3.14.12.4
    libCom/test: Added epicsEnvTest.c
    
    VxWorks 6.x can make environment variables private to each
    thread, which doesn't work too well.
    A test failure on VxWorks explains how to change the image
    configuration to fix this.
    configure: Refined how/when we pull in <top>/cfg files
    
    Only read CONFIG* and RULES* files,
    and only do so in build dirs, i.e. when T_A is defined.
    docs: Release note update.
    
    Credit Peter Heesterman with windows build updates.
    Fixed iocsh stream redirection for several commands
    
    Eric provided the fixes to iocsh (empty commands would not reset
    redirected streams), I fixed various commands.
    dbStatic: Fixed crash loading record of unknown type
    
    Fixed segfault when dbLoadRecords tried to load a record of a
    type that was not defined in its DBD files.
    docs: iPhone Simulator builds broken by Xcode 5
    
    From Mark Engbretson, no known solution yet.
    Creating 3.14.12.4-rc1
    libCom: Recognize hex literals in epicsStrtod()
    
    Allows Windows and VxWorks to accept hex integers as a double.
    update release notes
    update release notes
    Creating 3.14.12.4-pre1
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    db: Fixed bogus dbScan overrun warnings
    
    Penalizing the 0.1 second scan thread by 0.1 seconds
    guarantees another overrun in most cases...
    Warning message improved.
    
    Also added a release note for Jeff's CAS commit.
    configure: Support Apple Xcode 5.0 and iOS 7.0
    
    Not tested on the 64-bit ARMv8 architecture, although it should be
    compatible (confirmation would be welcome).
    docs: Release Notes update
    
    ... for several recent commits.
    libCom: Replaced errlogRemoveListener()
    
    New version errlogRemoveListeners() is safer.
    Release notes for previous commit.
    libCom: Back-ported aToIPAddr fix from 3.15 branch.
    
    Cherry-picked 3.15 revno 12398 with some changes.
    libCom: Added osi/os/WIN32/osdFindSymbol.c
    
    Implemented by Dirk Zimoch.
    dbStatic: More commands accept "" or "*" to mean 'all'
    
    dbDumpRecordType, dbDumpMenu and dbDumpRecord commands improved.
    libCom: Fix sysAtReboot registration on vxWorks 6.8+
    
    Removed C++ static constructor, do it from epicsThreadInit()
    configure: Set IOCS_APPL_TOP from INSTALL_LOCATION
    
    Fixes lp:1165257
    Move db_post_events(waveform, NORD) into recordType.
    
    Dirk pointed out that existing device support authors aren't
    going to add this themselves; it's much better if the record
    does it all for itself.
    Added new 'tapfiles' build target.
    
    There's a plugin for Jenkins which should be able to read the .tap
    output files and generate pretty test status pages from them.
    I haven't actually tried using it yet though...
    update release notes
    libCom/osi: Resolve bcopyLongs() conflict on vxWorks 6.9
    dbStatic: Allow empty DB & DBD files
    
    They used to cause a Syntax error with a bad context string.
    libCom: Add a High-Resolution Time Provider on MacOS
    
    Since Apple don't support clock_gettime(CLOCK_REALTIME) I added a
    new time provider that uses the Mach kernel Clock service to get
    nanosecond resolution time.
    Fix drift in periodic scan times.
    
    Method from Eric Norum, with warnings added by me.
    
    Fixes lp:597054
    libCom: aToIPAddr() finds numeric hostnames
    
    Hostnames that begin with one or more digits were not being looked up
    by name, causing problems at BNL.
    This commit also changes the vxWorks implementation of hostToIPAddr()
    to use inet_aton() instead of inet_addr().
    Creating R3.14.12.3
    Document another Launchpad bug fix from Jeff
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Releas notes for UDFS.
    Release Notes update
    
    Mark Rivers asked for documentation on the new
    workstation OS stack sizes.
    Update release notes.
    Creating 3.14.12.3-pre1
    Update release notes.
    libCom: Added errlogSetConsole() functionality.
    rec/aSub: Add cleanup subroutine
    rec: Fix problem with NAN in MLST/ALST fields
    
    If MLST or ALST became NAN the associated monitor would never trigger.
    Now a NAN will cause it to always trigger.
    Document the CLEANS variable
    
    Also shows how to be backwards-compatible with the 3.14 build
    system.
    std/rec: Enhance sequence record just like fanout
    
    Add link groups 0 and B through F, plus the OFFS and SHFT fields to
    provide backwards compatibility.
    Extended the fanout record to 16 links
    
    Added SHFT and OFFS fields for backwards compatibility.
    See Release Notes for detailed description.
    Document addition of MSI to Base.
    Change build defaults for darwin-x86
    
    * Use clang and clang++
    * Build for x86_64 only
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    Edit README files, set version numbers.
    Release notes about win32-x86-mingw cross-builds
    
    Also a bit more cleanup of build rules.
    Fixed typo
    Release notes update.
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    release note for dbTestHarness
    documentation: Fix typo in html tag in RELEASE_NOTES
    documentation: Updated RELEASE_NOTES
    documentation: Add epicsThreadHooks info to RELEASE NOTES
    Fix dbScan bug, add scan period units and checking.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Documentation on alarm filtering (AFTC field)
    rec: Fix timestamps from calcout and seq records
    
    Update record timestamp before calling db_post_events()
    libCom: Deleted the 3.13 tsDefs API.
    Post events on waveform.NORD field changes
    
    Set "Rec Proc Monitor" column in the Record Reference Manual to Yes.
    libCom: Increase stack sizes for Windows and Posix
    
    Windows stack sizes were the same as vxWorks - tiny.
    The stack sizes are now multiples of sizeof(void*).
    On 32-bit systems they give 256KB, 512KB and 1MB;
    64-bit systems get twice those numbers.
    
    Fixes lp:903448
    Replace fixed limits with global variables
    
    Replaced Dirk's fixed precision=2 and limit=10 seconds with
    global variables which can be set for each IOC.  Also changed
    the upper control limit for delay fields from 10 to 100,000.
    db: Allow single-char accesses as long strings
    
    Clients try to use long string support to fetch DBF_STRING
    fields use DBF_CTRL_CHAR with a 1-element array, but the IOC
    was rejecting that.  This permits it, and also ensures that
    the resulting strings are zero-terminated.
    
    Fixes lp:907761
    Creating 3.14.12.2
    cap5: Load libCap5.so from lib/perl/<perl-version>/<perl-archname>
    
    This allows the same version of Base to be used from both RHEL5 and RHEL6
    for example; they use different Perl versions which are not compatible at
    the ABI level.
    configure: Update Apple iOS builds
    
    * Default IOS_VERSION to 5.0
    * Allow ARMv6 and ARMv7 universal binaries by setting ARCH_CLASS
    * Switch from g++ to clang++
    Creating 3.14.12.2-rc1
    
    Set version number, update release notes.
    dbStatic: Added -b option to dbExpand
    
    -b turns off monotonic checking of breakpoint tables.
    Parallel build rule fixes
    Creating 3.14.12.2-pre1
    
    Set version number, update release notes.
    catools: Fix array handling in caget and camonitor.
    
    Fixes lp:794749
    libCom: epicsVersion.h changes
    
    Make version numbers easier to compare.
    Added iocLogPrefix to the release notes
    dev: Added devHistogramSoft to devSoft.dbd
    libCom: Avoid race in errlog shutdown.
    
    A rare race during shutdown.  The contenders are the log thread
    coming out of its loop and calling errlogCleanup(), and the
    exitHandler signaling waitForWork.
    
    This solution is to move cleanup completely into exitHandler,
    which already waits for the log thread to exit.
    Document recent commits.
    libCom/iocsh: Set IOCSH_STARTUP_SCRIPT env var.
    RTEMS: Changes suggested by Kate Feng
    
    * Added macros for configuring MBUF and CLUSTER space allocation
    * More MBUF and CLUSTER space on mvme3100, mvme5500 and beatnik
    * MVME5500: link with bspExt, use .elf extension like other BSPs
    Document 3.14.12.1 changes.
    Updated release notes.
    libCom: Fixed epicsEvent issues on Win32 and cygwin.
    
    * Removed all epicsShareAPI decorations
    * Return value from Win32 epicsEventTrigger() inverted
    * Return OK from posix epicsEventTrigger() omitted.
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    Removing old 3.14 and 3.13 notes.
    docs: Added a couple more LP bug fixes to the Release Notes.
    docs: Update notes and comments about readline settings.
    documentation: Fixed typos and enhanced Release Notes a little.
    documentation: Added links to the bugs marked Fix Committed in LP.
    documentation: Paragraphs on epicsEvent and Cygwin support.
    subArray: Bugfix, allow array puts to VAL
    
    Fixed a bug reported by Michael Abbott, NORD goes -ve.
    Modified soft channel support so when INP="" it extracts the relevent
    sub-array of the existing VAL field; use an external put to set the
    array. This lets the other records pull a series of values from the
    record in sequence.
    documentation: Various updates...
    
    Removed the Converting... files for older releases
    No known problems yet.
    Updated README.html and regenerated README.1st from it.
    Added windows-x64 target to the Release notes.
    Delete osf-alpha target (and host) support, no longer working or needed at KEK.
    Added release notes for the capr.pl script.
    Updated release notes for calc-size changes.
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Tweaked the release notes to describe which areas were not changed.
    Document the dynamic-array changes.
    Release notes for the CA-over-TCP branch.
    Add RTEMS R4.10 support
    Reformatted release note entry.
    Store original INP/OUT text in link in case DTYP changes later.
    release notes updated
    release notes updated
    release notes updated
    [PATCH 12/12] add entry to release notes
    MANY updates to RELEASE_NOTES.
    
    In the future I will ask people to include changes to the Release docs in any
    branch they propose for merging.
    Added catools change to release notes
    Close h4 tag.
    Missed an -RC1.
    Removed ellFree() comment, we reverted the API.
    R3.14.11
    ellFree() and Win32 time provider.
    RC1
    Added Mantis 361.
    Janet's Build Dependency note.
    Corrected Mantis bug number.
    added additional R3.14.11 ca fixes
    Move Jeff's notes to the top.
    added bullet under mantis 329 for R3.14.11
    added CA, PCA, and some libCom fixes for R3.14.11
    Application configure files.
    gpHash argument change.
    STATIC_ASSERT().
    Update dbDefs.h changes.
    errSymFind() removal.
    Perl CA and dbDefs.h
    Added PINI values RUNNING and PAUSED.
    ENUM string field sizes.
    SIGALARM stuff.
    Darwin universal binary config stuff.
    VMS, SGI too.
    Updated for R3.14.11.
    Deleted HPUX support files.
    initHooks, PINI and PHAS items.
    A little light editing.
    Applied Bernd's devAiSoft SMOO patch.
    Added support for new MSI and MSS link flags
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Added epicsNAN and epicsINF to libCom/osi
    New DBE_PROPERTY event type and support in catools and mbbi/mbbo records
    PINI Processing support for PHAS.
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Document long string support in caget/put/monitor tools.
    Removed non-ASCII characters.
    Block attempts to put more bytes than will fit.
    Fix up RTEMS notes.
    Long string support.
    Add note about Darwin environ.
    Document new epicsString Hash functions.
    Support for dynamic loading.
    cap5 fix.
    Enhance generalTime subsystem with interrupt-context time & event requests.
    RTEMS updates.
    Added dbGetNAliases().
    Record aliases.
    Added support for MVME2700 (and perhaps MVME2400) as supplied by Matt Rippa.
    Added -p option to commandline tools to specify CA priority.
    Linux: Switch to libncurses.
    Changed release to R3.14.10.
    Reformatting, wording improvements.
    Add note about RTEMS version.
    Add note about RTEMS epicsEventWaitWithTimeout.
    Updated version number in title.
    Fix some typos.
    Fix race condition exposed by compilers with more agressive optimization.
    Add test procedure for epicsRingBytes.
    A proper fix for the xsubpp problems on Perl 5.8.0.
    -RC1 release.
    Document new camonitor timestamp options.
    Added errlog to the stringout stdio device support.
    Release notes updated.
    Version number; removed extraneous <li> tag.
    General Time.
    Change RTEMS notes.  Timing changes are now supercedewd by general time changes.Mention removal of RTEMS -ansi flag.
    Added scanonce() note.
    Added creation of ioc/dllPath.bat for Win32 IOCs.
    Added item about epicsEndian.h.
    Added the aSub record type, derived from Andy Foster's genSub.
    epicsTimeEventDeviceTime, devLib.
    Described ascarStats, dbcarStats and seqcarStats for Mantis #281.
    Fix placement.
    The ipToAsciiProxy thread calls upon vendor libraries which may use significant amounts of stack.  Account for this by providing the thread with an epicsThreadStackBig stack.
    Redundancy + errlog.
    64-bit etc.
    Addec cap5.
    iocInit() installs a signal handler that ignores SIGHUP
    Varargs functions in CALC.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    Added note about access security configuration file creation.
    subArray error stuff.
    Clarified parallel make wording.
    Added blurb about new linux-cris architectures.
    Added note about new compile line header search directories.
    Changes for GNU make -j option (multiple jobs).
    PPCBUG notes.
    Add NTP capability (to match vxWorks).
    Stuff about dbBptNotMonotonic.
    Add RTEMS notes.
    Mantis #295 fix.
    VAL keyword to calc.
    SoftIoc shell.
    dbLoadRecords.
    Ok, so Eric was right to begin with...
    iocsh move, and corrected the RTEMS TZ note.
    Add TZ note.
    Cygwin make issue.
    OSF-Alpha.
    vxWorks optimization.
    Changed headings to show previous and new release numbers.
    New architectures listed.
    Added CAS, fixed some other wording and HTML encoding.
    Updated runtests wording again.
    Fixed dbLoadTemplates comments.
    Oops.
    dbLoadTemplate.
    Escaped characters.
    Revised old message about thread stack sizes.
    libCom/test, Breakpoints, vxWorks 6, postFix/calcPerform, calc/calcout/asLib,
    recGblAlarmHook, raw simulation mode.
    dbpr.TIME field.
    Add RTEMS initialization hooks.
    Clean up OS X universal binary notes.
    Add RTEMS change.
    munch.pl for MIPS.
    epicsUnitTest support and -include in configure/RELEASE files.
    Fixed off-by-one error in dbFindField().
    Typo.
    Add note about RTEMS user extensions.
    e_flex DOS line endings.
    Universal devLib stuff.
    Add epicsThreadResume to IOCSH.
    [cm]allocMustSucceed() now accept values of 0 for their size and count arguments and can return a NULL in these cases.
    Add note about OS X changes.
    epicsStrtod fix.
    Notes about the version number changes.
    R3.14.8.1 changes.
    Moved Marty's latest comments into a "Changes since R3.14.8" section.
    Cleaned up some &nbsp; entities that appeared lower down.
    changes for libCom/misc
    Removed release date, less work to do at the last minute...
    fixed spelling
    updated for R3.14.8
    make tags match
    added notes for Mantis bug fixes for 225,184
    Version number and release date set.
    Added new host targets info.
    Extended Device Support interface.
    add  more detail about POSIX thread priorities
    Added note about POSIX thread priority scheduling.
    Fixed various formatting issues.
    Added stuff on macLib default macro values.
    Add RTEMS notes.
    Add rtems shutdown notes.
    VX_DIR definition now in os/CONFIG_SITE.Common.vxWorksCommon
    RTEMS_BASE (and RTEMS_VERSION) now in os/CONFIG_SITE.Common.RTEMS
    apsEvent support removed from base
    Select record changes.
    Described the new dbRecordsOnceOnly variable, originally requested by the BCDA
    group.
    changes for 3.14.8
    RTEMS changes.
    RTEMS changes.
    RTEMS changes.
    Readline is part of Mac OS X now, so use it.
    Tiger notes.
    epicsExport.h changes.
    More RTEMS changes.
    Add some RTEMS notes.
    Work around problem with iocsh redirection from within vxWorks scripts.
    Updated date.
    more changes to dbNotify
    putNotifyInit and putNotifyCleanup
    Document record changes for NaN handling.
    += CA command line tools: -s option
    epicsScanFloat, epicsScanDouble.
    Add os-independent epicsStrtod() routine.
    Globbing.
    set stack size og posix
    RTEMS bootable images.
    Added iocBoot/ioc* build change.
    MVME2100.
    dbNotifyCancel waits for userCallback if active
    changes for commits
    changes for epicsExit and epicsStdio
    Add note about signals and subthreads.
    Block signals in all but the main thread.
    errlog: implement atexit
    IOC shell changes.
    calcoutRecord fix
    Fixed path to ConvertingR3.14.1AppsToR3.14.2.html so future website copies
    don't have to be changed on installation.
    Data Base Request Option DBR_ENUM_STRS for the DTYP field ofsoft records can cause an IOC to crash.
    R3.14.6 Release.
    += catools
    Updates for makeBaseApp changes.
    updated for R3.14.6
    updated for R3.14.6
    Added EPICS_HOST_ARCH win32-x86-cygwin renamed to cygwin-x86.
    Add epicsSnStrPrintEscaped
    Spectrum Record was removed.
    EPICS_TS_NTP_INET fix.
    Added a note about the bldEnvData.pl script fix.
    changes to db test shell commands
    as dump commands have an FP version
    Add epicsRegisterFunction.
    Note about dbd rule to create xxxInclude.dbd from xxx_DBD files.
    Added noes about solaris 6 defs removal and new targets cvsclean archclean.
    epicsExport now generates p_var_typ_obj
    Installed spectrum record
    access security changes
    updated to include late breaking bug
    Set release date.
    added ca changes for R3.14.5
    change wording
    Added info about COMPAT_TOOLS_313.
    Changed COMPAT313 to COMPAT_313.
    Updated the R3.13 compatability notes.
    Add dbtr note.
    Added APS Virtual LINAC Templates.
    Added not about building R3.13 extensions.
    Added New build targets.
    Add epicsStrnCaseCmp().
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Add timestamp stringing support.
    more changes for dbCaPutCallback
    Add system command notes.
    add epicsStrPrintEscaped.
    changes for dbCaPutCallback and others
    fixedsearch interval computation
    fixed channel not destroyed if client disconnects during asynchronous
    enum string table fetch
    Updated for R3.14.4.
    Add format string checking.
    added two bug fix descriptions
    added two bug fix descriptions
    Added note about vxWorks ledLib.
    3.14.2 => 3.14.3
    Added Release Approval line to checklist.
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    doc for rh 7.3 process rundown bug
    TPRO output
    fixed redundant logFdAdd deadlock message
    more bug changes
    more changes for 3.14.3
    set close-on-exec flag
    added wrapper around tmpfile so that we can have a windows specific
    implementation
    Documented env macros stuff better.
    removed logFdAdd from logClient
    Added double support to variable keywords.
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    Documented the dbExpand -o option.
    Added dbd variable keyword.
    Reorganized the later parts of the file, which were not well-structured HTML
    and which were causing problems with different versions of Amaya.
    var, maclib, etc.
    Add iocshArgPersistentString type.
    Add epicsStrDup().
    added notes on fixes to the ASCII error logging system
    API change to epicsMessageQueue.
    change date; add macLib bug
    updated for R3.14.2
    Highlight 'function' keyword.
    Change 'write nNew elements into array' note from a comment which could
    be confused with a true C comment describing the operation of the next
    line of the example.
    add info about epicsMessageQueue
    more changes for 3.14.2
    RELEASE_NOTES.html
    changed date
    more notes for 3.14.1
    more notes for 3.14.1
    more notes for R3.14.1
    changes for 3.14.1
    Updates for R3.14.0beta2.
    remove *Recdes* and *Flddes*
    correct some notes
    Moved from $(TOP)
    some notes for beta2
    for old device support that doesnt know about eoff
    latest additions
    documant some additional changes
    initialProcess is now called before interruptAccept
    cdCommands problem fixed by ANJ
    changes for next release
    Fix notes about RTEMS TFTP chdir restrictions.
    latest changes for 3.14.0beta1
    mkre changes for beta1
    compiler restrictions
    changes for 3.14.0alpha2
    Backing out accidental commit.
    Updated for alpha2.
    latest
    for 3.14.0alpha1
    for iocCore port
    move to proper date in file if iocLogServer opens old log
    added more notes
    Changes for release 3.13.1
    documented my changes to R313B12
    URLs referenved wrong document
    More late changes
    changes for old applications
    More changes for beta12
    more updates for changes since beta11
    Getting ready for next release
    For 3.13.0.beta11
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Rewrite startup/win32.bat
    
    Remove extraneous things unrelated to EPICS Base.
    
    Make it behave consistently with the other startup scripts.
    
    Make it easy to configure both for a human and a program.
    startup: Update win*.bat files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    startup dir
    Updates for latest releases of  os, Visual Studio,  ...
    Updated for latest releases of  os, Visual Studio,  ...
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    SDK added to environment variables is done by vcvars32.bat.
    Modified comments.
    More comment changes.
    Updated versions, comments, ...
    Removed actual IP numbers inside bat files.
    Commented out PERLLIB definition.
    Updated cvsroot information.
    Chnaged java directory name in path.
    MOved base/bin and extensions/bin to requirements (needed for dlls).
    Moved epics path macros to optional section. Added HOST_ARCH definition.
    Updated license comments.
    Updated vim and remote cvs definitions.
    Updates for R3.14.0beta2.
    Updated vim and java lines.
    Added vim environment variables.
    Updates for R3.14.0beta1.
    Adding files from epics/startup.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    startup: Fix EHA argument quoting per J. Lewis Muir
    Make startup/EpicsHostArch script executable
    Make EpicsHostArch compatible with sh
    Added a simpler startup/EpicsHostArch for backwards-compatibility
    
    Many downstream modules seem to be using the EpicsHostArch script in
    their CI build scripts and would break if we remove that. I created
    a new version that finds and execs the Perl script directly.
    
    Also reworded and expanded the Release Notes about the EpicsHostArch
    scripts.
    Remove EpicsHostArch
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add support for native linux-arm builds.
    startup: Fix host arch for 64-bit darwin kernels
    
    "uname -m" returns x86_86 on those machines, which we weren't expecting.
    Delete osf-alpha target (and host) support, no longer working or needed at KEK.
    Cygwin correction.
    Changes for osf-alpha from Kazuro Furukawa.
    Add Intel support for OS X.
    Added code for linux-x86_64.
    Added code for cygwin.
    Updated license comments.
    Added support for Mac OS X (Darwin).
    Updated comment.
    Added optional alternate compiler command line parm.
    Added 686 CPU type.
    Adding files from epics/startup.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove trailing space in license of startup/unix.*
    Rewrite startup/unix.sh
    
    Remove extraneous things unrelated to EPICS Base.
    
    Make it behave consistently with the other startup scripts.
    
    Make it easy to configure both for a human and a program.
    Remove execute file mode bit
    Rename Site.{cshrc,profile} to unix.{csh,sh}
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    Added BROWSER environment variable for medm extension.
    Don't set EPICS_BASE (breaks base builds). Changed HostArch.pl to HostArch.
    Numerous changes to reflect shared library and other 3.14 changes.
    Updated license comments.
    Updates for R3.14.0beta2.
    Updates for R3.14.0beta1.
    Adding files from epics/startup.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Rewrite startup/windows.bat
    
    Remove extraneous things unrelated to EPICS Base.
    
    Make it behave consistently with the other startup scripts.
    
    Make it easy to configure both for a human and a program.
    Remove execute file mode bit
    startup: Update win*.bat files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove trailing space in license of startup/unix.*
    Rewrite startup/unix.csh
    
    Remove extraneous things unrelated to EPICS Base.
    
    Make it behave consistently with the other startup scripts.
    
    Make it easy to configure both for a human and a program.
    Remove execute file mode bit
    Rename Site.{cshrc,profile} to unix.{csh,sh}
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    Added BROWSER environment variable for medm extension.
    See if this changes the mode properly.
    Numerous changes to reflect shared library and other 3.14 changes.
    Updated license comments.
    Updates for R3.14.0beta2.
    Updates for R3.14.0beta1.
    Added R3.14 definitions.
    Adding files from epics/startup.
    Remove two long-unused environment parameters
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add EPICS_IOC_IGNORE_SERVERS environment variable
    
    dbServers cannot be registered when their names appear in this
    variable, so they should remain inactive. This feature is mainly
    intended for debugging, so the crude name search should be OK.
    EPICS_CA_AUTO_MAX_ARRAY_BYTES -> EPICS_CA_AUTO_ARRAY_BYTES
    add EPICS_CA_MCAST_TTL
    
    may be necessary/helpful for mcast search/beacon usage
    across sub-nets.
    replace caLimitArray with EPICS_CA_AUTO_MAX_ARRAY_BYTES
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    Added two new envParams and converted iocsh to use these instead of getenv()
    added EPICS_CAS_IGNORE_ADDR_LIST
    updated to support independent configuration of certain server parameters
    Updated license comments.
    fixed comment
    added new env var
    Comment changes.
    fixed doc nit
    doc upgrade
    new for 3.14; replaces config
    added addl comments
    more comments
    removed junk
    added log server param
    merged Kay's perl proto branch
    added new CAS env var
    Initial version after move of config directory.
    Add RULES_COMMON
    
    This adds new make targets 'PRINT.<var-name>' and 'show-makefiles'
    which are useful for debugging build problems.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add make targets test-results and clean-tests
    
    These are mainly intended for CI builds.
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Removed Revision-Id from configure; still one Date
    configure: Cosmetic changes only, comments & spacing.
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    Back-ported the tapfiles build target from 3.15
    
    This is the version that works on Windows.
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    configure: Added 'host' make target.
    
    Builds only the current host architecture, so this is
    equivalent to the target install.$EPISC_HOST_ARCH
    Added new 'tapfiles' build target.
    
    There's a plugin for Jenkins which should be able to read the .tap
    output files and generate pretty test status pages from them.
    I haven't actually tried using it yet though...
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    configure: Fix parallel make rules.
    Make cross builds depend on host build only if -j option and make > 3.81
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changes to allow rebuild to work with parallel builds option, -j.
    Moved checkRelease target rules into RULES_BUILD,
    use CONFIG_TARGETS to only run in TOP/configure.
    Changed GNU make release number in comment lines
    Commented test for j option in MAKEFLAGS. Test NOT working in make 3.81.
    Added make -j option ifeq before creating arch dependancies on host_arch.
    Removed rebuild from ACTIONS, rebuild depends on clean install.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    Moved configure/tools perl tools to src/tools directory.
    Moved break in line to get darwin-ppc to build.
    Changes for GNU make -j option (multiple jobs).
    Allow rebuild.<arch> on make command line.
    Made runtests a more generic target.
    Ensure it doesn't fail if no tests are defined.
    Changed test to runtests.
    Added the test rule for the perl Test::Harness expect test programs.
    Added WARN setting for CHECK_RELEASE.
    Added new arch clean which only removes O.<arch> dirs not O.Common.
    Expanded the RELEASE consistency checking, now all target architecture
    RELEASE.* files are checked, so you can't fool the system.
    Removed rebuild from ACTIONS definition.
    Bug fix for definition cleanArchTargets.
    Allow rebuild.<arch> .
    Cleanup of rules.
    Updated license comments.
    Added realclean rule.
    Fixed -t option to convertRelease.pl so application settings of
    IOCS_APPL_TOP work properly.
    
    NB: All cdCommands paths will potentially be modified, based on the
    difference between the left-hand part of the host's path to TOP and
    the setting of IOCS_APPL_TOP.
    Tidying up convertRelease.pl stuff.
    Switch to using convertRelease.pl script, run a consistency check in
    application <top>/configure directories.
    Changes to automatically generate header dependancy files.
    Added O.Common dir to dependancies of BUILD_ARCHS rule.
    Explicit clean.<arch> does not remove O.Common
    O.Common changes
    Removed rebuild action. Rebuild is a target.
    Removed unneeded astrisk from clean rules.
    Moved code from RULES to RULES_ARCHS.
    new way to build
    new way to build
    Changed rules to single colon rules.
    changed :: rule to : rule when my version of gnu make stopped
    during the build
    More config file changes for R3.14.
    changes for 3.14
    new for 3.14; replaces config
    Add WIN95/NT source browser code.
    Initial version of jeva rules and definitions.
    Config changes for extensions and config simplification.
    Changed INSTALL_BIN to EPICS_BASE_HOST_BIN
    fixed install outside base
    Nicks rule breaks apps and extensions.
    Changes recommended by Nick Rees.
    merged Kay's perl proto branch
    faster clean
    .PHONY is :: rule
    o do the "inc" traget at the RULES_DIRS level for all arc targets
    and the install target
    o eliminated redundant "inc" build by creating buildInstall target
    Modified defs for hostArchs and crossArchs.
    added rebuild target at lower levels
    CVS:Now allows archname in targets.
    --------------------i--------------------------------------------------
    fixed O.xxx/Makefile
    use pattern rule
    eliminated for loops and redun recursion
    Initial version after move of config directory.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fixed file permissions.
    Deleted hpux, no longer supported
    Changed SCRIPT to SCRIPTS in comment.
    Changed LIBSRCS to LIB_SRCS.
    Updated comments.
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to automatically generate header dependancy files.
    Updated comments
    Some updates for R3.14.
    Modified comments about platform specific objects
    Upated comments.
    Updated include line.
    new way to build
    More config file changes for R3.14.
    Some 3.14 updates.
    new for 3.14; replaces config
    Changes for beta12.
    Second installment of shared library changes.
    Config changes for extensions and config simplification.
    removed := from example
    rolled back to ms vis C++ 4.0
    installed
    Unify header comments in configure/RULES files
    Move all under modules/database
    Remove spurious files from configure
    Remove spurious files from configure
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Allow ARCH with trailing spaces
    Remove ARCH from cdCommands and envPaths files
    
    Set it in iocshRegisterCommon() instead.
    Remove ARCH from iocBoot/ioc/Makefile@Common templates.
    Add relPaths.sh target to convertRelease.pl
    
    This is a /bin/sh syntax version of the dllPath.bat file,
    needed to run IOCs under Cygwin when SHARED_LIBRARIES=YES.
    IOCS_APPL_TOP must be absolute path
    
    Fix a recently introduced problem where cdCommands and envParams
    had TOP as a relative path (which actually worked by chance).
    Also fixed a problem with convertRelease hanging when the -t
    argument matched the absolute path to TOP.
    configure: Set IOCS_APPL_TOP from INSTALL_LOCATION
    
    Fixes lp:1165257
    Fix for build of iocBoot/ioc* directories.
    Made realclean a double colon rule.
    Added action.arch rules.
    Allow  "make <t_a>" builds.
    Added creation of ioc/dllPath.bat for Win32 IOCs.
    Create cdCommands and envPaths files only for BUILD_ARCH dirs.
    Changed $(TOP)/bin to $(INSTALL_BIN)
    Added the realclean target
    removd command echo suppression to match other clean rules
    Added envPaths to clean rule (Mark Rivers)
    Added envPaths functionality, and using these variables in st.cmd files
    Undone Marty's incorrect change to convertRelease.pl
    (removed 3.13.1 compatibility line completely)
    Added dependency for cdCommands so it gets rebuilt if $(TOP)/bin changes
    i.e. possibly when $(TOP)/bin/$(T_A) is created.
    Updated license comments.
    Added RM of target to some rules.
    Changed include file specification.
    Fixed -t option to convertRelease.pl so application settings of
    IOCS_APPL_TOP work properly.
    
    NB: All cdCommands paths will potentially be modified, based on the
    difference between the left-hand part of the host's path to TOP and
    the setting of IOCS_APPL_TOP.
    Changed how we decide whether or not to build cdCommands.
    Switch to using convertRelease.pl script, run a consistency check in
    application <top>/configure directories.
    simplify e_flex/antelope path compute
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/libcom
    Export tool configurations as cfg/CONFIG_* files
    Add support for linux-aarch64 native builds
    Document ARM architecture adjustments
    makeRPath allow multiple root directories
    
    Allows handling of complex situations like a package
    build where some libraries are in a staging area,
    but will be copied to the same final location.
    
    eg.
    
    LINKER_ORIGIN_ROOT=/usr/lib/epics:/build/mymodule
    
    Where build TOP is /build/mymodule
    rpath $ORIGIN doc
    LINKER_USE_RPATH=ORIGIN
    
    Use Linux specific linker trick to allow relocation
    of built tree.
    
    relative rpath
    
    use $ORIGIN to reference libraries in other modules
    by relative path.
    
    fix rel. RPATH
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Add support for a CONFIG_SITE.local file
    Removed Revision-Id from configure; still one Date
    Added CROSS_COMPILER_RUNTEST_ARCHS
    Update supported targets lists in CONFIG_SITE
    Applied linux-use-RT-thread-priorities.patch
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Creating 3.14.12.3-rc1
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Delete remnants of Aix and Borland.
    configure: Remove HDEPENDS option.
    
    Setting HDEPENDS=NO no longer works and would be hard to
    fix, so this commit deletes the option completely.
    configure: Reformat/reword comments in CONFIG_SITE
    
    Also moved the GNU_TUNE_CFLAGS setting into the file
    os/CONFIG_SITE.Common.linux-x86 since it is arch-specific.
    configure: Expand description of the LINKER_USE_RPATH setting
    Move linux-x86 GNU compiler tune c flag setting to CONFIG_SITE file.
    Document 3.14.12.1 changes.
    Added windows-x64-debug under debugging builds in comment lines.
    Updated the supported architecture comments.
    Remove 313 compatibility and some old build rules
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added LINKER_USE_RPATH option.
    Deleted hpux, no longer supported
    Removed all references to CONFORM flags in configure files.
    Updated the lists of supported architectures.
    Added linux-cris* targets to comment.
    Added optional -pipe option for GNU compiler builds.
    Added new target arch's to comments.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Comments and list of architectures.
    Removed accidently committed INSTALL_LOCATION definition.
    Moved definitions INSTALL_LOCATION and CONFIG.
    Modified comments for > win32-x86-cygwin and linuxRT-mvme2100.
    Version numbering system change.
    Updated comments defining host and cross targets.
    Added use POSIX thread priority scheduling option (YES or NO). Fixed typo.
    Added host target win32-x86-debug.
    Updated host and target lists.
    Updated supported platforms.
    Added COMPAT_TOOLS_313.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Added win32 comments.
    no CROSS_COMPILER_TARGET_ARCHS by default
    change for 2003
    Updated comments.
    Updated comments.
    Moved INSTALL_LOCATION definition to RELEASE file for SHRLIB_SEARCH_DIRS.
    Changes for shared libraries and os consistancy.
    Changed default CROSS_COMPILER_TARGET_ARCHS to nothing.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Modified comment regarding EPICS_HOST_ARCH.
    Modified comments by adding darwin-ppc and linux-mpc82xx.
    Updated license comments.
    Removed HOST_HDEPENDS_CMD.
    Comment changes only.
    Make MKMF the default depends tool.
    Modified comments.
    Made MKMF the default for HOST_HDEPENDS_CMD.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Changes to automatically generate header dependancy files.
    Changes to create vxWorks archive libraries and prods.
    Added install location.
    Removed ANSI and CPLUSPLUS
    Added Linux to LD_LIBRARY_PATH comment.
    Added vxWorks-ppc603.
    Modified CROSS_COMPILER_HOST_ARCHS default.
    Fix typo in name of RTEMS MVME167 target.
    Removed comments about not building c++ code.
    Changed HOST_ARCH to EPICS_HOST_ARCH.
    Modified comments.
    Allow cross compiles on all hosts.
    SHARED_LIBRARIES=NO
    Remove references to MAN and changed OBJS build.
    Fixed opt and warn flags.
    new way to build
    File cleanup.
    new way to build
    Changed comments.
    More R3.14 config file changes.
    More config file changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    new for 3.14; replaces config
    Corrected Hp compiler comment line.
    Fixed VX_GNU_NO definition.
    changes from Salikova
    Moved VX_GNU_NO definition to CONFIG_SITE (Dir for TORNADO=NO gnu gcc).
    Removed definition for CROSS_COMPILER_HOST_ARCHS.
    Second installment of shared library changes.
    Initial version of shared library support
    Added hkbaja47.
    Changed default to STRICT.
    Config changes for extensions and config simplification.
    Added target frc5ce and sparc files.
    Changes for tornado yes/no.
    Support for vxWorks 5.3
    Added capfast changes from Rozelle.
    Comments added.
    Added ADL2DL definition from Nick Rees.
    Added comment.
    update
    merged Kay's perl proto branch
    compile C++ only if CPLUSPLUS isnt empty
    Added c++ support for Vx builds.
    added WIN32 & pc486
    Added target arch mv162
    Added sch2edif  and e2db and flags.
    eliminated for loops and redun recursion
    Major revision of config directory again.
    Initial version after move of config directory.
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Include <top>/../RELEASE.<host>.local
    Include <top>/../RELEASE.<host>.local
    Include <top>/../RELEASE.<host>.local
    RELEASE file must define EPICS_BASE when building modules
    RELEASE file must define EPICS_BASE when building modules
    RELEASE file must define EPICS_BASE when building modules
    Update comments in RELEASE file
    Update comments in RELEASE file
    Update comments in RELEASE file
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Update comments in the configure/RELEASE file
    Modified comment.
    Removed a comment line.
    Moved definitions INSTALL_LOCATION and CONFIG.
    VX_DIR definition now in os/CONFIG_SITE.Common.vxWorksCommon
    RTEMS_BASE (and RTEMS_VERSION) now in os/CONFIG_SITE.Common.RTEMS
    Move RTEMS location declaration to user-editable configure/RELEASE file.
    Change Tornado to use the patched compilers.
    Removed unused TORNADO version macro.
    Updated comments.
    Moved INSTALL_LOCATION definition to RELEASE file for SHRLIB_SEARCH_DIRS.
    Added Is Tornado version  >= 2.2  definition - TORNADO_VERSION_2_2
    Updated license comments.
    Changed from tornado20 to tornado202.
    Changed default tornado release to tornado 2.
    Changed HOST_ARCH to EPICS_HOST_ARCH.
    new way to build
    More config file changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    new for 3.14; replaces config
    Set next development version
    Update version numbers for release
    Set next development versions
    Update version numbers for release
    
    With both libcom and database having minor version bumps I
    concluded that this couldn't be 7.0.3.2 and should really
    be numbered 7.0.4
    Bump database version to 3.18.0, use in SHRLIB_VERSION
    Incr version and set snapshot/development flags
    Clear development flags for 7.0.3.1
    avoided embedded TOP for non sub-modules
    Update version numbers of embedded modules
    Remove EPICS Base submodules
    Move all under modules/database
    Update version number after tagging release
    Reset DEVELOPMENT_FLAG for database-3.17.0 release
    ioc: add module version numbering
    Set next development version
    Update version numbers for release
    Set next development versions
    Update version numbers for release
    
    With both libcom and database having minor version bumps I
    concluded that this couldn't be 7.0.3.2 and should really
    be numbered 7.0.4
    Incr version and set snapshot/development flags
    Clear development flags for 7.0.3.1
    avoided embedded TOP for non sub-modules
    Update version numbers of embedded modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Update version number after tagging release
    Reset DEVELOPMENT_FLAG for ca-4.13.1 release
    Move CA version numbers into cfg/CONFIG_CA_VERSION
    Extend RULES_EXPAND to add more features
    
    * Use EXPAND_COMMON for architecture-independent templates,
      generated in the O.Common directory instead of O.$(T_A).
    * Add EXPAND_ME to name Makefile variables to be added without
      having to provide a value (permits spaces in value too).
    * Comments in RULES_EXPAND describe how to use these rules.
    Unify header comments in configure/RULES files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Make EXPAND rule work on all arch's
    
    Fixes build for linux-arm in src/util.
    Don't expand files unless specifically requested.
    Expanded files are always precious.
    Minor RULES_EXPAND changes
    
    Added support for a _PATTERN variable which calls $(wildcard) and
    prepends .. and the other SRC_DIRS automatically.
    Use $(ECHO) instead of @echo so make -s works silently.
    Added another meta-rule to create .d files when make needs one.
    configure: add assemblies to RULES_EXPAND
    comment in configure/RULES_EXPAND
    allow expandVars for all targets
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Created a ECHO macro and used it in the rules lines.
    Dont print remove command.
    Removed unnecessary ifdef T_A.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    New expand facility to expand @xxx@ variables.
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Export tool configurations as cfg/CONFIG_* files
    RULES_MODULES: Fix runtests with no submodules
    Collect submodule test failures into the parent
    
    Instead of displaying the failures from each submodule at the end
    of testing that submodule, RULES_TOP suppresses the output when
    it detects a parent module, and RULES_MODULES adds the children's
    failure lists into the parent's list so they all get shown at the
    end of the tests/results.
    Move rules from modules/Makefile to new RULES_MODULES file
    Collect submodule test failures into the parent
    
    Instead of displaying the failures from each submodule at the end
    of testing that submodule, RULES_TOP suppresses the output when
    it detects a parent module, and RULES_MODULES adds the children's
    failure lists into the parent's list so they all get shown at the
    end of the tests/results.
    Replace pre-make rule with before-actions rules
    
    For all standard build ACTIONS, a rule before-<action> is
    run just before running that action in the subdirectories
    given by the DIRS variable. Only works in Makefiles that
    include RULES_DIRS or RULES_TOP.
    Have 'make test-results' fail nicely if any tests did
    
    Lists the directories with failed tests at the end of the build.
    It is no longer necessary to use 'make -k' to see the results
    of all tests after one or more failures as only the top-level
    test-results recipe will generate a build error.
    Shorten/simplify uninstall recipes
    Replace broken cleandirs recipe
    Make submodule builds more generic
    
    Adds PARENT_MODULE to detect when building a submodule.
    RULES_TOP uses that to disable uninstall rules and abort instead of
    deleting the parent's configure/ directory.
    Move rules for cvsclean and depclean to RULES_DIRS
    
    Fix FIND_TOOLS for submodules when EPICS_BASE not built
    Add 'make help' for newer test targets
    Prevent submodules from cleaning the EPICS_BASE/configure directory
    Add new 'depclean' make target at top level
    
    It deletes all dependency (.d) files in the O.arch directories.
    This is useful when headers get moved or removed; recreating just
    the dependency data is much faster than rebuilding the whole tree.
    It is also possible to run the depclean.pl script manually when
    only part of the tree needs its dependencies regenerating.
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: clean up INSTALL_LOCATION/configure unless installing in TOP
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Removed Revision-Id from configure; still one Date
    Fix 'Can't find convertRelease.pl' problem
    configure: Cosmetic changes only, comments & spacing.
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    configure: Added 'host' make target.
    
    Builds only the current host architecture, so this is
    equivalent to the target install.$EPISC_HOST_ARCH
    configure: Modify help rule to use $(DIVIDER)
    
    ... in case someone changes it.
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    configure: Reorganized the uninstall targets in RULES_TOP
    
    Useful rules:
        uninstall.<arch> - Remove bin & lib directories for <arch> only.
        archuninstall    - Remove bin & lib directories created by this hostarch.
        realuninstall    - Removes ALL install dirs
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Change echo macro back to @echo. We never want to comment help messages.
    Changed a comment line.
    Created a ECHO macro and used it in the rules lines.
    Moved includes for installed and RELEASE config files to CONFIG.
    Base does not need to execute convertRelease.pl
    Onlu use nonexistantFilename when necessary.
    Removed if stmnts from define/endef to avoid bug in GNU make R3.80.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    Added ifneq test around -include lines for make version 3.80 on Linux FC4.
    See Ernest Williams for details.
    Include cfg/RULES* files to get DIRECTORY_TARGET names for uninstall.
    Added UNINSTALL_DIRS.
    Suppress echo echo
    Fixed problem on uninstall with no bin/* and lib/* dirs.
    Added new arch clean which only removes O.<arch> dirs not O.Common.
    Added cvsclean rule.
    Cleanup of some rules.
    Removed Unix only shell script rules tar and tarVersion.
    Updated license comments.
    Added realuninstall rule. Changed distclean to realclean + realuninstall.
    Changes to automatically generate header dependancy files.
    Added uninstall of INSTALL_DB dir
    Comment changes only.
    Remove references to R3.12 directories rec and rec.bak.
    Moved the execution of the cleandirs rule.
    Changed comment.
    Fix uninstall rule for WIN32.
    Remove references to MAN and changed OBJS build.
    Rules now single colon. Added tarVersion. Fixed cleandirs and distclean.
    Fixed typo distclean.
    More config file changes for R3.14.
    changes for 3.14
    new for 3.14; replaces config
    Added distclean rule.
    Changes to remove bin and lib dirs.
    Uninstall rule fixes.
    Uninstall now removes bin and lib dirs
    Added INSTALL_DOC to uninstall.
    Added INSTALL_TEMPLATES to uninstall rule.
    Initial version of jeva rules and definitions.
    Config changes for extensions and config simplification.
    Added html to uninstall directories.
    Fixed help comments - lange
    Changed Tar to tar in filename.
    fixwd uninstall target
    Added uninstall for templates dir.
    Uninstall now removes dbd and doc directories.
    .PHONY is :: rule
    Uninstall rule changes.
    Now includes RULES_DIRS, added rules for applications
    eliminated for loops and redun recursion
    Added tar rule
    Initial version
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Clean up the cross-build rules slightly
    MS build config updates, suppress warning C4344
    Removed all references to GCC_EXEC_PREFIX.
    Fixed definitions for GNU_TARGET_INCLUDE_DIR and GNU_TARGET_LIB_DIR.
    Fixed typo in CMPLR_PREFIX definition.
    Changes for cross builds.
    Removed -nostdinc from cross builds. Caused problems with tornado2.2 build.
    Was told it was not needed.
    Updated license comments.
    Moved GCC_EXEC_PREFIX definition here.
    Removed -B option since GCC_EXEC_PREFIX is defined.
    Removed ANSI and CPLUSPLUS
    Added CROSS_INCLUDES and CROSS_LDFLAGS
    new way to build
    More config file changes for R3.14.
    new for 3.14; replaces config
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add ENABLE_ASAN mechanism for developer use
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    Use compiler flags for header dependency file generation when possible.
    Removed all references to CONFORM flags in configure files.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Added optional -pipe option for GNU compiler builds.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    Added -lgcc to shared library builds and static prod builds for gcc 3.4.2.
    CC and CCC definitions changed to reflect GNU defaults.
    Drop the pedantry, it's only an annoyance nowadays.
    Moved -shared option.
    Changes for shared libraries and os consistancy.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Changed SHRLIB_LDFLAGS_* to += definition.
    Added GNU=YES definition.
    Updated license comments.
    Remove cmplr DEPENDS options and simplify .depends build rules.
    Removed 2 comments.
    removed -frepo
    use -frpro with g++
    removed no-implicit-templates flag from gnu default
    dont use implicit template instantiation because Tornado II GNU isnt ready
    Moved GCC_EXEC_PREFIX to CONFIG.CrossCommon.
    removed explicit template mechanism
    Change for purify - define GCC_EXEC_PREFIX only for cross builds.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Changes to automatically generate header dependancy files.
    Removed trailing blanks.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Changed CCC to CC in CPP definition.
    added LDCMD definition
    Removed extra CPPSNCFLAGS line since -x c is on defintion of CPP.
    Add CPPSNCFLAGS so that state notation language programs are correctly preprocessed.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    configure: Refined how/when we pull in <top>/cfg files
    
    Only read CONFIG* and RULES* files,
    and only do so in build dirs, i.e. when T_A is defined.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    REMOVED file type IDL. IDL install  already exists in extensions/configure.
    Many changes to macros and RULES for installed cfg files.
    Reimplement show-makefiles to display duplicates
    Move cvsclean and depclean to RULES_COMMON
    Fix show-makefiles rule for files containing colons
    Add RULES_COMMON
    
    This adds new make targets 'PRINT.<var-name>' and 'show-makefiles'
    which are useful for debugging build problems.
    Add build rules to generate and install *API.h header files
    Trivial formatting changes in configure/
    LINKER_USE_RPATH=ORIGIN
    
    Use Linux specific linker trick to allow relocation
    of built tree.
    
    relative rpath
    
    use $ORIGIN to reference libraries in other modules
    by relative path.
    
    fix rel. RPATH
    Fix "make --question" mode
    
    Fix for lp:1669891
    Drop R3.13 VxWorks-only OBJLIBS build targets and rules
    Fix ECHO definition to not match variables in MAKEFLAGS by using MFLAGS instead.
    
    Prior ECHO definition strips T_A=XXX command line variable definitions
    from MAKEFLAGS but doesn't strip other variable definitions such as
    INSTALL_LOCATION.  As a result, if you "make INSTALL_LOCATION=XXX"
    the ECHO definition erroneously matches if your install location
    contains 's'.   Changing the ECHO definition to MFLAGS avoids
    all command line variable definitions.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fix dependency file generation on Windows & Darwin
    Removed Revision-Id from configure; still one Date
    Clean up build rules, remove CapFast & dbst support
    Updates to build rules and genVersionHeader.pl script
    
    Added -q (quiet) flag, renamed INSTALL_QUIETLY build variable.
    Moved GENVERSION variables into normal locations.
    Changed from :: rule to : rule with FORCE dependency.
    Removed use of --git-dir, only works when CWD is TOP.
    Simplified some parts, more perlish.
    Added VCS used to generated output file.
    Expanded on the -v (verbose) output.
    Fixed HDEPENDS_MKMFFLAGS
    Allow compiler flags from command line
    
    The following variables are reserved for use from the
    GNUmake command line:
      CMD_INCLUDES
      CMD_CPPFLAGS
      CMD_CFLAGS
      CMD_CXXFLAGS
      CMD_LDFLAGS
      CMD_DBFLAGS
      CMD_DBDFLAGS
      CMD_ARFLAGS
    
    For example:
      make CMD_INCLUDES=/opt/local/include CMD_LDFLAGS=-L/opt/local/lib
    Deprecate and remove all uses of PATH_FILTER
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    configure: Fix missing dependency files
    
    Dependency files were not being created for sources that
    were only listed in x_SRCS_class variables, because the
    code that added those to the x_SRCS var was running after
    we had already loaded the dependency files.
    mkmf.pl needs -I prefix on include directories.
    IOCS_APPL_TOP must be absolute path
    
    Fix a recently introduced problem where cdCommands and envParams
    had TOP as a relative path (which actually worked by chance).
    Also fixed a problem with convertRelease hanging when the -t
    argument matched the absolute path to TOP.
    configure: Set IOCS_APPL_TOP from INSTALL_LOCATION
    
    Fixes lp:1165257
    Added SHRLIB_PERMISSIONS
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    configure: Remove HDEPENDS option.
    
    Setting HDEPENDS=NO no longer works and would be hard to
    fix, so this commit deletes the option completely.
    configure: Tell Perl all I/O streams are UTF-8 encoded.
    configure: Replace COMMENT with NOP in ECHO
    
    Using COMMENT the ECHO command drops the whole line under -s,
    whereas using NOP (':') only drops up to the next ';' terminator.
    configure: Print a warning when CHECK_RELEASE = NO
    Parallel build rule fixes
    Makefile cleanup
    
    Various minor changes to comments and build variable names.
    Fixed TARGET_SRCS definition
    Fixed TARGET_SRCS definition
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    configure: Remove T_A=* from MAKEFLAGS before findstring s in ECHO def.
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    configure: Stop make displaying COMMENT lines...
    configure: Fix 'make -s' on Windows
    
    Use REM instead of '#' to disable @echo commands.
    Thanks to Ben Franksen for the hint.
    Added code for TESTLIBRARY
    Now RUNTIME_LDFLAGS is set here.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Solve C++ exception problems in vxWorks 6.x:
     * Use a linker script when generating .munch files
     * Output exception handler frame registration code in _ctdt.c files
    Remove SOURCE_C*FLAG definitions. Use COMPILER_C*FLAGS instead.
    Use compiler flags for header dependency file generation when possible.
    LIB_PERMISSIONS and INSTALL_PERMISSIONS set to 444.
    Moved ECHO definition to preceed 'ifdef T_A' defines.
    Modified a comment line.
    Created a ECHO macro and used it in the rules lines.
    Moved checkRelease target rules into RULES_BUILD,
    use CONFIG_TARGETS to only run in TOP/configure.
    Deleted remaining references to sun4 (mostly in comments).
    Modified STATIC build. Make all *_SYS_LIBS dynamic.
    Test non SYS_LIBS for dynamic or archive.
    Removed all references to CONFORM flags in configure files.
    Mantis #311 fix; generate an interactive flex scanner.
    Fixed typo.
    Added WARN_CPPFLAGS,OPT_CPPFLAGS,DEBUG_CPPFLAGS
    Added POSIX_CFLAGS, POSIX_CXXFLAGS, POSIX_LDFLAGS
    Added RULES_TARGET & made changes to allow removing makeMakefileInclude.pl
    Removed LINK.loadable_shrlib and added TARGET_LIB_LDFLAGS.
    Added installed file permission definitions.
    Simplified definitionss for INSTALL_BIN_INSTALLS and INSTALL_LIB_INSTALLS.
    Added dependancies and rules for BIN_INSTALLS and LIB_INSTALLS.
    Look for .h files in os/posix dir only if POSIX is YES.
    Set default for POSIX to YES.
    Moved configure/tools perl tools to src/tools directory.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Added optional -pipe option for GNU compiler builds.
    Added RELEASE* files to CONFIG_INSTALLS.
    Changes for GNU make -j option (multiple jobs).
    Removed obsolete comment.
    Applied patches for recognizing external dependencies from B. Franksen.
    Added WARN setting for CHECK_RELEASE.
    Moved definitions INSTALL_LOCATION and CONFIG.
    Added LIB_PREFIX SHRLIB_PREFIX defs. Fixed CONFORM_CXXFLAGS def.
    Removed references to POSIX=YES/NO.
    Move POSIX thread priority scheduling flag to libCom Makefile.
    Modified POSIX thread priority scheduling flag.
    Added POSIX thread priority scheduling flag
    Added -lgcc to shared library builds and static prod builds for gcc 3.4.2.
    Added LEXOPT+=-8 to allow chars that are not plain 7bit standard ASCII.
    CC and CCC definitions changed to reflect GNU defaults.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Added SHRLIB_SEARCH_DIRS = INSTALL_LIB definition.
    Added PREPROCESS.cpp definition.
    Changed $(CROSS_<name>) to  $($(BUILD_CLASS)_<name>)
    Use SHRLIB_CFLAGS for library and loadable library source code compiles.
    Added comment line.
    Install files listed in INC_vxWorks into include/os/vxWorks etc.
    Added loadable library definitions and rules
    Added definitions for READLINE.
    Redefined TARGET_LDFLAGS.
    Added TARGET_LDFLAGS.
    Moved INSTALL_LOCATION definition to RELEASE file for SHRLIB_SEARCH_DIRS.
    Changes for shared libraries and os consistancy.
    Allow PROD_RCS and LIB_RCS.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Added USR_OBJS.
    Added USR_SRCS
    Added DEBUG flags and libs.
    Fix up definition of CONFORM_CXXFLAGS.
    Move definition of command-line library OP_SYS_LDLIBS so that the value
    isn't destroyed.
    Simplified complier option definitions with T_A and OS_CLASS.
    Moved ctdt definitions.
    Moved dollars-in-identifiers flag to CONFIG_COMMON.
    Modified  defaults for command-line input support.
    Moved LDLIBS_READLINE LDLIBS_LIBTECLA to os directory.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Moved STATIC_LDFLAGS out of LDFLAGS.
    See http://www.aps.anl.gov/epics/mantis/view_bug_advanced_page.php?f_id=20
    Added COMPILE.ctdt definition (no -pedantic option).
    Added GNU=NO to defaults.
    Removed duplicates in TARGET_* definitions.
    Moved includes and definitions depending on ifdef T_A.
    Updated license comments.
    Remove cmplr DEPENDS options and simplify .depends build rules.
    added path filtering
    Added default definitions.
    Added LDOBJS for linking with R3.13 *Lib object files without trailing .o.
    Added empty JAR and JAVA definitions so env vars of same name are ignored.
    Moved tool definitons. Changed EPICS_BASE_CPPFLAGS to BASE_CPPFLAGS.
    Changed definitions for creation of shared libraries.
    Added T_A specific TARGET flags.
    Added RELEASE_INCLUDES and RELEASE_DBDFLAGS.
    Removed base/configure defs, put defs in app/ext CONFIG_APP_INCLUDE file.
    Moved HOST_HDEPENDS_CMD here.
    Removed duplicate CROSS_CXXFLAGS. Changed CROSS_HDEPENDS_CMD to MKMF.
    HDEPENDS_INCLUDES_MKMF set to files with relative path names only.
    Switch to using convertRelease.pl script, run a consistency check in
    application <top>/configure directories.
    removed explicit template mechanism
    Removed HOST_HDEPENDS_CMD definition, belongs in CONFIG_SITE.
    Changed SHRLIBNAME to  SHRLIBNAME_YES.
    Changes to mkmf.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Reordered SRC_DIRS for consistancy.
    Allow CONFORM flags to be target, target/osclass, and target/t-a specific.
    Changes to automatically generate header dependancy files.
    Added T_A specific OPT and WARN flags.
    Allowed file and file/os specific WARN and OPT values.
    Changes to create vxWorks archive libraries and prods.
    Modified CONFIG_INSTALLS definition.
    Added CONFIG_INSTALLS definition.
    PRODUCT_OBJS and LIBRARY_OBJS changes. Removed snc defs. Depends changes.
    Added LDCMD definition.
    Added module, app, ext configure Makefile definition
    Reordered include dirs so that ., .., and src dirs are first.
    Modified snc cppflags.
    Workaround for CPPSNCFLAGS bug
    Modified depends definitons.
    Modified comments.
    Removed ANSI and CPLUSPLUS
    O.Common changes. Moved all db and dbd references to RULES.Db
    Moved gnu compiler static option to ld flags.
    Added USR_ARFLAGS.
    turn off effective C++ warnings
    Changed TARGET_RESS, ARCMD, DEPENDS_RULE. Added SRC_FILES definition.
    add warnings for violation of effective c++ guidelines
    Added INSTALL_DB definition.
    Modified comment.
    Gcc allows -g to be used with -O.
    Changes and renames for CFLAGS.
    set g++ warnings to -Wall
    Changed name GNU_TARGET_PREFIX to CMPLR_PREFIX.
    Added install_shrlib definition and allowed prod for ioc builds.
    Separated command name from cpp and c flags.
    Some cppflag and cflag names changed.
    Added TARGET_OBJS and TARGET_RESS definitions.
    Added CPPFLAGS to CPPSNCFLAGS definition.
    Added HOST_LIB definitions.
    add INSTALL_HOST_BIN
    Move -fPIC -D_REENTRANT to UnixCommon target config file.
    Added -fPIC -D_REENTRANT to gnu compiler builds.
    Added c++ munching for vxWorks.
    Added -g to G++_OPT_YES.
    Added -g to GCC_OPT_YES.
    Moved NM and MUNCH to vxWorks file.
    Changed static build var names.
    Modified AR and RANLIB definitions. Added OP_SYS_CPPFLAGS.
    Added defs for gnu bin and lib.
    Reorganized POSIX flags.
    Added tab to make code more readable.
    Changed HOST_ARCH to EPICS_HOST_ARCH.
    Updated compiler definitions.
    New method of building prod and libraries.
    Remove references to MAN and changed OBJS build.
    Fixed opt and warn flags.
    Modified comment.
    removed INLINE def
    INLINE is now "extern inline" on GNU
    use extern with inline on GNU compiler
    Added -I. include directory.
    Changing INSTALL_LOCATION back to top.
    moved installed files under the base/install directory by default
    added vpath for lex skel files
    install headers to only include and inclode/$(OS_CLASS)
    Fixed include order.
    Removed extra slash.
    Added os/posix directory.
    moved g++ optimixzation up also
    turned on higher level of optimization in the optimized build
    added definition of INLINE
    new way to build
    File cleanup.
    new way to build
    Added target-osclass specific flags. Added REENTRANT. Added DEPLIB_* flags.
    More config file changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    new for 3.14; replaces config
    changes for 3.14; actually config is no longer used
    Bug fix for EPICS_INCLUDES
    Moved def of EPICS_INCLUDES to CONFIG_COMMON and reordered dirs.
    Moved install java definition. Added INSTALL_LIBRARY. Fix mult prod depend.
    Fixed order of includes.
    Added vendor compiler dependent options ( -KPIC -D_REENTRANT for solaris)
    Created ARCH_DEP_CPPFLAGS for Vx build.
    Added STATIC_LDFLAGS definition.
    Renamed .DEPENDS to DEPENDS (for cygwin32 build)
    Second installment of shared library changes.
    Added definitions and rule changes for WIN95/NT resource files.
    Added default value for OBJ.
    Added share library flags and removed unused defines.
    Config changes for extensions and config simplification.
    Changes for tornado yes/no.
    Added rules and definintions for installing html files.
    Support for vxWorks 5.3
    fixed install outside base
    merged Kay's perl proto branch
    Portability change - added EXE suffix to antelope and e_flex.
    BUILD_ARCHS  now defined without if stmnts.
    Changes so that applications build
    Allow override of CROSS_COMPILER_HOST_ARCHS in CONFIG
    eliminated for loops and redun recursion
    Major revision of config directory again.
    Initial version after move of config directory.
    Replace pre-make rule with before-actions rules
    
    For all standard build ACTIONS, a rule before-<action> is
    run just before running that action in the subdirectories
    given by the DIRS variable. Only works in Makefiles that
    include RULES_DIRS or RULES_TOP.
    Have 'make test-results' fail nicely if any tests did
    
    Lists the directories with failed tests at the end of the build.
    It is no longer necessary to use 'make -k' to see the results
    of all tests after one or more failures as only the top-level
    test-results recipe will generate a build error.
    Move cvsclean and depclean to RULES_COMMON
    Move rules for cvsclean and depclean to RULES_DIRS
    
    Fix FIND_TOOLS for submodules when EPICS_BASE not built
    Add 'make help' for newer test targets
    Add RULES_COMMON
    
    This adds new make targets 'PRINT.<var-name>' and 'show-makefiles'
    which are useful for debugging build problems.
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add make targets test-results and clean-tests
    
    These are mainly intended for CI builds.
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Removed Revision-Id from configure; still one Date
    configure: Cosmetic changes only, comments & spacing.
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    Back-ported the tapfiles build target from 3.15
    
    This is the version that works on Windows.
    configure: Added 'host' make target.
    
    Builds only the current host architecture, so this is
    equivalent to the target install.$EPISC_HOST_ARCH
    Added new 'tapfiles' build target.
    
    There's a plugin for Jenkins which should be able to read the .tap
    output files and generate pretty test status pages from them.
    I haven't actually tried using it yet though...
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changes to allow rebuild to work with parallel builds option, -j.
    Changed comment on version of GNU make needed.
    Allow decimal points in fullpath dir names preceeding last subdir name.
    Added dependancies for all combos of dirs actions and arches.
    Changes for GNU make -j option (multiple jobs).
    Made runtests a more generic target.
    Ensure it doesn't fail if no tests are defined.
    Added new arch clean which only removes O.<arch> dirs not O.Common.
    Removed rebuild from ACTIONS definition.
    Allow rebuild.<arch> .
    Cleanup of some rules.
    Updated license comments.
    Added realclean action.
    Changes to automatically generate header dependancy files.
    Removed ANSI and CPLUSPLUS
    Removed host and cross archs.
    Removed extra referenecs to install.
    change for apps
    new way to build
    Changed rules to single colon. Modified actionArchPart definition.
    More config file changes for R3.14.
    new for 3.14; replaces config
    Added browse rule for MS VC++  source browser.
    Dependancy bug fix.
    fixed install outside base
    .PHONY is :: rule
    unclobbered the rebuild target
    o do the "inc" traget at the RULES_DIRS level for all arc targets
    and the install target
    o eliminated redundant "inc" build by creating buildInstall target
    fixed line wrap
    added rebuild target at lower levels
    Change ARCHS and ACTIONS defs to +=.
    Simplified syntax
    eliminated for loops and redun recursion
    Initial version after move of config directory.
    Replace EPICS_TIMEZONE envParam with EPICS_TZ
    
    Adjust rtems_init() to use it.
    Update EPICS_TIMEZONE settings in CONFIG_SITE_ENV
    
    Deleted 2018, added 2023.
    VxWorks Timezone updates
    
    Remove 2017; fix hour in MET settings
    Adjust comments about EPICS_TIMEZONE
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Update EPICS_TIMEZONE settings, extend to 2022
    Removed Revision-Id from configure; still one Date
    Update EPICS_TIMEZONE with info for 2016-2021
    libCom: epicsReadline refactoring
    Update EPICS_TIMEZONE data in CONFIG_SITE_ENV
    Configure EPICS_TIMEZONE for 2011 DST dates
    
    3.14.12 will come out about a week before the 2010 US time change
    and just a few days before the EU change, so it makes sense to set
    it up for the 2011 dates.
    
    Added information about DST dates up to 2015.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Update timezone settings for 2010
    Update DST settings for 2009.
    DST changes for 2008
    DST changes for 2007
    Updated DST info (for 2006).
    Added two new envParams and converted iocsh to use these instead of getenv()
    Updated DST dates.
    last two digits of stat,end are hour NOT month
    change for 2003
    DST Changes for 2003
    Updated license comments.
    change EPICS_TIMEZONE
    change daylight savings time
    remove EPICS_TS_MIN_WEST add EPICS_TIMEZONE
    Comment changes.
    new for 3.14; replaces config
    Removed definitions of ioc log inet number and log filename.
    Restored old values. I should not have made previous commit.
    Aps values entered.
    merged Kay's perl proto branch
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Cosmetic changes only, comments & spacing.
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    Fixed RELEASE_PERL_MODULE_DIRS
    Replaced makeDbDepends with mkmf
    configure: Fix for compiler-specific includes
    
    Need to search the include/compiler/<cmplr> dirs for all external
    modules listed in the RELEASE file as well.
    Only calculate RELEASE_TOPS once.
    Added wildcard to make testing for lib easier - ifneq ($(XXX_LIB),)
    Added RELEASE_DBFLAGS definition. Fixed double $ for archs names.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
    defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Unify header comments in configure/RULES files
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    Moved include to RULES_BUILD
    Added includes for top level RULES_BUILD and RULES_INCLUDE files
    Moved code from RULES to RULES_ARCHS.
    Fixed include line.
    new way to build
    new way to build
    Changed rules to single colon rules.
    changed :: rule to : rule when my version of gnu make stopped
    during the build
    More config file changes for R3.14.
    changes for 3.14
    new for 3.14; replaces config
    Add WIN95/NT source browser code.
    Initial version of jeva rules and definitions.
    Config changes for extensions and config simplification.
    Changed INSTALL_BIN to EPICS_BASE_HOST_BIN
    fixed install outside base
    Nicks rule breaks apps and extensions.
    Changes recommended by Nick Rees.
    merged Kay's perl proto branch
    faster clean
    .PHONY is :: rule
    o do the "inc" traget at the RULES_DIRS level for all arc targets
    and the install target
    o eliminated redundant "inc" build by creating buildInstall target
    Modified defs for hostArchs and crossArchs.
    added rebuild target at lower levels
    CVS:Now allows archname in targets.
    --------------------i--------------------------------------------------
    fixed O.xxx/Makefile
    use pattern rule
    eliminated for loops and redun recursion
    Initial version after move of config directory.
    Add build rules to generate and install *API.h header files
    Unify header comments in configure/RULES files
    Drop R3.13 VxWorks-only OBJLIBS build targets and rules
    RULES_TARGET: Define $(lib)_DIR before it is needed
    
    TESTLIBRARY products were being installed, because an executable
    that was linked to one added a dependency assuming it would be in
    the INSTALL_LIB directory. The $(lib)_DIR was being set too late
    for test libraries, so the fallback location was used instead.
    This fix sets $(lib)_DIR for test libraries before any rules use it.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed file permissions.
    Stopped install of test libraries and removed version number in test library name.
    configure: Fix the earlier DLLSTUBS change
    
    Turn on static library dependencies again in RULES_TARGET.
    Fix DLLSTUB dependency generation.
    configure: Fix DEPLIBS search order for Windows DLLs
    
    Must search for the DLLSTUB library before the SHRLIB one.
    This commit also cleans up some comments about MSVC settings.
    configure: Don't install test libraries
    
    This was actually hapenning through a TESTPROD being dependent
    on the TESTLIBRARY and not having a <lib>_DIR to tell it where
    the library would be found. We now set <lib>_DIR = . for all
    test libraries and they don't get installed any more.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Added test for vxWorks build.
    Updated shared library dependancies needed for -j parallel build option.
    Added code for TESTLIBRARY
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Bug fix from Michael Davidsaver at Brookhaven.
    Added RULES_TARGET & made changes to allow removing makeMakefileInclude.pl
    Warn on multiple inclusion of RULES_BUILD
    
    RULES_BUILD has long had a multi-inclusion guard, but I want to
    be able to remove it. This commit cleans up the current place where
    it was happening, and shows a warning if the guard gets triggered,
    but it doesn't stop builds from working if it happens.
    Unify header comments in configure/RULES files
    Add RULES_COMMON
    
    This adds new make targets 'PRINT.<var-name>' and 'show-makefiles'
    which are useful for debugging build problems.
    Revert "configure: add vpath for CONFIG* and RULES* (look in SRC_DIRS)"
    
    Unfortunately this causes really bad things to happen; the
    configure/RULES file is getting overwritten by the contents of
    src/libCom/as/RULES, so we need a different approach.
    
    This reverts commit 47c361f135ca0c058857c466467fba1d4af929c1.
    configure: add vpath for CONFIG* and RULES* (look in SRC_DIRS)
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Cosmetic changes only, comments & spacing.
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    configure: Refined how/when we pull in <top>/cfg files
    
    Only read CONFIG* and RULES* files,
    and only do so in build dirs, i.e. when T_A is defined.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Created a ECHO macro and used it in the rules lines.
    ARCH_CLASS => OS_CLASS
    Many changes to macros and RULES for installed cfg files.
    Bug fixes.
    Revert Janet's latest changes until she can fix them (break SNC rules).
    Many changes. Moved all related file type lines into RULES_FILE_TYPE.
    Fixed bug in FILE_TYPE_template. Replaced 644 with INSTALL_PERMISSIONS.
    Removed if stmnts from define/endef to avoid bug in GNU make R3.80.
    Allow user defined installation file types
    Added new file types ADL,ALH,CFG,IDL,PERL_MODULE,PERL_SCRIPT
    add HAS_registerAllRecordDeviceDrivers
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Export tool configurations as cfg/CONFIG_* files
    Name generated junitfiles '<testname>-results.xml'
    
    - following an idea by Freddie Akeroyd,
      to allow better distinction from other xml files
    Apply perl rules for .tap and .xml only to perl tests
    
    Don't apply the %.tap: %.t and %.xml: %.tap rules to tap and junit
    result files from other test frameworks.
    (They would overwrite the other frameworks' own rules.)
    Revert the runtests:: change but in an extensible way
    
    Use only %.t files in new TESTSCRIPTS.t var for Perl tests.
    TAPFILES and JUNITFILES can be appended to by other rules.
    The runtests and test-results rules have no direct recipes.
    Added run-tap-tests and tap-results rules, simlified recipe.
    Make %.tap:%.t and %.xml:%.tap into static pattern rules.
    Stop generating the testspec file
    
    It was created before modern continuous integration systems
    came along; Diamond were supposed to run the tests for us,
    but they didn't last for very long.
    Have 'make test-results' fail nicely if any tests did
    
    Lists the directories with failed tests at the end of the build.
    It is no longer necessary to use 'make -k' to see the results
    of all tests after one or more failures as only the top-level
    test-results recipe will generate a build error.
    Make test-results not fail so it shows all results
    
    For some reason 'make -k test-results' isn't always doing
    the -k (continue-on-error) on Windows.
    Improve automated testing rules to allow other test frameworks
    
    - make runtests a double-colon rule, so that other test frameworks
      can add their own recipes independently
    - only define runtests:: $TESTSCRIPTS rule when there are TESTSCRIPTS
      (to avoid having it run every time when no TESTSCRIPTS are defined)
    - $(strip $TAPFILES) inside ifneq to fix trouble when TAPFILES=' '
    Modify rules to allow multiple API.h libraries to be built
    Add build rules to generate and install *API.h header files
    Sort DIRECTORY_TARGETs to de-duplicate, avoids make warning
    Trivial formatting changes in configure/
    Fix a couple of benign mistakes in RULES files
    Add and use epicsProve.pl script
    
    Some Windows Perl installations don't have a working prove.bat
    so 'make test-results' doesn't work properly on them.
    avoid prove executable
    
    On windows prove.bat has the annoying limitations
    of a .bat script.  Like a max. of 9 arguments.
    Adjust warning message in RULES_BUILD to suggest cause
    configure: Don't hide any perl scripts being run
    Fix MacOS build warning
    
    The MacOS ld linker complains if a -L option points to
    a directory that doesn't exist, so create that directory
    before running the linker. Might be unnecessary, but...
    Only create msi-copy for a Host build-arch
    LINKER_USE_RPATH=ORIGIN
    
    Use Linux specific linker trick to allow relocation
    of built tree.
    
    relative rpath
    
    use $ORIGIN to reference libraries in other modules
    by relative path.
    
    fix rel. RPATH
    Adjust clean-tests rule
    
    Only delete test-result files that actually exist.
    T_A can never contain spaces
    Warn on multiple inclusion of RULES_BUILD
    
    RULES_BUILD has long had a multi-inclusion guard, but I want to
    be able to remove it. This commit cleans up the current place where
    it was happening, and shows a warning if the guard gets triggered,
    but it doesn't stop builds from working if it happens.
    Why was RULES_BUILD using -include for other Base RULES files?
    Unify header comments in configure/RULES files
    Add RULES_COMMON
    
    This adds new make targets 'PRINT.<var-name>' and 'show-makefiles'
    which are useful for debugging build problems.
    Fix "make --question" mode
    
    Fix for lp:1669891
    libCom: Add and use a -o<filename> option to e_flex
    
    Note that like the -S option the filename must follow immediately in
    the same command-line argument with no space.
    Pull in the podToHtml.pl script and rules from 3.15
    
    This lets src/cap5 build with Perl installations that lack Perl's
    podchecker and pod2html scripts (e.g. Fedora 27).
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Corrected fix from Bruce Hill's Github PR#19
    src/tools: teach makeTestfile about WINE and QEMU
    
    Teach makeTestfile host to run test for some cross built
    targets.
    RULES: Expand @TOP@ and @ARCH@ in .plt files
    
    Use this in Snippets.plt
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add Perl include path mechanism (by Andrew)
    configure: no implicit installation (overwrite) of config files
    Remove vpath for %.pl files
    
    It isn't needed, and in some configurations it causes build failures.
    Similar problems could still occur for other file types with a similar
    vpath, but it's less likely that other file types would be installed in
    an equivalent $(TOP)/../<dir> path.
    
    The original issue with .pl files was caused by an installation of Base
    where the parent directory had a bin/<host> soft-link pointing to the
    same bin/<host> of a newer installation of the same version of Base, so
    it had all the necessary .pl files in it. The vpath allowed the build in
    src/tools to search $(TOP)/../bin/<host> when checking the buildInstall
    dependency, and since it found those .pl files through the vpath it
    didn't bother to install them. When they were run later on in the build
    from the $(TOP)/bin/<host>/ path they weren't present so it failed.
    Fix 'make test-results' rule for Windows
    Add make targets test-results and clean-tests
    
    These are mainly intended for CI builds.
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Fix "make -q" problems with shared library stubs
    Allow 'make -q' to work with CHECK_RELEASE=NO
    Make *_INC files order-only prerequisites
    Build rules: Enable tests only when we can run them
    Removed Revision-Id from configure; still one Date
    Added CROSS_COMPILER_RUNTEST_ARCHS
    Only make runtests and tapfiles if T_A = EPICS_HOST_ARCH
    Add rule to install libraries before linking executables
    
    The rule must be disabled for building libCom and gdd though.
    Back out 12706 (assembly integration in build system)
    Add creating config files from snippets to build system.
    Fix podToHtml build issue on Windows
    Updates to build rules and genVersionHeader.pl script
    
    Added -q (quiet) flag, renamed INSTALL_QUIETLY build variable.
    Moved GENVERSION variables into normal locations.
    Changed from :: rule to : rule with FORCE dependency.
    Removed use of --git-dir, only works when CWD is TOP.
    Simplified some parts, more perlish.
    Added VCS used to generated output file.
    Expanded on the -v (verbose) output.
    configure: Include RULES_FILE_TYPE earlier
    
    From Benjamin Franksen:
    
    There is one remaining problem with the order of includes in the build
    rules for 3.14.12.5: configure/RULES_BUILD includes RULES_FILE_TYPE
    (which in turn includes the cfg/RULES* from modules in the RELEASE file)
    *after* including RULES.Db and RULES_JAVA. This makes it impossible to
    override (pattern) rules in one of these files. Instead,
    $(CONFIG)/RULES_FILE_TYPE should be included first.
    configure: fix Windows builds - don't use static link to create DLL stub
    Move section divider comment in RULES_BUILD
    Applied rtems-build-gesys-loadable-objects.patch
    Back-ported the tapfiles build target from 3.15
    
    This is the version that works on Windows.
    Another order-only prerequisite
    Use order-only prerequisites for include files
    
    This prevents unnecessary recompilations when an include
    file gets regenerated.
    Make .t files depend on /makeTestfile.pl
    Fix "make tapfiles" on Windows
    Add missing DLLSTUB dependency rules
    configure: Removed obselete 3.13 compatibility build rule
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    configure: improve log output for generated html
    more consistent macro names
    genVersionHeader: use date+time as the default version number
    introduce genVersionHeader.pl
    configure: Fix missing dependency files
    
    Dependency files were not being created for sources that
    were only listed in x_SRCS_class variables, because the
    code that added those to the x_SRCS var was running after
    we had already loaded the dependency files.
    configure: Cancel GNUMake built-in compiler rules
    
    Their rules don't have our _INC dependencies, and were
    being used in the gdd build (with no -I paths).
    Modify inc dependencies
    
    Using inc causes a rebuild every time; replace it with
    the list of include files that the compiler might use.
    Also adjust gdd build to avoid a circular dependency.
    configure: Add inc dependency to compile rules
    
    The inc step must have been completed before we run
    the C/C++ compilers to build any object files.
    configure: Added 'host' make target.
    
    Builds only the current host architecture, so this is
    equivalent to the target install.$EPISC_HOST_ARCH
    Modified suffix for TESTSHRLIBNAME
    configure: Add vpath for .hpp files
    
    Even Linux systems are using this for C++ headers now,
    they're not just for Windows.
    Stopped install of test libraries and removed version number in test library name.
    Added new 'tapfiles' build target.
    
    There's a plugin for Jenkins which should be able to read the .tap
    output files and generate pretty test status pages from them.
    I haven't actually tried using it yet though...
    configure: Clean up command echoing in build rules
    Removed OBJLIBNAME references. obj libs for R3.13 vx compatibility only.
    Added SHRLIB_PERMISSIONS
    Make HTMLS_DIR default to . if not set.
    
    Remove HTMLS_DIR setting for files generated from DBD/POD.
    Add rules to run dbdToHtml.pl and install the result
    configure: Fix test rules dependency
    configure: Deleted RULES_JAVA and associated variables
    
    Also removed some extensions template configuration files for
    architectures that we have already removed from Base.
    Release notes about win32-x86-mingw cross-builds
    
    Also a bit more cleanup of build rules.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Testing: Fixed filters test harness build on RTEMS
    
    Added a new Files: line to the testspec file to document which
    files need to be available for the tests to be run properly.
    This is generated from the Makefile variable TESTFILES.
    Minor build cleanups
    
    Removed %.C and %.H from vpath (rules were deleted some time ago)
    Added %.pl to vpath for use in ioc/registry/Makefile
    configure/tools doesn't exist any more, remove from configure/Makefile
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    Only remove last occurrence of shrlib version string.
    Allow install of *.H header files.
    configure: Print a warning when CHECK_RELEASE = NO
    Parallel build rule fixes
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    configure: Hide rm command in new YACC rules.
    Update FLEX rules.
    
    Use the '-t' option to flex to generate a unique output filename.
    Needed for parallel builds when multiple lexers are built in
    the same object directory.
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    configure: Delete %.C (C++) build rule
    
    Breaks build of %.c files on Windows with some versions of Make.
    Updated shared library dependancies needed for -j parallel build option.
    Added code for TESTLIBRARY
    Update YACC rules
    
    Use '-b' argument of antelope to control generated file name
    for safe parallel builds.
    
    Move conditional into command so that it is possible to build
    parsers which generate a header in the same directory as parsers
    which do not.  Allow YACCOPT per target, but default to global.
    Fix YACC parallel build
    
    antelope now support an argument to modify the output
    file name.  Use this it is possible to safely build several
    parsers in the same directory.
    Remove 313 compatibility and some old build rules
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Don't create soft link to SHRLIB_VERSION for *.dll sharelibs.
    Changes to allow rebuild to work with parallel builds option, -j.
    Added target list to install library rule, needed for make3.8.2 builds
    
    bug:626848
    Clean up munch.pl, add -o option
    chmod -x src/tools/*.pl
    Added automatic generation of testspec to RULES_BUILD
    Added Andrews changes to RULES_BUILD to generate a hint file for the runner
    Remove extra RANLIB command after installation of archive libraries.
    Remove comment lines accidently committed.
    Created a ECHO macro and used it in the rules lines.
    Moved checkRelease target rules into RULES_BUILD,
    use CONFIG_TARGETS to only run in TOP/configure.
    Tried to simplify library build rules.
    Changed PROD to PRODNAME in INSTALL_LIB_INSTALLS dependancy.
    Install LIB_INSTALLS before PRODs are built.
    Changed OS_CLASS WIN32 test to SHRLIB_SUFFIX .dll test. Fixed RM of libs.
    Shared library rule changes made to allow make -j option to work on win32.
    Bug fix for clean of RES and BOF files. Added PERL_SCRIPTS to SCRIPTS_HOST.
    Bug fixes.
    Revert Janet's latest changes until she can fix them (break SNC rules).
    Many changes. Moved all related file type lines into RULES_FILE_TYPE.
    Allow runtests to continue despite failing tests.
    Fix generation of .t files on Windows.
    Added RULES_TARGET & made changes to allow removing makeMakefileInclude.pl
    Removed LINK.loadable_shrlib and added TARGET_LIB_LDFLAGS.
    Changed permissions to a *_PERMISSIONS definition.
    Added dependancies and rules for BIN_INSTALLS and LIB_INSTALLS.
    Bug fix. Reversed the then and else part of the if function.
    Removed if stmnts from define/endef to avoid bug in GNU make R3.80.
    Added ifneq test around -include lines for make version 3.80 on Linux FC4.
    See Ernest Williams for details.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
       defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Allow new CFGS - user RULES* file to be installed into a cfg directory.
    New expand facility to expand @xxx@ variables.
    Install share libs before archive libs - needed for parallel builds.
    Make runtests work properly in non-HOST builds.
    Made runtests a more generic target.
    Ensure it doesn't fail if no tests are defined.
    Changed test to runtests.
    test is now .PHONY.
    Added perl test rule.
    Added test script, TESTSCRIPT, rules.
    Changed rules so that % rules only have 1 dependancy.
    Need two MT commands, one for dll filess and one for exe files.
    Added command to embed .manifest file. Removed install of .manifest file.
    Changed LIB_PREFIX to SHRLIB_PREFIX.
    Bug fix for Borland obj installs (all lower case) installs.
    Visual C++ 2005 changes: lnstall manifest files, clean *.manifest *.exp.
    Added rule for TCLLIB.
    Added filter for solaris warnings.
    Added LIB_INSTALLS, libraries to install.
    Implemented LOADABLE_SHRLIB_VERSION.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Add macro RULES_TOP - fullpath to a module top directory.
    MakefileInclude needs rebuilding if configure/RELEASE changes.
    Simplify changes to create <name>Include.dbd from <name>_DBD files.
    Changes to create <name>Include.dbd from <name>_DBD files.
    Removed versioning on install of loadable shrlibs.
    += version number for LOADABLE_SHRLIB.
    Used INSTALL_LIBRARY script to install loadable shared libraries.
    Added loadable library definitions and rules
    Updated comments.
    Changes for shared libraries and os consistancy.
    Moved dollars-in-identifiers flag to CONFIG_COMMON.
    Replaced -traditional with -fdollars-in-identifiers on ctdt compiles.
    Compile *ctdt.c files with COMPILE.ctdt line.
    Reordered some rules.
    Added DLL_LINK_LIBNAME and TDS to clean rule.
    Updated license comments.
    Remove cmplr DEPENDS options and simplify .depends build rules.
    added path filtering
    Added DLL_LINK_LIBNAME to LIBTARGETS definition.
    Change to shrlib versioning for Darwin build.
    Simplified link line debugging command.
    Updated all java rules.
    Changes for HP-UX 11 - first semi-stable version
    Tool used to install shared libs changed from INSTALL to INSTALL_LIBRARY.
    Added a remove of target to some rules.
    Added SCRIPTS_HOST and SCRIPTS_IOC.
    Allow multiple includes of base RULES_BUILD (use first include).
    Switch to using convertRelease.pl script, run a consistency check in
    application <top>/configure directories.
    Removed test on LIBTARGETS and SHARED_LIBRARIES.
    Added PURIFY to link cmd.
    Simplified clean rule.
    Changes to automatically generate header dependancy files.
    Changes to create vxWorks archive libraries and prods.
    Changed lex and yacc rules.
    Added .i files to precious. Removed reference to iocBinInstalls.
    LIBRARY_OBJS, Depends, and Templates changes. Munch dep added. LD to LDCMD.
    Removed seq rules. Added rules for module/app configure build
    fix rules for munch
    Simplified snc rules.
    Snc rule changed, link no longer required.
    Changed .stt rule.
    Modified snc cpp flags.
    Modified depends rules and munch rules.
    Modified depends rules
    Added  quote mark.
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    O.Common changes. Moved db & dbd rules to and added include for RULES.Db
    Added .c state notatation rules.
    fixed static constructors when building on WIN32
    Comment changes.
    Changed munch rule, depends dependancies. Changes for ARCMD and LINK defs.
    Changed LIB_LD_OBJS to LIBRARY_LD_OBJS.
    prevent duplicate -I for dbExpand
    allow multiple build in one directory
    Changes and renames for CFLAGS.
    Added install_shrlib definition and allowed prod for ioc builds.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Changed USER_VPATH to USR_VPATH.
    Removed CPPFLAGS from CPP command line.
    Removed comment.
    Fixed shared library version number.
    Always build munched library.
    Added clean for MUNCH rule files.
    Added c++ munching for vxWorks.
    Added DIRECTORY_TARGETS to buildInstall dependancies.
    Fixed link line in C++ munching for VxWorks
    Updated comments.
    Removed trailing semicolon on RANLIB command line.
    Removed unused reference to INSTALL_OSINC.
    BPTS, DBDNAME, RECTYPES, and MENUS now created in install directory.
    Made all ranlib command lines the same.
    base warnings on warn flag and not opt flag
    Removed debug print statements.
    Modified library definitions.
    New method of building prod and libraries.
    Remove references to MAN and changed OBJS build.
    moved installed files under the base/install directory by default
    added vpath for lex skel files
    removed .. rule for include install and added vpath directive
    for .skel.static
    restored .. rule for include file install
    install headers to only include and inclode/$(OS_CLASS)
    Fixed OJBS build and some LIBRARY changes.
    Changed order of build targets.
    Fixed include line.
    Fixed library build.
    Changes to fix win32 build of libraries.
    Changed LIB to LIBRARY and made a few bug fixes.
    new way to build
    Added PROD_OBJS to PROD dependancies to fix "make depends".
    File cleanup.
    new way to build
    Rules now single colon. Added lost browser rules. Other fixes.
    use new HOSTEXE variable
    Added depends target.
    Fixed install of inc files.
    More config file changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    new for 3.14; replaces config
    Modified link line in build rules.
    Added another WIN32 source browser rule.
    Moved def of EPICS_INCLUDES to CONFIG_COMMON and reordered dirs.
    Added ifdef CPLUSPLUS around linker def.
    Added ifdef for BAF.
    Add WIN95/NT source browser code.
    Moved install java definition. Added INSTALL_LIBRARY. Fix mult prod depend.
    no need to touch DEPENDS because of -include
    Compile with -fPIC only with SHARED_LIBRARIES=YES;
    DBDNAME only in build targets when DBDEXPAND is defined
    always use c++ linker
    Removed accidental commit line.
    Added dependancies so that INSTALLS will be built.
    Added $(DBDINSTALL) $(MENUS) $(RECTYPES) $(BPTS) $(DBDNAME) to clean rule.
    Now only create package dir if package is defined.
    Unix build now always uses SHRLIB_CFLAGS when compiling library src files.
    Added ARCH_CLASS facility for USR_CPPFLAGS.
    Modified java rules.
    Added COND_PROD_SRCS to depends rule and moved rule after the definition.
    corrected missing -d in shrlib install
    Renamed .DEPENDS to DEPENDS (for cygwin32 build)
    Changed java install rule.
    Modified if test on SRCS and COND_PROD_SRCS.
    TESTPROD handled same as PROD except not installed.
    Added strip to if statements. Changed def of PROD_OBJS.
    Removed DIRECTORY_TARGETS.
    Second installment of shared library changes.
    Allow USR_LDFLAGS_<archclass> definitions. Added TARGETS to clean rule.
    fixed WIN32 dll build
    Initial version of jeva rules and definitions.
    Initial version of shared library support
    Added definitions and rule changes for WIN95/NT resource files.
    Removed continuation from shell command for WinNT builds.
    Added USR_LIBS_$(ARCH_CLASS) definitions.
    The call make is no longer printed.
    Config changes for extensions and config simplification.
    Removed buggy TCLINDEX install rule.
    Added tcl lib rules and definitions.
    Host build now installs dbd files.
    Added rules and definintions for installing html files.
    Change for installing templates
    Added missing trailing @ in the adl2dl rules.
    Removed dependancies from implicit rule lines. Added .C implicit rules.
    Backed out accidental commit.
    Added capfast changes from Rozelle.
    changed AR args for WIN32
    Modified stt rules per Nick Rees.
    rolled back to ms vis C++ 4.0
    Added adl2dl rule and simplified mangen rules.
    Updated mangen rules from Nick Rees
    Changed E2SR to E2DB.
    fixed yacc/lex rules for pc and no knts
    fixed win32 lib build
    merged Kay's perl proto branch
    fixed depen
    Fixed DEPENDS rule lines.
    added TESTPROD to clean target
    Local libraries now first.
    installed
    Rename .tests-failed to match a .gitignore pattern
    
    This is simpler than trying to add that file to the
    .gitignore files in all of the submodules.
    Collect submodule test failures into the parent
    
    Instead of displaying the failures from each submodule at the end
    of testing that submodule, RULES_TOP suppresses the output when
    it detects a parent module, and RULES_MODULES adds the children's
    failure lists into the parent's list so they all get shown at the
    end of the tests/results.
    Have 'make test-results' fail nicely if any tests did
    
    Lists the directories with failed tests at the end of the build.
    It is no longer necessary to use 'make -k' to see the results
    of all tests after one or more failures as only the top-level
    test-results recipe will generate a build error.
    Add and use epicsProve.pl script
    
    Some Windows Perl installations don't have a working prove.bat
    so 'make test-results' doesn't work properly on them.
    Move rules for cvsclean and depclean to RULES_DIRS
    
    Fix FIND_TOOLS for submodules when EPICS_BASE not built
    Add 'make help' for newer test targets
    LINKER_USE_RPATH=ORIGIN
    
    Use Linux specific linker trick to allow relocation
    of built tree.
    
    relative rpath
    
    use $ORIGIN to reference libraries in other modules
    by relative path.
    
    fix rel. RPATH
    Fix "make --question" mode
    
    Fix for lp:1669891
    Move tool configs into module cfg/CONFIG* files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: remove cas/gdd from EPICS_BASE_HOST_LIBS
    Structural changes to create core module
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Make compilation inside Base USE_TYPED_RSET
    Clean up build rules, remove CapFast & dbst support
    Updates to build rules and genVersionHeader.pl script
    
    Added -q (quiet) flag, renamed INSTALL_QUIETLY build variable.
    Moved GENVERSION variables into normal locations.
    Changed from :: rule to : rule with FORCE dependency.
    Removed use of --git-dir, only works when CWD is TOP.
    Simplified some parts, more perlish.
    Added VCS used to generated output file.
    Expanded on the -v (verbose) output.
    Fix FIND_TOOL
    Fix 'Can't find convertRelease.pl' problem
    Fix Windows builds
    
    The windows shell doesn't like commands that start ../
    Those commands are all found using TOOLS, so by making that
    an absolute path we fix that problem.
    However GNUmake doesn't recognize targets with relative paths
    as being the same as their absolute path, so we have to fix up
    some places that were using TOOLS in dependencies.
    Deprecate and remove all uses of PATH_FILTER
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    Make shared library version numbers use 3 components
    configure: Added FULLPATHNAME tool variable
    
    Changed os/CONFIG files where we use the fullPathName.pl script.
    More changes needed for Cygwin.
    tools: Add -q (quiet) flag to installEpics.pl
    
    The -q flag now gets used when the GNUmake '-s' flag is provided.
    This change also includes a cleanup of the installEpics.pl script.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libasIoc no longer includes asHost
    build: Point default MSI to the base version.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    Base does not need to execute convertRelease.pl
    Moved configure/tools perl tools to src/tools directory.
    Oops, missed this; libiocsh doesn't exist any more.
    Return libraries to original order and re-add registryIoc, in case it matters.
    Created an iocshHost library, added it to EPICS_BASE_HOST_LIBS
    Removed iocsh and registryIoc from EPICS_BASE_HOST_LIBS.
    Moved definitions INSTALL_LOCATION and CONFIG.
    Added registryIoc library to EPICS_BASE_HOST_LIBS definition.
    Use tools in $(EPICS_BASE_BIN) for HOST builds.
    Use tools in $(EPICS_BASE_HOST_BIN) for CROSS builds.
    OSITHREAD_USE_DEFAULT_STACK YES
    Removed testDevIoc from base link libraries, only used by the mrkSoftTest application
    Added PATH_FILTER to calls of tools (allows building in DOS-Box)
    Updated Comment
    name should not include lib
    LIBRARIES=>LIBS
    Added EPICS_BASE_HOST_LIBRARIES definition.
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Moved tool definitons. Changed EPICS_BASE_CPPFLAGS to BASE_CPPFLAGS.
    Removed EPICS_EXTENSIONS dependencies as this causes problems with the
    RELEASE file checker.  Now users of msi, sch2edif, e2db or dbst must
    have these in their path, or define a variable pointing to the binary
    in their application configure/RELEASE files.  Capfast users may also
    want to add the definition CAPFAST_TEMPLATES pointing to their EPICS
    symbols, originally found via (EPICS_EXTENSIONS)/templates/capfast
    Added definitions needed by base build.
    Added RELEASE_INCLUDES and RELEASE_DBDFLAGS.
    Removed base/configure defs, put defs in app/ext CONFIG_APP_INCLUDE file.
    Removed references to MAKEDBDEPENDS and MAKEDBDDEPENDS.
    Find R3.13 tools in HOST_ARCH directory.
    Added mkmf tool definition.
    eliminate option to turn off exceptions
    Changes to create vxWorks archive libraries and prods.
    Reordered <lib>_DIR definitions.
    Added DIRs for base librareis dbtoolsIoc, iocsh, and miscIoc.
    Removed seq references
    Added strip fcn to ifndef lines.
    Added PERL to REGISTERRECORDDEVICEDRIVER definition.
    Added defines for undefined epics tools
    Added MSI definition.
    Changed location of snc.
    prevent duplicate -I for dbExpand
    added additional library locations
    Added HOST_LIB definitions.
    Added asHost_DIR and asIoc_DIR definitions.
    Added osithread default stack flags.
    Added DIRs for dbIoc and dbStaticIoc.
    Removed continuation to make code more readable.
    Changed HOST_ARCH to EPICS_HOST_ARCH.
    Modified library names in xxx_DIR lines.
    C++ exceptions Yes for all archs except vxWorks and RTEMS.
    Added epics base library dirs for extensions.
    new way to build
    new way to build
    use new HOSTEXE variable
    More config file changes for R3.14.
    changes for 3.14
    Unify header comments in configure/RULES files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Macros and rules for octave files.
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Trivial formatting changes in configure/
    Fix a couple of benign mistakes in RULES files
    Unify header comments in configure/RULES files
    Pull in the podToHtml.pl script and rules from 3.15
    
    This lets src/cap5 build with Perl installations that lack Perl's
    podchecker and pod2html scripts (e.g. Fedora 27).
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add make targets test-results and clean-tests
    
    These are mainly intended for CI builds.
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Clean up build rules, remove CapFast & dbst support
    Fix podToHtml build issue on Windows
    Generate documentation from Perl modules
    
    Add rules to generate HTML from POD in Perl modules and scripts.
    Generate docs from several EPICS/ Perl modules.
    Add podRemove.pl script
    
    Use this to generate .dbd files from .dbd.pod files
    so installed *Record.dbd files don't have the
    dbdCommon.dbd file expanded out.
    
    Fixes lp:1417428
    Improved "Installing ..." messages in RULES.Db
    Allow compiler flags from command line
    
    The following variables are reserved for use from the
    GNUmake command line:
      CMD_INCLUDES
      CMD_CPPFLAGS
      CMD_CFLAGS
      CMD_CXXFLAGS
      CMD_LDFLAGS
      CMD_DBFLAGS
      CMD_DBDFLAGS
      CMD_ARFLAGS
    
    For example:
      make CMD_INCLUDES=/opt/local/include CMD_LDFLAGS=-L/opt/local/lib
    Back-ported the tapfiles build target from 3.15
    
    This is the version that works on Windows.
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    configure: Added missing menu%.h.d rule
    
    Janet had to remove '..' from the vpaths because it was letting
    the build look into the TOP/.. directory, which was causing
    major issues. She added back rules for COMMON_DIR and .. but
    missed this one.
    Updated concatenated database definition files
    Added concatenated database definition files
    configure, ioc/db: remove clutter left by rebase, add rule for pm to html generation (include pm in ..)
    If T_A not defined, define DEP and look for template files in the . dir.
    Allow user specified db substitution file suffix.
    Allow user specified substitution file suffix (from Dirk Zimoch)
    configure: Added 'host' make target.
    
    Builds only the current host architecture, so this is
    equivalent to the target install.$EPISC_HOST_ARCH
    IOCS_APPL_TOP must be absolute path
    
    Fix a recently introduced problem where cdCommands and envParams
    had TOP as a relative path (which actually worked by chance).
    Also fixed a problem with convertRelease hanging when the -t
    argument matched the absolute path to TOP.
    Remove .. from vpath. Add rules with .. prerequisite.
    configure: Removed generation of xxxInclude.dbd files
    
    Rules now expand the source DBD files directly in to the target.
    Also removed the makeIncludeDbd.pl script which is no longer needed.
    configure: Set IOCS_APPL_TOP from INSTALL_LOCATION
    
    Fixes lp:1165257
    Add podToHtml.pl script
    
    New rules to use this for .pod and .pm conversions
    Replace use of pod2html in ca/client/perl
    Added new 'tapfiles' build target.
    
    There's a plugin for Jenkins which should be able to read the .tap
    output files and generate pretty test status pages from them.
    I haven't actually tried using it yet though...
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    configure: New REGRDDFLAGS variable
    
    Allows registerRecordDeviceDriver.pl to be run with different
    command flags than the dbdToX.pl scripts.
    Make target not first prerequisite depend on Makefile.
    Add rules to run dbdToHtml.pl and install the result
    registerRecordDeviceDriver updates
    
    Added -D and -o <outfile> options
    Changed the build rules to use -o
    Moved the script into src/tools
    Added template file as dependency for .db.d file
    Replaced makeDbDepends with mkmf
    registerRecordDeviceDriver needs DBD search path
    configure: Replace COMMENT with NOP in ECHO
    
    Using COMMENT the ECHO command drops the whole line under -s,
    whereas using NOP (':') only drops up to the next ';' terminator.
    Added -I(SRC_DIRS) to DBDFLAGS.
    configure: Clean up some other DBDEPENDS stuff
    Use the new DBD processing scripts to generate dependency files.
    Added -I$(COMMON_DIR) to DBFLAGS and DBDFLAGS definitions.
    Parallel build rule fixes
    configure: Fix potential parallel build issue
    
    When creating files in ../O.Common it is eesential to use atomic
    file replacement rather than deleting the old file and creating
    a new one in its place, because two or three architectures could
    be being built in parallel which might interfere.
    
    This commit also ensures that .dbd.d files are constructed
    properly when using 'make -s'; $(ECHO) does nothing then.
    configure: Correct INSTALL_DBDFLAGS and INSTALL_DBFLAGS
    
    fixes lp:861627
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fixed DBDINC_NAME definition
    Fixed DBDINC_NAME definition
    Restored COMMON_DBS usage in DBDDEPENDS_FILES definition.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Remove depends file requirement for user created rules.
    Fix: Made all RULES.Db rules use $*.tmp style names for temporary files (fixes lp:615916) [configure/RULES.Db]
    Added comments about implementing os specific dbd files.
    Change for parallel builds when running multiple msi commands.
    Warn if the IOC's TOP changed since building.
    If the IOC's registerRecordDeviceDriver routine sees a different path
    to TOP than the one used at build-time, we tell the user.
    Create depends files in O.<T_A> directory.
    Made realclean a double colon rule.
    Allow $(BUILD_ARCHS) $(actionArchTargets) $(cleanArchTargets) in make cmd.
    Part 2 for Fix of echo problem.
    Fixed echo problem when using RULES.Db when T_A is not defined.
    Fixed ECHO lines and added DBDFLAGS to DBTOMENUH command line.
    Created a ECHO macro and used it in the rules lines.
    Added .depends files in O.Common for header files created from dbd files.
    Fixed CREATESUBSTITUTIONS rule.
    Added INSTALL_DBFLAGS to MSI's DBFLAGS.
    Added -I.. to DEFLAGS definition.
    Added PRECIOUS for COMMON_DIR header files.
    Fixed DBFLAGS definition.
    Added quote to echo line. Changed permissions to INSTALL_PERMISSIONS.
    Added dependancy and rule for DB_INSTALLS and DBD_INSTALLS.
    Allow $*_TEMPLATE definitions to have fullpathname.
    Added realclean target.
    Second try at creating *_Include.dbd dependancy on Makefile.
    Backed out Created *_Include.dbd dependancy on Makefile.
    Created <name>_Include.dbd now depends on Makefile.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
    defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Added rules/macros for creating access security configuration .acf files.
    Changes for GNU make -j option (multiple jobs).
    Removed the incorrect COMMON_INCLUDE_DBDS and ../Makefile dependency.
    Created COMMON_INCLUDE_DBDS and ../Makefile dependency.
    Added ../Makefile as a dependancy of created *Include.dbd.
    Applied patches for recognizing external dependencies from B. Franksen.
    Removed references to  TEMPLATE_LINKS.
    Removed unused COMMON_TEMPLATES dependancy.
    Changes for makeDbDepends.pl and other fixes.
    Bug fix submitted by Martin Norbury.
    Added the db dependancy definition <name>_DEPENDS.
    Added dependancy line for ../template files.
    Moved wildcard parentheses to end of line.
    Test if DBD_INSTALLS and DB_INSTALLS are non zero instead if defined.
    Added rule to build name.db from name.template.
    Moved install db from O.Common rule.
    COMMON_DIR changes.
    Removed COMMON_DIR from dbd vpath.
    Simplify changes to create <name>Include.dbd from <name>_DBD files.
    Build *_registerRecordDeviceDriver.cpp from dbd file in $(COMMON_DIR).
    Changes to create <name>Include.dbd from <name>_DBD files.
    Removed dos2unix conversion.
    Added dos2unix rules for win32.
    Don't generate an empty file if registerRecordDeviceDriver.pl fails.
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    Changed dbExpand rules to use new -o option to specifiy the output filename
    Added rules for DB_INSTALLS and DBD_INSTALLS.
    Fix tab/space problem in previous patch.
    Don't leave dangling output files when msi fails.
    Added dbExpand.tmp imtermediate file.
    Bug fix for template filename expansion.
    Allow <name>_TEMPLATE specifications.
    Allow creating a *.db from *.substitutions and DB_TEMPLATE.
    Added install for *.vdb files and generalized template definition.
    Changes for capfast and OPT.
    Updated template rules. Removed shell command.
    Moved buildInstall rule.
    Updated license comments.
    Added INDDBFROMTEMPLATE definition and rule.
    Added RM of target to some rules.
    Simplified some rules.
    Added RELEASE_INCLUDES and RELEASE_DBDFLAGS.
    Removed base/configure defs, put defs in app/ext CONFIG_APP_INCLUDE file.
    Fix for remove command filenames.
    Many DEPENDS changes. Many other changes also.
    Supressed RM output lines. Made *_registerRecordDeviceDriver.cpp precious.
    Added automated depends for created db and dbd files.
    Changes to automatically generate header dependancy files.
    Allow RULES.DB to be included into Makefiles.
    Updated comments
    bug fix for Janet
    O,Common changes. Added all db and dbd defines
    makeDbDepends.pl and replaceVAR.pl now in base/configure/tools.
    revert to previous version
    change /configure to
    Some changes for new build method.
    allow multiple build in one directory
    removed windows specifc lines
    BPTS, DBDNAME, RECTYPES, and MENUS now created in install directory.
    Changed RULES_ARCHS to RULES.
    new way to build
    new way to build
    Set next development version
    Update version numbers for release
    Set next development versions
    Update version numbers for release
    
    With both libcom and database having minor version bumps I
    concluded that this couldn't be 7.0.3.2 and should really
    be numbered 7.0.4
    Incr version and set snapshot/development flags
    Clear development flags for 7.0.3.1
    avoided embedded TOP for non sub-modules
    Update version numbers of embedded modules
    Remove EPICS Base submodules
    Move all under modules/libcom
    Update libcom version number after tagging release
    Reset DEVELOPMENT_FLAG for libcom-3.17.0 release
    Add module version numbering
    avoided embedded TOP for non sub-modules
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Move CA version numbers into cfg/CONFIG_CA_VERSION
    Export tool configurations as cfg/CONFIG_* files
    Export tool configurations as cfg/CONFIG_* files
    Export tool configurations as cfg/CONFIG_* files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    generate pkg-config files
    Minor build cleanups
    
    Removed %.C and %.H from vpath (rules were deleted some time ago)
    Added %.pl to vpath for use in ioc/registry/Makefile
    configure/tools doesn't exist any more, remove from configure/Makefile
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved configure/tools perl tools to src/tools directory.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
       defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Fix so the CONFIG_APP_INCLUDE files for base get included.
    Added CONFIG_TARGETS so we build CONFIG_APP_INCLUDE
    (needed for SHRLIB_SEARCH_DIRS)
    Updated license comments.
    Removed reference to installEpics.
    new way to build
    new way to build
    Tools installed into <install_location>/config/tools.
    Fixed install of tools files.
    More config file changes for R3.14.
    changes for 3.14
    install tools
    new way to build
    new build method
    added
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Drop R3.13 VxWorks-only OBJLIBS build targets and rules
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed incorrect comment lines
    configure: Fix for Ben's INC_osclass issue
    
    Janet developed the fix, I documented it.
    Makefile cleanup
    
    Various minor changes to comments and build variable names.
    Added code for TESTLIBRARY
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Deleted remaining references to sun4 (mostly in comments).
    Allow INC_<OS_CLASS> definitions.
    Added TESTSCRIPT definitions
    Added LIB_INSTALLS, libraries to install.
    Install files listed in INC_vxWorks into include/os/vxWorks etc.
    Added loadable library definitions and rules
    Updated comments.
    Changes for shared libraries and os consistancy.
    Allow PROD_RCS and LIB_RCS.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Added USR_OBJS.
    Added USR_SRCS
    Added additional T_A rules for USR_CFLAGS, USR_CXXFLAGS, and USR_CPPFLAGS.
    Updated license comments.
    Added LDOBJS for linking with R3.13 *Lib object files without trailing .o.
    Changed definitions for creation of shared libraries.
    Added SCRIPTS_HOST and SCRIPTS_IOC.
    Changes to create vxWorks archive libraries and prods.
    Removed SNCFLAGS
    Allow osclass definitions for PROD_OBJS, LIB_OBJS, and LIB_SRCS.
    Removed HTMLS_<osclass> and added SHR_LIBS_<osclass>
    Added sequencer flags.
    Added TESTPROD.
    Added LIBOBJS.
    Added SRCS and PROD_SRCS
    Removed references to LIBSRCS_HOST and LIBSRCS_IOC.
    Added HTMLS.
    Removed references to PRODMT.
    Added strip function to if tests.
    Removed duplicate lines.
    Changed LIB to LIBRARY and made a few bug fixes.
    new way to build
    convertRelease: Restore $Bin to @INC
    
    This is needed when convertRelease.pl gets run before the
    EPICS::Path and EPICS::Release modules are installed, and
    after 'make uninstall' has deleted the lib/perl directory.
    skip RELEASE_TOPS
    GNU Make 3.81 (as used on Travis) doesn't have 'undefine'
    configure/CONFIG: Undefine EHA after use
    Move EpicsHostArch.pl into src/tools, install to lib/perl
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Do build config checks instead of crashing
    Set EPICS_HOST_ARCH in the environment, not just locally
    
    This is essential for submodules, which now need that value to load
    the right modules/RELEASE.<host>.local file which gives them their
    path to EPICS_BASE (they can't set it for themselves without knowing
    that path because the startup directory is part of core!).
    Export tool configurations as cfg/CONFIG_* files
    Export tool configurations as cfg/CONFIG_* files
    Set path to msi in CONFIG for individual module builds
    
    This approach doesn't solve the problem of how to get to these
    tools for the next module in the chain though, we need to install
    a CFG file with these definitions in them, in place of the central
    CONFIG_BASE file. This fixes it for now though.
    Freeze SONAME=3.17.0
    configure: use $(abspath) for executables
    ioc: add module version numbering
    Change paths for tools from this module
    Structural changes to create database module
    Structural changes to create ca module
    configure: use $(abspath) for running local executables
    Structural changes to create libcom module
    configure: Fix include CONFIG_APP_INCLUDE
    which needs to happen *after* CONFIG_SITE overrides.
    Removed Revision-Id from configure; still one Date
    Make including cfg/CONFIG* files unconditional
    configure: Cosmetic changes only, comments & spacing.
    configure: Support for cfg/TOP_RULES* and cfg/DIR_RULES*
    
    Idea and initial implementation from Benjamin Franksen,
    I added the DIR_RULES and ACTIONS support.
    Reverses the order in which cfg/CONFIG* files are included.
    configure: Refined how/when we pull in <top>/cfg files
    
    Only read CONFIG* and RULES* files,
    and only do so in build dirs, i.e. when T_A is defined.
    configure: Deleted CONFIG_COMPAT (3.13 compatibility)
    configure: Use := variable to set EPICS_HOST_ARCH if undefined.
    
    Performance on Cygwin when using ?= is glacial...
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Run EpicsHostArch.pl if EPICS_HOST_ARCH is not set.
    Only calculate RELEASE_TOPS once.
    Removed all references to CONFORM flags in configure files.
    Moved includes for installed and RELEASE config files from RULES_TOP.
    Allow apps and extensions to define CONFIG.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
    defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    If $(top)/CONFIG_BASE_VERSION exists we are doing a base build.
    Added include for RELEASE.<epics_host_arch>.Common
    Moved definitions INSTALL_LOCATION and CONFIG.
    include CONFIG_BASE_VERSION *after* CONFIG_SITE.
    Replace all the $(HOME)/... includes with a minimal and sufficient set
    which will not cause problems if $(HOME) is also a regular <top>.
    Support for configure/RELEASE.<hostarch>.<targetarch> files
    Syntax change for CONFIG definition. Added RELEASE.host.target include.
    Fix so the CONFIG_APP_INCLUDE files for base get included.
    Updated license comments.
    Modified comment.
    Updated comments
    undo last commit
    change /configure to
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Moved include CONFIG_SITE.Host.<host>.
    Changed HOST_ARCH to EPICS_HOST_ARCH. Include os/CONFIG_COMPAT.
    Moved include for CONFIG_SITE.Host.<host_arch>.
    Fixed opt and warn flags.
    new way to build
    File cleanup.
    More config file changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    new for 3.14; replaces config
    Set next development version
    Update version numbers for release
    Set next development version
    Update version numbers for release
    Set next development versions
    Update version numbers for release
    
    With both libcom and database having minor version bumps I
    concluded that this couldn't be 7.0.3.2 and should really
    be numbered 7.0.4
    Update versions after tagging
    Set version number to 3.15.8, clear snapshot
    Incr version and set snapshot/development flags
    Clear development flags for 7.0.3.1
    Update version numbers for 3.15.8-DEV (3.15.7.1-DEV)
    Update version numbers
    
    Also contains some reformatting in README.md
    Update versions after tag, set DEVELOPMENT_FLAG/DEV_SNAPSHOT
    Update version numbers for Base and internal modules
    
    Clear EPICS_DEV_SNAPSHOT flag for tagging.
    Update Base version numbers for next patch release
    Update libcom and base version numbers, no -DEV
    Change -DEV to be based on next patch release number
    Changes after creating the 7.0.2.1 tag
    Set Base version to 7.0.2.1 (final)
    Reset snapshot to -DEV after tagging
    Set snapshot for final 7.0.2 release
    Reset version snapshot after tagging
    Clear version snapshot for final release
    Update version to -rc1-DEV after tagging.
    Set version to 7.0.2-rc1
    Set version to -DEV after -rc1 tagged
    Set version to 3.16.2-rc1
    Set version to 3.15.6-DEV, prepare new release notes chapter
    Update version to 3.15.6, remove "not released" from release notes
    Version number update to 3.15.6-rc1-DEV
    Update version to 3.15.6-rc1
    Set EPICS_DEV_SNAPSHOT for the final 3.14.12.8 release
    Post-tag version number update
    Update version number to 3.14.12.8-rc1
    Reset SNAPSHOT to -DEV after tagging 3.14.12.7
    Set SNAPSHOT for 3.14.12.7 final release
    Update patch level and snapshot after tagging release
    Clear SNAPSHOT in Base version for 7.0.1.1
    Set SNAPSHOT after tagging release
    Clear SNAPSHOT in Base version for 7.0.1
    Set snapshot to -rc1-DEV
    About to tag 3.14.12.7-rc1
    Set snapshot to -rc1-DEV after tagging
    Set version snapshot to -rc1
    Set snapshot to -pre1-DEV, post-tag
    
    This seems illogical, shouldn't it now be -rc1-DEV now?
    Set version 7.0.1-pre1 in CONFIG_BASE_VERSION
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: set Base version to 7.0.1-DEV
    Reset snapshot to -DEV
    Clear version snapshot for 3.16.1 final release
    Set snapshot to -rc1-DEV
    Set Base version number for 3.16.1-rc1
    Set version to 3.15.5-DEV, close 3.15.5 chapter in release notes
    Update CONFIG_BASE_VERSION for 3.15.5, remove "not released" from RELEASE_NOTES
    Set SNAPSHOT back to -DEV
    Set SNAPSHOT for 3.14.12.6
    Set snapshot to -rc1-DEV
    Set snapshot to -rc1-DEV
    Set version to 3.14.12.6-rc1
    Update version to 3.15.5-rc1
    Update version to 3.15.5-pre1-DEV
    Update version to 3.15.5-pre1
    Update version to 3.14.12.6-pre1-DEV
    Update version to 3.14.12.6-pre1
    Set version to 3.15.4-DEV, close 3.15.4 chapter in release notes
    Update CONFIG_BASE_VERSION for 3.15.4, remove "not released" from RELEASE_NOTES
    Reset SNAPSHOT after -rc1 tagged
    Removed commit date from CONFIG_BASE_VERSION
    Removed Revision-Id from configure; still one Date
    Update CONFIG_BASE_VERSION for 3.15.4-rc1
    Set Base version to -pre1-DEV
    Update CONFIG_BASE_VERSION for 3.15.4-pre1
    The usual post-tag updates
    CONFIG_BASE_VERSION for R3.16.0.1
    Set version back to -DEV, add "not released" to RELEASE_NOTES
    Update CONFIG_BASE_VERSION for 3.15.3, remove "not released" from RELEASE_NOTES
    Set Base version to -rc1-DEV
    configure: update CONFIG_BASE_VERSION for 3.15.3-rc1
    Set Base version to -pre1-DEV
    configure: update CONFIG_BASE_VERSION for 3.15.3-pre1
    configure: set version snapshot back to -DEV
    configure: update CONFIG_BASE_VERSION for 3.15.2 (2nd time for tag move)
    configure: set version snapshot back to -DEV
    configure: update CONFIG_BASE_VERSION for 3.15.2
    configure: set version snapshot to -rc1-DEV
    configure: update CONFIG_BASE_VERSION for 3.15.2-rc1
    configure: set version snapshot to -pre1-DEV
    configure: update CONFIG_BASE_VERSION for 3.15.2-pre1
    Set SNAPSHOT back to -DEV
    Set SNAPSHOT for R3.14.12.5
    Set version number to R3.14.12.5.
    Set snapshot to -rc1-DEV
    Set version to 3.14.12.5-rc1
    Snapshot to -pre1-DEV
    Set version to 3.14.12.5-pre1
    Set version numbers for 3.16.0.0-DEV
    Set version snapshot back to -DEV
    R3.15.1
    Set version snapshot to -rc1-DEV
    Update version numbers for 3.15.1-rc1
    Set version snapshot back to -DEV
    Update version number to 3.15.0.2
    Set snapshot to 3.14.12.4-DEV
    Creating R3.14.12.3
    Set snapshot to 3.14.12.4-rc1-DEV
    Creating 3.14.12.4-rc1
    Set snapshot to 3.14.12.4-pre1-DEV
    Creating 3.14.12.4-pre1
    R3.14.13.3-DEV
    Creating R3.14.12.3
    Set snapshot to 3.14.12.3-rc1-DEV
    Creating 3.14.12.3-rc1
    Set snapshot to 3.14.12.3-pre1-DEV
    Creating 3.14.12.3-pre1
    configure: Set BASE_3_14 = NO
    
    This allows "ifdef BASE_3_14" to still mean 3.14 or later,
    but also "ifeq ($(BASE_3_14),YES)" to mean 3.14 only.
    Set version back to -DEV
    Set release version number
    R3.14.12.2-DEV
    R3.14.12.2
    Set snapshot to 3.14.12.2-rc1-DEV
    Creating 3.14.12.2-rc1
    
    Set version number, update release notes.
    Set snapshot to 3.14.12.2-pre1-DEV
    Creating 3.14.12.2-pre1
    
    Set version number, update release notes.
    R3.14.12.1-DEV
    R3.14.12.1
    R3.14.12.1-rc1-DEV
    R3.14.12.1-rc1
    configure: Set minor version number to 15
    configure: Set EPICS_DEV_SNAPSHOT back to -DEV
    R3.14.12
    R3.14.12-rc1-DEV
    R3.14.12-rc1
    R3.14.12-pre2-DEV
    R3.14.12-pre2
    R3.14.12-pre1-DEV
    R3.14.12-pre1
    libCom: Changes to epicsVersion.h generation
    
    Use DEV instead of CVS in names.
    Lower-case the -rc<n> status strings.
    Rename CVS_DATE to COMMIT_DATE.
    No Bazaar equivalent to the CVS tag $Name$ exists.
    Modernize and "use strict" in the Perl code.
    Set EPICS_CVS_SNAPSHOT to -CVS.
    R3.14.11
    Revert to -CVS for snapshots.
    R3.14.11-RC1
    Updated version to R3.14.11 and set EPICS_CVS_SNAPSHOT to -CVS.
    R3.14.10
    post-RC1 versions...
    -RC2 release.
    post-RC1 versions...
    -RC1 release.
    Added requirement comments. Moved pre1 to EPICS_CVS_SNAPSHOT.
    Post -pre1 tag.
    R3.14.10pre1
    Set EPICS_CVS_SNAPSHOT to -CVS.
    R3.14.9
    Revert to -CVS after -RC1 tag applied.
    R3.14.9-RC1
    Revert to -CVS
    R3.14.9-pre2
    Revert to -CVS for snapshots.
    Version for 3-14-9-pre1
    Set EPICS_CVS_SNAPSHOT to -CVS.
    R3.14.8.2
    Set EPICS_CVS_SNAPSHOT to -CVS.
    R3.14.8.1
    Version numbering system change.
    R3.14.8
    R3.14.7
    R3.14.6 Release.
    Ok to release.
    R3.14.4
    Added BASE_3_14 definition.
    R3.14.3
    Changes for shared libraries and os consistancy.
    R3.14.1
    R3.14.0beta2
    Updated license comments.
    R3.14.0beta1
    R3.14.0alpha3
    R3.14.0alpha2
    Set EPICS_UPDATE_LEVEL to 1
    Updated release and added cvs tag definition.
    new for 3.14; replaces config
    epics_R3_13_1_1
    epics_R3_13_1
    baseR3.13.0.beta12
    epics_R3_13_0_beta11
    epics_R3_13_0_beta10
    R3_13_0_beta9
    R3_13_0_beta8
    epics_R3_13_0_beta7
    epics_R3_13_0_beta6
    Now works with MakeRelease
    epics_R3_13_0_beta5
    Initial version.
    WIN32: osdFindSymbol() use psapi
    WIN32: Add symbol lookup
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    mingw: Fix the list of Windows OS libraries to link against
    Removed Revision-Id from configure; still one Date
    Support MinGW cross-builds on linux-x86 and x86_64
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    Removed OPT flag lines which are same as gnu compiler build defaults.
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed PROD_SYS_LIBS definition.
    Removed all references to CONFORM flags in configure files.
    Added optimization option for debug builds.
    More changes to support shared libraries and cleanup of files.
    Added shared library support.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixed CONFORM_CXXFLAGS_NORMAL definition.
    Initial version.
    Initial version.
    win32-x86-cygwin => cygwin-x86
    fixed up the cygwin build for R3.14
    Now cygwin's gcc, g++, ar, ld, and ranlib must be in user's path
    CODE flag changes for cygwin build
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Corrected/deleted WIND_HOST_TYPE to only hosts that WRS supports.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated for windows-x64 builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Set BUILD_CLASS to HOST.
    Added static cross builds for win32-x86 and windows-x64.
    Added static build config files for win32-x86 and windows-x64.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Added vxWorks-mpc8548 target (MVME4100)
    
    Config files from Ernest Williams.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Flag adjustments, from someone who has one...
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added GNU_TARGET definition.
    Added vxWorks-ppc60*_long targets.
    Removed -mlongcall option.
    Added -mlongcall option. Cosmetic changes.
    Initial version.
    Fix for timespec register problem.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed comments.
    Moved HOST_OPT macro definition.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added LINKER_USE_RPATH option.
    Added another include for site overrides.
    Added include line for CONFIG_SITE file.
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Changes to add ALL library dirs to the runtime search option on link line.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Removed references to POSIX=YES/NO.
    CC and CCC definitions changed to reflect GNU defaults.
    Used fullpath name from  SHRLIB_SEARCH_FULLPATHDIRS.
    Change test to test on BUILD_CLASS not CROSS.
    Moved LDLIBS_READLINE definition.
    Removed -mcpu compiler option. Added code for 386,486,... cross builds
    Added athlon flags.
    Moved JAVA_DIR definition to extensions/configure/os.
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Always build dynamic library search paths into executable.
    Changes for shared libraries and os consistancy.
    Don't need to add SHRLIB_SEARCH_DIRS to SHRLIB_LDFLAGS
    Changed the definition of SHRLIB_SEARCH_DIRS to be the actual dir searched
    Added implementation for solaris-sparc
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Removed if test.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    add -D_XOPEN_SOURCE=500
    Moved COMMANDLINE definitions.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Changed mpentium to mcpu=pentium. Added libs to SYS_SHRLIB_LIBS.
    Changed definitions for creation of shared libraries.
    Added -mpentium cflag.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed some comments.
    Initial version.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add a couple of example configuration files for RTEMS PowerPC targets.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Rename RTEMS MVME167 configuration file to match RTEMS BSP name.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Use EPICS commandline editing.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support MinGW cross-builds on linux-x86 and x86_64
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Moved COMMANDLINE to CONFIG_SITE.Common.win32-x86-mingw
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed path environment lines. User should put gcc in path.
    Removed cygwin per definition.
    Modified comment.
    Initial version.
    Add support for linux-aarch64 native builds
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More changes to support shared libraries and cleanup of files.
    Changes COMMANDLINE_LIBRARY set to READLINE.
    win32-x86-cygwin => cygwin-x86
    Commented out GNU_DIR
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Added vxWorks-ppc32-debug and vxWorks-ppc32sf-debug archs.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Avoid an optimizer bug that is present in the Tornado 2.x 68K C compilers at
    anything greater than -O0.  Not a problem in C++ though.
    Added GNU_TARGET definition.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Add RTEMS-pc368-qemu target, use in Travis-CI builds
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed old commented override lines. They are no longer valid.
    Modified comment lines.
    Updated comments
    Removed cross compiler target archs def.
    Modified comments.
    Changed name  GNU_TARGET_PREFIX  to CMPLR_PREFIX.
    Commented out jba changes.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    confiugre: Update the vxWorks Intel build configurations
    
    Wind River changed from cc386 to ccpentium many years ago.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added include line for CONFIG_SITE file overrides.
    Removed include for CONFIG_SITE file.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added support for vxWorks 6.6, info from Ernest Williams.
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added GNU_TARGET definition.
    Added vxWorks-ppc60*_long targets.
    Removed -mlongcall option.
    Added -mlongcall option. Cosmetic changes.
    Fix for timespec register problem.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    Add config for linux cross-compile to windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed references to VxWorks 5.x
    Initial version
    Initial version
    Initial version
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Always have linker search INSTALL_LIB
    Modified suffix for TESTSHRLIBNAME
    Stopped install of test libraries and removed version number in test library name.
    configure: Added FULLPATHNAME tool variable
    
    Changed os/CONFIG files where we use the fullPathName.pl script.
    configure: Fix DEPLIBS search order for Windows DLLs
    
    Must search for the DLLSTUB library before the SHRLIB one.
    This commit also cleans up some comments about MSVC settings.
    configure: Minor fixes
    
    Don't add extraneous characters when SHRLIB_VERSION or GNU_TARGET
    are empty.  The addprefix or addsuffix functions only include the
    prefix/suffix part if the list argument is not empty.
    
    This fixes issues naming libCap5.so at build-time.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    Added code for TESTLIBRARY
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    $(SHRLIB_PREFIX) $(LIB_PREFIX) mismatch
    Removed archive and shared split of prod libs.
    Modified STATIC build. Make all *_SYS_LIBS dynamic.
    Test non SYS_LIBS for dynamic or archive.
    Changes to allow LOADABLE_LIBRARY to work for borland and MS compilers.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Use PERL macro definition.
    Changes to add ALL library dirs to the runtime search option on link line.
    Implemented LOADABLE_SHRLIB_VERSION.
    Simplified SHRLIB_SEARCH_FULLPATHDIRS definiton.
    Defines fullpath name only for rpath and -R dirs on link lines.
    Added SHRLIB_SEARCH_DIRS  using fullpathname.
    Does not make sense to have a version number on loadable libraries.
    Set loadable library prefix to lib.
    Removed references to LIB_EXT.
    Added loadable library definitions and rules
    Changes for shared libraries and os consistancy.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Moved STATIC_LDFLAGS out of LDFLAGS.
    See http://www.aps.anl.gov/epics/mantis/view_bug_advanced_page.php?f_id=20
    Changed $*_LIBS to $*_LDLIBS.
    Changed definitions for creation of shared libraries.
    Changed SHRLIBNAME to  SHRLIBNAME_YES.
    Changes to create vxWorks archive libraries and prods.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Removed LDCMD
    Added LDCMD definition.
    Removed ANSI and CPLUSPLUS
    Added SHRLIB dependancy definitions
    LINK definition changes.
    More small changes for HP-UX (hpux-parisc)
    Changes and renames for CFLAGS.
    Changed order of definitions.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed all references to CONFORM flags in configure files.
    Initial version.
    Cross-builds of 64-bit MinGW should inherit from 32-bit
    
    Don't duplicate, this file missed an important change as a result.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    mingw: Fix the list of Windows OS libraries to link against
    Support MinGW cross-builds on linux-x86 and x86_64
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    Removed OPT flag lines which are same as gnu compiler build defaults.
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed PROD_SYS_LIBS definition.
    Removed all references to CONFORM flags in configure files.
    Added optimization option for debug builds.
    More changes to support shared libraries and cleanup of files.
    Added shared library support.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixed CONFORM_CXXFLAGS_NORMAL definition.
    Initial version.
    Initial version.
    win32-x86-cygwin => cygwin-x86
    fixed up the cygwin build for R3.14
    Now cygwin's gcc, g++, ar, ld, and ranlib must be in user's path
    CODE flag changes for cygwin build
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Initial version. File contributed by Ernest Williams, SNS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added includes for CONFIG_SITE files for hostarch.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS=HOST.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    configure: change Posix definition from 199506L to 200112L
    needed to be able to use spinlocks
    configure: Link with libdl on Solaris 8 and 9 (but not 10).
    RUNTIME_LDFLAGS now set in CONFIG_COMMON. Use LINKER_USE_RPATH for
    readline dir.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added LINKER_USE_RPATH option.
    Moved SHRLIB_CFLAGS definition.
    Added code to use stLport library instead of default Cstd library.
    Move KPIC line. Added solaris10 ldlibs option.
    Use READLINE_DIR insead of using GNU_DIR.
    Set SHRLIB_CFLAGS to -KPIC.
    Changes to add ALL library dirs to the runtime search option on link line.
    Removed references to POSIX=YES/NO.
    Changes for cross builds.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    Put all -R directories in RUNTIME_LDFLAGS.
    Defines fullpath name only for rpath and -R dirs on link lines.
    Removed old solaris 6 specific compiler options.
    Changes for -mt flag and READLINE library defininitions.
    Added -mt option to compile line and link line.
    Change test to test on BUILD_CLASS not CROSS.
    Needed to build on Solaris 9.
    Always build dynamic library search paths into executable.
    Changes for shared libraries and os consistancy.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Updates for solaris version.
    add -D_XOPEN_SOURCE=500
    define a macro with the solaris version in it
    Changed definitions for creation of shared libraries.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed CC and CCC defs because they are in CONFIG.gnuCommon
    Initial version. File contributed by Ernest Williams, SNS.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version - linux-cris files from Peter Zumbruch at GSI.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved HOST_OPT from CONFIG_SITE file to CONFIG file.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved SHRLIB_CFLAGS definition.
    Moved common code into new file CONFIG.solarisCommon.solarisCommon.
    Added -Qn to CPP because snc sometimes does not like #ident lines.
    Updated to look more like CONFIG.solaris-sparc.solaris-sparc.
    Changed OP_SYS_LDFLAGS to +=.
    Added loadable library definitions and rules
    Changes for shared libraries and os consistancy.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Modified profiling definitions.
    Fixed profiling option.
    Remove cmplr DEPENDS options and simplify .depends build rules.
    Changed definitions for creation of shared libraries.
    removed explicit template mechanism
    Use solaris compiler for HDEPENDS.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Changes to automatically generate header dependancy files.
    Changed to gnu compiler for depends rule.
    Changed CCC to CC in CPP definition.
    added LD definition
    Removed ANSI and CPLUSPLUS
    Added gnu compiler ldlibs. Added lib rt.
    Fixed comments.
    Initial version
    Moved thread libraries to CCC_STATIC_LDLIBS_NO.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Comment out cross-development targets accidentally enabled.
    Add new site-specific file.
    Commented out all cross compiler target archs.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    += HPUX using gnu compiler
    Removed accidental commit changes.
    change daylight savings time
    Updated comments
    Enable shared libraries for linux-x86.
    Initial version.
    merged_epics_R3_13_1_branchToTrunk
    Second installment of shared library changes.
    Config changes for extensions and config simplification.
    installed
    Major revision of config directory again.
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Add support for native linux-arm builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Initial version - linux-cris files from Peter Zumbruch at GSI.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added GNU_TARGET definition.
    Added vxWorks-ppc60*_long targets.
    Removed -mlongcall option.
    Added -mlongcall option. Cosmetic changes.
    Initial version.
    Fix for timespec register problem.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Fixes to iOS build rules
    
    From Tom Pelaia, these should now allow compiles for the
    x86-based simulator as well as for ARM-based devices.
    configure: Update Apple iOS builds
    
    * Default IOS_VERSION to 5.0
    * Allow ARMv6 and ARMv7 universal binaries by setting ARCH_CLASS
    * Switch from g++ to clang++
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Modified APS override of GNU_DIR.
    Moved APS override of GNU_DIR here.
    Initial version
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Add cross-builds for linux-aarch64
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS and HOST_OPT definitions.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Adjust a few CONFIG_SITE files, mostly comments
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version. File contributed by Ernest Williams, SNS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure/os: Add the missing darwin architecture combinations.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Reorganized OS X support.
    Define darwin. Changes to avod warnings, OPT flags, and order of includes.
    Readline is part of Mac OS X now, so use it.
    Added OP_SYS_CFLAGS += -g.
    Remove OP_SYS_CFLAGS += -g.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Show typical usage as a comment.
    Rename file to reflect correct usage.
    Shared libraries are now enabled by default.
    Command-line editing selection should be in a SITE file.
    Add support for DarwinPorts as well as for Fink.
    Enable shared libraries on Darwin.
    New configuration files for Mac OS X (Darwin).
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Comment out cross-development targets accidentally enabled.
    Add new site-specific file.
    Commented out all cross compiler target archs.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Updated comments
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Link with libdl on Solaris 8 and 9 (but not 10).
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added code to use stLport library instead of default Cstd library.
    Put all -R directories in RUNTIME_LDFLAGS.
    Added -D_REENTRANT to CPPFLAGS.
    Moved -mt option to COMPILER_CPPFLAGS.
    Added -mt to compile line and link line of solaris compiler builds.
    Fix for COMMANDLINE_LIBRARY = EPICS and no LD_LIBRARY_PATH.
    Needed for building on Solaris 9
    Removed Crun library.
    Removed Cstd library.
    Initial version
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Configure linux targets to detect GNU Readline automatically
    Add ENABLE_ASAN mechanism for developer use
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Adjust linux-x86 & -x86_64 flags
    
    Moved -m64 from ARCH_DEP_*FLAGS to OP_SYS_*FLAGS where it is on -x86.
    Added GNU_TUNE_CFLAGS to -x86_64, adjust related comments
    Added -D_FILE_OFFSET_BITS=64 to -x86 builds
    Added OPT_CXXFLAGS_YES += -g
    Added OPT_CXXFLAGS_YES += -g
    configure/linux: Move -g option to OPT_CFLAGS_YES
    
    We were adding it to OP_SYS_CFLAGS but if HOST_OPT=NO
    you then get two -g options on the gcc command line.
    configure: Adjust instructions for switching to clang
    configure: Show how to switch to clang on Linux.
    docs: Update notes and comments about readline settings.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Make it easier to select which if any curses library to link with for readline.
    Changes to add ALL library dirs to the runtime search option on link line.
    Initial version. File contributed by Ernest Williams, SNS
    Added OP_SYS_CFLAGS += -g.
    Remove OP_SYS_CFLAGS += -g.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Moved LDLIBS_READLINE definition.
    Make the readline the default on linux IOCs.
    Changes for shared libraries and os consistancy.
    Make readline inclusion a matter of uncommenting only 1 line (half the effor!).
    Modified comments about SHRLIB_SEARCH_DIRS
    Make SHARED_LIBRARIES=YES. Modified comment.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    Moved COMMANDLINE definitions.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Support MinGW cross-builds on linux-x86 and x86_64
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Cosmetic changes in configure/os
    Applied rtems-build-gesys-loadable-objects.patch
    RTEMS: Bump the version number
    
    Also show the other COMMANDLINE_LIBRARY choices.
    Use $(RTEMS_VERSION) in default path to RTEMS_BASE.
    Separate BASE and TOOLS locations
    Update version.
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Commented out OP_SYS_CFLAGS. Removed APS specific definition.
    New base uses new version of RTEMS.
    Fixed typo if commandline library definition.
    VX_DIR definition now in os/CONFIG_SITE.Common.vxWorksCommon
    RTEMS_BASE (and RTEMS_VERSION) now in os/CONFIG_SITE.Common.RTEMS
    Don't require add-on packages.
    Improve grammar in comments.
    Add some comments.
    Provide an easy location to override input library.
    Add support for MVME2100.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Adjust a few CONFIG_SITE files, mostly comments
    Moved HOST_OPT macro definition.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added includes for host's CONFIG_SITE files. Changed all to -include.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS=HOST.
    Added files for debug cross builds.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More changes to support shared libraries and cleanup of files.
    Changes COMMANDLINE_LIBRARY set to READLINE.
    win32-x86-cygwin => cygwin-x86
    Commented out GNU_DIR
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    gcc now needs RTEMS_BASE/lib in LD_LIBRARY_PATH.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Adjust linux-x86 & -x86_64 flags
    
    Moved -m64 from ARCH_DEP_*FLAGS to OP_SYS_*FLAGS where it is on -x86.
    Added GNU_TUNE_CFLAGS to -x86_64, adjust related comments
    Added -D_FILE_OFFSET_BITS=64 to -x86 builds
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build both Host and Ioc targets during a cross build.
    Set valid builds to Ioc for cross builds.
    Simplified code. Added flag for 32/64 bit. GNU_TARGET now in CONFIG_SITE*.
    Initial version. File contributed by Ernest Williams, SNS
    CC and CCC definitions changed to reflect GNU defaults.
    Used fullpath name from  SHRLIB_SEARCH_FULLPATHDIRS.
    Change test to test on BUILD_CLASS not CROSS.
    Moved LDLIBS_READLINE definition.
    Removed -mcpu compiler option. Added code for 386,486,... cross builds
    Added athlon flags.
    Moved JAVA_DIR definition to extensions/configure/os.
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Always build dynamic library search paths into executable.
    Changes for shared libraries and os consistancy.
    Don't need to add SHRLIB_SEARCH_DIRS to SHRLIB_LDFLAGS
    Changed the definition of SHRLIB_SEARCH_DIRS to be the actual dir searched
    Added implementation for solaris-sparc
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Removed if test.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    add -D_XOPEN_SOURCE=500
    Moved COMMANDLINE definitions.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Changed mpentium to mcpu=pentium. Added libs to SYS_SHRLIB_LIBS.
    Changed definitions for creation of shared libraries.
    Added -mpentium cflag.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Adjust a few CONFIG_SITE files, mostly comments
    Moved HOST_OPT macro definition.
    Initial version debug targets.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Separate BASE and TOOLS locations
    New tool chain does not need (and must not have) -m5200 in addition to -m528x.
    Add uC5282 support.
    Add rtemsNfs to all RTEMS targets.
    New BSP -- updated network configuration.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Add support for MVME2100.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Update readline libraries and dont have readline the default
    More fixes for Cygwin builds.
    More changes needed for Cygwin.
    Various updates for building on Windows/Cygwin/MinGW
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More changes to support shared libraries and cleanup of files.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version - linux-cris files from Peter Zumbruch at GSI.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    Replaced -G with -shared -fPIC  in shrlib LDFLAGS.
    Changed OP_SYS_LDFLAGS to +=.
    Added loadable library definitions and rules
    Changes for shared libraries and os consistancy.
    Removed include for CONFIG.Common.UnixCommon.
    added LD definition
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Corrected/deleted WIND_HOST_TYPE to only hosts that WRS supports.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated for windows-x64 builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed references to VxWorks 5.x
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Include linux-x86 file.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Initial version. File contributed by Ernest Williams, SNS
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Configure linux targets to detect GNU Readline automatically
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: Added linux-microblaze target files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    configure: Link with libdl on Solaris 8 and 9 (but not 10).
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added code to use stLport library instead of default Cstd library.
    Put all -R directories in RUNTIME_LDFLAGS.
    Added -D_REENTRANT to CPPFLAGS.
    Moved -mt option to COMPILER_CPPFLAGS.
    Initial version
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Configure linux targets to detect GNU Readline automatically
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Cosmetic changes in configure/os
    Adjust a few CONFIG_SITE files, mostly comments
    Added OPT_CXXFLAGS_YES += -g
    Added OPT_CXXFLAGS_YES += -g
    configure: Reformat/reword comments in CONFIG_SITE
    
    Also moved the GNU_TUNE_CFLAGS setting into the file
    os/CONFIG_SITE.Common.linux-x86 since it is arch-specific.
    configure/linux: Move -g option to OPT_CFLAGS_YES
    
    We were adding it to OP_SYS_CFLAGS but if HOST_OPT=NO
    you then get two -g options on the gcc command line.
    configure: Adjust instructions for switching to clang
    configure: Show how to switch to clang on Linux.
    Move linux-x86 GNU compiler tune c flag setting to CONFIG_SITE file.
    Added comment about specifying specific machine type and/or cpu type
    docs: Update notes and comments about readline settings.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Make it easier to select which if any curses library to link with for readline.
    Changes to add ALL library dirs to the runtime search option on link line.
    SHRLIB_SEARCH_DIRS -> SHRLIB_SEARCH_FULLPATHDIRS (reflecting changes in the build system)
    Added OP_SYS_CFLAGS += -g.
    Remove OP_SYS_CFLAGS += -g.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Moved LDLIBS_READLINE definition.
    Make the readline the default on linux IOCs.
    Changes for shared libraries and os consistancy.
    Make readline inclusion a matter of uncommenting only 1 line (half the effor!).
    Modified comments about SHRLIB_SEARCH_DIRS
    Make SHARED_LIBRARIES=YES. Modified comment.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    Moved COMMANDLINE definitions.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved linux-arm cross-build link-time settings
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added generic PPC32 targets for vxWorks 6.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fix RPATH and readline for linux-arm cross-builds
    Moved linux-arm cross-build link-time settings
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixes for cross-compiling shared libraries properly.
    Initial version.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Adjust a few CONFIG_SITE files, mostly comments
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Build support for 64-bit iPhone Simulator
    
    From Tom Palaia.
    configure: Support Apple Xcode 5.0 and iOS 7.0
    
    Not tested on the 64-bit ARMv8 architecture, although it should be
    compatible (confirmation would be welcome).
    Apple iOS updates from Tom Pelaia
    
    Adds iOS 6.0, which is now the default.
    - changed the default iOS SDK to version 6.0
    - use xcrun to locate the selected compiler
    - added armv7s as an option for architecture
    - made armv7 + armv7s the default architecture
    - renamed the LLVM compiler option to LLVM_GNU for clarity
      since LLVM is naturally associated with CLANG
    configure: Cleanup MacOS and iOS build settings
    
    Makes it easy for users to select which compiler to use.
    configure: Update Apple iOS builds
    
    * Default IOS_VERSION to 5.0
    * Allow ARMv6 and ARMv7 universal binaries by setting ARCH_CLASS
    * Switch from g++ to clang++
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved HOST_OPT from CONFIG_SITE file to CONFIG file.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed EPICS_BASE_TOOLS_BIN to EPICS_BASE_BIN in PATH.
    More changes to support shared libraries and cleanup of files.
    Added EPICS_BASE_TOOLS_BIN to PATH - find dlls for antelope, e_flex ...
    win32-x86-cygwin => cygwin-x86
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed incorrect comment lines
    Deprecate and remove all uses of PATH_FILTER
    Concatenated database definition files
    Fixed comments
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    configure: Replace COMMENT with NOP in ECHO
    
    Using COMMENT the ECHO command drops the whole line under -s,
    whereas using NOP (':') only drops up to the next ';' terminator.
    configure: Replace REM with perl -e ''
    
    Another good idea from Ben Franksen...
    configure: Fix 'make -s' on Windows
    
    Use REM instead of '#' to disable @echo commands.
    Thanks to Ben Franksen for the hint.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed unneeded ECHO definition.
    Changed EPICS_BASE_TOOLS_BIN to EPICS_BASE_BIN in PATH.
    More changes to support shared libraries and cleanup of files.
    Use perl ExtUtils for CP, MV, RM, and RMDIR macro definitions.
    Initial version.
    Added EPICS_BASE_TOOLS_BIN to PATH - find dlls for antelope, e_flex ...
    Removed no longer used TOUCH definition.
    Define HOME if not already defined.
    Updated comment
    Initial version.
    turn of omnipresent USE DEFAULT STACK -D
    Modified touch definition.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Initial version. File contributed by Ernest Williams, SNS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    New configuration files for Mac OS X (Darwin).
    Added configuration files for the MVME2100 running Linux, both cross
    and self-hosted compilation supported (but you don't want to use the
    self-hosted if you can help it!).  Assumes the standard Hard Hat
    Linux install locations for the cross-development tools.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Define an ALTIVEC macro for conditional compilation of altivec-specific code.
    Prevent vxWorks 5.4 builds of altivec targets.
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    MinGW: Replace -Wno-format with -D__USE_MINGW_ANSI_STDIO
    Disable printf() format warnings on MinGW, they're broken
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    Removed Revision-Id from configure; still one Date
    Support MinGW cross-builds on linux-x86 and x86_64
    Stopped install of test libraries and removed version number in test library name.
    configure: MinGW is not a Posix architecture.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    Added code for TESTLIBRARY
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More changes to support shared libraries and cleanup of files.
    Fixed OP_SYS_CPPFLAGS definition.
    Added shared library support.
    Dont do a STATIC build.
    Added D_cplusplus c++ compiler option. Undefined LIBRARY_LD_RESS.
    Modified comments.
    no need to define _x86_ and _win32 for mingw cpp
    some progress, more to go
    Removed posix flags.
    Removed references to POSIX=YES/NO.
    Added system library names.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Added static build config files for win32-x86 and windows-x64.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed comments.
    Moved HOST_OPT macro definition.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    Define darwin. Changes to avod warnings, OPT flags, and order of includes.
    Readline is part of Mac OS X now, so use it.
    Moved JAVA_DIR to extensions/configure/os
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Shared libraries are now enabled by default.
    Command-line editing selection should be in a SITE file.
    Minor cosmetic change.
    Add support for DarwinPorts as well as for Fink.
    Clarify command-line editing library selection.
    Don't want gnuCommon -shared flag on Darwin.
    Ensure that dynamic library install name is an absolute path.
    New developer tools can use more of the standard GNU toolchain options.
    Make command-line editing optional.
    Clean up -pedantic flag.
    Add support for objective-C.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Use correct file name when CONFIG_COMPAT is mapping Darwin to darwin-ppc.
    Don't use C preprocessor precompiled headers when converting sequencer files.
    Shared libraries work fine on Darwin now, so selection of shared libraries can be left up to CONFIG_SITE.
    New developer tools (gcc-3.1) are better at using precompiled headers so
    there's no longer any need to specify -fno-cpp-precomp.
    Continue changes aimed at supporting shared libraries.  They 'almost' work
    now, but there seems to be some problems with getting the right version
    when multiple libraries provide a routine.
    Changes to get more extensions to build.
    More attempts at getting shared libraries to work.
    Small change to clean up the way flags are set and to prepare for addition
    of shared libraries.
    New configuration files for Mac OS X (Darwin).
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved linux-arm cross-build link-time settings
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Build support for 64-bit iPhone Simulator
    
    From Tom Palaia.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    CC and CCC definitions changed to reflect GNU defaults.
    Initial version
    merged_epics_R3_13_1_branchToTrunk
    Second installment of shared library changes.
    Config changes for extensions and config simplification.
    installed
    Major revision of config directory again.
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed CMPLR_PREFIX and CMPLR_SUFFIX definitions.
    Added defines to make this a non cross build.
    Initial version.
    Add support for linux-aarch64 native builds
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed BUILD_CLASS def.
    Modified locations of OPT and  BUILD_CLASS defintions.
    Initial version. File contributed by Ernest Williams, SNS
    Add RTEMS-pc368-qemu target, use in Travis-CI builds
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Corrected/deleted WIND_HOST_TYPE to only hosts that WRS supports.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated comments
    Fixed comments.
    Initial version
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    configure: change Posix definition from 199506L to 200112L
    needed to be able to use spinlocks
    configure: Link with libdl on Solaris 8 and 9 (but not 10).
    RUNTIME_LDFLAGS now set in CONFIG_COMMON. Use LINKER_USE_RPATH for
    readline dir.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added LINKER_USE_RPATH option.
    Fix link problem Mark Rivers reported.
    Link with Solaris libumem.so for better threaded malloc/free performance.
    Moved SHRLIB_CFLAGS definition.
    Added code to use stLport library instead of default Cstd library.
    Removed YES_ from POSIX_CPPFLAGS_YES_* lines.
    Use READLINE_DIR insead of using GNU_DIR.
    Set SHRLIB_CFLAGS to -xcode=pic32.
    Changes to add ALL library dirs to the runtime search option on link line.
    Added OP_SYS_LDLIBS definition for solaris 10.
    Removed references to POSIX=YES/NO.
    Changes for cross builds.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    Put all -R directories in RUNTIME_LDFLAGS.
    Defines fullpath name only for rpath and -R dirs on link lines.
    Removed old solaris 6 specific compiler options.
    More changes for -mt flag.
    Added -mt to compile line and link line of solaris compiler builds.
    Change test to test on BUILD_CLASS not CROSS.
    Needed for building on Solaris 9
    Moved JAVA_DIR definition to extensions/configure/os.
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Always build dynamic library search paths into executable.
    Use shared readline library.
    Added definitions for READLINE library.
    Changes for shared libraries and os consistancy.
    Don't need to add SHRLIB_SEARCH_DIRS to SHRLIB_LDFLAGS
    Changed the definition of SHRLIB_SEARCH_DIRS to be the actual dir searched
    Added implementation for solaris-sparc
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    add -D_XOPEN_SOURCE=500
    Added SOLARIS_VERSION so uname executed not executed on each compile line.
    define a macro with the solaris version in it
    Changed definitions for creation of shared libraries.
    Updated to solaris 8 POSIX flags.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Uncommented DEPLIB_LDFLAGS definition
    Removed ANSI and CPLUSPLUS
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    darwin: Add Homebrew settings to CONFIG_SITE
    Removed Revision-Id from configure; still one Date
    Move DarwinPorts and Fink usage definitions to a CONFIG_SITE file
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Changed += to = to become ARCH_DEP_CFLAGS override.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    GNU_TARGET now in CONFIG_SITE file. Flag for 32 bit build added.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Added VALID_BUILDS = Ioc.
    Change test to test on BUILD_CLASS not CROSS.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support MinGW cross-builds on linux-x86 and x86_64
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    o cosmetic change CONFIG_COMMON
    o removed setting of default i586 arch from mingw and cygwin CONFIG_SITE
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    Initial version. Has commented lines for new MinGW_w32 compiler version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added file on R3.14 branch.
    Initial version.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Configure linux targets to detect GNU Readline automatically
    Add ENABLE_ASAN mechanism for developer use
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Adjust linux-x86 & -x86_64 flags
    
    Moved -m64 from ARCH_DEP_*FLAGS to OP_SYS_*FLAGS where it is on -x86.
    Added GNU_TUNE_CFLAGS to -x86_64, adjust related comments
    Added -D_FILE_OFFSET_BITS=64 to -x86 builds
    Added OPT_CXXFLAGS_YES += -g
    Added OPT_CXXFLAGS_YES += -g
    configure: Reformat/reword comments in CONFIG_SITE
    
    Also moved the GNU_TUNE_CFLAGS setting into the file
    os/CONFIG_SITE.Common.linux-x86 since it is arch-specific.
    configure/linux: Move -g option to OPT_CFLAGS_YES
    
    We were adding it to OP_SYS_CFLAGS but if HOST_OPT=NO
    you then get two -g options on the gcc command line.
    configure: Adjust instructions for switching to clang
    configure: Show how to switch to clang on Linux.
    Move linux-x86 GNU compiler tune c flag setting to CONFIG_SITE file.
    Added comment about specifying specific machine type and/or cpu type
    docs: Update notes and comments about readline settings.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Make it easier to select which if any curses library to link with for readline.
    Changes to add ALL library dirs to the runtime search option on link line.
    SHRLIB_SEARCH_DIRS -> SHRLIB_SEARCH_FULLPATHDIRS (reflecting changes in the build system)
    Added OP_SYS_CFLAGS += -g.
    Remove OP_SYS_CFLAGS += -g.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Moved LDLIBS_READLINE definition.
    Make the readline the default on linux IOCs.
    Changes for shared libraries and os consistancy.
    Make readline inclusion a matter of uncommenting only 1 line (half the effor!).
    Modified comments about SHRLIB_SEARCH_DIRS
    Make SHARED_LIBRARIES=YES. Modified comment.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    Moved COMMANDLINE definitions.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed all references to CONFORM flags in configure files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS and HOST_OPT definitions.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added build files for cygwin to cross-compile linux-arm targets
    
    Slightly strange combination and not actually tested, but could
    be useful for some developers -- some FPGA tool-sets come with a
    Cygwin cross-build environment for their target devices.
    configure: Don't override CROSS_COMPILER_TARGET_ARCHS on Cygwin
    
    All other host architectures have this setting commented out in
    their host-specific CONFIG_SITE.<host>.Common files, so the user
    doesn't get confused.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    win32-x86-cygwin => cygwin-x86
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated FLAGS for 64 bit build.
    Initial version.
    Changed "-xtarget=ultra -xarch=v9" to " -xarch=generic64"
    Initial version.
    Add cross-builds for linux-aarch64
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fix RPATH and readline for linux-arm cross-builds
    Moved linux-arm cross-build link-time settings
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixes for cross-compiling shared libraries properly.
    Initial version.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Added static build config files for win32-x86 and windows-x64.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    New configuration files for Mac OS X (Darwin).
    Added configuration files for the MVME2100 running Linux, both cross
    and self-hosted compilation supported (but you don't want to use the
    self-hosted if you can help it!).  Assumes the standard Hard Hat
    Linux install locations for the cross-development tools.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Add support for native linux-arm builds.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied rtems-mvme5500-needs-libbspExt.patch
    RTEMS: Changes suggested by Kate Feng
    
    * Added macros for configuring MBUF and CLUSTER space allocation
    * More MBUF and CLUSTER space on mvme3100, mvme5500 and beatnik
    * MVME5500: link with bspExt, use .elf extension like other BSPs
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Separate BASE and TOOLS locations
    Add NVRAM offset.
    Add rtemsNfs to all RTEMS targets.
    New BSP -- updated network configuration.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Configure linux targets to detect GNU Readline automatically
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Added vxWorks-mpc8548 target (MVME4100)
    
    Config files from Ernest Williams.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Avoid an optimizer bug that is present in the Tornado 2.x 68K C compilers at
    anything greater than -O0.  Not a problem in C++ though.
    Added GNU_TARGET definition.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    Add config for linux cross-compile to windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed and commented out jba overrides.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    confiugre: Update the vxWorks Intel build configurations
    
    Wind River changed from cc386 to ccpentium many years ago.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Restore the -flat_namespace linker flag on macOS
    
    Latest versions of Apple XCode require it.
    Darwin: Don't link using -flat_namespace
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Make shared library version numbers use 3 components
    configure: 3.14 merge broke darwin builds, fixing...
    configure: Darwin build settings
    
    Modify comments and defaults for darwin builds.
    Changing to use gcc wasn't working.
    configure: Added FULLPATHNAME tool variable
    
    Changed os/CONFIG files where we use the fullPathName.pl script.
    Apple iOS updates from Tom Pelaia
    
    Adds iOS 6.0, which is now the default.
    - changed the default iOS SDK to version 6.0
    - use xcrun to locate the selected compiler
    - added armv7s as an option for architecture
    - made armv7 + armv7s the default architecture
    - renamed the LLVM compiler option to LLVM_GNU for clarity
      since LLVM is naturally associated with CLANG
    Switch darwin to use mkmf for dependencies.
    
    The clang preprocessor doesn't understand -MF and we already
    have to use mkmf when building fat binaries anyway.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    configure: Remove HDEPENDS option.
    
    Setting HDEPENDS=NO no longer works and would be hard to
    fix, so this commit deletes the option completely.
    configure: Use $(PERL) variable to call perl.
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    configure: Cleanup MacOS and iOS build settings
    
    Makes it easy for users to select which compiler to use.
    Move DarwinPorts and Fink usage definitions to a CONFIG_SITE file
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Use compiler flags for header dependency file generation when possible.
    Fixed include file name CONFIG_SITE.darwinCommon.darwinCommon
    Added another include for site overrides.
    Build universal binaries, allowing sites to configure what to include.
    Added include line for CONFIG_SITE file.
    Removed all references to CONFORM flags in configure files.
    Moved $(CONFIG)/CONFIG.gnuCommon include so we can override.
    Changes to add ALL library dirs to the runtime search option on link line.
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    Define darwin. Changes to avod warnings, OPT flags, and order of includes.
    Readline is part of Mac OS X now, so use it.
    Moved JAVA_DIR to extensions/configure/os
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Shared libraries are now enabled by default.
    Command-line editing selection should be in a SITE file.
    Minor cosmetic change.
    Add support for DarwinPorts as well as for Fink.
    Clarify command-line editing library selection.
    Don't want gnuCommon -shared flag on Darwin.
    Ensure that dynamic library install name is an absolute path.
    New developer tools can use more of the standard GNU toolchain options.
    Make command-line editing optional.
    Clean up -pedantic flag.
    Add support for objective-C.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Use correct file name when CONFIG_COMPAT is mapping Darwin to darwin-ppc.
    Don't use C preprocessor precompiled headers when converting sequencer files.
    Shared libraries work fine on Darwin now, so selection of shared libraries can be left up to CONFIG_SITE.
    New developer tools (gcc-3.1) are better at using precompiled headers so
    there's no longer any need to specify -fno-cpp-precomp.
    Continue changes aimed at supporting shared libraries.  They 'almost' work
    now, but there seems to be some problems with getting the right version
    when multiple libraries provide a routine.
    Changes to get more extensions to build.
    More attempts at getting shared libraries to work.
    Small change to clean up the way flags are set and to prepare for addition
    of shared libraries.
    New configuration files for Mac OS X (Darwin).
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed old commented override lines. They are no longer valid.
    Initial version. File contributed by Ernest Williams, SNS
    Updated comments
    Added commented overrides from ornl.
    Changed name  GNU_TARGET_PREFIX  to CMPLR_PREFIX.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Added site files for Linux cross-compile.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added include lines for host build CONFIG_SITE files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS and HOST_OPT definitions.
    Fixed include lines.
    Removed bad include line.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Configure linux targets to detect GNU Readline automatically
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    docs: Update notes and comments about readline settings.
    Initial version - linux-cris files from Peter Zumbruch at GSI.
    Changes to add ALL library dirs to the runtime search option on link line.
    Initial version. File contributed by Ernest Williams, SNS
    Added OP_SYS_CFLAGS += -g.
    Remove OP_SYS_CFLAGS += -g.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Moved LDLIBS_READLINE definition.
    Make the readline the default on linux IOCs.
    Changes for shared libraries and os consistancy.
    Make readline inclusion a matter of uncommenting only 1 line (half the effor!).
    Modified comments about SHRLIB_SEARCH_DIRS
    Make SHARED_LIBRARIES=YES. Modified comment.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    Moved COMMANDLINE definitions.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved SHRLIB_CFLAGS definition.
    Moved common code into new file CONFIG.solarisCommon.solarisCommon.
    Comment out invalid white space filter.
    Filter out "invalid white space character in directive" compiler warnings
    when included headers created by win32 build.
    Added -Qn to CPP because snc sometimes does not like #ident lines.
    Changed c preprocessor from gcc to cc.
    Make SHRLIB_CFLAGS and override of previous definitions.
    Added SHRLIB_CFLAGS=-KPIC. Added -z text to shrlib link lines.
    Added loadable library definitions and rules
    Changes for shared libraries and os consistancy.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Removed purify comments.
    add -D_XOPEN_SOURCE=500
    Modified profiling definitions.
    Changed PROFILE to NO as default.
    Fixed profiling option.
    Remove cmplr DEPENDS options and simplify .depends build rules.
    define a macro with the solaris version in it
    define a macro with the solaris version in it
    Changed definitions for creation of shared libraries.
    Removed accidental commit changes.
    change daylight savings time
    removed explicit template mechanism
    Use solaris compiler for HDEPENDS.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Changes to automatically generate header dependancy files.
    Changes to create vxWorks archive libraries and prods.
    Reordered lines
    added LD definition
    Fixed parms for preprocessor.
    Change preprocessor to gnu compiler.
    Changed depends definition from Sun compiler to gnu compiler.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Moved gcc defs to CONFIG.Common.solaris-sparc
    Added pthread and thread to ldlibs for gnu compiler builds.
    Added  GCC_STATIC_LDLIBS_* libraries. Added -v to ANSI flags.
    Moved thread libraries to CCC_STATIC_LDLIBS_NO.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed old commented override lines. They are no longer valid.
    Updated comments
    Added commented overrides from ornl.
    Changed name  GNU_TARGET_PREFIX  to CMPLR_PREFIX.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Added site files for Linux cross-compile.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Added Windows-x64-debug cross-build config file
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Initial version. File contributed by Ernest Williams, SNS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    GNU_TARGET now in a CONFIG_SITE file.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Change test to test on BUILD_CLASS not CROSS.
    Initial version.
    Initial version.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Updated comments
    Added comments for ornl overrides.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed all references to CONFORM flags in configure files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Support MinGW cross-builds on linux-x86 and x86_64
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated FLAGS for 64 bit build.
    Changed "-xtarget=ultra -xarch=v9" to " -xarch=generic64"
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version - linux-cris files from Peter Zumbruch at GSI.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    DOS to Unix line-ending conversions
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    configure: Added linux-microblaze target files
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Build configuration for iOS
    Build issues for iOS
    configure: Fixes to iOS build rules
    
    From Tom Pelaia, these should now allow compiles for the
    x86-based simulator as well as for ARM-based devices.
    configure: Fix ios HDEPENDS_METHOD
    
    It changed on 3.14, but 3.15 needs a different seting.
    configure: Added FULLPATHNAME tool variable
    
    Changed os/CONFIG files where we use the fullPathName.pl script.
    conigure: Fix iOS build warning.
    
    from Tom Palaia.
    Apple iOS updates from Tom Pelaia
    
    Adds iOS 6.0, which is now the default.
    - changed the default iOS SDK to version 6.0
    - use xcrun to locate the selected compiler
    - added armv7s as an option for architecture
    - made armv7 + armv7s the default architecture
    - renamed the LLVM compiler option to LLVM_GNU for clarity
      since LLVM is naturally associated with CLANG
    Switch darwin to use mkmf for dependencies.
    
    The clang preprocessor doesn't understand -MF and we already
    have to use mkmf when building fat binaries anyway.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    configure: Remove HDEPENDS option.
    
    Setting HDEPENDS=NO no longer works and would be hard to
    fix, so this commit deletes the option completely.
    configure: Use $(PERL) variable to call perl.
    Updates to build for iOS targets
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    configure: Cleanup MacOS and iOS build settings
    
    Makes it easy for users to select which compiler to use.
    configure: Update Apple iOS builds
    
    * Default IOS_VERSION to 5.0
    * Allow ARMv6 and ARMv7 universal binaries by setting ARCH_CLASS
    * Switch from g++ to clang++
    Update iOS CONFIG files for iOS 4.3
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    Add config for linux cross-compile to windows-x64-mingw
    Support MinGW cross-builds on linux-x86 and x86_64
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved HOST_OPT from CONFIG_SITE file to CONFIG file.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    Initial version.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Avoid an optimizer bug that is present in the Tornado 2.x 68K C compilers at
    anything greater than -O0.  Not a problem in C++ though.
    Added GNU_TARGET definition.
    Added -m68040.
    Changed cpu definition.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version
    Initial version
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Add support for native linux-arm builds.
    Fix MUNCH_CMD for RTEMS-pc386 with parallel builds
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied rtems-use-macro-for-BIN2BOOT.patch
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Separate BASE and TOOLS locations
    Add rtemsNfs to all RTEMS targets.
    Add commands to build etherboot bootable image.
    Add to, don't overwrite, linker flags.
    Add comment.
    Leave low 1Mbyte of memory free for use by bootloader.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Rename RTEMS MVME167 configuration file to match RTEMS BSP name.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed unneeded include line.
    Added include lines for host build CONFIG_SITE files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Modified locations of OPT and  BUILD_CLASS defintions.
    Added files for debug cross builds.
    Deleted comment.
    Made change for make -j option. Changed name of include file.
    Fixed typo in comment.
    Initial version. File contributed by Ernest Williams, SNS
    Removed CMPLR_PREFIX and CMPLR_SUFFIX definitions.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed incorrect comment lines
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Dirk's simpler VxWorks version rules
    Removed references to VxWorks 5.x
    Add configuration for vxWorks 6.9 builds.
    Prepare configure/os to support vxWorks 6.9
    
    I don't think it will work yet though because they removed the
    taskVarLib which we use, and there may be other issues too.
    Add support for vxWorks 6.8.
    Correction: vxWorks 6.4 comes with nm in the workbench bin directory.
    Change defaults to use Tornado 2.2.2 (at APS).
    WRS moved the 'nm' program in vxWorks 6.6
    Added vxWorks version 6.4
    Changed configuration for vxWorks 6.x; now uses the same files as vx 5.x.
    Removed the vxWorks6-mvXXXX targets, use vxWorks-ppc604_long or similar.
    Added override comment.
    VX_DIR definition now in os/CONFIG_SITE.Common.vxWorksCommon
    RTEMS_BASE (and RTEMS_VERSION) now in os/CONFIG_SITE.Common.RTEMS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed file name (had comma in name).
    Initial version.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Corrected/deleted WIND_HOST_TYPE to only hosts that WRS supports.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Initial version.
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Added comments.
    += HPUX using gnu compiler
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Build universal binaries, allowing sites to configure what to include.
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Add example CONFIG_SITE files.
    Other sites aren't running RTEMS.
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    Add new site-specific file.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    += HPUX using gnu compiler
    Removed accidental commit changes.
    change daylight savings time
    Updated comments
    Enable shared libraries for linux-x86.
    Initial version.
    merged_epics_R3_13_1_branchToTrunk
    Second installment of shared library changes.
    Config changes for extensions and config simplification.
    installed
    Major revision of config directory again.
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed all references to CONFORM flags in configure files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RTEMS: Changes suggested by Kate Feng
    
    * Added macros for configuring MBUF and CLUSTER space allocation
    * More MBUF and CLUSTER space on mvme3100, mvme5500 and beatnik
    * MVME5500: link with bspExt, use .elf extension like other BSPs
    Separate BASE and TOOLS locations
    Add extended BSP library.
    Add new target.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed unneeded include line.
    Added include lines for host build CONFIG_SITE files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added HOST_OPT and BUILD_CLASS definitions.
    Added files for debug cross builds.
    Made change for make 0j option. Changed name of include file.
    Fixed typo in comment.
    Removed CMPLR_PREFIX and CMPLR_SUFFIX definitions.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    RCS Keyword mis-spelt.
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added GNU_TARGET definition.
    Added vxWorks-ppc60*_long targets.
    Removed -mlongcall option.
    Added -mlongcall option. Cosmetic changes.
    Fix for timespec register problem.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Changed += to = to become ARCH_DEP_CFLAGS override.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    GNU_TARGET now in CONFIG_SITE file. Flag for 32 bit build added.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Added VALID_BUILDS = Ioc.
    Change test to test on BUILD_CLASS not CROSS.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure/os: Add the missing darwin architecture combinations.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version. File contributed by Ernest Williams, SNS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Separate BASE and TOOLS locations
    Added support for MVME2700 (and perhaps MVME2400) as supplied by Matt Rippa.
    Add extended BSP routines.
    Add rtemsNfs to all RTEMS targets.
    New BSP -- updated network configuration.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Add support for MVME2100.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed all references to CONFORM flags in configure files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed references to VxWorks 5.x
    Initial version
    Initial version
    Initial version
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added static build config files for win32-x86 and windows-x64.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Other sites aren't running RTEMS.
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    Add new site-specific file.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    += HPUX using gnu compiler
    Removed accidental commit changes.
    change daylight savings time
    Updated comments
    Enable shared libraries for linux-x86.
    Initial version.
    merged_epics_R3_13_1_branchToTrunk
    Second installment of shared library changes.
    Config changes for extensions and config simplification.
    installed
    Major revision of config directory again.
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Set BUILD_CLASS to HOST.
    Added static cross builds for win32-x86 and windows-x64.
    Added static build config files for win32-x86 and windows-x64.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed comments.
    Moved HOST_OPT macro definition.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version. File contributed by Ernest Williams, SNS
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Moved SHARED_LIBRARIES definition, as this is a target feature
    += HPUX using gnu compiler
    Removed accidental commit changes.
    change daylight savings time
    Updated comments
    Enable shared libraries for linux-x86.
    Initial version.
    merged_epics_R3_13_1_branchToTrunk
    Second installment of shared library changes.
    Config changes for extensions and config simplification.
    installed
    Major revision of config directory again.
    Initial version after move of config directory.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fix Whole Program opt settings (windows only)
    Add whole-program optimization control for MSVS
    
    Introduce a new config variable OPT_WHOLE_PROGRAM for
    Microsoft builds to control compiler and linker flags.
    Static builds with MSVS-2010 don't work properly with
    whole-program optimization enabled; this lets the static
    targets be built with normal optimization enabled and
    just the whole-program flags turned off.
    
    This commit also makes the CONFIG file for Microsoft
    builds more like the 3.15 version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    configure: Remove HDEPENDS option.
    
    Setting HDEPENDS=NO no longer works and would be hard to
    fix, so this commit deletes the option completely.
    Set HDEPENDS_METHOD to CMD which was overidden by CONFIG.gnuCommon.
    Added and removed include files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS and HOST_OPT definitions.
    Make CONFIG.Common.win32-x86 and aopional include.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Made CONFIG_SITE file an optional include file.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed references to VxWorks 5.x
    Initial version
    Initial version
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    VS2015 starting to dislike '/' for compiler flags
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    configure: Windows-x64 architecture fixes
    
    * Removed /favor:blend from ARCH_DEP_CPPFLAGS
      It is the default anyway, and including it stops the
      MS Express compilers from building 64-bit executables.
    * Added a CONFIG_SITE.Common.windows-x64-static file.
      The MSVS 2010 linker crashes when when generating code
      for this target with HOST_OPT = YES, so make it NO.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated for windows-x64 builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added comment.
    Added comments about USE_STLPORT.
    Use READLINE_DIR insead of using GNU_DIR.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    We should ship a configuration that matches the native unenhanced OS.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    revert to old
    change for 2003
    Initial version
    Add TOUCH command
    configure: silence tr1 namespace deprecation warnings on MSVC
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Deprecate and remove all uses of PATH_FILTER
    Added concatenated database definition files
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    configure: Replace COMMENT with NOP in ECHO
    
    Using COMMENT the ECHO command drops the whole line under -s,
    whereas using NOP (':') only drops up to the next ';' terminator.
    configure: Replace REM with perl -e ''
    
    Another good idea from Ben Franksen...
    configure: Fix 'make -s' on Windows
    
    Use REM instead of '#' to disable @echo commands.
    Thanks to Ben Franksen for the hint.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed unneeded ECHO definition.
    Changed EPICS_BASE_TOOLS_BIN to EPICS_BASE_BIN in PATH.
    Use perl ExtUtils for CP, MV, RM, and RMDIR macro definitions.
    Added $(EPICS_BASE_TOOLS_BIN) to $(PATH) to find dlls for base build tools.
    Removed no longer used TOUCH definition.
    Define HOME if not already defined.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    turn of omnipresent USE DEFAULT STACK -D
    Modified touch definition.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added sample CONFIG_SITE files.
    Removed reference to tornado 101.
    Removed ANSI and CPLUSPLUS
    Commented out tornado101 override.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Use OS __CYGWIN__ macro, deprecate our CYGWIN32
    Stopped install of test libraries and removed version number in test library name.
    Update readline libraries and dont have readline the default
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    More fixes for Cygwin builds.
    More changes needed for Cygwin.
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    Added code for TESTLIBRARY
    Set CYGWIN_RPC_LIB by using cygwin version to determine rpc lib name.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More changes to support shared libraries and cleanup of files.
    Changes to add ALL library dirs to the runtime search option on link line.
    Removed references to POSIX=YES/NO.
    Changes COMMANDLINE_LIBRARY set to READLINE.
    Use fullpathdir in rpath directories.
    win32-x86-cygwin => cygwin-x86
    Defines fullpath name only for rpath and -R dirs on link lines.
    Added -D_REENTRANT on CPPFLAGS.
    Added definitions for runtime libraries.
    Removed comments and null definitions.
    fixed up the cygwin build for R3.14
    Updated for R3.14
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Rearranged OP_SYS and ARCH_DEP definitions.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added BUILD_CLASS=HOST and GNU=NO.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed VX_DIR definition- no longer works in CONFIG_SITE.*.Common files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Modified comments.
    Modified test jba override comments.
    Updated comments
    Comment changes.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    New configuration files for Mac OS X (Darwin).
    Added configuration files for the MVME2100 running Linux, both cross
    and self-hosted compilation supported (but you don't want to use the
    self-hosted if you can help it!).  Assumes the standard Hard Hat
    Linux install locations for the cross-development tools.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Added vxWorks-mpc8548 target (MVME4100)
    
    Config files from Ernest Williams.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Removed CMPLR_PREFIX and CMPLR_SUFFIX definitions.
    Added defines to make this a non cross build.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Added static build config files for win32-x86 and windows-x64.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fix Whole Program opt settings (windows only)
    Add whole-program optimization control for MSVS
    
    Introduce a new config variable OPT_WHOLE_PROGRAM for
    Microsoft builds to control compiler and linker flags.
    Static builds with MSVS-2010 don't work properly with
    whole-program optimization enabled; this lets the static
    targets be built with normal optimization enabled and
    just the whole-program flags turned off.
    
    This commit also makes the CONFIG file for Microsoft
    builds more like the 3.15 version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed unneeded include line.
    Added include lines for host build CONFIG_SITE files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Set  BUILD_CLASS=HOST and HOST_OPT=NO.
    Added files for debug cross builds.
    Moved HOST_OPT from CONFIG_SITE file to CONFIG file.
    Removed CMPLR_PREFIX and CMPLR_SUFFIX definitions.
    Modified comments.
    Initial version.
    Initial version debug targets.
    Remove spurious files from configure
    Remove spurious files from configure
    Remove spurious files from configure
    Add readline support to linux-xscale_be rules
    
    Also moves cross-build config to the right host-arch's
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RTEMS: Changes suggested by Kate Feng
    
    * Added macros for configuring MBUF and CLUSTER space allocation
    * More MBUF and CLUSTER space on mvme3100, mvme5500 and beatnik
    * MVME5500: link with bspExt, use .elf extension like other BSPs
    Separate BASE and TOOLS locations
    Add MVME3100 support.
    Add extended BSP library.
    Add new target.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added linker options -h, -z text, -z defs to shrlib builds.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Moved the GNU_DIR site override definition to a CONFIG_SITE file.
    Removed -z defs because it doesn't work with gcc/g++ 3.4.2.
    Replaced -G with -shared -fPIC  in shrlib LDFLAGS.
    The option -z ignore must preceed -z defs.
    Reorganized *SHRLIB_LDFLAGS definitions.
    Added definitions for static build.
    Added loadable library definitions and rules
    Changes for shared libraries and os consistancy.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Added static LDFLAGS and LDLIBS.
    define a macro with the solaris version in it
    add whitespace after macro name
    use proper shell expansion
    define sunos version when building with GNU
    Removed include for CONFIG.Common.UnixCommon.
    added LD definition
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Added build files for cygwin to cross-compile linux-arm targets
    
    Slightly strange combination and not actually tested, but could
    be useful for some developers -- some FPGA tool-sets come with a
    Cygwin cross-build environment for their target devices.
    Moved linux-arm cross-build link-time settings
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixes for cross-compiling shared libraries properly.
    Initial version.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Removed references to VxWorks 5.x
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Set WIND_HOST_TYPE to x86-linux_64.
    Initial version. File contributed by Ernest Williams, SNS
    Updated comments
    Fixed comments.
    Initial version
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Add support for linux-aarch64 native builds
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed BUILD_CLASS def.
    Added HOST_OPT and BUILD_CLASS definitions.
    Moved HOST_OPT macro definition.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed all references to CONFORM flags in configure files.
    More changes to support shared libraries and cleanup of files.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixed CONFORM_CXXFLAGS_NORMAL definition.
    win32-x86-cygwin => cygwin-x86
    fixed up the cygwin build for R3.14
    Now cygwin's gcc, g++, ar, ld, and ranlib must be in user's path
    CODE flag changes for cygwin build
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Added vxWorks-ppc32-debug and vxWorks-ppc32sf-debug archs.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added files for debug cross builds.
    Initial version.
    Update the linux-x86.linux-arm tool-set used for APS cross-builds
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Fix RPATH and readline for linux-arm cross-builds
    Adjust linux-arm config for Xilinx SDK users
    Removed Revision-Id from configure; still one Date
    Cosmetic changes in configure/os
    Add support for native linux-arm builds.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added my local toolset path.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Repair accidental commit of local changes.
    Swirtch to RTEMS 4.10.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Fixed comment line with file name typo.
    Add example CONFIG_SITE files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Added build files for cygwin to cross-compile linux-arm targets
    
    Slightly strange combination and not actually tested, but could
    be useful for some developers -- some FPGA tool-sets come with a
    Cygwin cross-build environment for their target devices.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added comments.
    Initial version debug targets.
    Add cross-builds for linux-aarch64
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved linux-arm cross-build link-time settings
    configure: Minor fixes
    
    Don't add extraneous characters when SHRLIB_VERSION or GNU_TARGET
    are empty.  The addprefix or addsuffix functions only include the
    prefix/suffix part if the list argument is not empty.
    
    This fixes issues naming libCap5.so at build-time.
    Add support for native linux-arm builds.
    configure: Removed _ARM_NWFP_
    
    Apparently this hasn't been needed for quite a while.
    Provide a link-time path for readline directory.
    Remove unneeded READLINE definitions from last commit.
    Allow arm cross targets to use readline as command line library.
    Added LINKER_USE_RPATH option.
    Reverted patch that added architecture-specific compiler flags,
    Micheal Abbott didn't like it.
    Added CPPFLAGS -mcpu=arm9 -marm  -- from Heinrich du Toit.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Added VALID_BUILDS = Ioc.
    Can't override the two _LDFLAGS var's, have to append to them.
    Fixes for cross-compiling shared libraries properly.
    Changes to add ALL library dirs to the runtime search option on link line.
    Initial version.
    Another comment fix
    Fix comment as well
    Also apply rpath change to PRODDIR_RPATH_LDFLAGS
    Shared lib rpath should not depend on whether or not static libs are also being built.
    LINKER_USE_RPATH=ORIGIN
    
    Use Linux specific linker trick to allow relocation
    of built tree.
    
    relative rpath
    
    use $ORIGIN to reference libraries in other modules
    by relative path.
    
    fix rel. RPATH
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Don't set RPATH if STATIC_BUILD=YES
    Removed Revision-Id from configure; still one Date
    Linux flag changes to remove glibc 2.20 warnings
    
    Replace _BSD_SOURCE and other flags with _GNU_SOURCE and _DEFAULT_SOURCE
    Linux builds: Define _GNU_SOURCE and _DEFAULT_SOURCE
    
    These replace the mixture of macros used to pick the features
    presented by the standard system header files on Linux.
    
    Updated the section of the CA reference manual that showed some
    example compile lines to correct for 3.15 build changes.
    
    Removed unused code & out-of-date comments.
    configure: change Posix definition from 199506L to 200112L
    needed to be able to use spinlocks
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added LINKER_USE_RPATH option.
    Make it easier to select which if any curses library to link with for readline.
    Added include for CONFIG_SITE.$(EPICS_HOST_ARCH).linuxCommon overrides.
    Added include line for CONFIG_SITE file.
    Removed archive and shared split of prod libs.
    Added libdl to the OS libraries needed, for dlopen/dlsym.
    Linux: Switch to libncurses.
    Changes to add ALL library dirs to the runtime search option on link line.
    Removed references to POSIX=YES/NO.
    CC and CCC definitions changed to reflect GNU defaults.
    Used fullpath name from  SHRLIB_SEARCH_FULLPATHDIRS.
    Change test to test on BUILD_CLASS not CROSS.
    Moved LDLIBS_READLINE definition.
    Removed -mcpu compiler option. Added code for 386,486,... cross builds
    Added athlon flags.
    Moved JAVA_DIR definition to extensions/configure/os.
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Always build dynamic library search paths into executable.
    Changes for shared libraries and os consistancy.
    Don't need to add SHRLIB_SEARCH_DIRS to SHRLIB_LDFLAGS
    Changed the definition of SHRLIB_SEARCH_DIRS to be the actual dir searched
    Added implementation for solaris-sparc
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Removed if test.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    add -D_XOPEN_SOURCE=500
    Moved COMMANDLINE definitions.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Changed mpentium to mcpu=pentium. Added libs to SYS_SHRLIB_LIBS.
    Changed definitions for creation of shared libraries.
    Added -mpentium cflag.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved linux-arm cross-build link-time settings
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Added build files for cygwin to cross-compile linux-arm targets
    
    Slightly strange combination and not actually tested, but could
    be useful for some developers -- some FPGA tool-sets come with a
    Cygwin cross-build environment for their target devices.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed incorrect comment lines
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version.
    Removed CMPLR_PREFIX and CMPLR_SUFFIX definitions.
    Modified comments.
    Initial version.
    Initial version debug targets.
    Exclude VS2012 from -FS option
    
    (cherry picked from 7.0 / commit 4aee25e8 and e29a53f0)
    WIN32: Add symbol lookup
    Formatting
    Exclude VS2012 from -FS option
    Tell MSVC to use absolute filenames in diagnostics (-FC flag)
    Config fix for parallel builds with MSVC 2015 and later
    
    From Mark Rivers and Freddie Akeroyd.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Supress MS warning C4251
    VS2015 starting to dislike '/' for compiler flags
    Add whole-program optimization control for MSVS
    
    Introduce a new config variable OPT_WHOLE_PROGRAM for
    Microsoft builds to control compiler and linker flags.
    Static builds with MSVS-2010 don't work properly with
    whole-program optimization enabled; this lets the static
    targets be built with normal optimization enabled and
    just the whole-program flags turned off.
    
    This commit also makes the CONFIG file for Microsoft
    builds more like the 3.15 version.
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Allow compiler flags from command line
    
    The following variables are reserved for use from the
    GNUmake command line:
      CMD_INCLUDES
      CMD_CPPFLAGS
      CMD_CFLAGS
      CMD_CXXFLAGS
      CMD_LDFLAGS
      CMD_DBFLAGS
      CMD_DBDFLAGS
      CMD_ARFLAGS
    
    For example:
      make CMD_INCLUDES=/opt/local/include CMD_LDFLAGS=-L/opt/local/lib
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    Make shared library version numbers use 3 components
     - turn off frame-pointer optimization (otherwise stack trace capture
       does not work).
    Stopped install of test libraries and removed version number in test library name.
    configure: Fix DEPLIBS search order for Windows DLLs
    
    Must search for the DLLSTUB library before the SHRLIB one.
    This commit also cleans up some comments about MSVC settings.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Various updates for building on Windows/Cygwin/MinGW
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    configure: Remove HDEPENDS option.
    
    Setting HDEPENDS=NO no longer works and would be hard to
    fix, so this commit deletes the option completely.
    configure: Redo Jason Abernathy's SHRLIB fix
    
    Now works properly on Darwin where the version number comes
    before the .dylib extension.  This also makes Windows-specific
    conditional tests fully generic.
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added HDEPENDS_METHOD override for cross builds
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    Added code for TESTLIBRARY
    Added missing USR_LDFLAGS to DLL link line.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Applied PATH_FILTER to input libraries on linker command line
    
    Now when using MSVC complier with non cygwin makes, RELEASE files can
    contain directories starting with forward slashes.
    
    bug:627511
    Use /LTCG for non shared libraries if HOST_OPT is YES.
    Use global -TP flag instead of -Tp on compile line for each source file.
    Added GNU=NO.
    Deleted remaining references to sun4 (mostly in comments).
    Modified STATIC build. Make all *_SYS_LIBS dynamic.
    Test non SYS_LIBS for dynamic or archive.
    Removed commented references to CONFORM flags.
    Removed all references to CONFORM flags in configure files.
    Use $(TOOLS)/useManifestTool.pl tool only when needed and when it exists.
    Changes to allow LOADABLE_LIBRARY to work for borland and MS compilers.
    Put quotes around option with # in manifest mt.exe command.
    fixed manfest was created for .exe during static build
    Need two MT commands, one for dll filess and one for exe files.
    Added command to embed a .manifest file into a library or product target.
    Added _CRT_NONSTDC_NO_DEPRECATE switch to disable MSVC 8 Posix
    deprecated warnings.
    Changed /GX to /EHsc and defined _CRT_SECURE_NO_DEPRECATE for MSVC 8.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Don't use gcc for preprocessing.
    Added null definitions for STATIC_LDFLAGS and RANLIB for cross builds.
    Added SHRLIB_CFLAGS definition.
    Removed references to *Obj.lib files.
    Fixed LOADABLE_LIBRARY rules.
    Added loadable library definitions and rules
    Removed unused definition MSVISC.
    move a warning from level 3 to level 4 and detect certain Ox related failures during debug builds
    Changes for shared libraries and os consistancy.
    Allow <name>_LDFLAGS.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Moved STATIC_LDFLAGS out of LDFLAGS.
    See http://www.aps.anl.gov/epics/mantis/view_bug_advanced_page.php?f_id=20
    remove Zi option from optimized build
    Remove cmplr DEPENDS options and simplify .depends build rules.
    added forward slash filtering for win32
    Removed comment line.
    Moved HOME definition.
    Put all include dirs on RCCMD line.
    Changed definitions for creation of shared libraries.
    define EPICS_FREELIST_DEBUG for debug builds
    minor tweaking to debug options
    removed templ inst mechanism
    Changed SHRLIBNAME to  SHRLIBNAME_YES.
    Made MKMF the default for HOST_HDEPENDS_CMD.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Changes to automatically generate header dependancy files.
    Removed unused HOST_OPT_FLAGS definition.
    Changed LIBOBJS_HOST to LIBRARY_LD_OBJS.
    Changes to create vxWorks archive libraries and prods.
    Use gcc for depends rule
    added LD definition
    enable RTTI
    Removed ANSI and CPLUSPLUS
    LINK, DEPENDS_RULE, and ARCMD definition changes.
    added additional system librarries for static build
    Modified include file specification in RCCMD command.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    use /GX so that exceptions will work
    Add WIN95/NT source browser code.
    removed redundant -I
    Modified slashes in wildcard specification.
    Fixed DLL_DEPLIBS definition.
    corrected missing -d in shrlib install
    EPICS_DLL => EPICS_DLL_NO
    fixed non-dll build
    Second installment of shared library changes.
    fixed WIN32 dll build
    Added definitions and rule changes for WIN95/NT resource files.
    DLL_LIBS definition and changed LINK.cc definition.
    Config changes for extensions and config simplification.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version
    Initial version
    Initial version
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added GNU_TARGET definition.
    Added vxWorks-ppc60*_long targets.
    Removed -mlongcall option.
    Added -mlongcall option. Cosmetic changes.
    Initial version.
    Fix for timespec register problem.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added include lines for host build CONFIG_SITE files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Simplified cross debug build macro definitions.
    Fixed include lines.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added freebsd-x86, fixed some freebsd-x86_64 stuff.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Build support for 64-bit iPhone Simulator
    
    From Tom Palaia.
    configure: Fixes to iOS build rules
    
    From Tom Pelaia, these should now allow compiles for the
    x86-based simulator as well as for ARM-based devices.
    configure: Update Apple iOS builds
    
    * Default IOS_VERSION to 5.0
    * Allow ARMv6 and ARMv7 universal binaries by setting ARCH_CLASS
    * Switch from g++ to clang++
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added HOST_OPT=NO
    Initial version debug targets.
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added include lines for host build CONFIG_SITE files.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Simplified cross debug build macro definitions.
    Fixed include lines.
    Added files for debug cross builds.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Adding file on R3.14 branch.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Removed reference to tornado 101.
    Removed ANSI and CPLUSPLUS
    Commented out tornado101 override.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Added build files for cygwin to cross-compile linux-arm targets
    
    Slightly strange combination and not actually tested, but could
    be useful for some developers -- some FPGA tool-sets come with a
    Cygwin cross-build environment for their target devices.
    Remove spurious files from configure
    Remove spurious files from configure
    Remove spurious files from configure
    Add readline support to linux-xscale_be rules
    
    Also moves cross-build config to the right host-arch's
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added sample CONFIG_SITE files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Move linux-x86 GNU compiler tune c flag setting to CONFIG_SITE file.
    Added -mtune=generic cflag. Changed -m32 to OP_SYS flags.
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    o removed "-march=i586" from
    configure/os/CONFIG.Common.cygwin-x86
    configure/os/CONFIG.Common.linux-x86
    configure/os/CONFIG.Common.win32-x86-cygwin
    configure/os/CONFIG.Common.win32-x86-mingw
    
    added commented out "-march=i586" to
    configure/os/CONFIG_SITE.cygwin-x86.cygwin-x86
    configure/os/CONFIG_SITE.win32-x86-cygwin.win32-x86-cygwin
    
    added "-march=i586" to (I know that this compiler currently defaults to 386)
    configure/os/CONFIG_SITE.win32-x86-mingw.win32-x86-mingw
    make the default minimum arch for 32 bit linux pentium
    make the default minimum arch for 32 bit linux pentium
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Simplified code. Added flag for 32/64 bit. GNU_TARGET now in CONFIG_SITE*.
    CC and CCC definitions changed to reflect GNU defaults.
    Used fullpath name from  SHRLIB_SEARCH_FULLPATHDIRS.
    Change test to test on BUILD_CLASS not CROSS.
    Moved LDLIBS_READLINE definition.
    Removed -mcpu compiler option. Added code for 386,486,... cross builds
    Added athlon flags.
    Moved JAVA_DIR definition to extensions/configure/os.
    Add default JAVA_DIR.  Can be overridden by CONFIG_SITE.
    Always build dynamic library search paths into executable.
    Changes for shared libraries and os consistancy.
    Don't need to add SHRLIB_SEARCH_DIRS to SHRLIB_LDFLAGS
    Changed the definition of SHRLIB_SEARCH_DIRS to be the actual dir searched
    Added implementation for solaris-sparc
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Removed if test.
    Added SHRLIB_SEARCH_DIRS option to linux-x86, allows absolute paths to
    shared library directories to be burned into executable and shared
    library products.
    add -D_XOPEN_SOURCE=500
    Moved COMMANDLINE definitions.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Changed mpentium to mcpu=pentium. Added libs to SYS_SHRLIB_LIBS.
    Changed definitions for creation of shared libraries.
    Added -mpentium cflag.
    Rearanged OP_SYS and ARCH_DEP definitions.
    Initial version
    Don't require older RTEMS arch's to set RTEMS_BSP
    
    This uses the old rules for RTEMS target architecture names to
    work out what the value of RTEMS_BSP should be if it isn't set.
    Targets had to be named RTEMS-$(RTEMS_BSP) in previous releases.
    With this change out-of-tree target configuration files should
    still work, but they can't be used to create sub-architectures
    without first setting RTEMS_BSP in their CONFIG.Common.<arch>
    file.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fix the RTEMS override of the ECHO variable
    Applied rtems-build-gesys-loadable-objects.patch
    Allow compiler flags from command line
    
    The following variables are reserved for use from the
    GNUmake command line:
      CMD_INCLUDES
      CMD_CPPFLAGS
      CMD_CFLAGS
      CMD_CXXFLAGS
      CMD_LDFLAGS
      CMD_DBFLAGS
      CMD_DBDFLAGS
      CMD_ARFLAGS
    
    For example:
      make CMD_INCLUDES=/opt/local/include CMD_LDFLAGS=-L/opt/local/lib
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    Parallel build rule fixes
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added HDEPENDS_CFLAGS to CFLAGS to create *.d dependancy files.
    
    bug: 626859
    Allow override of RTEMS_BASE asnd RTEMS_VERSION in other top dirs.
    Separate BASE and TOOLS locations
    Modified STATIC build. Make all *_SYS_LIBS dynamic.
    Test non SYS_LIBS for dynamic or archive.
    Removed all references to CONFORM flags in configure files.
    Silence ar.
    Using -ansi causes problems.
    Get rid of it.
    Removed extra include of CONFIG_SITE.Common.RTEMS.
    Added include for CONFIG_SITE.$(EPICS_HOST_ARCH).RTEMS  overrides.
    Just like vxWorks, RTEMS breaks horribly if GCC_EXEC_PREFIX is set.
    NFS library name has changed.
    The -ansi flag really is necessary.
    Get rid of -ansi.  It causes problems with lots of header files.
    Get RTEMS_BASE definition. Unset GNU_TARGET_INCLUDE_DIR.
    Move RTEMS location declaration to user-editable configure/RELEASE file.
    RTEMS has again moved.
    Add uC5282 support.
    Use new RTEMS tool-naming scheme.
    Add rtemsNfs to all RTEMS targets.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Add support for MVME2100.
    Make EPICS command-line routines the default (no RTEMS add-on
    packages required).  Add libraries for readline.
    Removing -ansi causes *lots* of other problems, so back out previous change.
    RTEMS header files have just too many functions whose prototypes are removed
    when -ansi is specified.
    RTEMS can't use code compiled with -fPIC.
    Track changes to build system.
    Changes for shared libraries and os consistancy.
    Turn -ansi back on and use osiUnistd.h to provide the missing
    prototypes.
    Don't use -ansi.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Latest RTEMS add-on packages provide libtecla so make it the default on RTEMS.
    Link -lCom after -lrtemsCom since the rtems_init routines now use the
    error logging functions from libCom.
    Modified  defaults for command-line input support.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Moved STATIC_LDFLAGS out of LDFLAGS.
    See http://www.aps.anl.gov/epics/mantis/view_bug_advanced_page.php?f_id=20
    Reorder library searches to avoid some problems when linking applications
    which include the GPIB driver add-on modules.
    Fix LINK.cpp command definition.
    No need to redefine main since RTEMS no longer uses main() internally.
    Use C++ compiler to link.  This ensures that the C++ run-time support
    can be found.
    Changed EPICS_BASE_CPPFLAGS to BASE_CPPFLAGS.
    Track changes in RTEMS library names.
    Changed definitions for creation of shared libraries.
    The RTEMS TFTP driver now supports a limited form of chdir().  This means that
    the hack of redefining fopen is no longer necessary.
    Link -lrtemsall before -lrtemsCom to ensure that the configuration information
    gets pulled from the rtemsCom library.
    removed explicit template mechanism
    Add new RTEMS initialization/configuration library.
    Remove compiler path requirement.
    eliminate option to turn off exceptions
    Changes to create vxWorks archive libraries and prods.
    Allow application code to override RTEMS network configuration.
    Add definition of partial link command (LD).
    Add definition for how to run the C preprocessor.  This is needed for
    preprocessing sequencer source files.
    More changes to reflect new EPICS build environment.
    Must explicitly set EXE and OBJ variables.
    Not working, but committing to let others have a look at this.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Change to reflect new RTEMS install point.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Use a special RTEMS-specific version of fopen to add the RTEMS TFTP
    prefix to path names.  This is a cleaner solution since it requires
    no changes to any other EPICS code and works for all places that
    files are opened.
    Always generate initialization (C++ constructor) code.
    Since RTEMS sequencers use C++ constructors to register the sequencer
    commands, they must be compiled with a C++ compiler.
    Changes and renames for CFLAGS.
    No need to specify iocsh as a PROD_LIBS since the makeApp scripts now do this.
    Add -liocsh to linker arguments.
    Add rule for converting `.st' to `.o'.  RTEMS needs C++ constructors
    to register sequencer commands and programs so the output of snc has
    to be compiled with C++.
    Add flags for state notation compiler.
    Use common UNIX defines.
    Modifications to allow building of RTEMS executable images with makeBaseApp.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added generic PPC32 targets for vxWorks 6.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Added GNU_TARGET definition.
    Added vxWorks-ppc60*_long targets.
    Removed -mlongcall option.
    Added -mlongcall option. Cosmetic changes.
    Initial version.
    Fix for timespec register problem.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    WIN32: osdFindSymbol() use psapi
    WIN32: Add symbol lookup
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    mingw: Fix the list of Windows OS libraries to link against
    Support MinGW cross-builds on linux-x86 and x86_64
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    Removed OPT flag lines which are same as gnu compiler build defaults.
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed PROD_SYS_LIBS definition.
    Removed all references to CONFORM flags in configure files.
    Added optimization option for debug builds.
    More changes to support shared libraries and cleanup of files.
    Added shared library support.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Fixed CONFORM_CXXFLAGS_NORMAL definition.
    Initial version.
    Initial version.
    win32-x86-cygwin => cygwin-x86
    fixed up the cygwin build for R3.14
    Now cygwin's gcc, g++, ar, ld, and ranlib must be in user's path
    CODE flag changes for cygwin build
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Added vxWorks-mpc8548 target (MVME4100)
    
    Config files from Ernest Williams.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    VxWorks: Don't use GCC 2.x for dependency file generation
    Configure command-line interface for VxWorks
    
    Add new LEDLIB and OTHER configuration options.
    Fix typo in vxWorks/osdReadline.c
    Use LEDLIB on VxWorks.
    
    Fixes LP: #1741578
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Clean up the cross-build rules slightly
    Dirk's simpler VxWorks version rules
    Removed Revision-Id from configure; still one Date
    Removed references to VxWorks 5.x
    Stopped install of test libraries and removed version number in test library name.
    Add configuration for vxWorks 6.9 builds.
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Prepare configure/os to support vxWorks 6.9
    
    I don't think it will work yet though because they removed the
    taskVarLib which we use, and there may be other issues too.
    configure: Make the vxWorks macro expand to itself
    
    This fixes a problem in .st sequence programs that do this:
      %%#include <vxWorks.h>
    The pre-processor was replacing the token since the line is not a
    pre-processor directive (yet) and it doesn't appear inside "quotes".
    
    NB: This will break any code that is incorrectly using
      #if vxWorks
    instead of
      #ifdef vxWorks
    Added code for TESTLIBRARY
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    Add support for vxWorks 6.8.
    Solve C++ exception problems in vxWorks 6.x:
     * Use a linker script when generating .munch files
     * Output exception handler frame registration code in _ctdt.c files
    Steve Hartman (ORNL) says vxWorks 6.7 has nm back in GNU_BIN.
    Hopefully it will stay there from now on.
    Correction: vxWorks 6.4 comes with nm in the workbench bin directory.
    Added nm directory definition for vxWorks 6.7.
    Added VX_GNU_VERSION_6.7 definition.
    For v6.7, added "-DBSD=44" to get correct network interface structure.
    WRS moved the 'nm' program in vxWorks 6.6
    Removed all references to GCC_EXEC_PREFIX.
    Added support for vxWorks 6.6, info from Ernest Williams.
    Added GNU versions for vxWorks 6.4 and 6.5.
    Dont install non-munched prods.
    Don't set GCC_EXEC_PREFIX for any vxWorks target.
    Can't use ifeq(VXWORKS_VERSION) because we don't know its value yet.
    Incorporated vxWorks 6 settings from SNS.
    Added the vxWorks-mpc8540 architecture.
    Added the ppc604_altivec sub-architecture.
    Some cleanup.
    Fixes for vxWorks 6.x.
    vxWorks 6 changes WIND_HOST_TYPE x86-linux2.
    Ok, so all vxWorks 5.x versions need the -include vxWorks.h flag...
    Made vxWorks.h include depend on VXWORKS_VERSION.
    Changed configuration for vxWorks 6.x; now uses the same files as vx 5.x.
    Removed the vxWorks6-mvXXXX targets, use vxWorks-ppc604_long or similar.
    Removed references to POSIX=YES/NO.
    Unset CMPLR_PREFIX.
    CC and CCC definitions changed to reflect GNU defaults.
    Changed filterout to filter-out.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Added PREPROCESS.cpp definition.
    Removed references to LIB_EXT.
    Added LIB_EXT definition.
    No fPIC on compiles of vx library source files.
    Changes for shared libraries and os consistancy.
    Added  PROD_LDFLAGS, LIB_LDFLAGS, PROD_OBJLIBS, USR_OBJLIBS, LIB_OBJLIBS.
    Allow *_SRCS and *_OBJS and LDOBJS in creation of OBJLIB.
    Moved ctdt definitions.
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Added  TOOL_FAMILY = GNU definition.
    Moved STATIC_LDFLAGS out of LDFLAGS.
    See http://www.aps.anl.gov/epics/mantis/view_bug_advanced_page.php?f_id=20
    changed to explicit template instantiation for vxWorks
    removed -frepo flag
    use -frpro with g++
    Removed OPT flag overrides.
    Changed $*_LIBS to $*_LDLIBS.
    Changed definitions for creation of shared libraries.
    Changes to automatically generate header dependancy files.
    Removed unused shrlib suffix.
    eliminate option to turn off exceptions
    Changes to create vxWorks archive libraries and prods.
    Removed snc lines
    added LD definition
    Changed opt level from O2 to O3.
    Removed include ov vxWorks.h from snc preprocessing.
    Removed unneeded CFLAGS line.
    Fixed the vxWorks.h fix fir C++
    Modified depends definitions and munch definitions.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    LINK defintion change. Munch changes.
    Fixed test for Tornado II.
    fixed Tornado II build
    Changes and renames for CFLAGS.
    Changed name GNU_TARGET_PREFIX to CMPLR_PREFIX.
    Changed order of definitions.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    MS build config updates, suppress warning C4344
    Removed Revision-Id from configure; still one Date
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Initial version - linux-cris files from Peter Zumbruch at GSI.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed incorrect comment lines
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Parallel build rule fixes
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Use compiler flags for header dependency file generation when possible.
    Added GNU= NO
    Added another include for site overrides.
    Removed all references to CONFORM flags in configure files.
    Added include for CONFIG_SITE.solarisCommon.solarisCommon
    Fixed comment line with filename.
    Moved SHRLIB_CFLAGS definition to CONFIG.Common.solaris-* files.
    Changed -KPIC to -xcode=pic32.
    Changed  -Xc  to -Xa. Needed for solaris 10 builds.
    Removed unused STRIP definition.
    Moved common code into new file CONFIG.solarisCommon.solarisCommon.
    Comment out invalid white space filter.
    Filter out "invalid white space character in directive" compiler warnings
    when included headers created by win32 build.
    Added -Qn to CPP because snc sometimes does not like #ident lines.
    Changed c preprocessor from gcc to cc.
    Make SHRLIB_CFLAGS and override of previous definitions.
    Added SHRLIB_CFLAGS=-KPIC. Added -z text to shrlib link lines.
    Added loadable library definitions and rules
    Changes for shared libraries and os consistancy.
    Simplified SHRLIB_LDFLAGS_YES/NO to SHRLIB_LDFLAGS.
    Removed purify comments.
    add -D_XOPEN_SOURCE=500
    Modified profiling definitions.
    Changed PROFILE to NO as default.
    Fixed profiling option.
    Remove cmplr DEPENDS options and simplify .depends build rules.
    define a macro with the solaris version in it
    define a macro with the solaris version in it
    Changed definitions for creation of shared libraries.
    Removed accidental commit changes.
    change daylight savings time
    removed explicit template mechanism
    Use solaris compiler for HDEPENDS.
    Added HDEPENDS_CMD option for compiler or mkmf.pl
    Changes to automatically generate header dependancy files.
    Changes to create vxWorks archive libraries and prods.
    Reordered lines
    added LD definition
    Fixed parms for preprocessor.
    Change preprocessor to gnu compiler.
    Changed depends definition from Sun compiler to gnu compiler.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Moved gcc defs to CONFIG.Common.solaris-sparc
    Added pthread and thread to ldlibs for gnu compiler builds.
    Added  GCC_STATIC_LDLIBS_* libraries. Added -v to ANSI flags.
    Moved thread libraries to CCC_STATIC_LDLIBS_NO.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Avoid an optimizer bug that is present in the Tornado 2.x 68K C compilers at
    anything greater than -O0.  Not a problem in C++ though.
    Added GNU_TARGET definition.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Changed += to = to become ARCH_DEP_CFLAGS override.
    GNU_TARGET now in CONFIG_SITE file. Flag for 32 bit build added.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Added VALID_BUILDS = Ioc.
    Change test to test on BUILD_CLASS not CROSS.
    Initial version.
    Initial version debug targets.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Rename RTEMS MVME167 configuration file to match RTEMS BSP name.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    += RTEMS on ARM
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Modified locations of OPT and  BUILD_CLASS defintions.
    Added files for debug cross builds.
    Turn off optimization for debug targets.
    Initial version. File contributed by Ernest Williams, SNS
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added ARCH_DEP_LDFLAGS definition. Removed unneeded ARCH_DEP_CXXFLAGS def.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed references to VxWorks 5.x
    Initial version
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Corrected/deleted WIND_HOST_TYPE to only hosts that WRS supports.
    Initial version.
    Linux WRS cross-compiler architecture fix
    Updated comments
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Changed += to = to become ARCH_DEP_CFLAGS override.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    GNU_TARGET now in CONFIG_SITE file. Flag for 32 bit build added.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Added VALID_BUILDS = Ioc.
    Change test to test on BUILD_CLASS not CROSS.
    Initial version.
    Initial version debug targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Update mingw32 cross-target name for RHEL7
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    Support MinGW cross-builds on linux-x86 and x86_64
    Fix up Unix issues from previous commit.
    
    Also removed win32-x86-cygwin architecture support files,
    use the cygwin-x86 or win32-x86-mingw targets instead.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Added directory change comment for Older Xcode
    Build configuration for iOS
    Build issues for iOS
    Add support for iOS 8 target
    configure: Fixes to iOS build rules
    
    From Tom Pelaia, these should now allow compiles for the
    x86-based simulator as well as for ARM-based devices.
    configure: Support Apple Xcode 5.0 and iOS 7.0
    
    Not tested on the 64-bit ARMv8 architecture, although it should be
    compatible (confirmation would be welcome).
    configure: IOS version bump to 6.1
    configure: IOS version bump to 6.1
    Apple iOS updates from Tom Pelaia
    
    Adds iOS 6.0, which is now the default.
    - changed the default iOS SDK to version 6.0
    - use xcrun to locate the selected compiler
    - added armv7s as an option for architecture
    - made armv7 + armv7s the default architecture
    - renamed the LLVM compiler option to LLVM_GNU for clarity
      since LLVM is naturally associated with CLANG
    configure: Cleanup MacOS and iOS build settings
    
    Makes it easy for users to select which compiler to use.
    configure: Update Apple iOS builds
    
    * Default IOS_VERSION to 5.0
    * Allow ARMv6 and ARMv7 universal binaries by setting ARCH_CLASS
    * Switch from g++ to clang++
    Update iOS CONFIG files for iOS 4.3
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Applied Added-configure-files-for-linux-arm-debug.patch
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add readline support to linux-xscale_be rules
    
    Also moves cross-build config to the right host-arch's
    Removed Revision-Id from configure; still one Date
    configure: Move GNU_DIR setting for linux-xscale_be
    
    All site-specific values should be set in CONFIG_SITE files.
    New target.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Moved linux-arm cross-build link-time settings
    configure: Minor fixes
    
    Don't add extraneous characters when SHRLIB_VERSION or GNU_TARGET
    are empty.  The addprefix or addsuffix functions only include the
    prefix/suffix part if the list argument is not empty.
    
    This fixes issues naming libCap5.so at build-time.
    Add support for native linux-arm builds.
    configure: Removed _ARM_NWFP_
    
    Apparently this hasn't been needed for quite a while.
    Provide a link-time path for readline directory.
    Remove unneeded READLINE definitions from last commit.
    Allow arm cross targets to use readline as command line library.
    Added LINKER_USE_RPATH option.
    Reverted patch that added architecture-specific compiler flags,
    Micheal Abbott didn't like it.
    Added CPPFLAGS -mcpu=arm9 -marm  -- from Heinrich du Toit.
    Set VALID_BUILDS to Ioc when cross-compiled.
    Added VALID_BUILDS = Ioc.
    Can't override the two _LDFLAGS var's, have to append to them.
    Fixes for cross-compiling shared libraries properly.
    Changes to add ALL library dirs to the runtime search option on link line.
    Initial version.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added the -h (set internal name) link option to shrlib builds.
    Moved GNU_DIR def to CONFIG_COMMON.
    Moved *SHRLIB_LDFLAGS defs to CONFIG.gnuCommon.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to os files.
    Moved SHRLIB_LDFLAGS and LOADABLE_SHRLIB_LDFLAGS to CONFIG.gnuCommon.
    CC and CCC definitions changed to reflect GNU defaults.
    Removed -z defs which was accidently committed.
    Added -fPIC to shrlib LDFLAGS.
    Added linker options for static builds.
    Added loadable library definitions and rules
    Added SHRLIB_ALLOW_UNDEFINEDS to allow undefined symbols.
    Added -z defs linker option.
    Moved -shared option.
    Removed ANSI and CPLUSPLUS
    Since all systems other than vxWorks use a C++ constructor to register sequencer
    programs and commands, use C++ to compile the output of SNC.  The commands to
    use C in configure/os/CONFIG.Common.vxWorksCommon are commented out for now.
    If enough people have problems using C++ to compile their SNC programs the
    commands may have to be uncommented.
    New epicReadline.c support means that -DIOCSH_USE_READLINE flags
    are no longer necessary.
    Added curses and rt libraries for Redhat 7.
    Modified comments.
    Add -D_BSD_SOURCE to ARCH_DEP_CPPFLAGS.  This is needed to get the
    prototype for gethostname() in unistd.h as needed by cacChannelIO.cpp.
    Add -DIOCSH_USE_READLINE and -lreadline.
    Changes and renames for CFLAGS.
    Added include of definitions common to all Unix target archs.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial version debug targets.
    Initial version
    Add TOUCH command
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fix podToHtml build issue on Windows
    Added concatenated database definition files
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changes for shared libraries and os consistancy.
    Removed no longer used TOUCH definition.
    Changed name in LD_LIBRARY_PATH definion.
    Changes and renames for CFLAGS.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    DOS to Unix line-ending conversions
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    configure: Darwin build settings
    
    Modify comments and defaults for darwin builds.
    Changing to use gcc wasn't working.
    configure: Added Guobao Shen's comments on using MacPorts GCC
    Change build defaults for darwin-x86
    
    * Use clang and clang++
    * Build for x86_64 only
    configure: Adjust instructions for switching to clang
    Added commented changes from Eric Norum to build with CLANG
    Added commented changes from Eric Norum to build with CLANG
    configure/os: Add the missing darwin architecture combinations.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    DOS to Unix line-ending conversions
    Removed Revision-Id from configure; still one Date
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Add cross-builds for linux-aarch64
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add a couple of example configuration files for RTEMS PowerPC targets.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Rename RTEMS MVME167 configuration file to match RTEMS BSP name.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Build universal binaries, allowing sites to configure what to include.
    Removed sysroot and syslibroot options - they appear to be unneeded.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Reorganize OS X configuration files.
    First steps towards Universal binaries.
    Configure linux targets to detect GNU Readline automatically
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Add readline support to linux-xscale_be rules
    
    Also moves cross-build config to the right host-arch's
    Removed Revision-Id from configure; still one Date
    Cosmetic changes in configure/os
    configure: Move GNU_DIR setting for linux-xscale_be
    
    All site-specific values should be set in CONFIG_SITE files.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added HOST_OPT=NO
    Initial version debug targets.
    Require RTEMS_BSP to be set in CONFIG.Common.RTEMS-<arch>
    
    This is needed to allow multiple targets to be built against
    the same RTEMS BSP, allowing e.g. -qemu and -gesys targets.
    Rules for building bootable TESTPROD_RTEMS targets
    
    Previously if you wanted a .boot file it had to be installed.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Removed Revision-Id from configure; still one Date
    Fixed incorrect comment lines
    RTEMS: Changes suggested by Kate Feng
    
    * Added macros for configuring MBUF and CLUSTER space allocation
    * More MBUF and CLUSTER space on mvme3100, mvme5500 and beatnik
    * MVME5500: link with bspExt, use .elf extension like other BSPs
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Separate BASE and TOOLS locations
    Add extended BSP routines.
    Add rtemsNfs to all RTEMS targets.
    New BSP -- updated network configuration.
    Redo the way 'munch' commands are handled.
    Provide 'munch' command to build executable for RTEMS MVME2100 target.
    Add support for MVME2100.
    Change RTEMS support files to reflect changes in the way RTEMS board-support
    packages are now installed.
    Remove use of RTEMS_MAKEFILE_PATH environment variable.  Path to RTEMS
    directories is now provided explicitly in configure/os/CONFIG.Common.RTEMS.
    Reflect changes to file names.
    Changed os filenames to form CONFIG[_SITE].<host>.<target>.
    Add warnings to CONFIG_SITE files that can't override gnuCommon
    
    Move the clang and '-g' suggestions to the right places
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    DOS to Unix line-ending conversions
    Removed Revision-Id from configure; still one Date
    Fixing and/or investigating Cygwin issues
    configure: New targets cygwin-x86_64 and windows-x64-mingw
    Update readline libraries and dont have readline the default
    More fixes for Cygwin builds.
    More changes needed for Cygwin.
    Various updates for building on Windows/Cygwin/MinGW
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More changes to support shared libraries and cleanup of files.
    Initial version.
    travis fixup networking
    Make submodule builds more generic
    
    Adds PARENT_MODULE to detect when building a submodule.
    RULES_TOP uses that to disable uninstall rules and abort instead of
    deleting the parent's configure/ directory.
    Submodule build configuration fixes
    
    Remove modules/RELEASE.local from repository,
    create it at run-time instead of RELEASE.base.
    Add submodule context
    Move rules from modules/Makefile to new RULES_MODULES file
    Make submodule builds more generic
    
    Adds PARENT_MODULE to detect when building a submodule.
    RULES_TOP uses that to disable uninstall rules and abort instead of
    deleting the parent's configure/ directory.
    avoided embedded TOP for non sub-modules
    realclean rule must delete all RELEASE.<host>.local files
    Display rule activity in modules/Makefile
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Allow for a modules/Makefile.local
    
    This permits other submodules to be integrated into a build
    without having to edit the Makefile itself.
    Adjust RELEASE.local generation for Windows
    
    On Windows, neither the shell nor echo will strip double-quote
    characters from the command-line, so just leave them out.
    Adjust pvAccess dependencies
    Submodule build configuration fixes
    
    Remove modules/RELEASE.local from repository,
    create it at run-time instead of RELEASE.base.
    modules/Makefile fix: Replace spaces with tab character
    
    Also adds modules/RELEASE.base to .gitignore
    modules: fix creation of absolute EPICS_BASE (d7cda55d)
    modules: make RELEASE.local use an absolute Base path
    modules: add pva2pva, example
    modules: add normativeTypes, pvaClient, pvDatabase
    travis-ci: add ca and database as dependencies for pvAccess
    modules: add pvData, pvAccess
    Add submodule context
    Fix Makefiles to use RULES_DIRS instead of _TOP
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Add submodule context
    Structural changes to create database module
    Structural changes to create ca module
    Fix location of TOOLS in top Makefile
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Remove 3.13 compatibility build vars
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved configure/tools perl tools to src/tools directory.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
    defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Changes for GNU make -j option (multiple jobs).
    Converted to R3.14 Makefiles.
    Install config/tools/* into INSTALL_LOCATION/config/tools not bin/(arch>.
    Build msi only for host target.
    Build with R3.14 rules if available (not tested...)
    Added if test for COMPAT* macros.
    Fixed Makefile so distclean target will work.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Added license information.
    Removed release* targets.
    Updated license comments.
    Added config/tools to dirs.
    Moved MakeRelease to configure/tools.
    no change
    new way to build
    More R3.14 Makefile changes.
    added configure
    changes for 3.14
    fix imcompatibilities with subtool
    Added INSTALL_BIN definition.
    First version
    fixed install outside base
    removed unused unistall target
    kay's perl branch
    Top level dir no longer passed to MakeRelease
    Now includes RULES_TOP, changed DIRS def.
    use RULES_DIRS
    Added uninstall of config dir.
    Chnges for move of config directory.
    Top dir now base not epics
    Removed unused ARCH_TYPE
    uninstall base/man
    base/rec=>base/db base/include now installed
    Added base/tools scripts functionality to base/Makefile, removed scripts
    Moved base/tools/MakeRelease to base dir.
    Changed include file from CONFIG_SITE to CONFIG
    Replace ARCH_TYPE with .
    Replace ARCH_TYPE with .
    Removed install dependancy from release rule
    Removed depends dependancy in release and built_release rules
    Introduce temporary symbol (ARCH_TYPE=$$ARCH) and use in later targets/rules
    to avoid problem with $* symbol resolution in some versions of gnumake.
    Modified syntax of makefile usage
    Cleanup of files
    Changed clean to tools/Clean.  Added "uninstall" dependency.
    Minor changes
    Modified to eork with extensions and do depends
    New stuff.
    Dependencies are now generated with a "make release".
    Added Log and/or Id.
    Fixed.
    pre_build / new configuration
    Now supports new config directory setup.
    Defaults to install instead of build
    Added support for config.mk
    Now works with Makefile.Build_Type, i.e. Makefile.Vx  Makefile.Unix
    Update
    Better Version
    Added top-level Makefiles to repository
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Move all under modules/libcom
    New src/std/link/test directory with tests for the state link type
    Don't install libcomModuleDirs.pm
    
    It's only needed by bldEnvData.pl which is never installed.
    Make it a dependency so it gets built, and use it from O.<host>
    Export tool configurations as cfg/CONFIG_* files
    Freeze SONAME=3.17.0
    Structural changes to create database module
    Structural changes to create ca module
    Perl scripts use perl module for RELEASE dependencies
    Add module version numbering
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    fix makefile typo
    std/rec/test: add test for deadband mechanism of analog record types
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    dbShutdownTest
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    disable filter tests until fixed...
    clean all
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Reorganize src/Makefile
    
    Group entries by "Module"
    move alarm.h to libCom/misc
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Remove 3.13 compatibility build vars
    Oops, s/dbTools/dbtools/.
    Missing dependency fixed, misc needs dbTools
    
    - from Michael Davdisaver
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added dBStatic to cas depend dirs. Needs alarm.h
    Fix missing parallel build dependency.
    
    Ron Sluiter pointed out that gdd/dbMapper.h includes db_access.h so
    gdd has to be built after ca, simplifying the cas dependency too.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    Updated DEPEND_DIRS for vxWorks directory.
    libCom/test/fdmgrTest depends on ca.
    Build cap5 everywhere other than WIN32 archs.
    Change build order again; declare dependencies locally.
    Add dependency catools on alarm.h which is in dbStatic.
    Moved cap5 to the end of the list, so it doesn't matter if it fails.
    Move cap5 after softIoc.
    Added Perl5 interface to CA.  Not tested on Windows...
    Build misc/ before dev/ so extended devices can link properly on Solaris.
    Added new tools directory.
    Changes for GNU make -j option (multiple jobs).
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Moved ca to immediately follow libCom.
    Need to have built the RTEMS stuff before any programs.
    Move softIoc after RTEMS dir.
    Changed build order: build tests immediately after their parent.
    Move template stuff lower down.
    Removed ifeq and ifneq tests on vxWorks and RTEMS.
    += catools
    toolsComm now calls libCom so there is a new build order
    Moved excas.
    add excas
    Added softIoc application.
    accidently committed version not buildibg gdd and cas
    remove *Recdes* and *Flddes*
    Updated license comments.
    Change build order so that RTEMS libCom test applications build properly
    when building from scratch.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Added makeBaseExt directory.
    uncommented gdd and cas
    misc before iocsh
    add iocsh; build misc later
    Only build vxWorks directory when there is a vxWorks target.
    order of build
    change build order
    add db/test
    Removed cxxtemplates dir because it was moved to libCom.
    Removed include directory.
    add libCom/test
    moved where ca is built
    new way to build
    Moved osi directory to libCom.
    Added makeBaseApp to dirs list.
    remove tools
    temporily dont build makeBaseApp
    changes for configure
    New Makefile added.
    Modified Makefile to use new tools directory.  MGB:
    moved blderrSymTbl stuff to libCom only
    only build errSymTbl from this makefile -
    the other early builds have been moved to their respective
    Imakefile(s) in the appropriate object area
    forgeot to remove targets from the all:: target
    moved the seqsource and devtestsource target functions back
    to the appropriate object Imakefiles
    moved target camathsource stuff to Unix/share/toolsComm/math/Imakefile
    add the camath
    moved devtest to toolsComm/devtest
    added devtestsource target
    backed out devtest
    *** empty log message ***
    reworked for errInc.c blderrSymTbl etc.
    moved some src builds to here
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed EPICS_UPDATE_LEVEL to EPICS_PATCH_LEVEL.
    Changed BASE_ to EPICS_.
    Added win32 resource files.
    Added win32 resource file.
    Added win32 resource files.
    Try out a representative sample of APIs from multiple libraries
    Bump database version to 3.18.0, use in SHRLIB_VERSION
    Set USE_TYPED_DSET centrally now everything uses it
    Fix ..// => ../ in Makefile-relative source paths
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    Make stdRecords.dbd depend on rec/Makefile
    std: Don't try and use removed RULES file...
    Make HTMLS_DIR default to . if not set.
    
    Remove HTMLS_DIR setting for files generated from DBD/POD.
    Start annotating fields and writing POD comments
    Removed empty src/std/test directory.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    std: Build in std/test, into libdbRecStd
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Replaced most TestAsyn support with a common extended support layer.
    RCS files now used for all cygwin and mingw builds.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    add devLoTestAsyn and devMbboDirectTestAsyn
    Removed device entries from base.dbd into their own .dbd files.
    Devices for TestAsyn support are not included by base.dbd, but have
    their own devTestAsyn.dbd file if required.
    Added testDevIoc.rc win32 resource file.
    Makefile changes so that rec and dev build on win32
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    Modified OBJS build.
    new way to build
    new way to build
    More R3.14 Makefile changes.
    changes for 3.14
    restructure; new Symb support
    installed makefiles
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    New file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    ioc/db menu fixes
    
    * Move including menuScan.dbd from menuGlobal.dbd to base.dbd.
      Menus included in menuGlobal.dbd can't be overridden at build
      time since it gets fully expanded before installation.
    * Convert .dbd.pod files before generating menuGlobal.dbd.d
    * Remove menuCompress.dbd, nothing in Base uses it any more.
      The compress record has its own compressALG menu
    std: Reintroduce manually-created base.dbd file
    
    The auto-generated base.dbd file has all the includes fully
    expaded out before installation, which prevents IOC applications
    from being able to replace manuScan.dbd and menuconvert.dbd
    softIoc: Generate base.dbd
    
    Includes new dependency rules for parallel builds.
    Add ts filter plugin to set timestamp to "now"
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    New "getenv" device support for string input types
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added a .db file with a single record $(IOC):exit.
    Set the .A field to the exit status you want the softIoc to return.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    softIoc: Generate base.dbd
    
    Includes new dependency rules for parallel builds.
    Remove EPICS Base submodules
    Move all under modules/database
    Update epicsInstallDir.h after any CONFIG_SITE* change
    
    INSTALL_LOCATION changes should trigger an update.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    Added dbd dependency.
    std: Reintroduce manually-created base.dbd file
    
    The auto-generated base.dbd file has all the includes fully
    expaded out before installation, which prevents IOC applications
    from being able to replace manuScan.dbd and menuconvert.dbd
    Tweak some dependency rules for correctness
    softIoc: Generate base.dbd
    
    Includes new dependency rules for parallel builds.
    softIoc: Parallel build dependency
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    softIoc: Cleanup makeInstallDir.pl build slightly.
    Added FINAL_LOCATION code.
    Can't portably pass filesystem paths as command-line macros to C.
    Generate a header file instead and include that.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    softIoc use correct path sep
    softIoc re-add -D
    redo softIoc to be more c++y
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    epicsExit: add epicsExitLater() to trigger process exit without blocking
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Can't portably pass filesystem paths as command-line macros to C.
    Generate a header file instead and include that.
    Added -x option to load softIocExit.db.
    Change default behaviour: Start a shell unless -S is given.
    epicsExit
    Rename the registerRecordDeviceDriver routine.
    Fixed/suppressed HP-UX native (aCC) warnings
    Created softIoc application, which can be used without having a
    makeBaseApp working area.  Read comments in softMain.cpp for
    more details.  'softIoc -h' gives usage.
    
    Tested on Solaris & Linux, not appropriate for vxWorks,
    other architectures untested.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Missed installing asSub.dbd
    std: Reintroduce manually-created base.dbd file
    
    The auto-generated base.dbd file has all the includes fully
    expaded out before installation, which prevents IOC applications
    from being able to replace manuScan.dbd and menuconvert.dbd
    softIoc: Generate base.dbd
    
    Includes new dependency rules for parallel builds.
    Updates to build for iOS targets
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added single quotes in shell cmd to preserve backslashes.
    softIoc: Cleanup makeInstallDir.pl build slightly.
    Added FINAL_LOCATION code.
    softIoc: extra dep for generated header
    
    This is needed to make the initial build work.
    Must run makeInstallDir.pl from the INSTALL_BIN directory so it can
    find our libraries when INSTALL_LOCATION is set.
    Fixed build issue.
    Can't portably pass filesystem paths as command-line macros to C.
    Generate a header file instead and include that.
    Need quotes here too for this to work on Windows.
    Escape backslashes in fullPathName output.
    Include the dlload command.
    Don't build on vxWorks, makes little sense.
    Added system.dbd which contains the registrar for the system command.
    Include this in the softIoc.
    Might as well build the softIoc on everything...
    Added a .db file with a single record $(IOC):exit.
    Set the .A field to the exit status you want the softIoc to return.
    configure/tools provides a replacement for absPath.pl, use that instead.
    build softIoc.dbd from makefile
    Created softIoc application, which can be used without having a
    makeBaseApp working area.  Read comments in softMain.cpp for
    more details.  'softIoc -h' gives usage.
    
    Tested on Solaris & Linux, not appropriate for vxWorks,
    other architectures untested.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    Cosmetic.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
     changed Stringin and Stringout to Si and So
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Export and use int64indset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert devI64inSoft for Link Support
    
    Includes tests to make sure it actually works
    std: remove SCM keywords from int64in and int64out sources
    Add int64 record types and device support, from long
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Minimize work done in readLocked() routine
    
    Move post-I/O work back to the read_xx routines.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    udf fix when inp is a constant
     changed Stringin and Stringout to Si and So
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    std/dev,std/rec: treat val/sval/rval as ULONG for mbbiDirect/mbboDirect
    std/dev: adapt mbbiDirect/mbboDirect soft support to 32bit
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    jba     Initial version
    Initial revision
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Modify lsidset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Use new helper.
    Added new Long String Input record type "lsi"
    
    With Soft Channel device support.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Minimize work done in readLocked() routine
    
    Move post-I/O work back to the read_xx routines.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Undo buggy change
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Applied Bernd's devAiSoft SMOO patch.
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 3/6/91
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Removed special_linconv() routines, ESLO and EOFF can be set manually.
    backout RAWL, RAWF
    add support for RAWL RAWF
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    channel access links
    ANSI C changes
    Added special_linconv
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Fix various where epicsExport.h not last #include
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Remove duplicate null DSXT layer.
    Allow "Soft Timestamp" device address changes at runtime.
    Added ai support; renamed source file.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Minimize work done in readLocked routine
    
    Move post-I/O back to read_event.
    Fix initialization bug.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    bugfix: devEventSoft read_event with constant input and tse = epicsTimeEventDeviceTime did not read timestamp
    new approach to handle named events efficiently
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    string val field
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
     Move constant link value to val only if val is zero
    Dont move constant link value to val at init_record
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
    Initial revision
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    honor the MASK and SHFT fields
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    Changes for dynamic link modificartion
    init_record always returns status=2 so that conversion is not performed
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    jba     Initial version
    Initial revision
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix various where epicsExport.h not last #include
    Add DbState soft support for bi/bo records.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    std/dev,std/rec: treat val/sval/rval as ULONG for mbbiDirect/mbboDirect
    std/dev: adapt mbbiDirect/mbboDirect soft support to 32bit
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    jba     Initial version
    Initial revision
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    New "getenv" device support for string input types
    Add int64 record types and device support, from long
    Device support for new long string out record type
    Added new Long String Input record type "lsi"
    
    With Soft Channel device support.
    std: Device support for new printf record type
    Add DbState soft support for bi/bo records.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    added aai/aao soft support
    Added printf device support for stringout record => stdout or stderr
    Added ai support; renamed source file.
    General Time, from Peter Denison, Eric Norum and many others...
    Add simple device support for converting time to nicely-formatted string.
    support for dbCaPutCallback
    Removed device entries from base.dbd into their own .dbd files.
    Devices for TestAsyn support are not included by base.dbd, but have
    their own devTestAsyn.dbd file if required.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed EPICS_UPDATE_LEVEL to EPICS_PATCH_LEVEL.
    Added softDevIoc.rc win32 resource file.
    Changed BASE_ to EPICS_.
    Added win32 resource file.
    Added win32 resource files.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert all Async Soft Channel input devices to use link support
    Fix smoothing for Nan/Inf values in devAiSoftCallback
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Use prec for record pointers, to match other supports
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Export and use int64indset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix buffer size issue in devI64inSoftCallback
    Convert all Async Soft Channel input devices to use link support
    Add int64 record types and device support, from long
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Use prec for record pointers, to match other supports
    Correct error messages.
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    Fix various where epicsExport.h not last #include
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Enhance generalTime subsystem with interrupt-context time & event requests.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Fixes for Cygwin build.
    Id$.
    Major cleanup, rewrote some parts completely.
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Modify printfdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Support variable array size
    
    Added LEN field and get_array_info() routine.
    Removed len arg from device support write_string() routine.
    Modified device support to match.
    std: Device support for new printf record type
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    NORD/NELM issues fixed
    added aai/aao soft support
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    If recGblGetLinkValue got no values leave things as they were
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    jba        Fixed dbCaAddInlink parm VAL
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    *** empty log message ***
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    Cleanup after fix for Mantis #314.
    Fix up calc and calcout record and associated code to use the new features
    of postfix() and calcPerform().
    Oops, undo (wrong tree).
    changes so that it builds on solaris.
    changes so that it builds on solaris
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Removed special_linconv() routines, ESLO and EOFF can be set manually.
    backout RAWL, RAWF
    add support for RAWL RAWF
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    channel access links
    ANSI C changes
    Added special_linconv
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic cleanups
    Use new dbLink APIs instead of checking link.type
    Fix various where epicsExport.h not last #include
    Add DbState soft support for bi/bo records.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    std/dev,std/rec: treat val/sval/rval as ULONG for mbbiDirect/mbboDirect
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    honor the MASK and SHFT fields
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is no longer set to false if inp
    is a constant link and recGblInitConstantLink returns success
    (rval, not val, was successfully initialized).
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    Initial revision
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert all Async Soft Channel input devices to use link support
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Use prec for record pointers, to match other supports
    Correct error messages.
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert all Async Soft Channel input devices to use link support
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Use prec for record pointers, to match other supports
    Correct error messages.
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Minimize work done in readLocked() routine
    
    Move post-I/O work back to the read_xx routines.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Undo a small & unnecessary behaviour change
    Fix issues related to const array initialization
    Adjust record and device support for array constants
    Simplify link-type checks in soft device supports
    Move db_post_events(waveform, NORD) into recordType.
    
    Dirk pointed out that existing device support authors aren't
    going to add this themselves; it's much better if the record
    does it all for itself.
    Post events on waveform.NORD field changes
    
    Set "Rec Proc Monitor" column in the Record Reference Manual to Yes.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    If recGblGetLinkValue got no values leave things as they were
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    jba        Fixed dbCaAddInlink parm VAL
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    *** empty log message ***
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
     changed Stringin and Stringout to Si and So
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Set USE_TYPED_DSET centrally now everything uses it
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use (typed) rset instead of (untyped) struct rset inside Base
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    changes for epicsExport
    fix epicsShare decoration
    remove epicsShareFunc
    use new method to register asSub functions
    Use new technique to register sub functions
    cosmetic changes
    Updated license comments.
    moved as subroutine functions to here
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Modify printfdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use new helper function.
    Support variable array size
    
    Added LEN field and get_array_info() routine.
    Removed len arg from device support write_string() routine.
    Modified device support to match.
    std: Device support for new printf record type
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Modify lsodset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Device support for new long string out record type
    Use new helper function.
    Support variable array size
    
    Added LEN field and get_array_info() routine.
    Removed len arg from device support write_string() routine.
    Modified device support to match.
    std: Device support for new printf record type
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    channel access links
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    Cleanup after fix for Mantis #314.
    Fix up calc and calcout record and associated code to use the new features
    of postfix() and calcPerform().
    changes so that it builds on solaris
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    channel access links
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Removed special_linconv() routines, ESLO and EOFF can be set manually.
    backout RAWL, RAWF
    add support for RAWL RAWF
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is no longer set to false if inp
    is a constant link and recGblInitConstantLink returns success
    (rval, not val, was successfully initialized).
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
    Added special_linconv
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/6/91
    Initial revision
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if svl is a
    constant link and recGblInitConstantLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    ANSI C changes
     Pre R3.4 changes
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 3/6/91
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Export and use int64outdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert int64out Async Soft Channel device to use link support
    Add int64 record types and device support, from long
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    jba     Initial version
    Initial revision
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    std/dev,std/rec: treat val/sval/rval as ULONG for mbbiDirect/mbboDirect
    std/dev: adapt mbbiDirect/mbboDirect soft support to 32bit
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is set to false only if inp
    is a constant link and recGblInitConstantLink returns success.
    In read_<record type> the udf field is set to false only if
    inp is not a constant link and dbGetLink returns success.
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cosmetic changes to various soft device supports
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is no longer set to false if inp
    is a constant link and recGblInitConstantLink returns success
    (rval, not val, was successfully initialized).
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    Initial revision
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    Changed return of init_record to don't convert
    *** empty log message ***
    channel access links
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Modify lsodset, set USE_TYPED_DSET
    Modify printfdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Device support for new long string out record type
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The udf field is no longer set to false in write_<record type>.
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    Initial revision
     changed Stringin and Stringout to Si and So
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    honor the MASK and SHFT fields
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    initialized status
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    jba     Initial version
    Initial revision
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Modify lsidset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    New "getenv" device support for string input types
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix aai constant initialization
    
    The aai record is "special" and does things its own way.
    These changes let it support {const:[...]} initialization without
    breaking regular input link types which could be initialized twice
    without the new DBLINK_FLAG_INITIALIZED guard in dbInitLink().
    
    Also adds tests for this, and for similar links for waveform.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Fix issues related to const array initialization
    Adjust record and device support for array constants
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    added aai/aao soft support
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    If recGblGetLinkValue got no values leave things as they were
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    jba        Fixed dbCaAddInlink parm VAL
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    *** empty log message ***
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert all Async Soft Channel input devices to use link support
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Use prec for record pointers, to match other supports
    Correct error messages.
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    std/dev,std/rec: treat val/sval/rval as ULONG for mbbiDirect/mbboDirect
    std/dev: adapt mbbiDirect/mbboDirect soft support to 32bit
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert all Async Soft Channel input devices to use link support
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Added async soft channel support for mbbiDirect records
    Correct error messages.
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert all Async Soft Channel input devices to use link support
    dev: Replaced callocMustSucceed() with calloc()
    
    Make the *iSoftCallback devices allocate a single buffer for private
    storage instead of several, and cope with calloc failures without
    suspending the IOC thread.
    dev: Rename notifyInfo structure to devPvt.
    Honor MS/MSS/MSI flags and fetches timestamps properly too.
    Convert INST_IO links to regular PV_LINK types, for VDCT support.
    Added new PN_LINK type in link.h, make dbStaticLib display it.
    Made all device support extended so links can be changed at runtime.
    Modified startup so add_record() always called before regular link processing.
    Incomplete, stilll need to add MS/MSS/MSI support, currently disabled.
    Use prec for record pointers, to match other supports
    Correct error messages.
    Marty Kraimer's changes to support process-get operations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    init_record always returns status=2 so that conversion is not performed
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
     jba     Initial version
    Initial revision
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Modify lsodset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Device support for new long string out record type
    Support variable array size
    
    Added LEN field and get_array_info() routine.
    Removed len arg from device support write_string() routine.
    Modified device support to match.
    std: Device support for new printf record type
    Set USE_TYPED_DSET centrally now everything uses it
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Export and use int64outdset, set USE_TYPED_DSET
    Export and use int64indset, set USE_TYPED_DSET
    Modify lsodset, set USE_TYPED_DSET
    Modify lsidset, set USE_TYPED_DSET
    Modify printfdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    New "getenv" device support for string input types
    Add int64 record types and device support, from long
    Device support for new long string out record type
    Added new Long String Input record type "lsi"
    
    With Soft Channel device support.
    std: Device support for new printf record type
    Add DbState soft support for bi/bo records.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    added aai/aao soft support
    Added printf device support for stringout record => stdout or stderr
    RCS files now used for all cygwin and mingw builds.
    Allow "Soft Timestamp" device address changes at runtime.
    Renamed devTimestampSI.c with ai support added.
    General Time, from Peter Denison, Eric Norum and many others...
    Copyright header.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Add simple device support for converting time to nicely-formatted string.
    support for dbCaPutCallback
    add devXxCallback
    Removed device entries from base.dbd into their own .dbd files.
    Devices for TestAsyn support are not included by base.dbd, but have
    their own devTestAsyn.dbd file if required.
    Added softDevIoc.rc win32 resource file.
    Makefile changes so that rec and dev build on win32
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    devPtSoft.c is unbundled
    Modified OBJS build.
    new way to build
    new way to build
    More R3.14 Makefile changes.
    changes for 3.14
    restructure; new Symb support
    installed makefiles
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Enhancements to subArray record & soft device support
    
    Permit record's use as a look-up-table by reading constant
    input array data in dset::read_sa() routine.
    
    Move sub-array operation into a separate function.
    Extract subarray from constant INP value at device init.
    Reduce the work done inside readLocked() to a minimum.
    Limit NELM value to at most MALM in record init routine.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    subArray: Bugfix, allow array puts to VAL
    
    Fixed a bug reported by Michael Abbott, NORD goes -ve.
    Modified soft channel support so when INP="" it extracts the relevent
    sub-array of the existing VAL field; use an external put to set the
    array. This lets the other records pull a series of values from the
    record in sequence.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for dynamic link modificartion
    Initial revision
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    jba        Fixed dbCaAddInlink parm VAL
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    *** empty log message ***
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use dbPutLinkAsync() in all output SoftCallback dev's
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename of pxxx -> prec in device supports
    Cosmetic.
    support for dbCaPutCallback
    add devXxCallback
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    Changes for dynamic link modificartion
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
     changed Stringin and Stringout to Si and So
    Initial revision
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba changes 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes through 2/21/91
    put away for mrk after epics installed
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Minimize work done in readLocked() routine
    
    Move post-I/O work back to the read_xx routines.
    Modify soft devices to synchronize TSEL=-2 timestamps
    
    Use dbLinkDoLocked() to ensure a timestamp set by TSEL=-2
    comes from the same update as the value.
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in soft device supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup/coding style changes.
    Added support for epicsTimeEventDeviceTime.
    changes for epicsExport
    more changes for stupid stupid win32
    more changes to get epicsShare to work on win32
    epicsShareExtern => epicsShareDef
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    use ansi function prototypes
    fix includes
    changes for 3.14
    honor the MASK and SHFT fields
    restructure; new Symb support
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In init_record the udf field is no longer set to false if inp
    is a constant link and recGblInitConstantLink returns success
    (rval, not val, was successfully initialized).
    Changes for dynamic link modificartion
    Changes for replacing default.dctsdr by all ascii files
    Merge of LANL's device support with ANL's device support for 3.12
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    replaced code with recGblGetLinkValue call
    VALID changed to INVALID, ansi c changes
    Made reporting of hardware more consistant
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set of alarm stat and sevr to macros
    added std headers and some fixes
    jba: added new TestAsyn.c routines    changed MAJOR_ALARM to VALID_ALARM
    jba 4/18/91
    jba 3/21/91
    Initial revision
    jba 3/6/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Export and use int64outdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std: remove SCM keywords from int64in and int64out sources
    Add int64 record types and device support, from long
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: Enhance sequence record just like fanout
    
    Add link groups 0 and B through F, plus the OFFS and SHFT fields to
    provide backwards compatibility.
    Extended the fanout record to 16 links
    
    Added SHFT and OFFS fields for backwards compatibility.
    See Release Notes for detailed description.
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    Removed precord arg from dbScanFwdLink
    Fixed bugs from last set of changes
    Changes for udf and other problems discovered while looking at udf
    Changes made to fanoutRecord.c to modify DB_LINK test
    on lnk* fields to allow type CA_LINK.
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    removed test for pfanout->seln<0
    replaced fetch link selection with call to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
    *** empty log message ***
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
     added input link for seln and select MASK option
    added headers and some fixes
    jba: changed MAJOR_ALARM to VALID_ALARM
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba 1/10/91
    fixed args to dbScanPassive
    makerelease
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Replace fixed limits with global variables
    
    Replaced Dirk's fixed precision=2 and limit=10 seconds with
    global variables which can be set for each IOC.  Also changed
    the upper control limit for delay fields from 10 to 100,000.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    display limits for delays set to 0...10
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    The monitor last value field needs to be initialized.
    
    Device support init_record is allowed to set VAL to 1.
    If uninitialized then mlst is 0.
    During the first process() this will miss a monitor if VAL is changed to 0,
    and cause a spurious monitor if VAL remains 1.
    
    - mdavidsaver
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    get rid of warnings
    include recGbl.h
    osiClock;osiwatchdog => callbackRequestDelayed
    changes for 3.14
    Fix include statements
    get_enum_str must take address from DBADDR.pfield not from record
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    get_enum_strs MUST set no_strs=2 if no strings defined
    Bug fix for pes->no_str calculation
    The HIGH field was not honored properly for async records.
    Los Alamos Record Support Merge for R3.12
    modified callback args for ANSI C
    HIGH Call dbProcess not process
    get_precision bug fix
    change tsLocalTime to recGblGetTimeStamp
    modified get_precision to return 2 for HIGH field
    Added get_precision routine
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    Changed dpvt to rpvt.
    bug fix on error print string
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    changed callback
    ansi c changes
    removed include for memLib
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    *** empty log message ***
    added headers and some fixes
    removed call to write_bo if inlink is unsuccessful
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba changes through 2/7/91
    jba changes 1/14/91
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec: fix promptgroups in dbd.pod files
    Fixed some space/tab issues in DBD files
    rec: implement new promptgroup (gui_group) choices
    compress: copy some text from RRM wiki
    
    Still a lot remaining.  No idea what to do about the images.
    Implement LIFO behavior in compress record
    Various POD updates & experiments.
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Update the initial documentation to normal Pod syntax
    Start annotating fields and writing POD comments
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    use DBF_DOUBLE instead of DBF_FLOAT
    added 'N to 1 Median' algorithm (only for array inputs)
    Get rid of size from DBF_NOACCESS fields
    Changes for udf and other problems discovered while looking at udf
    Changed extension .db to .dbd
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    printf record: Document ll format modifier
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    compressRecord: LIFO doesn't zero pad
    
    Change handling of OFF so that reading a partially
    populated buffer doesn't pad with zero.
    
    Simplify put_value() and get_array_info()
    fill zeros into buffer when BALG is changed to LIFO from FIFO.
    Implement LIFO behavior in compress record
    rec: Cleanup of compress & histogram record source code
    
    No functional changes.
    rec: Fix compress & histogram attribute bugs
    
    Problems introduced during Dirk's non-val attribute changes.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Fixed crash when ALG (algorithm) was changed to Average at runtime. (Fixes #552803)
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    handle array allocation properly when link connects
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    make alarm a link LINK_ALARM
    include recGbl.h
    changes for 3.14
    added 'N to 1 Median' algorithm (only for array inputs)
    Fix include statements
    Fixed most compiler warning messages
    Removed precord arg from dbScanFwdLink
    Fixed bugs from last set of changes
    Changes for udf and other problems discovered while looking at udf
    Changed inp type test to DB_LINK
    Typo erro bug fix
    Changes made to compressRecord.c to modify DB_LINK test
    on inp field to allow type CA_LINK.
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    Fixed the updating of pcompress->inx in array_average
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba added pass test to init_record and changed cvt_dbaddr
    *** empty log message ***
    ansi c changes
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    *** empty log message ***
    added headers and some fixes
    jba: changed MAJOR_ALARM to VALID_ALARM
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    aSubRecord: Fix OVLA..OVLU POD field list
    Fix asub documentation: alarm happens when retunr status is < 0
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed some space/tab issues in DBD files
    rec: implement new promptgroup (gui_group) choices
    Various POD updates & experiments.
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    rec/aSub: Add cleanup subroutine
    Start annotating fields and writing POD comments
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    J field should not be PP, to match others.
    Added the aSub record type, derived from Andy Foster's genSub.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    menuSimmRAW fixes.
    Simulation mode patches from Peter Denison (Diamond)
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    changes for 3.14
    Fix include statements
    get_enum_str must take address from DBADDR.pfield not from record
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    Udf now set to false in put_enum_string when val is initialized.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    get_enum_strs has no_strs=2 if no strings defined so CA clients work
    Bug fix for pes->no_str calculation
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    fixed RSET
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    moved comment linke
    added headers and some fixes
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba changes 1/14/91
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix inf handling in select record
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Disable divide by zero warnings on MSVC when generating NAN and INF.
    Use those values rather than calculating them independently.
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Improved fix after comments from Dirk Zimoch.
    Handle SELN >= SEL_MAX without crashing (Mantis #295)
    Update value and post monitors on SELN field to indicate which input was
    selected, independent of the mechanism used.  New NLST field holds old value.
    ANSIfied; converted SELM to use values from generated menu header file.
    Improve handling of NaN values.
    In selRecord, replaced the 1e30 'magic number' with NaN and Inf values.
    Removed unused #define that caused a warning message
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    In do_sel udf is not set false at the beginning.
    If selm has an invalid value recGblSetSevr(psel,SOFT_ALARM,MAJOR_ALARM)
    is called.
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    same changes as for 3.13.3
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    removed obsolete comment line
    changed RTN_SUCCESS test
    Changed algorithms to all defined a-l, added recGblGetLinkValue call
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed graphic/control limits from loop to range test
    changed  graphic/control limits
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
    *** empty log message ***
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    *** empty log message ***
    added headers and some fixes
    jba: changed MAJOR_ALARM to VALID_ALARM
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    requested change from MRK
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Warn if deprecated state record is used
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    removed mlis.count check 5/91
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    mbbo/mbbiDirect number of bits as precision
    
    Not really useful w/ RSRV/CA, but can be used by QSRV/PVA
    to provide number of bits as meta-data.
    Remove EPICS Base submodules
    Move all under modules/database
    std/dev,std/rec: treat val/sval/rval as ULONG for mbbiDirect/mbboDirect
    std/rec: make VAL (etc.) of mbbiDirect/mbboDirect LONG
     (not ULONG because of CA)
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Ensure mbb* MASK calculated properly
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    rec: Delete ununsed fields from mbbxDirect record types
    
    LALM was being initialized but is not otherwise used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Don't cast to int to subtract pointers.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    include recGbl.h
    IVOA/IVOV (raw support) fix (B. Franksen)
    += IVOV/IVOA support, UDF behaviour fixed. (B. Franksen)
    changes for 3.14
    Fix include statements
    take out the extra event post
    Fixed most compiler warning messages
    Old style, pre R3.12, c code in init_record was updated.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Reset nRequest to 1
    Got rid of all calls related tp ols timestamp support
    Commit adding new record support code of aai, aao, dfanout, mbbiDirec, and mbboDirect.
    Los Alamos Record Support Merge for R3.12
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Clean up some warnings.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Calculate monitor events properly.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fire archive monitors too if delta=0x80000000
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    fix bug
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    changes for 3.14
    Fix include statements
    Changed local variables val,hyst,lalm,hihi,high,low,lolo to long.
    Fixed most compiler warning messages
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    *** empty log message ***
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Improve handling of NaN values.
    In selRecord, replaced the 1e30 'magic number' with NaN and Inf values.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    changes to dfanout as described in 3.13 release notes
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    same changes as for 3.13.3
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    bug fix
    Changes for udf and other problems discovered while looking at udf
    In process() the udf field is set to false when dbGetLink returns
    success only if dol is not a constant link.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    db_post_event had illegal arg for val field
    Reset nRequest to 1
    emoved simulation fields
    Got rid of all calls related tp ols timestamp support
    Commit adding new record support code of aai, aao, dfanout, mbbiDirec, and mbboDirect.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    rec/ai: Delete ancient, unused, commented-out function prototype.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    menuSimmRAW fixes.
    Simulation mode patches from Peter Denison (Diamond)
    Improve handling of NaN values.
    In selRecord, replaced the 1e30 'magic number' with NaN and Inf values.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Remove jba line accidently committed.
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    for old device support that doesnt know about eoff
    ESLO and EOFF are now design fields, usable when no device support
    special_linconv() routine is provided (for Raw Soft support).
    LINR=SLOPE also allows design-time and CA setting of ESLO & EOFF.
    Value changes by device support also cause CA monitors to be posted.
    put VAL field in a promptgroup
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    changes for 3.14
    Changed floats to double in alarm(), should be checked with full accuracy.
    reinitialize eoff in special
    Add new conversion field EOFF
    Fix include statements
    Fixed most compiler warning messages
    removed obsolete event throttling code
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    *** empty log message ***
    fix for aslo = 0 problem
    added headers and some fixes
    *** empty log message ***
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    sccs edit rec*.c
    jba changes
    *** empty log message ***
    makerelease
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    initial typed-dset changes for ao record
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed some space/tab issues in DBD files
    rec: implement new promptgroup (gui_group) choices
    Changes for newer version of Pod::Simple::HTML
    Various POD updates & experiments.
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    strcpy() -> strncpy() changes from Bruce Hill
    
    Also added some additional static assertions for string field sizes.
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Move STATIC_ASSERT statements.
    This macro can only be used where a variable declaration is allowed,
    the vxWorks compiler objects otherwise.
    Ensure the string VAL and OVAL have the same storage length
    
    There won't be any problems with overflow as long as dbPut
    behaves correctly when setting VAL.
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Fix UDF processing so we respect IVOA.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Added APST and MPST fields that control whether monitors are fired if the
    new string is identical to the old one.  Default value is "On Change" with
    behaviour identical to before, set to "Always" to fire monitors every time
    the record is processed (analagous to setting MDEL=-1 for numeric record
    types).
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    In process the udf field is now set to false if dol is
    not a constant link and dbGetLink returns success.
    If process routine found udf true it did not perform normal record completion
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    pact now set in recGblGetLinkValue
    replaced code for get of VAL from DOL with recGblGetLinkValue call
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test    karonis: added PV_LINK code
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    removed unused code
    udf fix when inp is a constant
    added headers and some fixes
    added stringin and stringout record types 5/91
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Remove duplicated include line
    Add HAS_<record>dset macros to allow detection
    
    External device support that must also build against earlier
    Base versions can use these to determine whether they need so
    declare their own dset structures for each record type.
    Export and use int64outdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec: fix promptgroups in dbd.pod files
    std/rec: add and improve pod for int64in and int64out
    std/rec: add pod documentation content for int64out
    std/rec: add pod documentation for int64out record
    Add int64 record types and device support, from long
    add prop(YES) to standard recordtypes
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    put VAL field in a promptgroup
    Added fields drvh and drvl.
    Changed extension .db to .dbd
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    Don't need void* cast
    
    Implicit case from void** to void*
    is allowed.
    Allow BPTR replacement in aai and aao
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Bugfix: use SIMS for simulation severity
    removed temporary debug messages
    hash based value change monitor added (like in waveform)
    fixed simulation mode, buffer allocation during initialization, corruption of NELM
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Cleanup (indentation, spacing); replaced sizeofTypes[] with dbValueSize().
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    get rid of warnings
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The siol field, which was never used in record processing, has been
    removed from aaiRecord.dbd and aaoRecord.dbd files. Old style, pre R3.12,
    c code in init_record was updated.
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Got rid of all calls related tp ols timestamp support
    Commit adding new record support code of aai, aao, dfanout, mbbiDirec, and mbboDirect.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix bug in eventRecord::init_record
    
    Look up event handle /after/ the device init routine has been run,
    in case it modified the event name in VAL. That didn't used to
    be possible because constant links couldn't return strings.
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Removed the last vestiges of RSET::get_value()
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    new approach to handle named events efficiently
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed soft events from numbers to strings.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    removed unneeded status=2 line
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    ANSI C changes
     Pre R3.4 changes
    Initial revision
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    added stringin and stringout record types 5/91
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make dbLinkIs{Constant|Volatile}() return only true/false
    Adjust calcout's handling of undefined links
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Update comments in calcoutRecord
    Use new dbLink APIs instead of checking link.type
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    rec: Fix precision where link not set
    
    Don't just force the precision to 15 if an INPx link is not set,
    default to PREC field instead.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Clean up warnings from gcc 4.6.3
    Replace fixed limits with global variables
    
    Replaced Dirk's fixed precision=2 and limit=10 seconds with
    global variables which can be set for each IOC.  Also changed
    the upper control limit for delay fields from 10 to 100,000.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    rec: Fix calc & calcout get_precision()
    new approach to handle named events efficiently
    read attributes of input fields from links
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Changed soft events from numbers to strings.
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    No special_linconv method needed in DSET, reduce number to 5.
    Fixes Mantis #314.
    IVOA "Don't drive" bug fix, from Peter Mueller.
    Fixed Cdefs to be output before the record structure.
    Moved record include files from dbStaticLib into dbCommon.dbd.
    Added Cdefs that include postfix.h to the calc*.dbd files, removed from .c.
    Added epicsMath.h include.
    Fix up calc and calcout record and associated code to use the new features
    of postfix() and calcPerform().
    PACT must be set during FLNK.
    ODLY was not handled properly
    Let calcoutRecord use device support
    Previously if a dbGetLink failed on one of the input links, dbGetLink was not called for the remaining links. Now it is
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Fixed macro name clash.
    Updated license comments.
    nsev not sevr must be checked to decide if dbPutLink should be called.
    Added calls to recGblGetGraphicDouble and recGblGetControlDouble.
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    get rid of warnings
    include recGbl.h
    same changes as for 3.13.3
    osiClock;osiwatchdog => callbackRequestDelayed
    changes for 3.14
    changes per Ned Arnold
    dont call dbScanLock until interruptAccept is true
    Get rid of some warning messages
    include postfix.h
    Fix include statements
    Change for fix to postfix and calcPerform
    It was use address 0 for a DBADDR
    Fixed most compiler warning messages
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Remove duplicated include line
    Add HAS_<record>dset macros to allow detection
    
    External device support that must also build against earlier
    Base versions can use these to determine whether they need so
    declare their own dset structures for each record type.
    Export and use int64indset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec: fix copyright in int64in sources
    std/rec: fix promptgroups in dbd.pod files
    std/rec: add and improve pod for int64in and int64out
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Fix seq to work correctly on "Specified" mode
    
    On Specified mode is expected that when seq is processed the value from
    DOL0 (fixed or links) is set on LNK0, if SELN = 0 (and OFFS = 0).
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: Enhance sequence record just like fanout
    
    Add link groups 0 and B through F, plus the OFFS and SHFT fields to
    provide backwards compatibility.
    Replace fixed limits with global variables
    
    Replaced Dirk's fixed precision=2 and limit=10 seconds with
    global variables which can be set for each IOC.  Also changed
    the upper control limit for delay fields from 10 to 100,000.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    read attributes of input fields from links
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Indentation and code style changes only.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Fixed gcc warning.
    Updated license comments.
    get rid of warnings
    include recGbl.h
    osiClock;osiwatchdog => callbackRequestDelayed
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    Changes made to modify DB_LINK tests on the lnk and dol
    fields to allow type CA_LINK.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    Reset nRequest to 1
    Added bug fixes to recSeq.c in order to allow CA links to work.
    Added proper monitor settings on the values that are transfered
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Clean-up of aai and waveform record sources
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    Move db_post_events(waveform, NORD) into recordType.
    
    Dirk pointed out that existing device support authors aren't
    going to add this themselves; it's much better if the record
    does it all for itself.
    Don't need void* cast
    
    Implicit case from void** to void*
    is allowed.
    Allow waveformRecord to replace BPTR
    Clean up warnings from gcc 4.6.3
    Post events on waveform.NORD field changes
    
    Set "Rec Proc Monitor" column in the Record Reference Manual to Yes.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    allocations MustSucceed
    Waveform record Post on Change using hash.
    Rename pxxx -> prec in all xxxRecord.c
    Replaced sizeofTypes[] with dbValueSize().
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Cleanup, ANSIfied.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    fixed include statements
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    siol cannot be a constant link.
    The siol field, if it is a constant, is now initialized
    during record initialization.  In process the udf field
    is now set to false if siol is not a constant link and
    dbGetLink returns success.
    removed obsolete event throttling code
     if nelm is 1 make nord also 1
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    set nord for db links -  needed for old db_access
    added options parm to recGblGetLinkValue
    *** empty log message ***
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    *** empty log message ***
    ansi c changes
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    Initial debugging
    added headers and some fixes
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba changes 1/14/91
    jba 1/10/91
    *** empty log message ***
    fix
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Enhancements to subArray record & soft device support
    
    Permit record's use as a look-up-table by reading constant
    input array data in dset::read_sa() routine.
    
    Move sub-array operation into a separate function.
    Extract subarray from constant INP value at device init.
    Reduce the work done inside readLocked() to a minimum.
    Limit NELM value to at most MALM in record init routine.
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    subArray: Bugfix, allow array puts to VAL
    
    Fixed a bug reported by Michael Abbott, NORD goes -ve.
    Modified soft channel support so when INP="" it extracts the relevent
    sub-array of the existing VAL field; use an external put to set the
    array. This lets the other records pull a series of values from the
    record in sequence.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    allocations MustSucceed
    Rename pxxx -> prec in all xxxRecord.c
    Replaced sizeofTypes[] with dbValueSize().
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fixed error behaviour.
    ANSIfied, major cleanup.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    Made mistake removing get_value
    Use dbGetFieldIndex. get rid of get_value
    removed event throttling code
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Got rid of all calls related tp ols timestamp support
    Modified to work with R3.12 time.
    Changed psub to psa. MGB
    Removed recGblResetSevr added recGblResetAlarms.  MGB
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    rec: Fix precision where link not set
    
    Don't just force the precision to 15 if an INPx link is not set,
    default to PREC field instead.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    rec: Fix calc & calcout get_precision()
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    read attributes of input fields from links
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fixed Cdefs to be output before the record structure.
    Moved record include files from dbStaticLib into dbCommon.dbd.
    Added Cdefs that include postfix.h to the calc*.dbd files, removed from .c.
    Fix up calc and calcout record and associated code to use the new features
    of postfix() and calcPerform().
    Previously if a dbGetLink failed on one of the input links, dbGetLink was not called for the remaining links. Now it is
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Fixed macro name clash.
    Updated license comments.
    Added calls to recGblGetGraphicDouble and recGblGetControlDouble.
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    same changes as for 3.13.3
    changes for 3.14
    include postfix.h
    remove db_post_events for calc change (dbPut does it)
    fix include statements
    Change for fix to postfix and calcPerform
    Fixed most compiler warning messages
    Allow CALC to be 40 characters. Increase rpbuf from 184 to 200
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    When calling db_post_event for argument fields ass DBE_LOG
    copy units string using DB_UNITS_SIZE
    Make monitors on input fields go off when DBE_ALARM set.
    Los Alamos Record Support Merge for R3.12
    Added recGblRecordError messages for postfix status
    change tsLocalTime to recGblGetTimeStamp
    changed monitors on input fields
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    modified fetch_values to call recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    Increased dim of rpbuf to hold double constants in expression
    changed  graphic/control limits
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
    *** empty log message ***
    channel access links
    fixed mamcpy parms
    fixed duplicate static
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    initial typed-dset changes for ao record
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Improve handling of NaN values.
    In selRecord, replaced the 1e30 'magic number' with NaN and Inf values.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    for old device support that doesnt know about eoff
    ESLO and EOFF are now design fields, usable when no device support
    special_linconv() routine is provided (for Raw Soft support).
    LINR=SLOPE also allows design-time and CA setting of ESLO & EOFF.
    Value changes by device support also cause CA monitors to be posted.
    put VAL field in a promptgroup
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    Bugfix: Changed RVAL/ROFF conversion to use double arithmetics
    include recGbl.h
    same changes as for 3.13.3
    changes for 3.14
    Changed floats to double in alarm(), should be checked with full accuracy.
    reinitialize eoff in special
    Did not work properly if DOL is a CA link that fails
    Add field aoRecord; Use generated menu values; fix includes
    Fixed most compiler warning messages
    Round rval
    conversion should not have added .5 (bad for - numbers)
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Initialize oval properly
    Added omod field sp that monitors to oval properly posted
    Los Alamos Record Support Merge for R3.12
    Fixed aslo aoff for init_record
    added ASLO AOFF
    change tsLocalTime to recGblGetTimeStamp
    modified oroc test to work on the mv162
    fixed ao roundoff problem - per bob dalesio
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    add static to definition of get_value
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
     added breakpoint table conversion
    added headers and some fixes
    dont allow dbputs to val while in closed loop mode
    jba 4/18/91
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba changes 1/14/91
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Modify lsodset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Fix lsi/lso puts with DBF_STRING data
    Add new long string output record type.
    Cleanup.
    Added new Long String Input record type "lsi"
    
    With Soft Channel device support.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    rec: Cleanup of compress & histogram record source code
    
    No functional changes.
    rec: Fix compress & histogram attribute bugs
    
    Problems introduced during Dirk's non-val attribute changes.
    Replace fixed limits with global variables
    
    Replaced Dirk's fixed precision=2 and limit=10 seconds with
    global variables which can be set for each IOC.  Also changed
    the upper control limit for delay fields from 10 to 100,000.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    osiClock;osiwatchdog => callbackRequestDelayed
    changes for 3.14
    Added new field PREC for display of double and float fields ULIM, LLIM,
    SDEL, SVAL, SGNL, and WDTH. Added unsigned long fields HOPR and LOPR for
    display of VAL array counts.  Changed SDEL field from SPC_NOMOD to
    SPC_RESET to allow start and stop of the watch dog timer.
    Fix include statements
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    removed all refs to process in callback
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    cast wdStart args to shutup compiler warning messages
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    ansi c changes
    ANSI C changes
     Pre R3.4 changes
    new record
    added special routine
    removed prints
    added headers and some fixes
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    strcpy() -> strncpy() changes from Bruce Hill
    
    Also added some additional static assertions for string field sizes.
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Move STATIC_ASSERT statements.
    This macro can only be used where a variable declaration is allowed,
    the vxWorks compiler objects otherwise.
    Ensure the string VAL and OVAL have the same storage length
    
    There won't be any problems with overflow as long as dbPut
    behaves correctly when setting VAL.
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Added APST and MPST fields that control whether monitors are fired if the
    new string is identical to the old one.  Default value is "On Change" with
    behaviour identical to before, set to "Always" to fire monitors every time
    the record is processed (analagous to setting MDEL=-1 for numeric record
    types).
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    added stringin and stringout record types 5/91
    Initial revision
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed some space/tab issues in DBD files
    rec: implement new promptgroup (gui_group) choices
    Various POD updates & experiments.
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Reorganize where the POD should be placed
    
    The converter now only handles POD from the root DBD object.
    However there are commands that pull POD out of named sub-objects.
    This also adds generating tables from menu choices.
    Update the initial documentation to normal Pod syntax
    Start annotating fields and writing POD comments
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Simulation mode patches from Peter Denison (Diamond)
    Updated license comments.
    ESLO and EOFF are now design fields, usable when no device support
    special_linconv() routine is provided (for Raw Soft support).
    LINR=SLOPE also allows design-time and CA setting of ESLO & EOFF.
    Value changes by device support also cause CA monitors to be posted.
    backout RAWL,RAWH; allow user to set ESLO,EOFF
    add RAWL RAWF
    put VAL field in a promptgroup
    use DBF_DOUBLE instead of DBF_FLOAT
    Get rid of size from DBF_NOACCESS fields
    Add new conversion field EOFF
    Fix include statements
    Changed extension .db to .dbd
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Adjust record and device support for array constants
    Simplify link-type checks in record supports
    rec: Fix precision where link not set
    
    Don't just force the precision to 15 if an INPx link is not set,
    default to PREC field instead.
    rec/aSub: Add cleanup subroutine
    Fix various where epicsExport.h not last #include
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    read attributes of input fields from links
    Move STATIC_ASSERT statements.
    This macro can only be used where a variable declaration is allowed,
    the vxWorks compiler objects otherwise.
    Ensure the string VAL and OVAL have the same storage length
    
    There won't be any problems with overflow as long as dbPut
    behaves correctly when setting VAL.
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Removed obselete get_value routine.
    Remove unnecessary casts.
    Fixed precision handling, recGblGetPrec doesn't always set *precision.
    Added the aSub record type, derived from Andy Foster's genSub.
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Export and use int64outdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec: streamline variable names in int64in/int64out
    std/rec: ioc64in/outRecord typed rset
    std: remove SCM keywords from int64in and int64out sources
    Add int64 record types and device support, from long
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Calculate monitor events properly.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fire archive monitors too if delta=0x80000000
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    fix bug
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    Code now uses dbGetFieldIndex.
    Added fields drvh and drvl.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Changed local variables val,hyst,lalm,hihi,high,low,lolo to long.
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In process() the udf field is set to false when dbGetLink returns
    success only if dol is not a constant link.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    pact now set in recGblGetLinkValue
    changed RTN_SUCCESS test
    odified fetch of val from dol to call recGblGetLinkValue
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test    karonis: added PV_LINK code
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    *** empty log message ***
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: make all analog type records use new recGblCheckDeadband()
    std/rec: fix NaN/inf bug in deadband algorithm of analog records
    std/rec: Improve subRecord error messages
    rec: Fix precision where link not set
    
    Don't just force the precision to 15 if an INPx link is not set,
    default to PREC field instead.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Clean up warnings from gcc 4.6.3
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    read attributes of input fields from links
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Update comment; can't deprecate a published API!
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Fixed fetch_values() bug.
    Prevent double processing after re-enabling from an empty SNAM.
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fixed pointer cast.
    Allow subroutine changes at runtime, from Kazimierz Gofron (Codeathon)
    Also did some major cleanup.
    Improve handling of NaN values.
    In selRecord, replaced the 1e30 'magic number' with NaN and Inf values.
    Fix error message.
    Fixed warning on HP: ARG_MAX is used in HP-UX sys header file
    changes for epicsExport
    more changes for epicsShare
    Removed epicsAhareAPI
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    get rid of warning message
    cosmetic changes
    Updated license comments.
    Added calls to recGblGetGraphicDouble and recGblGetControlDouble.
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    moved as functions
    get rid of warnings
    include recGbl.h
    moved asSub code from asDbLib to here
    same changes as for 3.13.3
    get rid of vxWorks specific symbols
    changes for 3.14
    changed to use symFindByNameEPICS
    Fix include statements
    Allow null init subroutine
    Fixed most compiler warning messages
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    When calling db_post_event for argument fields ass DBE_LOG
    copy units string using DB_UNITS_SIZE
    Added support for scan and wait records
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    replaced code with recGblGetLinkValue call
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test    karonis: added PV_LINK code
    jba added pass test to init_record and changed cvt_dbaddr
     jba     pact now used to test for asyn processing, not status
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Restore the ability to write to mbbi/mbbo *VL fields
    
    Fixes lp: #1794196
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Ensure mbb* MASK calculated properly
    rec: Code format cleanup to mbbi, mbbo records
    
    No intentional changes to functionality.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Cleanup of mbbi, mbbo record code.
    
    Mostly just layout changes, removing unnecessary casts, and
    replacing 'unsigned short' with epicsEnum16 types.
    The only significant code change is in the alarm filtering
    code of the mbbi record, which wasn't handling UDF alarms
    or unknown state alarms quite right.
    Special processing events
    
    When generating a DBE_PROPERTY event because of a modified
    enum string, also post DBE_VALUE and DBE_LOG events if the
    record is currently in that particular state.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Rename pxxx -> prec in all xxxRecord.c
    New DBE_PROPERTY event type and support in catools and mbbi/mbbo records
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    init_record now checks to see if state strings or values are defined during pass 0.
    Previously if another record had a DBR_STRING link to
    an mbboRecord it thought the field was a USHORT instead of an ENUM
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    mbboRecord now implements method cvt_dbaddr for the VAL field.
    If no state va les or state strings are defined then it sets
    field_type and dbr_field_type to DBF_USHORT.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    changes for 3.14
    Fix include statements
    get_enum_str must take address from DBADDR.pfield not from record
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Set states defined true if any state value OR string is defined
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    reinserted call to initCom after call to dev sup
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    Removed excess call to init_common
    fixed error string text
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    jba 4/18/91
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba changes through 2/7/91
    jba changes 1/14/91
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    mbbo/mbbiDirect number of bits as precision
    
    Not really useful w/ RSRV/CA, but can be used by QSRV/PVA
    to provide number of bits as meta-data.
    Remove EPICS Base submodules
    Move all under modules/database
    std/rec: make VAL (etc.) of mbbiDirect/mbboDirect LONG
     (not ULONG because of CA)
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Ensure mbb* MASK calculated properly
    rec: mbbiDirect and mbboDirect refactoring
    
    This includes changes to functionality, documented.
    rec: Delete ununsed fields from mbbxDirect record types
    
    LALM was being initialized but is not otherwise used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    menuSimmRAW fixes.
    Simulation mode patches from Peter Denison (Diamond)
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Bugfix: single bits' monitors are posted if the severity changes
    Fix include statements
    take out the extra event post
    Fixed most compiler warning messages
    bug fix
    Udf now set to false in process when val is initialized.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    db_post_event had illegal arg for val field
    Reset nRequest to 1
    Got rid of all calls related tp ols timestamp support
    Commit adding new record support code of aai, aao, dfanout, mbbiDirec, and mbboDirect.
    Los Alamos Record Support Merge for R3.12
    Remove EPICS Base submodules
    Move all under modules/database
    Change paths for tools from this module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    Make stdRecords.dbd depend on rec/Makefile
    Added dbd dependency.
    std: Reintroduce manually-created base.dbd file
    
    The auto-generated base.dbd file has all the includes fully
    expaded out before installation, which prevents IOC applications
    from being able to replace manuScan.dbd and menuconvert.dbd
    Tweak some dependency rules for correctness
    softIoc: Generate base.dbd
    
    Includes new dependency rules for parallel builds.
    softIoc: Parallel build dependency
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Fixes to the dfanout record documentation
    
    This commit is actually to test an updated Jenkins configuration
    for mirroring commits from Launchpad to GitHub, using a webhook
    instead of polling LP for updates every 5 minutes.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Modify lsidset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Fix lsi/lso puts with DBF_STRING data
    Cleanup.
    Added new Long String Input record type "lsi"
    
    With Soft Channel device support.
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Export and use int64indset, set USE_TYPED_DSET
    Fix int64inRecord::get_units()
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec: streamline variable names in int64in/int64out
    std/rec: ioc64in/outRecord typed rset
    std/rec: fix copyright in int64in sources
    std: remove SCM keywords from int64in and int64out sources
    Add int64 record types and device support, from long
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Clean up some warnings.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Calculate monitor events properly.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fire archive monitors too if delta=0x80000000
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    fix bug
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    changes for 3.14
    Fix include statements
    Changed local variables val,hyst,lalm,hihi,high,low,lolo to long.
    Fixed most compiler warning messages
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    *** empty log message ***
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    Clean-up of aai and waveform record sources
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Simplify link-type checks in record supports
    Don't need void* cast
    
    Implicit case from void** to void*
    is allowed.
    Allow BPTR replacement in aai and aao
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    hash based value change monitor added (like in waveform)
    fixed simulation mode, buffer allocation during initialization, corruption of NELM
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Rename pxxx -> prec in all xxxRecord.c
    Cleanup (indentation, spacing); replaced sizeofTypes[] with dbValueSize().
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    osiTime=>epicsTime
    get rid of warnings
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    The siol field, which was never used in record processing, has been
    removed from aaiRecord.dbd and aaoRecord.dbd files. Old style, pre R3.12,
    c code in init_record was updated.
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Got rid of all calls related tp ols timestamp support
    Commit adding new record support code of aai, aao, dfanout, mbbiDirec, and mbboDirect.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed get_units, get_precision, get_graphic_double, and get_control_double to return meaningful values on non-VAL fields
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Replaced YES and NO macros with their menuYesNo or menuSimm equivalents.
    Calculate monitor events properly.
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fire archive monitors too if delta=0x80000000
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    replace dbDefs.h eefinitions with menu definitions
    Fix OMSL bug reported by Andy Foster
    fix bug
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    Code now uses dbGetFieldIndex.
    Added fields drvh and drvl.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Changed local variables val,hyst,lalm,hihi,high,low,lolo to long.
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    In process() the udf field is set to false when dbGetLink returns
    success only if dol is not a constant link.
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    copy units string using DB_UNITS_SIZE
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    pact now set in recGblGetLinkValue
    changed RTN_SUCCESS test
    odified fetch of val from dol to call recGblGetLinkValue
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    changed  graphic/control limits
    jba: fixed pass test    karonis: added PV_LINK code
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    *** empty log message ***
    Changed get_precision,get_graphic_double,get_control_double, ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    Initial revision
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Set USE_TYPED_DSET centrally now everything uses it
    - Record updates:
      . histogramRecord
      . eventRecord
      . aaiRecord
      . aaoRecord
    
    - Device support updates:
      . devHistogramSoft (histogramRecord)
      . devEventSoft (eventRecord)
      . devAaiSoft (aaiRecord)
      . devAaoSoft (aaoRecord)
    
    - Fixes in already-migrated records
      . lsiRecord: replaced 'struct lsidset' with typedef(ed) 'lsidset'
      . int64inRecord (similar as above)
      . int64outRecord (similar as above)
      . calcRecord: minor fix in init_record() prototype declaration
    
    - Note: the comments about return values in dset structs were outright copied from .c to .pod/.dbd files without confirmation if they are indeed correct!
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    initial typed-dset changes for ao record
    Export and use aidset, set USE_TYPED_DSET
    
    I did ai so I can use it as an example in the Release Notes.
    Export and use int64outdset, set USE_TYPED_DSET
    Export and use int64indset, set USE_TYPED_DSET
    Modify lsodset, set USE_TYPED_DSET
    Modify lsidset, set USE_TYPED_DSET
    Modify printfdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add int64 record types and device support, from long
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    Only try to generate .html files where the .dbd.pod exists
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Add new long string output record type.
    Added new Long String Input record type "lsi"
    
    With Soft Channel device support.
    std: Added new printf record type
    Start annotating fields and writing POD comments
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Added the aSub record type, derived from Andy Foster's genSub.
    RCS files now used for all cygwin and mingw builds.
    remove all apsEvent support from base
    Removed spectrumRecord and related libCom code.
    installed spectrum record
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Added recIoc.rc win32 resource file.
    Makefile changes so that rec and dev build on win32
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    gsubRecord obsolete
    Renamed RECTYPES to DBDINC
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    latest build rules
    Modified OBJS build.
    osiClock;osiwatchdog => callbackRequestDelayed
    new way to build
    new way to build
    More changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed some space/tab issues in DBD files
    rec: implement new promptgroup (gui_group) choices
    Various POD updates & experiments.
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Reorganize where the POD should be placed
    
    The converter now only handles POD from the root DBD object.
    However there are commands that pull POD out of named sub-objects.
    This also adds generating tables from menu choices.
    Start annotating fields and writing POD comments
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Waveform record Post on Change using hash.
    Updated license comments.
    use DBF_DOUBLE instead of DBF_FLOAT
    Get rid of size from DBF_NOACCESS fields
    Changed extension .db to .dbd
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    Many edits to record reference docs
    
    Add documentation for aSub from wiki.
    Fix incorrect document structures.
    Remove inclusion of menu.dbd files.
    Fix links to common doc's, remove some links to nowhere.
    Adjust podToHtml.pl and the rule that calls it.
    doc: update simulation parameters sections in dbds
    
    - refer to appropriate sections in dbCommonInput/dbCommonOutput
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Modify printfdset, set USE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Add INT64 support to the printf record type
    
    Use the 'll' modifier to fetch and print 64-bit integer data.
    Also now rejects mixing of the 'l' and 'h' modifiers.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    printfRecord: Handle const long-strings in "%ls"
    
    Adds some tests for printfRecord.
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    std/rec: Fix clang compiler warning.
    printf record: Fix bug in minimum buffer size logic.
    Support variable array size
    
    Added LEN field and get_array_info() routine.
    Removed len arg from device support write_string() routine.
    Modified device support to match.
    std: Added new printf record type
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Rename pxxx -> prec in all xxxRecord.c
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    include recGbl.h
    changes for 3.14
    Fix include statements
    Fixed most compiler warning messages
    check that recGblInitConstantLink returned TRUE before setting udf FALSE
    Add DBE_LOG on call to db_post_event when necessary
    Changes for replacing default.dctsdr: Renamed all record support modules
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    added headers and some fixes
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba 1/10/91
    makerelease
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    - Record updates:
      . aoRecord
      . biRecord
      . boRecord
      . mbbiRecord
      . mbbiDirectRecord
      . mbboRecord
      . mbboDirectRecord
      . longinRecord
      . longoutRecord
      . stringoutRecord
      . stringinRecord
      . waveformRecord
      . calcoutRecord
      . subArrayRecord
    
    - Device support updates:
      . devAoSoft, devAoSoftCallback, devAoSoftRaw (aoRecord)
      . devBiSoft, devBiSoftCallback, devBiSoftRaw, devBiDbState (biRecord)
      . devBoSoft, devBoSoftCallback, devBoSoftRaw, devBoDbState, devGeneralTime (boRecord)
      . devMbbiSoft, devMbbiSoftCallback, devMbbiSoftRaw (mbbiRecord)
      . devMbboSoft, devMbboSoftCallback, devMbboSoftRaw (mbboRecord)
      . devMbbiDirectSoft, devMbbiDirectSoftCallback, devMbbiDirectSoftRaw (mbbiDirectRecord)
      . devMbboDirectSoft, devMbboDirectSoftCallback, devMbboDirectSoftRaw (mbboDirectRecord)
      . devGeneralTime, devLiSoft, devLiSoftCallback (longinRecord)
      . devLoSoft, devLoSoftCallback (longoutRecord)
      . devSoSoft, devSoSoftCallback, devStdio (stringoutRecord)
      . devSiSoft, devSiSoftCallback, devEnviron, devGeneralTime, devTimestamp (stringinRecord)
      . devWfSoft (waveformRecord)
      . devCalcoutSoft, devCalcoutSoftCallback (recordCalcout)
      . devSASoft (subArrayRecord)
    Restore the ability to write to mbbi/mbbo *VL fields
    
    Fixes lp: #1794196
    Remove EPICS Base submodules
    Move all under modules/database
    rec: improve and streamline simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Use new dbLink APIs instead of checking link.type
    Ensure mbb* MASK calculated properly
    rec: Code format cleanup to mbbi, mbbo records
    
    No intentional changes to functionality.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Cleanup of mbbi, mbbo record code.
    
    Mostly just layout changes, removing unnecessary casts, and
    replacing 'unsigned short' with epicsEnum16 types.
    The only significant code change is in the alarm filtering
    code of the mbbi record, which wasn't handling UDF alarms
    or unknown state alarms quite right.
    Special processing events
    
    When generating a DBE_PROPERTY event because of a modified
    enum string, also post DBE_VALUE and DBE_LOG events if the
    record is currently in that particular state.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    rec: update last/prev./old value fields after dset init_record
    
    This must be done if init_record is allowed to change values
    or monitors may not be posted when values change.
    Rename pxxx -> prec in all xxxRecord.c
    New DBE_PROPERTY event type and support in catools and mbbi/mbbo records
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    menuSimmRAW fixes.
    Simulation mode patches from Peter Denison (Diamond)
    changes for epicsExport
    more changes for epicsShare
    registerRecordDeviceDriver now defines GEN_SIZE_OFFSET
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    all existing manipulations of UDF in process() are removed and
    udf is set FALSE when the raw value is successfully read.
    change alarm to checkAlarms; dfanout.VAL to double; remove unbundled records
    include recGbl.h
    changes for 3.14
    Fix include statements
    get_enum_str must take address from DBADDR.pfield not from record
    Fixed most compiler warning messages
    Changes for udf and other problems discovered while looking at udf
    Udf now set to false in put_enum_string when val is initialized.
    Changes for dynamic link modification
    Changes for replacing default.dctsdr: Renamed all record support modules
    Set states defined true if any state value OR string is defined
    Los Alamos Record Support Merge for R3.12
    change tsLocalTime to recGblGetTimeStamp
    Replaced recGblResetSevr by recGblResetAlarms
    changed stat,sevr,nsta,nsev to unsigned
    added options parm to recGblGetLinkValue
    fwd macro,INVALID,add simm,added ivoa, new alarm alg
    jba: fixed pass test
    jba added pass test to init_record and changed cvt_dbaddr
     jba     removed process from dev init_record parms
     jba     pact now used to test for asyn processing, not status
    ANSI C changes
     Pre R3.4 changes
     jba     Moved set and reset of alarm stat and sevr to macros
    *** empty log message ***
    added headers and some fixes
    jba 4/18/91
    jba changes as of 4/4/91
    jba 3/21/91
    jba 3/6/91
    jba changes
    jba changes through 2/7/91
    jba changes 1/14/91
    jba 1/10/91
    *** empty log message ***
    makerelease
    Initial revision
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Fix typos in Channel Filters doc
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Document [s:e] and [s] filter usage
    Fix internal anchor in filters.pod
    std/filters: make shorthand notation more prominent in filter documentation
    src/std/filters: Complete documentation for standard filters
    Document the sync filter.
    
    Also, use enum values where we have them.
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Update the initial documentation to normal Pod syntax
    filters: Document the deadband filter
    Start annotating fields and writing POD comments
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add sync plugin that uses the db state
    Add arr plugin for array subsets (+ testcode)
    Add deadband plugin (client defined monitor deadband)
    Add ts filter plugin to set timestamp to "now"
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filters: fix filters test harness
    Improve casr() output
    std/filter: plugins cleanup freeList
    std/filters: add tagged configuration options to dbnd and sync plugins
    std/filters: make dbnd filter use recGblCheckDeadband()
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    dbnd must free dropped events
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Added tests for ts and dbnd plugins, fix in dbnd.c: make local functions static
    Add deadband plugin (client defined monitor deadband)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filters: fix filters test harness
    Improve casr() output
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    scanlock for direct record access from channel filters
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Change how ...Show is generated, minor refactoring and fix in ts plugin
    Add function to dbChannel.c to create a db_field_log copy of array/string data
    Add ts filter plugin to set timestamp to "now"
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Use the dbChannel*() accessor macros in the array filter code
    instead of exposing the dbChannel innards unnecessarily.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filters: fix filters test harness
    Use (typed) rset instead of (untyped) struct rset inside Base
    Improve casr() output
    std/filters: arr wrap on capacity not length
    std/filter: plugins cleanup freeList
    std/filters: add minimal error handling when using freeListCalloc() in arr plugin
    get_array_info() can modifiy DBADDR::pfield
    
    Allow the record support function get_array_info()
    to modify its first argument to provide a different
    pointer from which values should be read.
    
    Remember the original and restore it afterwards.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Clean up warnings from gcc 4.6.3
    scanlock for direct record access from channel filters
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Change arr plugin behaviour from exclusive to inclusive range end specifier
    Fix bug in arr plugin (for incr <= 0), add tests for invalid and out-of-bound parameters
    Add arr plugin for array subsets (+ testcode)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filters: fix filters test harness
    Improve casr() output
    std/filter: plugins cleanup freeList
    std/filters: add tagged configuration options to dbnd and sync plugins
    Document the sync filter.
    
    Also, use enum values where we have them.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    sync filter checking
    
    Detect condition which would result to a double free().
    sync needs to free held events
    
    The sync plugin may hold an update internally.
    If this is done then it must be free'd when
    the dbChannel is closed.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add sync plugin that uses the db state
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filters: fix bug in Makefile (showed up on Windows, not on Linux)
    Start annotating fields and writing POD comments
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Moved devTestAsyn to lp:epics-base-tests
    
    These device supports are for testing asynchronous processing
    and are currently only used in the regression test suite.
    std: Build in std/test, into libdbRecStd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Replaced most TestAsyn support with a common extended support layer.
    RCS files now used for all cygwin and mingw builds.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    add devLoTestAsyn and devMbboDirectTestAsyn
    Removed device entries from base.dbd into their own .dbd files.
    Devices for TestAsyn support are not included by base.dbd, but have
    their own devTestAsyn.dbd file if required.
    Added testDevIoc.rc win32 resource file.
    Makefile changes so that rec and dev build on win32
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    Modified OBJS build.
    new way to build
    new way to build
    More R3.14 Makefile changes.
    changes for 3.14
    restructure; new Symb support
    installed makefiles
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Fixes in link type documentation
    Remove EPICS Base submodules
    Move all under modules/database
    Link types: Remove debug tracing now provided by debug link type
    dbJLink: Restore the jlink::debug flag, add debug and trace link types
    Added DBF_OUTLINK support to lnkCalc
    
    New out key specifying a child link to put the calculated result to.
    dbJLink: Handle NULL returned by jlif::alloc() better
    
    It might not mean out-of-memory, adjust error message.
    Add OOM and dbfType error checks to all jlif::alloc() routines.
    
    Change all IFDEBUG() in JLink types to use exported global variables.
    This allows debug messages to be output from the jlif::alloc()
    routines, since the jlink field isn't set when they're called.
    lnkState: Add support for inverting the flag data
    
    Determine the truthiness of put data in its original data type.
    Adjust the link documentation to cover these changes.
    Add a "state" link type using the dbState API
    
    Includes documentation in links.dbd.pod
    Added timestamp support to the lnkCalc link type.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updates to Release Notes and links.html
    Minor updates
    Some documentation updates
    Minor fixes to the calc link-type
    Minor cleanups
    Added calc link-type
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    const init a char array from a string value
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    Remove EPICS Base submodules
    Move all under modules/database
    Link types: Remove debug tracing now provided by debug link type
    Add jlif::start_child() method
    Cleanup warnings in lnkConst.c
    dbJLink: Handle NULL returned by jlif::alloc() better
    
    It might not mean out-of-memory, adjust error message.
    Add OOM and dbfType error checks to all jlif::alloc() routines.
    
    Change all IFDEBUG() in JLink types to use exported global variables.
    This allows debug messages to be output from the jlif::alloc()
    routines, since the jlink field isn't set when they're called.
    More debug printf()s in lnkConst
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add dummy putValue methods to const link types
    
    Includes a new softTest program to detect regressions.
    Resolves http://www.aps.anl.gov/epics/core-talk/2017/msg00503.php
    Convert lnkConst to 64 bit integers
    jlif future proof for 64-bit json parser
    std/link: runtime conditional debugging in calc/const
    Tidy up lnkConst.c after Michael's bug-fix changes
    
    Should make the code easier to follow.
    std/link: lnkConst refactor
    
    Avoid variable with same name as typedef.
    Confuses qtcreator.
    std/link: lnkConst fix mem leak and hard fail on no mem
    std/link: lnkConst avoid cantProceed()
    Fix typos, remove FIXMEs from lnkConst.c
    No need to truncate const string array elements
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Added JLink reporting infrastructure
    
    Command 'dbjlr <record|*> <level>' calls the report method for
    all JSON links in all records, or in one named record.
    Added level and indent arguments to the jlif::report() method.
    
    Added jlif::map_children() method for recursing through all
    JSON links, plus dbJLinkMapChildren() and dbJLinkMapAll() APIs.
    
    Implemented the report and map_children methods in the const
    and calc link types.
    Add lnkConst_remove, fix debug messages
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Use new epicsStrnDup() API
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Split dbJLinkInit, JLinks are now parsed at load-time
    Added loadLS routine to lset
    
    The long string in/out records use a different initializer
    for constant links. The new loadLS method allows a constant
    link type to initialize such a long string field.
    
    NB: This routine was added in the middle of the lset table.
    Any external link support implementations must be adjusted.
    Add code for arrays of strings
    Pass link dbfType to jlif allocator; needed!
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Remove EPICS Base submodules
    Move all under modules/database
    dbJLink: Restore the jlink::debug flag, add debug and trace link types
    Add a "state" link type using the dbState API
    
    Includes documentation in links.dbd.pod
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added calc link-type
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    std/filters: fix bug in Makefile (showed up on Windows, not on Linux)
    Start annotating fields and writing POD comments
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Moved devTestAsyn to lp:epics-base-tests
    
    These device supports are for testing asynchronous processing
    and are currently only used in the regression test suite.
    std: Build in std/test, into libdbRecStd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Replaced most TestAsyn support with a common extended support layer.
    RCS files now used for all cygwin and mingw builds.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    add devLoTestAsyn and devMbboDirectTestAsyn
    Removed device entries from base.dbd into their own .dbd files.
    Devices for TestAsyn support are not included by base.dbd, but have
    their own devTestAsyn.dbd file if required.
    Added testDevIoc.rc win32 resource file.
    Makefile changes so that rec and dev build on win32
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    Modified OBJS build.
    new way to build
    new way to build
    More R3.14 Makefile changes.
    changes for 3.14
    restructure; new Symb support
    installed makefiles
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Added a free statement to release memory allocated for postbuf if the memory allocation for inbuf fails. Resolves an error level issue generated by the Codacy static code analysis.
    
    Codacy link: https://app.codacy.com/gh/epics-base/epics-base/file/42098735308/issues/source?bid=16430872&fileBranchId=16430872#l201
    Launchpad bug: https://bugs.launchpad.net/epics-base/+bug/1862917
    
    LP: #1862917
    Remove EPICS Base submodules
    Move all under modules/database
    lnkCalc fix: Don't evaluate minor expression when major returned true
    Link types: Remove debug tracing now provided by debug link type
    Add jlif::start_child() method
    dbJLink: Pass the correct dbfType to child links
    
    API change for link types that support child links, they must now
    indicate whether a child link is an input, output or forward link
    by the return value from their parse_start_map() method. The original
    jlif_key_child_link enumeration has been replaced by 3 new values:
    jlif_key_child_inlink, jlif_key_child_outlink and jlif_key_child_fwdlink
    
    Previously we were passing the dbfType of the record link field to all
    child links within it, which was wrong.
    Added DBF_OUTLINK support to lnkCalc
    
    New out key specifying a child link to put the calculated result to.
    More timestamp support for lnkCalc
    
    Link now remembers the last timestamp read if a timestamp input
    was nominated, and implements getTimestamp() to return this.
    Also displays the timestamp value in the report output.
    dbJLink: Handle NULL returned by jlif::alloc() better
    
    It might not mean out-of-memory, adjust error message.
    Add OOM and dbfType error checks to all jlif::alloc() routines.
    
    Change all IFDEBUG() in JLink types to use exported global variables.
    This allows debug messages to be output from the jlif::alloc()
    routines, since the jlink field isn't set when they're called.
    Remove duplicate variables from lnkCalc.c
    Added timestamp support to the lnkCalc link type.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    jlif future proof for 64-bit json parser
    std/link: runtime conditional debugging in calc/const
    std/link: all calc example
    Make dbLinkIs{Constant|Volatile}() return only true/false
    std/link: lnkCalc require expression
    
    error if 'expr' key isn't provided.
    std/link: lnkConst avoid cantProceed()
    Fix buffer allocation bug in lnkCalc.c
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Fixed a small memory leak in lnkCalc
    Fix warnings from clang
    Minor updates
    Some documentation updates
    Added JLink reporting infrastructure
    
    Command 'dbjlr <record|*> <level>' calls the report method for
    all JSON links in all records, or in one named record.
    Added level and indent arguments to the jlif::report() method.
    
    Added jlif::map_children() method for recursing through all
    JSON links, plus dbJLinkMapChildren() and dbJLinkMapAll() APIs.
    
    Implemented the report and map_children methods in the const
    and calc link types.
    Add lnkConst_remove, fix debug messages
    Minor fixes to the calc link-type
    Minor cleanups
    Added calc link-type
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    dbExpand.pl needs databaseModuleDirs
    
    When built stand-alone, needs it to locate EPICS::Getopts
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Improve error handling of dbdExpand.pl
    Updated concatenated database definition files
    Added concatenated database definition files
    Errors from the DBD Parser should stop dbdExpand
    
    Such errors used to be just warnings, now they stop the output
    file being generated unless the -D flag was given.
    tools: Improve dbdExpand.pl error/warning message
    
    Missing files used to result in an empty output file.
    Now it warns instead of dying, and suggests adding a
    dependency to the Makefile.
    Move src/dbHost scripts and modules into src/tools.
    Remove programs that were replaced in Perl.
    Note questionable handling of -I option on Win32.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    2009-02-15: Getting close.
    Rename dbExpand => dbdExpand,
    Added proper parsing and generation of DBD file.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Perl s/use vars/our/
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    ioc/dbStatic: make offset in field description an unsigned short, add cast to code generator
    
    fixes ~2600 compiler warnings (on windows-x64)
    dbdToRecordtypeH.pl: Don't warn about unused menus.
    Move src/dbHost scripts and modules into src/tools.
    Reject field names that are reserved words.
    The list of reserved words is combined from C++ and the DB/DBD file parser.
    This also requires a small change in the rules for generating the C name
    from the DBD field name, since the aSub record has a field NOT; now if we
    find the lower-case version is reserved, we use the original instead.
    Since the aSubRecord.c file doesn't use prec->not this is back-compatible.
    Remove programs that were replaced in Perl.
    Note questionable handling of -I option on Win32.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    2009-02-08: Work with & match R3.14.10 output; rename tools.
    add dynamic_registerRecordDeviceDriver()
    
    Use epicsFindSymbol() to build a dynamic and idempotent equivalent
    to the code generated by registerRecordDeviceDriver.pl
    
    Also add runRegistrarOnce() to prevent registrars
    from running multiple times, except from unittest code.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    further no need to search for perl modules under bin
    use iocshSetError()
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    src/tools: avoid dep. warning in rRDD generated
    
    when building a support module
    Make generated code always use typed_rset
      always cast to cover old-style supports
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Silence unused variable warning
    Perl style fixes, document more Perl programs
    Modify registerRecordDeviceDriver for loadable support
    
    Don't generate code to register record types that have only
    been declared, i.e. that have no fields defined in them.
    This allows libraries to created which only contain device
    support without the record types that they support. The
    library must have a DBD file that may declare the record
    types (to avoid generating a warning) and also contains any
    other device(), variable(), function() and registrar()
    entries for software included in the library.
    
    Adds -l flag to the registerRecordDeviceDriver program,
    which results in epicsExportSharedSymbols being defined
    and shareLib.h being reloaded so the generated output file
    can be linked into the library that it is registering.
    This aspect has not been tested on Windows DLLs yet.
    registerRecordDeviceDriver updates
    
    Added -D and -o <outfile> options
    Changed the build rules to use -o
    Moved the script into src/tools
    db cleanup
    
    cleanup to allow database re-load
    registerRecordDeviceDriver needs DBD search path
    Convert registerRecordDeviceDriver.pl to use DBD module.
    
    The output is now a bit more compact as it uses Text::Wrap on
    the declarations and array data.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    registry: Escape back-slashes in bldTop string literal on Win32.
    Warn if the IOC's TOP changed since building.
    If the IOC's registerRecordDeviceDriver routine sees a different path
    to TOP than the one used at build-time, we tell the user.
    Generate code to abort if no DBD file loaded yet.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Moved static constructor call of iocshRegisterCommon() from iocsh.cpp into
    the output from the registerRecordDeviceDriver.pl script, so standalone
    sequencer programs don't import all of iocCore unnecessarily.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    replace p by pcar_<type>_
    changes to make things build
    for variable type is void * const
    Make the parser slightly more robust against comments and
    other uses of the keywords.
    suppress warning mesage if no record/device/driver support
    Modify DBD variable keyword to allow both int and double variables.
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    Added support for the new variable dbd keyword, converts to iocshVarDef
    Driver support names are const char*
    Removed epicsExport header include line.
    changes for epicsExport
    more changes to get epicsShare to work on win32
    more changes for epicsShare
    RecordSizeOffset now static; fix decoration for registrar functions
    changes for stupid win32
    function replaced by registrar
    Make rec, softDev, and testDev libs shared.
    get rid of warning message
    Added auto-registration of routines from .dbd function() statements
    Updated license comments.
    Changed #if to make it more readable.
    make sure iocshReg is defined
    Changes to create vxWorks archive libraries and prods.
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    Added extern "C" for dset and drvet.
    fix C++ problems
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    Declare C linkage only where necessary.
    Change the registerRecordDeviceDriver.pl script to create
    registerRecordDeviceDriver.c as a C++ file (.cpp) so that it can
    use a static constructor to register the registerRecordDeviceDriver()
    command with the IOC shell
    Remove the old registerRecordDeviceDriverRegister.[ch] source files.
    fix error reporting
    fix bugs
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl: Close and delete output files when dying
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Perl s/use vars/our/
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Let dbdToHtml work with wrong newlines
    Perl style fixes, document more Perl programs
    dbdToHtml fix to support Perl 5.8
    Perl script fixes.
    
    This commit should fix the Cygwin build issue, and the
    stylesheet link problems.
    Changes for newer version of Pod::Simple::HTML
    Use Pod::Simple::XHTML if available.
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Reorganize where the POD should be placed
    
    The converter now only handles POD from the root DBD object.
    However there are commands that pull POD out of named sub-objects.
    This also adds generating tables from menu choices.
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    dbdToHtml.pl: Fix generated link URLs to other docs
    
    Also added some code comments
    Change dbdToHtml.pl to parse POD from DBD comments
    Move src/dbHost scripts and modules into src/tools.
    Fix tests, use EPICS::Readfile
    Update to current code:
     * Added (c) header, expanded tabs
     * Set library path and use new library names
     * Added -D (dependency) output handling
     * Added -o (output file) support
     * Use <td> instead of <th> for normal cell data
    This is by no means complete, but it does seem to work.
    Added John Hammonds' dbdToHtml perl script, unmodified.
    He also wrote:
        Here is at least a short list of things to think about:
        How do we add this into the other documentation?
        How do we add the long description?
        Modify Readfile to do includes or not?
        Modify for multiple records in a file?
        Modify for no records in the file i.e. dbCommon?
        Automatically add link to menu information if DBF_MENU?
        Should we go through and set promptgroup on all fields to make this more
        correct?
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    configure: Removed generation of xxxInclude.dbd files
    
    Rules now expand the source DBD files directly in to the target.
    Also removed the makeIncludeDbd.pl script which is no longer needed.
    Unify #! line for Perl scripts
    
    /usr/bin/env exists on all current workstation OSs.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved configure/tools files to src/tools directory.
    Fixed usage, error message, and cleaned up file.
    Changes to create <name>Include.dbd from <name>_DBD files.
    Updated license comments.
    Added basename function.
    R3.14 tools installed into bin.
    added
    Modified to handle dir/filename sources.
    make first line #!/usr/bin/perl
    kay's perl branch
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbdExpand.pl
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Improve error handling of dbdExpand.pl
    Updated concatenated database definition files
    Added concatenated database definition files
    Errors from the DBD Parser should stop dbdExpand
    
    Such errors used to be just warnings, now they stop the output
    file being generated unless the -D flag was given.
    tools: Improve dbdExpand.pl error/warning message
    
    Missing files used to result in an empty output file.
    Now it warns instead of dying, and suggests adding a
    dependency to the Makefile.
    Move src/dbHost scripts and modules into src/tools.
    Remove programs that were replaced in Perl.
    Note questionable handling of -I option on Win32.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    2009-02-15: Getting close.
    Rename dbExpand => dbdExpand,
    Added proper parsing and generation of DBD file.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Move src/dbHost scripts and modules into src/tools.
    Fix tests, use EPICS::Readfile
    Note questionable handling of -I option on Win32.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    2009-02-15: Getting close.
    Rename dbExpand => dbdExpand,
    Added proper parsing and generation of DBD file.
    2004-07-08: Lots of development work, parser works.
    2004-04-29: work in progress
    Move pkg-config file creation to modules/database
    
    Needed so EPICS_BASE_IOC_LIBS has been defined.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    src/tools: export additional variables to pkg-config
    
    No need for new names/capitalization
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    generate pkg-config files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/database
    Perl s/use vars/our/
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Move src/dbHost scripts and modules into src/tools.
    Remove programs that were replaced in Perl.
    Note questionable handling of -I option on Win32.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    2009-02-08: Work with & match R3.14.10 output; rename tools.
    2004-09-10: Updated menu definition stuff.
    2004-07-30: Work continues.
    Make dbToRecordtypeH generate the same output as my 2002 C++ code.
    Other changes in testing and macros.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-07-08: Lots of development work, parser works.
    2004-04-29: work in progress
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    tools: Support for DB files, added dbExpand.pl
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-08: Lots of development work, parser works.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    2004-06-04: Sync laptop => CVS
    Added EPICS_BASE_HOST_LIBS variable to pkg-config files
    Move pkg-config file creation to modules/database
    
    Needed so EPICS_BASE_IOC_LIBS has been defined.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    src/tools: export additional variables to pkg-config
    
    No need for new names/capitalization
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    generate pkg-config files
    drop unnecessary *ModuleDirs
    avoided embedded TOP for non sub-modules
    Added EPICS_BASE_HOST_LIBS variable to pkg-config files
    Move pkg-config file creation to modules/database
    
    Needed so EPICS_BASE_IOC_LIBS has been defined.
    Added Perl EPICS::IOC module and netget test program
    Remove EPICS Base submodules
    Move all under modules/database
    Pull in the podToHtml.pl script and rules from 3.15
    
    This lets src/cap5 build with Perl installations that lack Perl's
    podchecker and pod2html scripts (e.g. Fedora 27).
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    RTEMS: Add epicsMemFs and hook for app specific FS setup
    
    Default falls back to network FS.
    
    Compile in a set of files as a epicsMemFS structure.
    epicsMemFsLoad() creates a set of files based on this.
    Move maclib.pm to libcom
    Perl scripts use perl module for RELEASE dependencies
    Change paths for tools from this module
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    tools: install assembleSnippets.pl
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Generate documentation from Perl modules
    
    Add rules to generate HTML from POD in Perl modules and scripts.
    Generate docs from several EPICS/ Perl modules.
    Add podRemove.pl script
    
    Use this to generate .dbd files from .dbd.pod files
    so installed *Record.dbd files don't have the
    dbdCommon.dbd file expanded out.
    
    Fixes lp:1417428
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    src/tools: export additional variables to pkg-config
    
    No need for new names/capitalization
    src/tools: ensure epics-base.pc is generated only for EPICS_HOST_ARCH
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    introduce genVersionHeader.pl
    configure: Removed generation of xxxInclude.dbd files
    
    Rules now expand the source DBD files directly in to the target.
    Also removed the makeIncludeDbd.pl script which is no longer needed.
    Add podToHtml.pl script
    
    New rules to use this for .pod and .pm conversions
    Replace use of pod2html in ca/client/perl
    Make HTMLS_DIR default to . if not set.
    
    Remove HTMLS_DIR setting for files generated from DBD/POD.
    Change dbdToHtml.pl to parse POD from DBD comments
    registerRecordDeviceDriver updates
    
    Added -D and -o <outfile> options
    Changed the build rules to use -o
    Moved the script into src/tools
    tools: Delete makeDbDepends.pl from Makefile
    Delete filterWarnings.pl script
    
    Was only used on HPUX which we don't support any more.
    Move src/dbHost scripts and modules into src/tools.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    Use $FindBin::Bin so we don't need to expand @TOP@.
    Needed for package management systems such as in Debian.
    Fix generation of .t files on Windows.
    Work done in makeMakefileInclude.pl now done in RULES_TARGET.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    Moved Perl modules from Ctlsys to EPICS.
    Cleanup and corrections in expandVars@.
    Removed perl scripts cp.pl mkdir.pl mv.pl rm.pl.
    Removed EXPANDFLAGS definition. It is defined in configure/RULES_EXPAND.
    Removed debugging lines.
    Moved configure/tools files to src/tools directory.
    moved to top/configure/tools
    3.14 has only a single Makefile
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Moved tools to src/tools dir. base/tools dir removed.
    Changes for replacing default.dctsdr by all ascii files
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    EPICS::IOC.pm Save parms, more debug annotations
    Rearrange EPICS::IOC->close() to be more robust
    Replace EPICS::IOC->kill() with exit() and close() methods
    Make EPICS::IOC->_geterrors() return on EOF from IOC's stderr
    Improve timeout diagnostics from netget.plt
    Protect IOC.pm against <PIPE> errors
    
    These can happen if the IOC dies prematurely.
    Added Perl EPICS::IOC module and netget test program
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make <menu>_NUM_CHOICES not an enum tag
    
    Fixes lp:1580972
    tools: Support for DB files, added dbExpand.pl
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    tools/DBD: Improve error reporting
    
    Better 'duplicate choice' message
    Output messages to STDERR
    Move src/dbHost scripts and modules into src/tools.
    2009-02-08: Work with & match R3.14.10 output; rename tools.
    2007-04-19: Reorganized cdefs, C++ guard and some formatting.
    2004-09-10: Updated menu definition stuff.
    2004-07-30: Work continues.
    Make dbToRecordtypeH generate the same output as my 2002 C++ code.
    Other changes in testing and macros.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-08: Lots of development work, parser works.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Fix regex's, add tests for DBD::Base
    
    Changed $RXname to accept {} chars in the middle of a PV name.
    RXdqs now handles escaped double-quotes and back-slashes properly.
    New test program for the DBD::Base class and checks for each of
    the $RXxxx variable regex's.
    Remove /o flags from Perl regex's
    
    Apparently they don't help in modern Perls, and can cause problems.
    This commit also replaces \d with [0-9], \d also matches foreign digits.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Disallow single-quoted strings in Perl DBD parser
    tools: Support for DB files, added dbExpand.pl
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    tools/DBD: Improve error reporting
    
    Better 'duplicate choice' message
    Output messages to STDERR
    Move src/dbHost scripts and modules into src/tools.
    Reject field names that are reserved words.
    The list of reserved words is combined from C++ and the DB/DBD file parser.
    This also requires a small change in the rules for generating the C name
    from the DBD field name, since the aSub record has a field NOT; now if we
    find the lower-case version is reserved, we use the original instead.
    Since the aSubRecord.c file doesn't use prec->not this is back-compatible.
    2004-07-30: Work continues.
    Make dbToRecordtypeH generate the same output as my 2002 C++ code.
    Other changes in testing and macros.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Remove /o flags from Perl regex's
    
    Apparently they don't help in modern Perls, and can cause problems.
    This commit also replaces \d with [0-9], \d also matches foreign digits.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Rename JSON_STR to JSON_LINK
    Add basic support and tests for a JSON link address type
    tools: Support for DB files, added dbExpand.pl
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix error message
    DBD parser accepts record type declarations
    
    Record types are the only DBD entries for which the parser
    will not accept redefinitions. This change lets it accept
    a record type declaration any number of times. However once
    a record type declaration has been parsed the full record
    type definition cannot be loaded, an error will be raised
    if the full definition is seen. The parser will still not
    accept a full record type definition more than once either,
    any later copies of the record type must be declarations.
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2007-04-19: Reorganized cdefs, C++ guard and some formatting.
    2007-04-17: Added functionality for CDEFS. Still needs changes to dbToRecordtypeH.
    2004-07-30: Work continues.
    Make dbToRecordtypeH generate the same output as my 2002 C++ code.
    Other changes in testing and macros.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-07-08: Lots of development work, parser works.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Added individual object tests.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-08: Lots of development work, parser works.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Convert registerRecordDeviceDriver.pl to use DBD module.
    
    The output is now a bit more compact as it uses Text::Wrap on
    the declarations and array data.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Remove /o flags from Perl regex's
    
    Apparently they don't help in modern Perls, and can cause problems.
    This commit also replaces \d with [0-9], \d also matches foreign digits.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: Support for DB files, added dbExpand.pl
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Remove /o flags from Perl regex's
    
    Apparently they don't help in modern Perls, and can cause problems.
    This commit also replaces \d with [0-9], \d also matches foreign digits.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Revert breaktable point() syntax, not in dbStatic
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    tools/DBD: Include cdefs in DBD format output.
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    tools/DBD: Fix DBD output of empty attributes
    
    Use the regex's from Base.pm for value recognition
    in both Parser.pm and Output.pm
    Move src/dbHost scripts and modules into src/tools.
    Move Cdefs to the top of the record body.
    Refine when field attribute values get double-quoted.
    2009-02-15: Getting close.
    Rename dbExpand => dbdExpand,
    Added proper parsing and generation of DBD file.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Remove /o flags from Perl regex's
    
    Apparently they don't help in modern Perls, and can cause problems.
    This commit also replaces \d with [0-9], \d also matches foreign digits.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Convert GUI_ promptgroup strings to new-style
    tools: change RE to allow any value for promptgroup in the Perl DBD parser
    tools: Support for DB files, added dbExpand.pl
    Allow unknown field attributes in record.dbd files
    
    They will be noisy, but are retained in regenerated output and
    won't stop the build from proceeding.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    recognize and store field attribute "prop()"
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    Reject field names that are reserved words.
    The list of reserved words is combined from C++ and the DB/DBD file parser.
    This also requires a small change in the rules for generating the C name
    from the DBD field name, since the aSub record has a field NOT; now if we
    find the lower-case version is reserved, we use the original instead.
    Since the aSubRecord.c file doesn't use prec->not this is back-compatible.
    2009-02-08: Work with & match R3.14.10 output; rename tools.
    2004-07-30: Work continues.
    Make dbToRecordtypeH generate the same output as my 2002 C++ code.
    Other changes in testing and macros.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-07-08: Lots of development work, parser works.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Remove /o flags from Perl regex's
    
    Apparently they don't help in modern Perls, and can cause problems.
    This commit also replaces \d with [0-9], \d also matches foreign digits.
    Fix DBD parsing slow-up with Perl 5.20 and later
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make Perl DB parser handle duplicates and rtyp '*'
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Perl DBD Parser: Autovivify record types in device() entries
    
    If a record type named in a device() entry does not exist when
    the device is seen, the DBD parser will now print a warning
    and create an empty record type with that name to hold the
    device entry information.
    This will allow support modules to be built into libraries that
    include their own registerRecordDeviceDriver code, which was
    apparently possible with 3.14 although not officially supported.
    To avoid the warning message, the DBD file can declare each
    record type before the device statement that uses it.
    
    A record type declaration looks like this:
        recordtype(ao) {}
        device(ao, ....)
    An IOC will accept and ignore a record type declaration, but it
    must have loaded the full record type definition first.
    tools/DBD: Don't include =cut lines in the captured POD.
    Make the DBD parser recognize Pod syntax directly
    
    Source DBD files can include Pod blocks, as long as the dbdExpand.pl
    script doesn't try and include it in expanded DBD output files.
    This makes it easier to write the Pod, and perldoc can parse most
    of the result for checking (it complains about the =field directives
    though, which dbdToHtml.pl handles itself).
    Add ability to save & retrieve comments to DBD objects
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    tools/DBD: Fix DBD output of empty attributes
    
    Use the regex's from Base.pm for value recognition
    in both Parser.pm and Output.pm
    Move src/dbHost scripts and modules into src/tools.
    2009-02-15: Fix problem parsing function() statements.
    2007-04-17: Added functionality for CDEFS. Still needs changes to dbToRecordtypeH.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-08: Lots of development work, parser works.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Perl DBD modules: Add 'use strict', fix issues.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Permit but check duplicate DBD entries
    
    Record types cannot be duplicated however.
    DBD sub-objects now have a ->what method for their description.
    This also adds a method to look up a breaktable by name.
    Move src/dbHost scripts and modules into src/tools.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Added individual object tests.
    2004-06-04: Sync laptop => CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    Remove EPICS Base submodules
    Move all under modules/database
    ioc: add module version numbering
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed EPICS_UPDATE_LEVEL to EPICS_PATCH_LEVEL.
    Changed BASE_ to EPICS_.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource files.
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    Try out a representative sample of APIs from multiple libraries
    Bump database version to 3.18.0, use in SHRLIB_VERSION
    VCS version instead of __DATE__
    
    Use reproducable VCS version instead of date.
    Of course, this falls back to a date if not
    version controlled.
    Fix ..// => ../ in Makefile-relative source paths
    avoided embedded TOP for non sub-modules
    Set embedded modules' SHRLIB_VERSION from CONFIG variables
    Remove EPICS Base submodules
    Move all under modules/database
    Freeze SONAME=3.17.0
    ioc: add module version numbering
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbUnitTest: rename
    misc/iocInit: add iocBuildNoCA() and iocShutdown() to API, split up
     iocBuild in three phases
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Solve extended device support registration issue across shared libraries.
    Add epicsShareExtern declaration to fix cygwin build.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Updated license comments.
    added dll libs
    Changes for win32 build.
    moved iocInit from db to here
    new
    add timerTest
    build changes
    rename dynamic_registerRecordDeviceDriver -> registerAllRecordDeviceDrivers
    add dynamic_registerRecordDeviceDriver()
    
    Use epicsFindSymbol() to build a dynamic and idempotent equivalent
    to the code generated by registerRecordDeviceDriver.pl
    
    Also add runRegistrarOnce() to prevent registrars
    from running multiple times, except from unittest code.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Fix for VxWorks 5.5 compiler
    Set various EPICS_VERSION_* environment variables
    
    These are set at the same time as the ARCH variable.
    Had to add EPICS_VERSION_SHORT and EPICS_VERSION_FULL to epicsVersion.h.
    
    This uses more uniform names, should we change epicsVersion.h names?
    We would continue to support the old names in parallel for some time.
    More build parameters.
    
    Renamed EPICS_TARGET_ARCH to EPICS_BUILD_TARGET_ARCH
    Added EPICS_BUILD_OS_CLASS and EPICS_BUILD_COMPILER_CLASS
    Remove ARCH from cdCommands and envPaths files
    
    Set it in iocshRegisterCommon() instead.
    Remove ARCH from iocBoot/ioc/Makefile@Common templates.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changes for shared library build using MinGW compiler on win32.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    VCS version instead of __DATE__
    
    Use reproducable VCS version instead of date.
    Of course, this falls back to a date if not
    version controlled.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Silence unused variable warning
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Stop "warning: `id' defined but not used" messages from gcc -- use a char[]
    instead of a char* and they go away!
    epicsStdioRedirect
    removed @(#) symbol
    Removed log history comments.
    Updated license comments.
    removed redundant release data description
    added ms keywords
    Changes for win32 build.
    include build date
    fixed warning
    added build date to corerelease()
    Fix compiler warning messages
    Removed date from epicsRelease.
    Renamed version.h to epicsVersion.h
    Added some spaces to make output look good.
    Changed to use epicsReleaseVersion as a string.
    Changed epicsVersion to epicsReleaseVersion.
    Initial version.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    use iocshSetError()
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    fix registerAllRecordDeviceDrivers() prints
    rename dynamic_registerRecordDeviceDriver -> registerAllRecordDeviceDrivers
    add dynamic_registerRecordDeviceDriver()
    
    Use epicsFindSymbol() to build a dynamic and idempotent equivalent
    to the code generated by registerRecordDeviceDriver.pl
    
    Also add runRegistrarOnce() to prevent registrars
    from running multiple times, except from unittest code.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    use dynamic debug flag for logClient
    Remove EPICS Base submodules
    Move all under modules/database
    Export dbJLinkDebug as a shell variable
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    replace caLimitArray with EPICS_CA_AUTO_MAX_ARRAY_BYTES
    rsrv: export variable caLimitArray
    dbStatic: dbPutStringNum() overflow handling
    
    Default to accepting over-size integers in DB fields, truncate to field size.
    E.g. permits setting DBF_LONG fields to 0xffffffff.
    Adds dbConvertStrict config variable to disable this.
    ioc/misc: add dbRecordsAbcSorted to dbCore.dbd
    Changes from patch in lp:1539791
    dbQuietMacroWarnings control
    epicsExit: optional debug printing
    
    Add a flag to cause a string to be printed
    before each handler is run to show the order.
    ioc/db: add support for parallel callback threads
    
    - use thread safe (spinlocked) callback queues
    - add callbackParallelThreads() configuration call (with iocShell binding)
    - add callbackParallelThreadsDefault variable, preset to number of CPUs
    - remove calls to epicsInterruptLock()
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    add HAS_registerAllRecordDeviceDrivers
    rename dynamic_registerRecordDeviceDriver -> registerAllRecordDeviceDrivers
    add dynamic_registerRecordDeviceDriver()
    
    Use epicsFindSymbol() to build a dynamic and idempotent equivalent
    to the code generated by registerRecordDeviceDriver.pl
    
    Also add runRegistrarOnce() to prevent registrars
    from running multiple times, except from unittest code.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Updated license comments.
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    changed name
    change RegisterInit to Register
    new
    new
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added optional dlload command.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added system.dbd which contains the registrar for the system command.
    Include this in the softIoc.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    add extern for C callable routines
    Changes for win32 build.
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    add macro IOCSH_STATIC_FUNC to avoid '#ifdef vxWorks' in code
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added optional dlload command.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    de-init hooks
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Added call to dbStopServers() in iocShutdown()
    
    Renamed buildRSRV => buildServers.
    Don't call other dbXxxServers() routines or announce their related
    initHook states when in buildIsolated mode.
    ioc/misc: remove double inclusion of dbBase.h in iocInit.c
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    ioc: populate RDES early
    
    The record type is known at allocation time,
    so store RDES immediately.
    Use (typed) rset instead of (untyped) struct rset inside Base
    Clean up JSON_LINKs in doCloseLinks
    Split dbJLinkInit, JLinks are now parsed at load-time
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    A cleaner way to close CA & DB links
    iocInit: close CA_LINKs through lset
    iocInit: no need to break DB_LINK when isolated
    
    This is being done to free the link private struct,
    but dbDbRemoveLink() is not used to avoid the overhead
    of splitting every lockset just before the PDB
    is free'd.
    
    No reason to do this for non-isolated until scans threads
    are stopped.
    iocInit: special clear link set in doCloseLinks()
    Changes from patch in lp:1539791
    Fix for linux-x86
    dbLock: restore initialization of PV_LINK
    
    PV_LINK -> DB_LINK must happen in doResolveLinks after add_record
    iocInit: Don't free LSET until scan tasks have stopped
    move dbCaShutdown earlier
    
    shutdown dbCa thread before free'ing records
    iocInit: move dbCaShutdown earlier
    
    Switch dbCaShutdown from an exit hook to
    be called from iocShutdown.  Place it
    after callback shutdown.
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    iocInit: dbCa shutdown order
    iocInit: remove no-op
    
    The work which was done here is moved to dbCloseLinks()
    dbLock: use new backref tracking
    iocInit: links now initialized in dbLockInitRecords()
    populate RDES early
    iocInit: prepareLinks after autosave pass0
    
    Allow autosave to restore link fields again...
    iocInit: free PPNR
    dbCa: enable unittests
    dbNotify: shutdown with exitDatabase
    
    Can't cleanup dbNotify while rsrv or scan tasks
    are running as there may be operations in progress.
    dbChannel: shutdown from exitDatabase()
    
    Can't cleanup dbChannel while rsrv or scan tasks
    remain running.
    iocInit: only teardown from iocBuildIsolated()
    
    iocShutdown() should only stop threads and cleanup
    if the IOC was started with iocBuildIsolated().
    If iocBuild() is used then only close CA links
    as was done previously.
    
    This is needed as some device support calls epicsExit()
    (while holding a record lock).  This make it impossible
    to run the full iocShutdown without deadlocking
    in scan/callback shutdown, or segfaulting
    in doFreeRecord() or dbLockCleanupRecords()
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    iocInit: initialize links in iocBuild
    
    Done before any driver, record, or device supports run.
    Also before the hooks used by autosave.
    track INP/OUT field in struct dbFldDes
    
    avoid string comparisons
    iocShutdown: cleanup links
    add dbCaLinkInitIsolated()
    
    Initialize dbCa workList lock so that CA_LINK
    creation in test code doesn't crash.
    Once created links will never connect.
    
    clean up workList for unittest when dbCaShutdown
    is called state is already exit.
    iocInit: ensure dbLock cleanup after iocShutdown cleanup
    
    by making dbLock init before initDatabase()
    dbUnitTest: rename
    dbLock: free LSET
    cleanup iocsh
    asShutdown
    db/callback: add callbackShutdown() to API, add shutdown handling
    db/dbScan: add scanShutdown() to API, complete shutdown handling
    misc/iocInit: add iocBuildNoCA() and iocShutdown() to API, split up
     iocBuild in three phases
    ensure the errlog is started with iocInit
    Consistency for extended device support
    
    Call scanDelete() before pdsxt->del_record()
    when closing down an IOC.
    Added Undefined Severity field UDFS
    
    With this, records can be configured to have a lower
    alarm severity when they are undefined.
    Sets initial severity at iocInit too.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Add function to dbChannel.c to create a db_field_log copy of array/string data
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added PINI values RUNNING and PAUSED, needed for Asyn.
    Solve extended device support registration issue across shared libraries.
    Make PINI field into its own menu, adding RUN and PAUSE choices.
    Added new initHook states for iocPause and iocRun commands.
    Added a mutex to protect the initHook.c routines.
    PINI Processing support for PHAS.
    Added dynamic parts of record alias implementation.
    Cleanup; minimize variable scopes.
    Moved interruptAccept management into scanPause/scanRun functions.
    Added epicsShareFunc where necessary for win32 builds.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Fixed generalTime initialization issues (RTEMS incomplete).
    iocInit() installs a signal handler that ignores SIGHUP
    Breakpoint initialization and cleanup.
    Extended Device Support interface.
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    epicsThreadSetOkToBlock
    issue message if FLNK is CA and doesnt access .PROC
    Updated license comments.
    call recGblTSELwasModified
    call dbPutNotifyInit; call initialProcess earlier
    kludge to get iocClock initialized on vxWorks
    wait to let other threads start
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    fixed bugs introduced by APS's osi => epics name changes
    remove include for osiSem
    Changes for win32 build.
    moved iocInit from db to here
    rename dynamic_registerRecordDeviceDriver -> registerAllRecordDeviceDrivers
    add dynamic_registerRecordDeviceDriver()
    
    Use epicsFindSymbol() to build a dynamic and idempotent equivalent
    to the code generated by registerRecordDeviceDriver.pl
    
    Also add runRegistrarOnce() to prevent registrars
    from running multiple times, except from unittest code.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changed LIBSRCS to LIB_SRCS.
    Added optional dlload command.
    RCS files now used for all cygwin and mingw builds.
    Added system.dbd which contains the registrar for the system command.
    Include this in the softIoc.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Changed recIoc library to rsrvIoc.
    Makefile changes so that rec and dev build on win32
    use new method to register asSub functions
    Changes for shared libraries and os consistancy.
    Moved base.dbd from both makeBaseApp templates into src/misc.
    An application only needs a copy if it wants to remove stuff.
    Updated license comments.
    Added win32 resource file.
    Removed references to EPICS_BASE_LIB.
    Changes to create vxWorks archive libraries and prods.
    Added win32 resource file.
    added dll libs
    Changes for win32 build.
    moved as subroutine functions to here
    moved iocInit from db to here
    Changes for win32 build.
    latest build rules
    changes for build
    new way to build
    new way to build
    LIBRARY definition change for R3.14.
    only a single Makeffile for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbStatic: deprecate guigroup.h; remove from includes
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    moved include files. .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    Fix aai constant initialization
    
    The aai record is "special" and does things its own way.
    These changes let it support {const:[...]} initialization without
    breaking regular input link types which could be initialized twice
    without the new DBLINK_FLAG_INITIALIZED guard in dbInitLink().
    
    Also adds tests for this, and for similar links for waveform.
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Rename JSON_STR to JSON_LINK
    Add basic support and tests for a JSON link address type
    dbLink: backward link tracking
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Store original INP/OUT text in link in case DTYP changes later.
    Added support for new MSI and MSS link flags
    Cleanup, remove some unnecessary casting.
    Updated license comments.
    add pvlOptTSELisTime for recGblGetTime
    add extern for C callable routines
    fixed DLL keyword related problems
    add epicsShareExtern for pamaplinkType
    changes for 3.14
    Many changes to properly support DCT operation
    Fixed numerous bugs
    Changes for dynamic link modification
    moved include files. .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Permit trailing commas in JSON maps & arrays
    
    Handled in both dbYacc and yajl parsers.
    Adds tests to linkInitTest.
    Make info tags also JSON objects
    Accept bareword JSON strings, quote them
    Fix memory allocation bugs
    ioc/dbStatic: Add JSON parsing of field values
    
    The parsing removes all white-space outside of quotes from the JSON.
    dbRecordField() now strips quotes from simple string values itself.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    dbStatic: fix leak in parser
    
    "% cdef" not free'd
    dbStatic: Allow empty recordtype bodies in DBD files
    
    A record type with an empty body is a declaration. The IOC will
    accept one of these in a DBD file as long as it has already
    loaded the full record type definition.
    This will allow device support to provide a DBD file that declares
    each record type it uses before giving the related device() entry.
    Later commits will explain why.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added record aliases.
    Cleanup, error messages mostly.
    Cleaned up error message output formatting.
    Fix to Mantis #250, support escaped characters in record field values.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    add copyright notice
    Modify DBD variable keyword to allow both int and double variables.
    Added support for new variable dbd keyword, integers only so far.
    function replaced by registrar
    Added support for function() statement in .dbd files
    Added support for 'info' items in database records - named strings that
    are saved & loaded in the .db file, with an API for access at runtime and
    the ability to associate a void* pointer with each at runtime.
    
    Also added a capability to dbToRecordTypeH allowing a record type's .dbd
    file to add lines to the generated .h file.  The C code should be placed
    inside the recordtype's braces {} and each line must start with a '%'.
    This facility is not currently accessible through a dbStaticLib API.
    Allow c type escape sequences; Fix problem of long vx free memory list
    Modified to store records with a visibility option for graphic editors.
    The ".db" file now generates "grecord" for visible records and "record" for
    invisible records.
    Allow no field defs in record instance with { }
    main changes is recdes => recordType
    Changes for dynamic link modification
    Breakpoint Tables were not working
    moved include files. .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add a getter function for field_type
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    dbStatic: Removed old DCT_ macros and routines
    Fix dbhcr before iocInit
    Remove EPICS Base submodules
    Move all under modules/database
    Fix for lp: #1754298
    
    Cleaned up and reformatted since Dirk's original.
    Make dbGetString() fetch link fields properly before iocInit
    Protect dbGetString() if field has overflowed
    
    Only return the number of characters that a string field can actually
    hold, in case it had a buffer overflow.
    Remove final traces of link debug info tags
    Replace the base:jlinkDebug info-item with a global variable
    
    The info item only works in dbPutString() which means dbLoadRecords()
    but not dbPutField().
    Translate and escape chars in info tag strings
    
    Fixes LP: #1716998
    Restore dbVerify() to dbStaticLib
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    ioc/dbStatic: rename link debugging info tags
    ioc/dbStatic: rename dbRecordNode aliasedRecord -> aliasedRecnode
    minor
    ioc/dbStatic: better alias tracking
    
    Ensure that alias of alias sets DBRN_FLAGS_HASALIAS
    on the aliased dbRecordNode.
    
    Add dbFollowAlias() for completeness.
    separate jlink and lset debug flags
    
    "lsetDebug" for lset callbacks and "jlinkDebug" for jlink parsing.
    jlink conditional debug print
    
    Enable magic info("linkDebug","YES") to enable
    debug prints during parsing.
    dbStatic: fix compiler warnings (unused variables)
    dbStatic: remove dbRenameRecord()
    dbStatic: update dbCreateAlias() to add to record list (instead of insertion sort)
    Clean up memory leaks
    Fix jlink memory leak in dbStaticLib
    
    Added dbFreeLinkInfo(), use everywhere to release dbLinkInfo resources.
    
    Renamed link_type => expected_type in db[Can]SetLink(),
    my brain understands this name faster.
    Fixes to dbJLink, added dbJLinkFree()
    
    Moved the clearing of key_is_link to the right place,
    embedded links now parse correctly.
    Split dbJLinkInit, JLinks are now parsed at load-time
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Missed a spot handling JSON_LINK field values
    Remove 2 obsolete dbStatic routines (forms)
    Fix issues related to const array initialization
    Recognize arrays as constant links
    Rename JSON_STR to JSON_LINK
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    Fix dbFreeBase() issue causing segfaults
    Add basic support and tests for a JSON link address type
    dbStatic: remove obsolete GUIGROUPS_GBLSOURCE definition
    fixup comments
    dbCreateRecord use ellSortStable()
    
    sort records once per dbLoadCOM()
    dbStatic: deprecate guigroup.h; remove from includes
    dbStatic: collect promptgroup enum choices when reading dbd
    More indentation and other trivial cleanup
    Fixed some issues with indentation
    Move dbGetStringNum() to dbStaticLib.c
    
    use getpMessage() and keep it private
    dbStaticLib: dbGetString() fix spaces in link modifiers
    dbStatic: avoid write past end of DBENTRY::message
    
    Prevent long link strings (and maybe others)
    from overflowing the fixed length string
    buffer associated with each DBENTRY.
    dbStatic: fix buffer overrun in printing functions by extending the local buffer accordingly
    dbstatic: raise link field length limit to 256 by bumping internal buffer size
    dbStatic: Add field type lookup routines
    std/rec/test: add asTest to RTEMS test harness
    dbStatic: fix CONSTANT links
    
    constantStr==NULL and constantStr=="" have different
    meanings for recGblInitConstantLink() which is used with DOL.
    constantStr should remain NULL unless explicitly set
    by either initial("") or field(..., "")
    dbStaticLib: set pdbbase=NULL after freeing
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    oops
    INST_IO no longer accept invalid string as empty
    iocInit: initialize links in iocBuild
    
    Done before any driver, record, or device supports run.
    Also before the hooks used by autosave.
    dbStatic: re-write dbPutString() to use new link parsing
    
    dbPutString() now has two behaviors.  If link_type==CONSTANT
    and constantStr==NULL, the link has not yet been initialized.
    Just set the ->text field.
    
    If the link has been initialized, then use dbSetLink() to
    make the assignment.
    
    Eliminate special handling for DBF_DEVICE.
    Introduce struct dbLinkInfo and dbParseLink()
    
    This structure holds the processed form of any link type.
    It is populated by dbParseLink(), which can be called w/o
    record locking.
    
    dbCanSetLink() checks the the parsed link, and a DBLINK field
    have compatible types for assignment.
    Record locking is required, but this does not modify the field.
    
    dbSetLink() makes the actual assignment.
    track INP/OUT field in struct dbFldDes
    
    avoid string comparisons
    iocShutdown: cleanup links
    dbFreeLinkContents: missing case for RF_IO
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    Fix issues found by Clang
    
    These were int => size_t changes that shouldn't have been made
    because the value of the variable can be negative.
    ioc/dbStatic: fix bug introduced in revision 12486
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Low-memory behaviour fixes.
    
    Fix unchecked buffer allocation in dbChannel.c
    Replace calls to epicsStrDup() with checked malloc() for
    things that happen often after iocInit.
    
    Michael Davidsaver pointed out this issue.
    dbStatic: Clean up warning on darwin
    dbStatic: Add property metadata to dump outputs
    
    Both dbWriteRecordTypeFP() and dbDumpField() now show the
    value of the prop() field attribute.
    dbStatic: Improve dbDumpDevice
    
    Make it also display the function pointers in the dset and dsxt
    for each device support it reports on.
    More changes needed for Cygwin.
    Removed Forms support code fro dbStaticLib.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Clean up warnings from gcc 4.6.3
    cleanup for dbRegisterFilter()
    db cleanup
    
    cleanup to allow database re-load
    Clean up some compiler warnings from gcc 4.6
    Merged epicsStdioRedirect.h into epicsStdio.h
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    ioc/db: Generate menuGlobal.dbd
    
    The source just duplicates what's in the Makefile anyway.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Store original INP/OUT text in link in case DTYP changes later.
    Fix: Replaced C++ reserved word 'new' as variable name.
    Some cleanup, mostly spacing.
    make dbMalloc and dbCalloc macros
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Add epicsShareAPI to match header.
    Added support for new MSI and MSS link flags
    Long string support:
      In dbStatic, split record and field search to make parsing easier.
      In dbAccess, '$' field name suffix makes field an array of DBF_CHAR.
    Make getpMessage() clear the message string rather than requiring caller to.
    Added dbGetNAliases() function, to complete the aliases API.
    Added dynamic parts of record alias implementation.
    Added record aliases.
    Fix to Mantis #250, support escaped characters in record field values.
    Permit breakpoint tables to run any direction as long as the slope doesn't
    change sign. Reduced memory requirement by making the table a contiguous
    array rather than an array of pointers to intervals. Improved error reporting.
    Fixed off-by-one error in dbFindField().
    Improve error messages for CALC expressions.
    epicsShare macro fixes from Mark Rivers (copied from the main trunk).
    Extended Device Support interface.
    Oops, dsxt stuff not committed yet, undone part of last change.
    Include pdsxt in dbDumpDevice output.
    Added a dbFindDriver() routine, to look up drvet's by name.
    Add os-independent epicsStrtod() routine.
    epicsStdioRedirect
    fprintf(stdout => printf
    changes for reports
    make dbReportDeviceConfig work if report is null
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    Removed string calculation engine, only needed by Tim Mooney's recordtypes.
    Modify DBD variable keyword to allow both int and double variables.
    dbGetInfoPointer should return void*, not const char*
    Short-circuit return in dbGetInfo if no item
    Added support for new variable dbd keyword, integers only so far.
    Fixed/suppressed HP-UX (GNU) warnings
    function replaced by registrar
    Allow hex doe VME_IO, CAMAC_IO, AB_IO, GPIB_IO, BITBUS_IO, BBGPIB_IO, VXI_IO
    Added support for function() statement in .dbd files
    dbDumpField failed on solaris
    get rid of *Recdes* and *Fielddes*
    Updated license comments.
    allow hex and octal constants
    add const in may places
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    Added support for 'info' items in database records - named strings that
    are saved & loaded in the .db file, with an API for access at runtime and
    the ability to associate a void* pointer with each at runtime.
    
    Also added a capability to dbToRecordTypeH allowing a record type's .dbd
    file to add lines to the generated .h file.  The C code should be placed
    inside the recordtype's braces {} and each line must start with a '%'.
    This facility is not currently accessible through a dbStaticLib API.
    fixed DLL keyword related problems
    get correct order
    look for UDF after calling dbPutStringNum
    removed include of shareLib.h
    change errMdef to errlog
    changes for 3.14
    check for sCalcPostfix and well as postfix
    fix bugs for JDCT
    add check for null in dbAllocField
    Fixed dbReportDeviceConfig so that it correctly handles LINR
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    Get rid of warning messages
    added field attributes
    use os independent path separator
    get rid of some warning messages
    The include path now supports the unix convention that an empty directory name means the current directory.
    The lex grammer was changed so that it for quoted strings can contain any ascii character except a quote.
    Fixed bug of null being passed to printf for %s
    removed redundant prototype
    Allow c type escape sequences; Fix problem of long vx free memory list
    api changes
    dbAllocForm failed for macro links
    Be willing to generate null string fields
    Fixed bug in dbAllocForm
    minor format and message changes
    Many changes to properly support DCT operation
    Modified to store records with a visibility option for graphic editors.
    The ".db" file now generates "grecord" for visible records and "record" for
    invisible records.
    The form for FWDLINK PV fields does not work correctly.
    fixed bugs repoeted in 3.13 beta1
    More changes for handling forms
    More changes for code that handles forms
    Fixed various bugs related to forms
    Mods for handling forms
    various bugs fixed
    added support for macro substitution
    main changes is recdes => recordType
    fixed several problems that made free_gdct crash of DTYP for
    for menuform parm fields present leading @
    added dbGetDefault
    Fixed numerous bugs
    Still working on 3.13.0.alpha3
    added check for dbPutString to DBF_STRING if string size too long
    Changes for dynamic link modification
    Breakpoint Tables were not working
    Added dbDumpPath
    moved include files. .ascii=> .db; path changes
    If device support is empty list dont allocate pdbDeviceMenu->papChoice
    change pdbBase to pdbbase
    Added dbAsciiExpand and add path ./base/rec and ./rec for include
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    epicsShare macro fixes from Mark Rivers (copied from the main trunk).
    Updated license comments.
    add extern for C callable routines
    added
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    add extern for C callable routines
    added field attributes
    moved include files. .ascii=> .db; path changes
    added
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/dbStatic: reduce warning spam for typed rset
    
    There are an amazing number of warnings in any code which
    includes recSup.h indirectly, including dbStaticLib.h.
    Don't use the RECSUPFUN typedef internally to reduce
    the number.
    Deprecate RECSUPFUN and the untyped struct rset.
    Add opt-in switch USE_TYPED_RSET
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    use new typed rset only if UNTYPED_RSET is not defined, adapted release notes
    
    Also moved the old definition(s) to a separate header file named oldRecSup.h
    to avoid cluttering the new header file.
    fixes in recSup and record types according to merge review
    
    * removed struct valueDes
    * made get_value take void (no arguments), added deprecation note
    * removed misleading array size comment for get_units
    
    Also added const to method parameters exactly where called in base with
    const arguments.
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Removed the last vestiges of RSET::get_value()
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Get rid ofgcc complaint about C++ comments.
    same def of RECSUPFUN for both C and C++
    create typedef for rset and drvet
    more changes to get epicsShare to work on win32
    Updated license comments.
    += full RSET definition for C++
    moved from libCom/misc
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    add USE_TYPED_DRVET and USE_TYPED_DSET options
    ioc/dbStatic: add typed_drvet
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    create typedef for rset and drvet
    Updated license comments.
    moved from libCom/misc
    Added epicsShare API for win32 build.
    moved include from base/include; .ascii => .db
    Changes for replacing default.dctsdr by all ascii files
    Channel Access changes from Jeff Hill.
    moved some files into new errSymLib.c
    put away working version
    cleanup
    initial version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    iocsh: add usage messages
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    validate alias names as well
    yet more record name validation
    Further record name validation
    popFirstTemp() may return NULL
    
    This indicates an earlier error, which should already
    been printed.
    fix crash on bad record name
    Extend record name validation
    
    Begin enforcing earlier check (and tab).
    Add new warning for record names beginning
    with numeric or '{'.
    Revert "dbRecordtypeFieldItem() avoid excess strcmp()"
    
    This reverts commit 48eb4ff4acb8897976c2ea752fe3454409e60faf.
    dbRecordtypeFieldItem() avoid excess strcmp()
    
    only one is going to match.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Translate and escape chars in info tag strings
    
    Fixes LP: #1716998
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbStatic: only sort records alphabetically if explicitly configured (default: no sorting)
    dbStatic: more informative error for bad field value
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Make info tags also JSON objects
    ioc/dbStatic: Add JSON parsing of field values
    
    The parsing removes all white-space outside of quotes from the JSON.
    dbRecordField() now strips quotes from simple string values itself.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    dbCreateRecord use ellSortStable()
    
    sort records once per dbLoadCOM()
    dbStatic: deprecate guigroup.h; remove from includes
    dbStatic: collect promptgroup enum choices when reading dbd
    dbQuietMacroWarnings control
    dbStatic: always clear parser tempList
    
    Warn if tempList is not empty when it should be
    dbStatic: fix leak in parser
    
    "% cdef" not free'd
    dbStatic: Add field type lookup routines
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Reverted calls that didn't need to use macDefExpand to single parameter
    Missed a few whitespace
    Whitespace changes snuck in due to editor
    dbLexRoutines calls macEnvExpand as well, doesn't need macros, so added NULL's
    track INP/OUT field in struct dbFldDes
    
    avoid string comparisons
    dbStatic: Allow empty recordtype bodies in DBD files
    
    A record type with an empty body is a declaration. The IOC will
    accept one of these in a DBD file as long as it has already
    loaded the full record type definition.
    This will allow device support to provide a DBD file that declares
    each record type it uses before giving the related device() entry.
    Later commits will explain why.
    dbStatic/dbLexRoutines.c fix error message
    Fix issues found by Clang
    
    These were int => size_t changes that shouldn't have been made
    because the value of the variable can be negative.
    Allow appended .db files to omit record type
    
    This .db file syntax is now legal, provided the
    named record already exists:
    
      record("*", "named") {
        field(VAL, 10)
      }
    ioc: Fix more MSVC 12.0 warnings
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    recognize and store field attribute "prop()"
    fix indent
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Clean up some compiler warnings from gcc 4.6
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix the macLib buffer overflow issue, Bug 551909.
    This is mostly Eric's patches, without the valend name change.
    Remove "dbRecordHead: tempList not empty" errors.
    Loading a .db file that uses an unknown record type leaves items
    on the parser's tempList.  This patch empties that list when the
    error is reported so future dbLoadRecords() commands can run.
    Reject breaktables with slope of zero.
    (M. Davidsaver): Use ELLLIST init macros.
    Fix memory leak.
    Added record aliases.
    Cleanup, error messages mostly.
    Changes for shared library build using MinGW compiler on win32.
    Added dbBptNotMonotonic, disables checking slope of breaktables.
    Cleaned up error message output formatting.
    Use epicsPrintf, not errlogPrintf
    Improve error messages from parser.
    Fix to Mantis #250, support escaped characters in record field values.
    Cleanup unused var's.
    Permit breakpoint tables to run any direction as long as the slope doesn't
    change sign. Reduced memory requirement by making the table a contiguous
    array rather than an array of pointers to intervals. Improved error reporting.
    Make the dbRecordsOnceOnly variable visible in all IOC architectures.
    Added dbRecordsOnceOnly variable, to allow users to disable the ability
    to define record fields more than once.  Unusual, but occasionally useful.
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    changes for reports
    fix memory leak
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    Expand environment variable macros in filenames
    Modify DBD variable keyword to allow both int and double variables.
    Added support for new variable dbd keyword, integers only so far.
    fixed build errors
    Add epicsStrDup().
    function replaced by registrar
    Added support for function() statement in .dbd files
    Updated license comments.
    make sure prompt has a value
    fix breakpoint table problem
    allocate correct abount of storage
    Added global and prints for dbMakeDBDDepends
    Added support for 'info' items in database records - named strings that
    are saved & loaded in the .db file, with an API for access at runtime and
    the ability to associate a void* pointer with each at runtime.
    
    Also added a capability to dbToRecordTypeH allowing a record type's .dbd
    file to add lines to the generated .h file.  The C code should be placed
    inside the recordtype's braces {} and each line must start with a '%'.
    This facility is not currently accessible through a dbStaticLib API.
    fixed DLL keyword related problems
    removed include of shareLib.h
    changes for 3.14
    Allow \ for directory separator on winXX systems
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    added field attributes
    The include path now supports the unix convention that an empty directory name means the current directory.
    The lex grammer was changed so that it for quoted strings can contain any ascii character except a quote.
    Bug in dbDevice
    Allow c type escape sequences; Fix problem of long vx free memory list
    minor format and message changes
    Many changes to properly support DCT operation
    Modified to store records with a visibility option for graphic editors.
    The ".db" file now generates "grecord" for visible records and "record" for
    invisible records.
    Error on special gave wrong error message
    added support for macro substitution
    main changes is recdes => recordType
    Changes for dynamic link modification
    Forgot a )
    Dont use path if filename contains /
    moved include files. .ascii=> .db; path changes
    change pdbBase to pdbbase
    Added dbAsciiExpand and add path ./base/rec and ./rec for include
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add a getter function for field_type
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Move dbAccess prototypes to the correct header file
    dbStatic: Removed old DCT_ macros and routines
    Remove EPICS Base submodules
    Move all under modules/database
    Restore dbVerify() to dbStaticLib
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove declarations of previously-deleted functions
    
    Fixes LP: #1696801
    ioc/dbStatic: better alias tracking
    
    Ensure that alias of alias sets DBRN_FLAGS_HASALIAS
    on the aliased dbRecordNode.
    
    Add dbFollowAlias() for completeness.
    ioc/dbStatic: add dbInitEntryFromRecord()
    rename dbInitEntryFromChannel -> dbInitEntryFromAddr
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    dbStatic: dbPutStringNum() overflow handling
    
    Default to accepting over-size integers in DB fields, truncate to field size.
    E.g. permits setting DBF_LONG fields to 0xffffffff.
    Adds dbConvertStrict config variable to disable this.
    dbStatic: remove dbRenameRecord()
    Remove 2 obsolete dbStatic routines (forms)
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    dbStatic: collect promptgroup enum choices when reading dbd
    dbStatic: Add field type lookup routines
    Removed Forms support code fro dbStaticLib.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    make dbMalloc and dbCalloc macros
    Cosmetic only; tabs, spaces & line-wrapping.
    Long string support:
      In dbStatic, split record and field search to make parsing easier.
      In dbAccess, '$' field name suffix makes field an array of DBF_CHAR.
    Added dbGetNAliases() function, to complete the aliases API.
    Added dynamic parts of record alias implementation.
    Added record aliases.
    Added a dbFindDriver() routine, to look up drvet's by name.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    dbGetInfoPointer should return void*, not const char*
    Short-circuit return in dbGetInfo if no item
    Added support for new variable dbd keyword, integers only so far.
    function replaced by registrar
    Added compatibility define for dbDumpFldDes
    Added support for function() statement in .dbd files
    get rid of *Recdes* and *Fielddes*
    Updated license comments.
    add const in may places
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    Declare C linkage only where necessary.
    Added support for 'info' items in database records - named strings that
    are saved & loaded in the .db file, with an API for access at runtime and
    the ability to associate a void* pointer with each at runtime.
    
    Also added a capability to dbToRecordTypeH allowing a record type's .dbd
    file to add lines to the generated .h file.  The C code should be placed
    inside the recordtype's braces {} and each line must start with a '%'.
    This facility is not currently accessible through a dbStaticLib API.
    put include in correct place
    include shareLib.h
    changed new to pnew avoiding C++ keyword clash
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    added field attributes
    api changes
    Many changes to properly support DCT operation
    Modified to store records with a visibility option for graphic editors.
    The ".db" file now generates "grecord" for visible records and "record" for
    invisible records.
    The form for FWDLINK PV fields does not work correctly.
    Mods for handling forms
    various bugs fixed
    added support for macro substitution
    main changes is recdes => recordType
    remove duplicate def for dbGetString
    dbGetPrompt was accidently removed
    added dbGetDefault
    added check for dbPutString to DBF_STRING if string size too long
    Changes for dynamic link modification
    Breakpoint Tables were not working
    Added dbDumpPath
    moved include files. .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Allow (discard) comments inside JSON
    Recognize numbers before barewords
    Accept bareword JSON strings, quote them
    ioc/dbStatic: Add JSON parsing of field values
    
    The parsing removes all white-space outside of quotes from the JSON.
    dbRecordField() now strips quotes from simple string values itself.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added record aliases.
    Cosmetic.
    Fix to Mantis #250, support escaped characters in record field values.
    Use new xxStrdup() functions.
    Cleanup compiler warnings due to our using 8-bit lexers.
    Removed 2 blank lines for cygwin compiler.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    add copyright notice
    Added support for new variable dbd keyword, integers only so far.
    function replaced by registrar
    Added support for function() statement in .dbd files
    Added support for 'info' items in database records - named strings that
    are saved & loaded in the .db file, with an API for access at runtime and
    the ability to associate a void* pointer with each at runtime.
    
    Also added a capability to dbToRecordTypeH allowing a record type's .dbd
    file to add lines to the generated .h file.  The C code should be placed
    inside the recordtype's braces {} and each line must start with a '%'.
    This facility is not currently accessible through a dbStaticLib API.
    Allow real number with leading - sign
    allow quoted strings to contain any ascii character
    Allow c type escape sequences; Fix problem of long vx free memory list
    Modified to store records with a visibility option for graphic editors.
    The ".db" file now generates "grecord" for visible records and "record" for
    invisible records.
    Now accepts the characters ^ and ~ in strings.
    moved include files. .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/dbStatic: rename dbRecordNode aliasedRecord -> aliasedRecnode
    ioc/dbStatic: better alias tracking
    
    Ensure that alias of alias sets DBRN_FLAGS_HASALIAS
    on the aliased dbRecordNode.
    
    Add dbFollowAlias() for completeness.
    Use (typed) rset instead of (untyped) struct rset inside Base
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    dbStatic: collect promptgroup enum choices when reading dbd
    track INP/OUT field in struct dbFldDes
    
    avoid string comparisons
    ioc/dbStatic: make offset in field description an unsigned short, add cast to code generator
    
    fixes ~2600 compiler warnings (on windows-x64)
    recognize and store field attribute "prop()"
    fix indent
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Reworked various hash tables, using the faster epicsStrHash() routines;
    added per-bucket locks to the PV Directory, needed for run-time alias creation;
    speed up gpHash lookups; improved the output of both Dump routines.
    Added dynamic parts of record alias implementation.
    Added record aliases.
    Permit breakpoint tables to run any direction as long as the slope doesn't
    change sign. Reduced memory requirement by making the table a contiguous
    array rather than an array of pointers to intervals. Improved error reporting.
    Extended Device Support interface.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    Modify DBD variable keyword to allow both int and double variables.
    Added support for new variable dbd keyword, integers only so far.
    function replaced by registrar
    Added support for function() statement in .dbd files
    Updated license comments.
    use double instead of float
    Added support for 'info' items in database records - named strings that
    are saved & loaded in the .db file, with an API for access at runtime and
    the ability to associate a void* pointer with each at runtime.
    
    Also added a capability to dbToRecordTypeH allowing a record type's .dbd
    file to add lines to the generated .h file.  The C code should be placed
    inside the recordtype's braces {} and each line must start with a '%'.
    This facility is not currently accessible through a dbStaticLib API.
    changes for 3.14
    added field attributes
    Many changes to properly support DCT operation
    Modified to store records with a visibility option for graphic editors.
    The ".db" file now generates "grecord" for visible records and "record" for
    invisible records.
    main changes is recdes => recordType
    Changes for dynamic link modification
    moved include files. .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    don't destroy locked mutex
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    epicsShareAPI fixes for Windows.
    Reworked various hash tables, using the faster epicsStrHash() routines;
    added per-bucket locks to the PV Directory, needed for run-time alias creation;
    speed up gpHash lookups; improved the output of both Dump routines.
    Initialize objects fully before making them visible.
    fprintf(stdout => printf
    changes for reports
    add stupid decoration for windows
    Updated license comments.
    add const in may places
    removed include of shareLib.h
    changes for 3.14
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    The include path now supports the unix convention that an empty directory name means the current directory.
    The lex grammer was changed so that it for quoted strings can contain any ascii character except a quote.
    Change hash algorithm to be slightly faster
    various bugs fixed
    main changes is recdes => recordType
    moved include files. .ascii=> .db; path changes
    change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    dbRec2Pvt()
    Remove EPICS Base submodules
    Move all under modules/database
    dbstatic: allow initial value of 65535 for MENU fields
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc: rename dbCommonPvt::recnode
    ioc: populate RDES early
    
    The record type is known at allocation time,
    so store RDES immediately.
    ioc/db: Add dbCommonPvt
    
    Add some hidden "fields" for every record.
    Allows Base internal hidden accounting
    which can be changed without an ABI break.
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    ioc/dbStatic: dbAllocRecord whitespace
    dbStatic: dbPutStringNum() overflow handling
    
    Default to accepting over-size integers in DB fields, truncate to field size.
    E.g. permits setting DBF_LONG fields to 0xffffffff.
    Adds dbConvertStrict config variable to disable this.
    dbStatic: dbPutStringNum(, "") not an error
    
    Restore previous behavour that empty string
    is equivalent to numeric zero.
    
    epicsParse*() returns S_stdlib_noConversion
    where previously strtoul() did not.
    
    Conflicts:
            src/ioc/db/test/Makefile
    Move dbGetStringNum() to dbStaticLib.c
    
    use getpMessage() and keep it private
    Fix for linux-x86
    populate RDES early
    dbStatic: fix CONSTANT links
    
    constantStr==NULL and constantStr=="" have different
    meanings for recGblInitConstantLink() which is used with DOL.
    constantStr should remain NULL unless explicitly set
    by either initial("") or field(..., "")
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Solve extended device support registration issue across shared libraries.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Error message has the wrong routine name in it.
    Check rec_size *before* using it...
    Added hint to run RegisterDeviceDriver().
    Add os-independent epicsStrtod() routine.
    check for INT_MAX; Use epicsTypes for long and unsigned long fields
    Updated license comments.
    allow for nan and inf
    add const in may places
    moved from libCom/misc
    fixed dll symbol export
    Added epicsShareAPI.
    changes for 3.14
    changed to use symFindByNameEPICS
    get rid of some warning messages
    The include path now supports the unix convention that an empty directory name means the current directory.
    The lex grammer was changed so that it for quoted strings can contain any ascii character except a quote.
    Many changes to properly support DCT operation
    Fix problem of iocInit hanging
    Fixed various bugs related to forms
    various bugs fixed
    main changes is recdes => recordType
    Fixed numerous bugs
    Changes for dynamic link modification
    moved include files. .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Remove final traces of link debug info tags
    Replace the base:jlinkDebug info-item with a global variable
    
    The info item only works in dbPutString() which means dbLoadRecords()
    but not dbPutField().
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    separate jlink and lset debug flags
    
    "lsetDebug" for lset callbacks and "jlinkDebug" for jlink parsing.
    jlink conditional debug print
    
    Enable magic info("linkDebug","YES") to enable
    debug prints during parsing.
    Fixes for Windows builds
    Clean up memory leaks
    Split dbJLinkInit, JLinks are now parsed at load-time
    dbStatic: collect promptgroup enum choices when reading dbd
    iocInit: initialize links in iocBuild
    
    Done before any driver, record, or device supports run.
    Also before the hooks used by autosave.
    Introduce struct dbLinkInfo and dbParseLink()
    
    This structure holds the processed form of any link type.
    It is populated by dbParseLink(), which can be called w/o
    record locking.
    
    dbCanSetLink() checks the the parsed link, and a DBLINK field
    have compatible types for assignment.
    Record locking is required, but this does not modify the field.
    
    dbSetLink() makes the actual assignment.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    epicsShareAPI fixes for Windows.
    add stupid decoration for windows
    Updated license comments.
    add extern for C callable routines
    add const in may places
    changes for 3.14
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    Many changes to properly support DCT operation
    Fixed various bugs related to forms
    added support for macro substitution
    main changes is recdes => recordType
    Changes for dynamic link modification
    moved include files. .ascii=> .db; path changes
    change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    use new typed rset only if UNTYPED_RSET is not defined, adapted release notes
    
    Also moved the old definition(s) to a separate header file named oldRecSup.h
    to avoid cluttering the new header file.
    Removed dbStaticHost library.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    move alarm.h to libCom/misc
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Removing seemingly unnecessary dependancy lines.
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Changes for shared libraries and os consistancy.
    dbStaticPvt needed for registering dbPvdTableSize
    Updated license comments.
    dbMakeDBDDepends replaced by mkmf.pl.
    Changes to automatically generate header file dependancies
    Allow make inc at top level
    Changes to create vxWorks archive libraries and prods.
    Modified depends rules
    Added dbMakeDBDDepends
    Added win32 resource files.
    moved from libCom/misc
    latest build rules
    Added DIR for dbStaticHost.
    build changes
    Changes for dll build.
    Changed LIB to LIBRARY.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Changes for replacing default.dctsdr by all ascii files
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Adjust example code in devSup.h
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    add USE_TYPED_DRVET and USE_TYPED_DSET options
    ioc/dbStatic: add dbGetDevLink()
    ioc/dbStatic: add typed_dset
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Solve extended device support registration issue across shared libraries.
    Changed epicsShareDef to epicsShareExtern.
    Added epicsShare* where necessary for win32 builds.
    Comment.
    Remove duplicate null DSXT layer.
    Extended Device Support interface.
    Even though the comment is within C++ conditionals some compilers
    generate warnings for the C++ style comment.
    more changes to get epicsShare to work on win32
    Updated license comments.
    prevent conflict with devLib.h
    add S_dev_noDevice
    moved from libCom/misc
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make generated code always use typed_rset
      always cast to cover old-style supports
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Removed epicsShareAPI
    Make rec, softDev, and testDev libs shared.
    Updated license comments.
    ifdef for C++ was in the wrong place
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    Removed Base from registerRecordDeviceDriverBase name.
    changed it so that there re not two functions with the same name
    inside and outside of base (generated in the application).
    Changes for win32 build.
    Changes for win33 build.
    add decorated names for stupid win32
    moved from libCom/misc to here
    Moved registry headers to src/include.
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added some commands to allow run-time queries of the registry.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Split dbJLinkInit, JLinks are now parsed at load-time
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Fix issues related to const array initialization
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Move DBLINK support code into its own source file
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Add support for Windows FILETYPE time stamps.
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    Add newline at end of file to quiet compiler complaints.
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    dbInitEntry() w/o matching dbFinishEntry()
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Split dbJLinkInit, JLinks are now parsed at load-time
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed printf.
    Removed epicsShareAPI
    use NELEMENTS instead of registryFunction.h
    function replaced by registrar
    Updated license comments.
    added register functions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    fixed DLL keyword related problems
    added register functions
    Changes for win33 build.
    add decorated names for stupid win32
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    fixed DLL keyword related problems
    added register functions
    Changes for win33 build.
    add decorated names for stupid win32
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    fixed DLL keyword related problems
    added register functions
    Changes for win33 build.
    add decorated names for stupid win32
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Updated license comments.
    add decorated names for stupid win32
    moved from libCom/misc to here
    Moved registry headers to src/include.
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed printf.
    Removed epicsShareAPI
    function replaced by registrar
    Updated license comments.
    try registryFind if registryFunctionFind fails
    fixed DLL keyword related problems
    added register functions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Updated license comments.
    Make everything in registerRecordDevicedriver.cpp `const'.  This should get rid
    warnings about initializing `char *' with string literals.
    add decorated names for stupid win32
    moved from libCom/misc to here
    Moved registry headers to src/include.
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Split dbJLinkInit, JLinks are now parsed at load-time
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    registerRecordDeviceDriver updates
    
    Added -D and -o <outfile> options
    Changed the build rules to use -o
    Moved the script into src/tools
    Minor build cleanups
    
    Removed %.C and %.H from vpath (rules were deleted some time ago)
    Added %.pl to vpath for use in ioc/registry/Makefile
    configure/tools doesn't exist any more, remove from configure/Makefile
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    RCS files now used for all cygwin and mingw builds.
    Changed order of registryIoc libs.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    registerRecordDeviceDriver.h no longer needed/appropriate.
    Fixed library definition.
    Updated license comments.
    Changed SCRIPTS to SCRIPTS_HOST.
    Changes to create vxWorks archive libraries and prods.
    move registerRecordDeviceDriver.c to src/vxWorks/iocCore
    Create registerRecordDeviceDriver OBJ for vxWorks only.
    Added win32 resource file.
    changes for registerRecordDeviceDriver
    added register functions
    Changes for win33 build.
    moved from libCom/misc to here
    latest build rules
    changes for build
    Modified OBJS build.
    new way to build
    new way to build
    More changes for R3.14.
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    adapt db_get_field_and_count to dbChannel_get_count
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added missing epicsShareAPI for db_get_field_and_count.
    Update rsrv to support V4.13 protocol extension.
    
    The rsrv server is updated in this commit to deliver variable sized
    waveforms in response to a zero length request, implementing an
    extension to the v4 EPICS protocol tied to minor version 13.
    
    The core of the changes are in read_reply, rsrv/camessage.c, which first
    reserves packet space for the largest possible response, but then resizes
    the packet according to how much data is actually returned from the
    database.
    Updated license comments.
    removed NOOP routines
    added pvAdapter
    fixed WIN32 DLL inmort/export issues
    split db_access.h so ca not dependent on db
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Add missing calls to yajl_complete_parse()
    
    Fixes leak when link parses OK but JSON errors follow.
    Includes regression test.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Adjust IOC code for yajl-2.1.0 API
    Fix dbConstLink to handle a long-string array properly
    
    Added a new parser dbLSConvertJSON for long-string arrays.
    New test checks that only the first string element is used.
    Fixes for Windows builds
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Fix issues related to const array initialization
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    callback.h: add epicsCallback alternative to CALLBACK
    
    Add epicsCallback as an IDE friendly alternative to CALLBACK.
    
    IDEs like qtcreator have long been confused by the use
    of CALLBACK, a name which has long been used by other libraries,
    which prevents code using it from being parsed correctly.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    Tweak to callback API.
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    db/callback: add callbackShutdown() to API, add shutdown handling
    ioc/db: add support for parallel callback threads
    
    - use thread safe (spinlocked) callback queues
    - add callbackParallelThreads() configuration call (with iocShell binding)
    - add callbackParallelThreadsDefault variable, preset to number of CPUs
    - remove calls to epicsInterruptLock()
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup, rework shutdown mechanism.
    Added callbackSetProcess() and callbackCancelDelayed() routines.
    Fixes for various GCC warnings.
    Updated license comments.
    add extern for C callable routines
    fix several bugs
    changes for creating DLLs
    get rid of threadGetName
    add callbackRequestDelayed and callbackRequestProcessCallbackDelayed
    changes for iocCore port
    changes for 3.14
    win32 keyword changed
    Fixed compiler warning messages
    Added callbackSetQueueSize
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: add optional "tagged" plugin configuration (sets integer tag and any value in one step)
    remove FIXME
    fix examples in chfPlugin.h
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Bunch of minor changes
    
    * Fix decorations in chfPlugin.c/.h
    * Fix missing include in dbAccessDefs.h
    * Beautification in dbChannel.c
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    Added pvt pointer argument to parse_error in the plugin interface
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Added chfPlugin, a simple interface for channel filter plugins.
      - chfPlugin.h contains the simple jump table and doxygen documentation
      - chfPlugin.c is a wrapper library around the yajl callbacks that parses
        any client-supplied configuration into the user's structure
      - test/chfPluginTest.c tests the library and the data conversion
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    add include
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Mark source dbAddr pointers as const.
    Updated license comments.
    add extern for C callable routines
    fixed WIN32 DLL inmort/export issues
    changes for creating win dlls
    Fixed compiler warning messages
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Channel Access changes from Jeff Hill.
    moved some files into new errSymLib.c
    put away working version
    cleanup
    initial version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added dbcaStats() for Mantis #281.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix issues related to const array initialization
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Move DBLINK support code into its own source file
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Add support for Windows FILETYPE time stamps.
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    Add newline at end of file to quiet compiler complaints.
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Remove EPICS Base submodules
    Move all under modules/database
    Deny use of dbgf, dbpf, dbtr, dbtgf and dbtpf before iocInit
    
    Can't use locking dbAccess routines until lock-sets have been calculated.
    Fixes LP: #1725248
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    db: Remove status message from dbpf
    
    The status returned from dbPutField() can now include errors from
    the record processing such as a link alarm, so it doesn't mean
    what it used to and printing the error might be wrong.
    Now we just return the status value.
    Fix warnings found by clang
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    ioc: Fix more MSVC 12.0 warnings
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    BUG 572589: Make dbl emit empty strings for non-existent fields
    Cosmetic.
    Use epicsStrDup for allocation check.
    Count aliases separately in reports.
    Added dynamic parts of record alias implementation.
    (C) comment.
    dbgf now shows array size, and displays an array of chars as a long string.
    dbpf can put a long string to a field which is an array of chars.
    Cleanup, remove some unnecessary casting.
    Make dbpr print DBF_NOACCESS pointer fields nicely (on little-endian CPUs).
    Fixed alignment issue on solaris-sparc-gnu.
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Make dbpr output for TIME field human-readable (Mantis #270).
    change lock mlok to dbScanLock
    allow null value for field that does not exist
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Ensure that prototype is in scope.
    new #include
    Provide epicsStrGlobMatch().
    Add globbing to iocsh help command.
    epicsStdioRedirect
    allow null string or *
    dbl dbhcr no longer have filename arg; char => const char
    make test commands more crash resistant
    Don't seg-fault if no argument is passed to dbtr.
    The IOC shell dose not convert a 0 command-line argument to a NULL pointer.
    Allow "" to indicate that all record types should be printed.
    fdopen for write only
    more changes to get epicsShare to work on win32
    Minor cleanup of previous dbl changes.
    Allow empty strings to stand in for missing or 0 vxWorks argument.
    changes for long being 64 bits
    Fixed macro name clash.
    Updated license comments.
    add const in may places
    osiTime=>epicsTime
    replace osiSem with epicsMutex and/or epicsEvent
    Avoid a null-pointer dereference when the dbpr command is invoked with
    no arguments.
    check for pdbbase=0
    on solaris null string not allowed
    Let dbtr process the record after acquiring the lock.
    pdbbase is defined in dbAccessDefs.h
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    more changes for creating dlls
    changes for creating DLLs
    upgraded db event api
    semId => semBinaryId and semMutexId
    changes for 3.14
    make dbpr work correctly for DBF_NOACCESS
    added dbCaGetTimeStamp
    Allow dbhcr to accept filename argument
    get rid of some warning messages
    Fix include statements
    dbl: Must not close if stdout
    Add filename arg to dbl
    Changed menu initial vales to string from index; cleaned up dbTest.c
    Changed extension db to dbd
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    DTYP for fields that have no devixe support was incorrect
    Change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    Changes so that function prototype for db_post_event defined
    Made changes for ansi c
    Changes to make more ansi compatible
    Revert to previous version of dbpf
    Remove special code for DBR_STRING to allow numeric index (dbLink now does this)
    Must flush for dbhcr
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    added dbhcr
    added changes for access security
    added dbtpn
    bugfix for mrk
    Got rid of warning messages
    adjusted dbpr to print vxi links correctly
    changes for link.h changes
    Changed dbtpf so it only accepts valid strings for numberic types
    add function dbel
    Fixed for new dbStaticLib routines
    changed from dll to ell
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    replace lstLib with dllEpicsLib
    changes from mrk node
    changes made to remove compile warning msgs
    Mods for changes to internal database structures
    Modified dbpr_report to handle CA_LINKs
    removed dbPvd for mrk
    channel access links
    ANSI C changes
     Pre R3.4 changes
    jba     Fixed initializations and added hex print to printBuffer
    mrk changes
    Changes for APS release 3.1.0
    Fixed arrays of enums
    sorted dbpr output listings
    fix  for buffer , removed *4 from sizeof(buffer)*4
    added std hdrs and some fixes
    jba: dbior fix - put stdout parm in call to driver report
    jba 4/18/91
    jba 3/21/91
    jba 2/6/91
    jba changes
    temporary commented out failed link.h references
    jba changes through 2/7/91
    removed mult dbDefs.h
    fixed tabs in dbTest
    RCZ changes
    MRK changes
    jba changes 1/22/91
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    ioc/db: consolidate callback state tracking
    
    combine cbCtl and callbackIsInit.
    use atomic ops to avoid false positive data races.
    Remove EPICS Base submodules
    Move all under modules/database
    dbUnitTest.h add callback sync. and global mutex
    
    Add testSyncCallback() to wait for in queued and
    in-progress callbacks to complete.
    
    Also add testGlobalLock() to help tests avoid
    use after free when destroying sync. primitives.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cleanup in callback.c
    Remove some unnecesary #includes
    callback: fix race on shutdown
    
    epicsEventDestory() in the main thread could be called
    before epicsEventTrigger() completes in the worker.
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    callback: workers wake up peer if necessary.
    callback: don't track busy workers
    
    wakeup unconditionally.  Perhaps inefficient, but simple.
    Mark callbackParallelThreadsDefault properly
    
    The definition gets epicsShareDef and may provide a value.
    Additional declarations get epicsShareExtern.
    Fix problems in callbackParallelThreads()
    ioc/db: back to old signalling policy - wake up worker thread as long as there are any sleeping
    ioc/db: use dbFindMenu() in callback.c
    cleanup callback and callback*Test
    ioc/db: make sure each priority gets at least one thread.
    ioc/db: fix bug in callback thread initialization
    ioc/db: fix bug in callback.c
    ioc/db: change call back queue wakeup algorithm (only wake when threads are sleeping and enough work in the queue)
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    db/callback: add callbackShutdown() to API, add shutdown handling
    ioc/db: add support for parallel callback threads
    
    - use thread safe (spinlocked) callback queues
    - add callbackParallelThreads() configuration call (with iocShell binding)
    - add callbackParallelThreadsDefault variable, preset to number of CPUs
    - remove calls to epicsInterruptLock()
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added checks for NULL callbacks and record pointers.
    Change startup/shutdown slightly.
    Oops.
    Cleanup, rework shutdown mechanism.
    Make callback tasks shut down nicely.
    Added callbackSetProcess() and callbackCancelDelayed() routines.
    Fixes for various GCC warnings.
    use epicsThreadGetIdSelf instead of taskId
    Fixed implementation of notify() to match its declaration.
    Updated license comments.
    osiTimer => epicsTimer
    osiTime=>epicsTime
    osiInterrupt is now epicsInterrupt
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    replace osiRing with epicsRingPointer
    fix several bugs
    use new API
    more changes for win32 build
    changes for creating win dlls
    Reflect routine name change from threadSuspend() to threadSuspendSelf().
    more changes for creating dlls
    changes for creating DLLs
    get rid of threadGetName
    Remove task argument to threadSuspend().
    add callbackRequestDelayed and callbackRequestProcessCallbackDelayed
    semId => semBinaryId and semMutexId
    changes for osiSem changes
    correct arg for wdCallback to get rid of warning messages
    changes for 3.14
    Converted most void* entries in dbCommon into struct ... * entries
    and removed the casts in the code.  There are more casts in device
    and record support which should now be removed, but I haven't done
    them (yet..).
    Fix include statements
    leave exactly as reported
    fixed bug in ProcessCallback
    Fixed compiler warning messages
    Added callbackSetQueueSize
    Changes for dynamic link modification
    Changes for replacing default.dctsdr by all ascii files
    Added callbackRequestProcessCallback
    First merge of db directory to get Build to work...
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    prevent error message storms
    replace lstLib with dllEpicsLib
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    changed logMsg calls to errMessage
    jba: fixed test on priority
     Pre R3.4 changes
    Initial revision
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbCaTest: adjust locking in dbcar()
    dbCaTest: use dbCaIsLinkConnected() instead of inspecting caLink*
    ioc/db: fix segfault in dbcaStats when disconnected CA links are present
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Count aliases separately in reports.
    dbcar prints type of CA subscription (In/Out, Native/String).
    Added dbcaStats() for Mantis #281.
    Made 'dbcar' output much easier to understand.
    epicsStdioRedirect
    allow null string or *
    add dbCaPutLinkCallback
    Updated license comments.
    fixed the ca client library status
    added call to low level ca client diagnostics
    change Remove logic
    if null record name show all
    check for chid null
    fixed MS DLL related warning
    lock while processing link
    fixed DLL keyword related problems
    create proper defs for dbcar
    fixed WIN32 DLL inmort/export issues
    split db_access.h so ca not dependent on db
    define pdbbase in correct places
    still changes for building win32 dlls
    changes for building win32 dlls
    changes for creating DLLs
    changes for 3.14
    Fix include statements
    Fixed compiler warning messages
    Changed extension db to dbd
    Fixed numerous bugs
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Fix in dbExtractArray.c for DBF_STRING copies with wrap around
    Fixes and additions in dbExtractArray.c
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    
    * Add forced write of '\0' to destination to end strings correctly
    * Add dbExtractArrayFromBuf() to make array copies from ref type field logs easier
    Add dbExtractArray to support extracting same type arrays with offset and increment
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix type problem with local CA channels
    
    This commit fixes a problem introduced in Bazaar commit 12658.
    Local CA channels were seeing the data type of a channel as an
    IOC-specific (dbFldTypes.h) type value instead of the CA type
    value from db_access.h.
    
    We introduce a pair of dbChannel*CAType() macros which convert
    the dbChannel's dbr_field_type and final_type values into the
    CA equivalent type values, and use these macros whenever the
    CA encoded field type value is needed. This ensures that the
    meaning of the dbChannel member fields never changes (in 3.14
    the addr.dbr_field_type was overwritten with the converted
    value when connected to by rsrv).
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    Improve output from Show routines.
    Rename dbChannelData() to dbChannelField()
     dbChannel_get() now uses dbChannelGetField()
     dbChannel_put() now uses dbChannelPutField()
     Conflicts:
    
            src/db/db_access.c
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    Fixed fixes for HP-UX.
    Fixed warnings for HP-UX.
    fixed ca_name() returns the record name w/o appending the field name
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    throw a standard exception
    Minor changes added for Borland's C++ compiler on Linux
    removed throw specifications
    Fixed bogus undefined symbols with hpux aCC compiler.
    upgraded compiler specific macros
    upgraded compiler specific macros
    upgraded memory management
    improved delete stub
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    must use class keyword when instantiating template
    avoid useless vc++ warning
    template instantiation
    assume that new throws an exception
    removed unused static variable
    free list use epicsSingleton
    fixed free list
    turn of ms already instantiated warning
    use explicit template instatiation
    fixed possible race condition where put notify block might be nilled out
    while it is running
    Changes to automatically generate header file dependancies
    made compatible with changes in service API
    updated to match service API changes
    fixed sun pro warnings
    dont hold lock while calling callbacks
    cleaned up implementation of locks
    fixed sun pro warnings
    upgrade locking
    fixed gnu warnings
    changed list interface
    improved interface to CAC
    replace osiMutex with epicsMutex; osiEvent with epicsEvent
    proper cleanup of local channels
    added diagnostics
    made compatible with latest ca
    use iter.valid() and not iter.eol() (cosmetic)
    many changes
    added proper rundown of db events and db put call backs
    fixed gnu warnings
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: cleanup dbEvent freeLists
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Add context qualifier to db_field_log, support plugins for CA read operations
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Make reference (array/string) updates use a reference type db_field_log.
    
    * Redefine db_field_log to be a union between a "value" type (as before)
      and a "reference" type (pointers to values, dtor for plugin array copies).
    * Add db_delete_field_log function that correctly destructs a db_field_log.
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    cleaned up locking - this is an old code written w/o consideration of SMP
    thread safe locking issues
    Updated license comments.
    cosmetic
    added change priority call
    changed the API for CA context manipulation
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    fixed declared in func proto warning
    fixed priority polarization of event thread
    allow C++
    added pvAdapter
    changed init func to return void
    more changes for creating dlls
    changes for creating DLLs
    upgraded db event api
    semId => semBinaryId and semMutexId
    resolve diffs between Jeff's and my changes
    fixed bug where ++ -- operators were not properly guarded on RISC arch
    changes for iocCore port
    reformatted
    changes for 3.14
    fixed potential event discard under heavy load
    added flow control mode
    reserve less event buffers
    fixed warnings
    API changes
    fixed problems associated with events lost msg
    remove db_addr
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Simulation mode patches from Peter Denison (Diamond)
    Updated license comments.
    Changed extension db to dbd
    moved includes; .ascii=> .db; path changes
    Make BKPT field an epicsUInt8 for consistency
    
    It was the last 'char' field in dbCommon and the Base record types.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/database
    dbJLink: Restore the jlink::debug flag, add debug and trace link types
    dbJLink: Add jlif result enum state name strings
    Add jlif::start_child() method
    dbJLink: Pass the correct dbfType to child links
    
    API change for link types that support child links, they must now
    indicate whether a child link is an input, output or forward link
    by the return value from their parse_start_map() method. The original
    jlif_key_child_link enumeration has been replaced by 3 new values:
    jlif_key_child_inlink, jlif_key_child_outlink and jlif_key_child_fwdlink
    
    Previously we were passing the dbfType of the record link field to all
    child links within it, which was wrong.
    Remove final traces of link debug info tags
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    jlif future proof for 64-bit json parser
    jlink conditional debug print
    
    Enable magic info("linkDebug","YES") to enable
    debug prints during parsing.
    Added JLink reporting infrastructure
    
    Command 'dbjlr <record|*> <level>' calls the report method for
    all JSON links in all records, or in one named record.
    Added level and indent arguments to the jlif::report() method.
    
    Added jlif::map_children() method for recursing through all
    JSON links, plus dbJLinkMapChildren() and dbJLinkMapAll() APIs.
    
    Implemented the report and map_children methods in the const
    and calc link types.
    JLink: Convert parser->linkDepth into jlink->parseDepth
    
    This counter is indicates when we've finished parsing a link,
    and needs to be stored with link rather than the parser so it
    keeps its value while parsing embedded links. This fixes the
    embedded links bug.
    
    Also removed the limit on a link name's length.
    Fixes to dbJLink, added dbJLinkFree()
    
    Moved the clearing of key_is_link to the right place,
    embedded links now parse correctly.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Split dbJLinkInit, JLinks are now parsed at load-time
    Pass link dbfType to jlif allocator; needed!
    Fix build warning from clang
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    getLinkValue() use dbInitEntryFromAddr()
    
    Called from dbGet().  Optimize hash table lookup
    and bsearch of array to O(0) assignment.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Extract dbEntryToAddr() from dbChannelCreate() & dbNameToAddr()
    dbRec2Pvt()
    removed () from uage messages
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/database
    ioc/dbStatic: add dbGetDevLink()
    propagate PUTF through DB_LINK and use to RPRO async
    
    For async records to be usable in user triggered
    (eg. via RSRV) scan chains, queuing must be handled
    properly in the event that a second dbPutField()
    is made before the scan chain has completed
    (eg. a double click on an OPI).
    
    We change the meaning of PUTF so that it is
    propagated through DB links to indicate the
    pass through the scan chain directly triggered
    by a dbPutField().
    
    propagation is broken if a busy async record
    is found, and that record is instead scheduled
    to re-process on completion.
    Remove final traces of link debug info tags
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change indfield settings in new dbInitEntryFrom*()
    
    Can get indfield value from dbAddr->pflddes->indRecordType.
    Make FromRecord set indfield=0 like dbFindRecord() does.
    
    Adjust dbStaticTest to match.
    ioc: rename dbCommonPvt::recnode
    ioc/dbStatic: add dbInitEntryFromRecord()
    rename dbInitEntryFromChannel -> dbInitEntryFromAddr
    ioc/db: Add dbCommonPvt
    
    Add some hidden "fields" for every record.
    Allows Base internal hidden accounting
    which can be changed without an ABI break.
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    jlink conditional debug print
    
    Enable magic info("linkDebug","YES") to enable
    debug prints during parsing.
    db: dbGet() ensure long string nil and actual string length
    db: fix dbGet() for attributes as long string
    
    dbGet() of "rec.RTYP$" with DBF_CHAR and nRequest==1
    not handled correctly.  Results in crash.
    db: fix dbGet() of link fields as DBF_CHAR
    
    dbGet() DBF_CHAR with nRequest==1 not handled correctly.
    Results in crash.
    Use (typed) rset instead of (untyped) struct rset inside Base
    revert use of struct dbr_precision in call to get_precision in dbAccess.c
    fixed the wrong fix for getOptions in dbAccess.h
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Make the long-string buffer for link fields bigger
    
    When representing a link field as a long string (.INP$)
    we have to pick some size limit for the buffer.
    Previously this was the max length of a PV name + 12 chars,
    but with JSON links that's not big enough.
    
    This commit sets it to 1KB and defines a macro so it will be
    easier to change in the future if necessary.
    Add isConstant and isVolatile to LSET
    Remove spurious include dbCa.h
    Catch bad attribute names/values to prevent a segfault
    ioc/db: single return for dbGet()
    
    Single return path after call to prset->get_array_info
    to ensure that paddr->pfield is restored.
    Fix the dbGet() array with field-log bug.
    
    This also fixes a problem where the array is used in circular buffer
    mode and the request has an offset, but the array is not actually
    full at the time; to copy the data out of the array the convert()
    routine needs to know the capacity of the array to know when to wrap
    around, but we were passing it the current length instead.
    dbAccess: dbGet wrap at capacity count not valid count
    
    Change the usage of rset::get_array_info in dbGet()
    in the case that offset>0 and no_elements<max_elements.
    Presently this results in an early wrap which corrupts
    the last valid element in the result buffer
    in the case that offset==1 and no_element==max_elements-1.
    
    Should have no effect in other situations.
    Remove some unnecesary #includes
    dbAccess.c: dbLocker needs at most two refs
    dbLock: use new backref tracking
    dbAccess: multi-locking in dbPutFieldLink
    
    Use new locking API in dbPutFieldLink()
    Adjust dbAddLink() and dbRemoveLink()
    to pass a dbLocker* through to lockSet merge/split
    Fix single-element array problem
    
    An array field with a maximum size of 1 element would not be
    treated as an array, so the record's rset::get_array_info()
    routine wasn't being called. Fixed in dbAccess for both
    dbGet() and dbPut() operations, and in dbEvent for monitors.
    
    Fixes lp:1389298
    dbStatic: Added hook routine for dbLoadRecords()
    
    Requested by Tim Mooney for use by Autosave.
    See the Release Notes for documentation.
    
    This commit also corrects the decorations for recGblAlarmHook.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Increase context string to 40 characters.
    dbAccess: dbPut() handle changing BPTR
    
    Forgot to update dbPut(), oops...
    dbAccess: update dbPutFieldLink() to use dbParseLink()/dbSetLink()
    
    Now returns early for invalid link strings w/o modifying the
    field, or detaching device support.
    track INP/OUT field in struct dbFldDes
    
    avoid string comparisons
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    db: Use dbServer API
    
    Setting TPRO now prints user@hostname instead of the thread
    name when a record is processed as a result of a caput.
    
    Also added the dbsr command, which currently just calls casr but
    will call all registered server report routines (e.g. pvaSrv).
    post DBE_PROPERTY from dbPut()
    
    All writes to a prop(YES) field result
    in a monitor, even when the field value
    doesn't change.
    get_array_info() can modifiy DBADDR::pfield
    
    Allow the record support function get_array_info()
    to modify its first argument to provide a different
    pointer from which values should be read.
    
    Remember the original and restore it afterwards.
    dbNameToAddr() changes for long string support
    
    Modified dbNameToAddr() to match how dbChannelOpen() calls
    prset->cvt_dbaddr() before handling the '$' field modifier.
    This lets DB links and the dbgf/dbpf commands work with '$'.
    
    Elsewhere changed array handling to check fldDes->special
    for SPC_DBADDR instead of paddr->special to allow long string
    records cvt_dbaddr() routines to change paddr->special
    without breaking the array handling stuff.
    db: Fix dbGet so attributes and value can be fetched simultaneously
    
    Only the Async Soft Channel support did this, so that's where it
    was noticed that this didn't work.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Changed db_field_log types to add support for plugin-created array copies
    
    * db_field_log now is one of rec = use record, val = val inside, ref = reference inside
    * add field_type and no_elements (to allow plugins change type and array size)
    * add destructor in the ref type (called when deleting the db_field_log)
    * change dbEvent.c and dbAccess.c to use the new field log features
    Make reference (array/string) updates use a reference type db_field_log.
    
    * Redefine db_field_log to be a union between a "value" type (as before)
      and a "reference" type (pointers to values, dtor for plugin array copies).
    * Add db_delete_field_log function that correctly destructs a db_field_log.
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Simplify implementation.
    
     * dbGet() now handles DBF_*LINK fields,
     * Simplify dbGetField(),
     * Split out getAttrValue(),
     * Rename dbGetFieldLink() to getLinkValue(),
     * Reduce number of casts.
    Tindying up.
     Fixed issues with dbChannelDelete() and dbChannelShow().
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    dbNameToAddr() needs to adjust paddr->field_size when a $ modifier is used.
    Fix off-by-1 error in dbPutFieldLink() when checking long input string.
    Allow INP/OUT to be set if DSET is NULL.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Added support for new MSI and MSS link flags
    Attributes and LINK fields only provide one DBF_STRING element.
    Ensure getOptions() gets called for structured DBR types.
    Long string support:
      In dbStatic, split record and field search to make parsing easier.
      In dbAccess, '$' field name suffix makes field an array of DBF_CHAR.
    A later modification escaped into the previous set of changes...
    Allow getting a DBF_*LINK field using a DBR_CHAR array (put already done).
    Fetch options before SPC_ATTRIBUTE str; allow a DBR_CHAR array there too.
    Cosmetic changes; reformatting, style etc.
    Simplified dbPutFieldLink, made DSXT work with all link types.
    getOptions was not zeroing precision when no rset->get_precision routine.
    Use menuScan enums rather than #define macros where possible.
    Cleanup, remove some unnecessary casting.
    Cosmetic.
    Fixed alignment issue on solaris-sparc-gnu.
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Fixed bug in dbPutFieldLink: Couldn't change INP/OUT field of any record
    type that has no registered device support, whereas we should treat this
    field just as any other non-device link field.
    Oops, missed a few bits...
    static putSpecial()  =>  public dbPutSpecial()  for redundancy use.
    const arguments to dbLoadRecords and dbLoadDatabase.
    Fixed 64-bit bug copying timestamp.
    Breakpoint initialization and cleanup.
    Fixes for various GCC warnings.
    Leave PACT true if INP/OUT put fails.
    DSXT Bug: Don't call dsxt->del_record() more than once if there's a failure.
    Extended Device Support interface.
    remove unused code
    added dbNameOfPV and dbNameSizeOfPV
    Data Base Request Option DBR_ENUM_STRS for the DTYP field ofsoft records can cause an IOC to crash.
    A NULL or empty name is an error.
    Don't dereference NULL pointer argument.
    Enhanced the TPRO trace output to include the executing thread name
    Updated license comments.
    call recGblTSELwasModified for TSEL field
    Some cosmetic changes
    set putf false if record disabled
    TPRO did not work if dbProcess called recursively by different tasks
    changes for putNotify code
    major revision to putNotify
    fixed problem where put conversion fails but nevertheless
    1) caller of db_put_field gets successful status
    2) the array size is modified.
    Fix dbScanLock so it takes global lock
    make it lock
    add const in may places
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    zero upper_disp_limit, etc
    added new utility functions
    move dbLoadDatabase and dbLoadRecords to dbAccess.c
    more changes for win32 build
    still changes for building win32 dlls
    set pdbbase =0;
    changes for creating win dlls
    more changes for creating dlls
    changes for creating DLLs
    changes so that db doesnt call as
    move declaration for pdbbase from iocInit to dbAccess
    replace osiClock calls with tsStamp calls
    changes for 3.14
    Converted most void* entries in dbCommon into struct ... * entries
    and removed the casts in the code.  There are more casts in device
    and record support which should now be removed, but I haven't done
    them (yet..).
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    add support for field attributes
    get rid of some warning messages
    Add DBE_LOG to DBE_VALUE
    Fixed compiler warning messages
    API changes
    installedMakefile.Host
    Removed precord arg from dbScanFwdLink
    Added dbScanFwdLink
    added dbGetNelements and dbIsLinkConnected
    fixed bugs
    dbPutField - Call special before converting to DB or CA
    Changed extension db to dbd
    put to hardware links had bug
    changed error message
    Fixed numerous bugs
    Fixed many bugs
    Changes for dynamic link modification
    Fixed errors in initCommon
    Change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    Changes so that function prototype for db_post_event defined
    Made changes for ansi c
    Use new hash algorirthm. New variable dbPvdHashTableSize can be set after ld < iocCore
    Fixed bugs in dnNotify code. Move code to dbNotify.c from dbLink and dbAccess
    Fixed a comment.
    dbScanLock and dbScanUnlock issue taskSuspend for illegal lock set
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    dbAccess.c merge for R3.12
    Fixed put to PROC when SCAN no Passive
    dbPutField calls dbProcess instead of dbScanPassive
    Removed call to recGblRecordError from dbPutLink
    added support for S_db_putDisabled
    added changes for access security
    changed if(pdblink->process_passive && psource->scan!=0)  to
    if(pdblink->process_passive && psource->scan==0) {
    add support for locking gets, caching puts, dbPutNotify
    Fixed raising of SCAN_ALARM
    Added code to support acks and ackt
    Fixed dbNameToAddr
    Added code for alarm acknowledgement
    changed  if(precord->sevr>=MAJOR_ALARM) all_done; to
    if(precord->sevr>=MAJOR_ALARM) goto all_done;
    raise SCAN_ALARM only if sevr increases
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    replace lstLib with dllEpicsLib
    changes from mrk node
    moved conversion to string routines to cvtFast
    replaced get of disa code with recGblGetLinkValue call, ANSI c changes
    Added disable alarm severity, ansi c changes, removed dbr_field_type ref
    Changes for database internal structures
    *** empty log message ***
    *** empty log message ***
    fixed pointer bug
    put in mrk's dbNameToAddr changes for dbBase
    channel access links
     Added function dbValueSize to replace db_value_size
    Replaced dbr_value_size with dbrValueSize in dbAccess
    Fixed call to recGblRecordError
     Pre R3.4 changes
    jba Fixed cast in dbScanpassive test
    jba add retrun to dbGetLInk,bugfix for SPC_MOD,PROC processing change
    added change comment
    moved process comment before actual db processing
    bug fix for TPRO trace
    Made TPRO processing race free
    Fixing Trace
    Changed logMsg to printf for TPRO
     Support for TPRO and DISP
    Fixed error
    Changes for APS release 3.1.0
    Fixed sevaeral bugs. Allow numeric types for choices.
    Fixed arrays of strings
    Initial debugging at LANL/GTA
    added std hdrs and some fixes
    fixed output display of small <1e-7 values 5/91
    jba 4/18/91
    Severity test correction
    jba 3/21/91
    jba 2/6/91
    jba changes
    jba changes through 2/7/91
    jba changes 1/22/91
    put away for mrk after epics installed
    make release
    added support for nsev and nsta
    propagate alarms via links
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    dbUnitTest.h add callback sync. and global mutex
    
    Add testSyncCallback() to wait for in queued and
    in-progress callbacks to complete.
    
    Also add testGlobalLock() to help tests avoid
    use after free when destroying sync. primitives.
    More clang warning clean-ups
    
    The short => int change is a UB issue, the second argument to va_start()
    must be of a type that does not undergo promotion. See
    https://wiki.sei.cmu.edu/confluence/display/cplusplus/EXP58-CPP.+Pass+an+object+of+the+correct+type+to+va_start
    Fix warnings reported by clang 9.0.0
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: dbUnitTest helps support int64
    ioc/db: dbUnitTest add testdbPutArrFieldOk()
    dbUnitTest: add testdbGetArrFieldEqual()
    dbUnitTest: add testMonitor
    
    Synchronize unittests by waiting for monitor updates
    dbUnitTest: add testdbGetFieldEqual()
    dbUnitTest: replace testdbPutField()
    
    add testdbPutFieldOk() and testdbPutFieldFail()
    which include calls to testPass() or testFail()
    
    Leave testdbVPutField() as a building block.
    dbUnitTest: testIocInitOk/testIocShutdownOk testAbort() on failure
    dbUnitTest: rename
    add dbUnitTest.h
    
    hide boilerplate of tests using the PDB
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Reorganize where the POD should be placed
    
    The converter now only handles POD from the root DBD object.
    However there are commands that pull POD out of named sub-objects.
    This also adds generating tables from menu choices.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Changed extension db to dbd
    moved includes; .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add new global menuPost
    
    To reduce duplication.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    dbCa join worker
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: dbCaLinkTest fix sync
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Added loadLS routine to lset
    
    The long string in/out records use a different initializer
    for constant links. The new loadLS method allows a constant
    link type to initialize such a long string field.
    
    NB: This routine was added in the middle of the lset table.
    Any external link support implementations must be adjusted.
    Add isConstant and isVolatile to LSET
    Add lset::dbPutLinkAsync and S_db_noLSET
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Avoid race in linkRetarget
    
    Add dbCaSync() to avoid a race between a call to dbCaGetField()
    and the link becoming connected.
    dbCa: set putnelements for scalar case
    
    ensure that putnelements is kept in sync. w/ pputNative
    dbCa: dbCaGet/PutLink dynamic size
    
    dbCaGetLink return actual number of elements w/o zero padding.
    dbCaPutLink write only requested number of elements, w/o padding
    dbCa: more verbose error message in eventCallback
    dbCa: use dbf_type_to_DBR_TIME() macro
    dbCa: subscribe to variable length arrays
    dbCa: simplify shutdown
    
    Don't need partial shutdown case anymore.
    Also avoid race when destorying startStopEvent
    Make dbCa routines macros to dbLink wrappers
    iocInit: move dbCaShutdown earlier
    
    Switch dbCaShutdown from an exit hook to
    be called from iocShutdown.  Place it
    after callback shutdown.
    dbCa: only add dbCaExit once
    dbCa: missing inc. ref. when scan requests are queued
    
    Missing caLinkInc() in scanComplete() drops ref.
    dbCa: enable unittests
    dbCa: update comments on locking
    dbCa: fix race in scanComplete
    
    Use a reference counter in caLink to ensure it isn't
    free'd while callbacks remain in the scanOnce queue.
    dbScan: rename scanOnce3 to scanOnceCallback
    dbCa: use scanOnce3() to prevent once queue overflow
    
    Prevent CP links to high rate records from
    overflowing the once queue.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    add dbCaLinkInitIsolated()
    
    Initialize dbCa workList lock so that CA_LINK
    creation in test code doesn't crash.
    Once created links will never connect.
    
    clean up workList for unittest when dbCaShutdown
    is called state is already exit.
    db/dbCa: add dbCaShutdown() to API, complete shutdown handling
    ioc: Fix more MSVC 12.0 warnings
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Disable "redo last put on reconnection" for STRING writing to ENUM.
    (M. Davidsaver): Use ELLLIST init macros.
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    Removed epicsShareAPI decorator from all functions, to fix WIN32 problem
    found by Mark Rivers: The dbCaCallback typename was not decorated, but the
    functions being called through it apparently are.
    make dbMalloc and dbCalloc macros
    Added support for new MSI and MSS link flags
    False assertion removed.
    Cleanup, remove some unnecessary casting.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    calling ca_context_destroy causes crash
    more changes for epicsAtExit handler
    add epicsAtExit handler
    changes for dbCaPutCallback
    add dbCaPutLinkCallback
    change DB CA to DB CA Link
    add some additional asserts
    Updated license comments.
    fixed the ca client library status
    improved exception message
    check status
    cleanup Attributes; no calls to ca while holding locks
    cosmetic change
    more secure locking
    dbCaTask unlocked before setting link_action=0; change vames for readibility
    dbCaTask must lock before clearing channel
    let dbCaTask clean up caLink
    change documentation
    change connectionCallback so it does not dbScanLock
    change Remove logic
    lock before deleting
    must lock list
    dont unlock before addAction
    check for addAction after CA_DELETE requested
    dbCaGetLink must return -1 when sevr = INVALID
    make code easier to read
    check for removesOutstanding
    replace ca_search_and_connect with ca_create_channel
    changed the API for CA context manipulation
    keep private copy of pvname
    non need to specify hash table size
    bad guess for the number of channels
    Make ALL ca_ calls only from dbCaTask
    hold lock while changing fields
    add const in may places
    osiTime=>epicsTime
    main change is suppress error message
    changes for osiThread=>epicsThread
    add taskwd
    fixed tab formatting
    replace osiMutex with epicsMutex; osiEvent with epicsEvent
    replace osiSem with epicsMutex and/or epicsEvent
    better exception handler messages
    enable CA preemption of main thread
    add message
    force dbServiceIO to register with CA
    remove debug printf statemenst
    create proper defs for dbcar
    fixed WIN32 DLL inmort/export issues
    split db_access.h so ca not dependent on db
    still changes for building win32 dlls
    try moving dbCa.h
    changes for building win32 dlls
    changes for creating win dlls
    changes for creating DLLs
    define dbCalloc
    semId => semBinaryId and semMutexId
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    provide ca exception handler
    changes for 3.14
    added dbCaGetTimeStamp
    changed from semBCreate to semMCreate
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    get rid of some warning messages
    Fix include statements
    Fixed compiler warning messages
    remove db_addr
    The dbCa Event task may fail.
    added routines to obtain options for link field
    Fixed numerous bugs
    Fixed many bugs
    Changes for dynamic link modification
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    dbScan periodic scan use monotonic time
    Remove EPICS Base submodules
    Move all under modules/database
    Fix RTEMS build in src/std/rec/test
    
    Also back-ported Michael's change from commit b9b8cde5f6a to avoid
    using callocMustSucceed() in eventNameToHandle()
    remove special handling for inf and nan events
    bugfix for soft events >= 256
    removed obsolete code in scanpel
    fix scanpel glob matching
    some cleanup and scanpel improvement
    Fix numeric events: any number from 0 up to less than 256 is theated as an integer event. Event 0 is no event.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbScan: optimize addToList
    
    Insert from back to maintain ~same order.
    Avoid iterating entire list each time
    in the common case where all PHAS==0
    Remove some unnecesary #includes
    dbScan: avoid race on shutdown
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    dbScan: rename scanOnce3 to scanOnceCallback
    dbScan: avoid mustAlloc in eventNameToHandle()
    
    Can already return NULL for other error conditions
    dbScan: add scanOnce3() w/ completion callback
    dbScan: allow direct scan of I/O Intr list
    
    add scanIoImmediate() to allow drivers to implement
    I/O Intr scanning without the overhead of maintaining
    their own scan lists.
    Tweak to callback API.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Make IOSCANPVT a single structure
    
    Not an array of 3 io_scan_list objects.
    dbScan.c: clarify ioeventCallback
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    db/dbScan: add scanShutdown() to API, complete shutdown handling
    dbScan: Allow periodic scan unit strings to differ in case.
    
    Use epicsStrCaseCmp() instead of strcmp().
    Change the epicsParse APIs to return a units pointer.
    
    This lets us use epicsParseDouble() for scan rate parsing.
    
    Ensure the scanOnce thread is a higher priority than the fastest
    periodic scan thread, irrespective of how many threads there are.
    Fix dbScan bug, add scan period units and checking.
    Clean up some compiler warnings from gcc 4.6
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    typo in comment
    new approach to handle named events efficiently
    stringlength and mutex issues fixed
    Changed soft events from numbers to strings.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Improve error reporting by addToList & deleteFromList.
    Added dynamic parts of record alias implementation.
    Moved interruptAccept management into scanPause/scanRun functions.
    Use menuScan enums rather than #define macros where possible.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Removed epicsShareApi decorators.
    Give periodic scans their own scan list structure.
    Other cleanup.
    Cleanup.
    use epicsThreadGetIdSelf instead of taskId
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    epicsStdioRedirect
    use %g instead of %f. Saves several lines of code
    only the sscanf should have the %lf
    %lf instead of *f
    Renamed scan_list.rate => scanlist.period (which is really is).
    float => double change for temp value.
    Added scanPeriod() routine to convert a menuScan value into seconds.
    Updated license comments.
    fix problems related to removing casts fro ellLib.h
    osiTime=>epicsTime
    osiInterrupt is now epicsInterrupt
    changes for osiThread=>epicsThread
    fixed bugs introduced by APS's osi => epics name changes
    replace osiSem with epicsMutex and/or epicsEvent
    replace osiRing with epicsRingPointer
    strip trailing 0s and . from scan task names
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    changes for creating DLLs
    semId => semBinaryId and semMutexId
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for iocCore port
    changes for 3.14
    Converted most void* entries in dbCommon into struct ... * entries
    and removed the casts in the code.  There are more casts in device
    and record support which should now be removed, but I haven't done
    them (yet..).
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    get rid of some warning messages
    Fix include statements
    include intLib.h
    scanOnce: Protect rngBufPut with intLock
    Fixed compiler warning messages
    The scan task could fail if addressing location 0 causes a failure
    Changed extension db to dbd
    Fixed many bugs
    periodicTask - start_time=tickGet
    Changes for dynamic link modification
    Change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    Changes so that function prototype for db_post_event defined
    post_event and scanOnce no longer give error message storms for ring buffer overflows.
    Made changes so that casts are ANSI C compatible
    dbCalloc for papPeriodic previously allocated too much storage.
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    Will only call taskwdRemove if restarting
    Make init work if 1st record has 28 char name
    added changes for access security
    added scanOnce; if scanAdd fails make precord->scan=SCAN_PASSIVE
    bugfix for mrk
    changed from dll to ell
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    replace lstLib with dllEpicsLib
    changes from mrk node
    fixed scanDelete so it works properly for records that dont support get_ioint_info
    changed logMsg calls to errMessage
    Remove old I/O event scanning
    init piosl NULL in scanAdd,scanDelete & added test
    Changes for internal database structure changes
    added include string.h
     Pre R3.4 changes
    fixed comment line
    bug fixes
    jba no multiple err msg for ioEventTask,added cmd cntrl to io-interrup processing
    Incorporated Jeff's changes for V5 vxWorks
    *** empty log message ***
    Changes for APS release 3.1.0
    Changed taskParams to task_params
    added std hdrs and some fixes
    mrk+jba: fixed parms in ringbuf calls
    mrk fixed ring buffer read/write problem 5/91
    jba 2/6/91
    jba changes through 2/7/91
    jba changes 1/25/91 per MRK
    make release
    Initial revision
    fix RPRO/PUTF regression
    dbRec2Pvt()
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc: rename dbCommonPvt::recnode
    ioc/db: Add dbCommonPvt
    
    Add some hidden "fields" for every record.
    Allows Base internal hidden accounting
    which can be changed without an ABI break.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    add extern for C callable routines
    fixed WIN32 DLL inmort/export issues
    added
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    db: add utility functions for simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    Move DBLINK support code into its own source file
    dbStatic: Added hook routine for dbLoadRecords()
    
    Requested by Tim Mooney for use by Autosave.
    See the Release Notes for documentation.
    
    This commit also corrects the decorations for recGblAlarmHook.
    ioc/db: add recGblCheckDeadband() to recGbl library
    Clean up build warnings from clang.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Mark input dbAddr arguments const.
    Fixes for various GCC warnings.
    Cleanup, added recGblAlarmHook pointer.
    Add forward structure declarations to prevent compiler warnings when
    recGbl.h is included on its own (i.e. just to get recGblSetSevr).
    Updated license comments.
    *** empty log message ***
    add extern for C callable routines
    fixed WIN32 DLL inmort/export issues
    changes for creating DLLs
    changes for 3.14
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbLock: dbLockerAlloc() accept const array of non-const pointers
    Undefine LOCKSET_DEBUG & LOCKSET_NOFREE
    dbLock: restore initialization of PV_LINK
    
    PV_LINK -> DB_LINK must happen in doResolveLinks after add_record
    Export private dbLock*Ref() functions for tests
    dbLock: comments
    dbLock: comments
    dbLock: default build options
    
    Enable extra debugging.
    Disable lockSet free list.
    Enable recomputeCnt optimization
    dbLock: no c++ comments in c code
    dbAccess.c: dbLocker needs at most two refs
    dbLock: describe build options
    dbLock: use new backref tracking
    dbLock: multi-locking
    
    new API to lock 2 or more lockSets simultaneously
    removes global locks for dbScanLock() only
    one global lock for debugging/freelist
    Introduce dbLockPvt.h for internal API
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Added initialization of alarm severity on probe. This value is not used, but should be initialized regardless. This was flagged as an error by the Codacy static code analysis.
    
    Codacy link: https://app.codacy.com/gh/epics-base/epics-base/file/42103575016/issues/source?bid=16430872&fileBranchId=16430872#l604
    Launchpad bug: https://bugs.launchpad.net/epics-base/+bug/1862918
    
    LP: #1862918
    Extract dbEntryToAddr() from dbChannelCreate() & dbNameToAddr()
    Remove EPICS Base submodules
    Move all under modules/database
    Add missing calls to yajl_complete_parse()
    
    Fixes leak when link parses OK but JSON errors follow.
    Includes regression test.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Adjust IOC code for yajl-2.1.0 API
    Use (typed) rset instead of (untyped) struct rset inside Base
    Make the long-string buffer for link fields bigger
    
    When representing a link field as a long string (.INP$)
    we have to pick some size limit for the buffer.
    Previously this was the max length of a PV name + 12 chars,
    but with JSON links that's not big enough.
    
    This commit sets it to 1KB and defines a macro so it will be
    easier to change in the future if necessary.
    Improve casr() output
    Remove some unnecesary #includes
    Fix export type of .LINK$ fields, add tests
    Fix single-element array problem
    
    An array field with a maximum size of 1 element would not be
    treated as an array, so the record's rset::get_array_info()
    routine wasn't being called. Fixed in dbAccess for both
    dbGet() and dbPut() operations, and in dbEvent for monitors.
    
    Fixes lp:1389298
    dbChannel: shutdown from exitDatabase()
    
    Can't cleanup dbChannel while rsrv or scan tasks
    remain running.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    dbChannel: atexit
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    db/dbChannel: Rename dbr_final_type -> final_dbr_type
    Low-memory behaviour fixes.
    
    Fix unchecked buffer allocation in dbChannel.c
    Replace calls to epicsStrDup() with checked malloc() for
    things that happen often after iocInit.
    
    Michael Davidsaver pointed out this issue.
    ioc/db: Call rset::cvt_dbaddr() before processing field modifiers
    
    The channel filters and field modifiers should apply to the
    field *after* the record type has made any SPC_DBADDR changes.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    Fix compiler errors on Solaris.
    un-FIXME: Can't use freeList for variable length allocations
    Make dbChannel access functions into macros
    define more of probe field log
    
    plugins don't need to inspect more than
    field_type, field_size, and no_elements.
    In case they do define type=val to prevent
    accidental use of uninitialized pointer.
    forgot to remove TODO
    db cleanup
    
    cleanup to allow database re-load
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Change arr plugin behaviour from exclusive to inclusive range end specifier
    Add [s:i:e] sub-array shorthand parsing and unit test
    Bunch of minor changes
    
    * Fix decorations in chfPlugin.c/.h
    * Fix missing include in dbAccessDefs.h
    * Beautification in dbChannel.c
    Change how ...Show is generated, minor refactoring and fix in ts plugin
    Add function to dbChannel.c to create a db_field_log copy of array/string data
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    Add ability for plugins to drop db_field_log updates (+tests)
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Changed the structure for channel filters and channel filter plugins.
      - Made chFilterPlugin public (moved from dbChannel.c to dbChannel.h)
      - Made the interface jump table chFilterIf part of the chFilterPlugin
        (i.e. once per plugin) instead of chFilter (once per instance)
      - Added a pointer from chFilter (instance) to chFilterPlugin (plugin)
      - Added a private user pointer in chFilterPlugin
      - Changed dbFindFilter() to return a chFilterPlugin* (instead of the jump table)
      - Changed dbRegisterFilter() to accept a user private pointer as 3rd arg
    Fix: Call dbChannelDelete() when client connection is lost. [rsrv/caservertask.c]
    Improve output from Show routines.
    Various updates.
    
     * Added dbChannelGet()
     * Implement dbChannelGetField() using dbChannelGet()
     * Close filters in reverse order of opening
     * Messages and comments improved.
    Tindying up.
     Fixed issues with dbChannelDelete() and dbChannelShow().
    Rename dbChannelData() to dbChannelField()
     dbChannel_get() now uses dbChannelGetField()
     dbChannel_put() now uses dbChannelPutField()
     Conflicts:
    
            src/db/db_access.c
    Don't parse field modifiers in dbChannelTest()
     dbChannelDelete() returns void
     update tests.
    Extended functionality of dbChannel code:
     * Deleted the chan->magic member and associated checks.
     * Moved rset->cvt_dbaddr() call into dbChannelCreate()
     * Added many accessor routines
     * Renamed dbChannelReport() to dbChannelShow() and added dbChannelFilterShow()
    Changed dbChannel management API to Test/Create/Delete
    Various improvements:
     * A filter's parse routines now return a parse_result (enum)
     * Return value from test filter parse routines is configurable
     * Either call parse_end() or parse_abort(), but never both.
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    osiTime=>epicsTime
    fixed WIN32 DLL inmort/export issues
    get includes correct
    more changes for win32 build
    still changes for building win32 dlls
    changes for creating win dlls
    move all definitions for putNotify to dbNotify.h
    changes for creating DLLs
    changes so that db doesnt call as
    replace osiClock calls with tsStamp calls
    use osiTime.h to get TS_STAMP
    changes for 3.14
    added dbCaGetTimeStamp
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    add support for field attributes
    added dbGetPdbAddrFromLink. Fixed cimpiler warning messages
    API changes
    remove db_addr
    Removed precord arg from dbScanFwdLink
    Added dbScanFwdLink
    added dbGetNelements and dbIsLinkConnected
    added routines to obtain options for link field
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    add missing newline
    Remove EPICS Base submodules
    Move all under modules/database
    Remove poptions arg from dbTryGetLink()
    db: don't set record INVALID if fetching SIML fails
    db: add utility functions for simulation mode
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    Add isConstant and isVolatile to LSET
    Remove spurious include dbCa.h
    Move DBLINK support code into its own source file
    dbStatic: Added hook routine for dbLoadRecords()
    
    Requested by Tim Mooney for use by Autosave.
    See the Release Notes for documentation.
    
    This commit also corrects the decorations for recGblAlarmHook.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    ioc/db (recGblCheckDeadband): avoid signbit() which does not exist on older MSVC installations
    ioc/db (recGblCheckDeadband): pull most common case to front
    ioc/db: force isnan()/isinf() to be 1 (instead of non-zero)
    ioc/db: add recGblCheckDeadband() to recGbl library
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Clean up build warnings from clang.
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Move recGblInitConstantLink() functionality into dbLink.c
     Using dbFastPutConvert for string to number conversion.
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Mark input dbAddr arguments const.
    Fix DBF_LONG constant link initialization, clean up other types.
    Cleanup, remove some unnecessary casting.
    Improved error messages in recGblGetTimeStamp().
    Fixes for various GCC warnings.
    Cleanup, added recGblAlarmHook pointer.
    clean up error messages
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    more changes to get epicsShare to work on win32
    Updated license comments.
    *** empty log message ***
    If TSE is -1 then recGblGetTimeStamp does not retrieve time.
    This allows device/driver support to set the time.
    Allow hex and octal constants for constant links
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    changes per Benjamin Franksen
    more changes for win32 build
    changes for creating win dlls
    changes for creating DLLs
    get rid of threadGetName
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    moved include dbEvent.h after include dbAccess.h to get rid of warning
    changes for 3.14
    get rid of some warning messages
    Fix include statements
    only if precision really bad for FLOAT,DOUBLE change it
    Fixed compiler warning messages
    recGblInitConstantLink allows non constant link
    Changed extension db to dbd
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    recGblGetAlarmDouble was not setting upper_warning_limit and lower_alarm_limit
    Changes so that function prototype for db_post_event defined
    Made change for new putNotify
    Fixed bugs in dnNotify code. Move code to dbNotify.c from dbLink and dbAccess
    In recGblGetLinkValue set *pnRequest = 0 for CONSTANT links
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    Fixed TSgetTimeStamp to pass correct arg
    PVNAME_SZ problem fixed and recGblGetTimeStamp added
    add support for locking gets, caching puts, dbPutNotify
    Added code to support acks and ackt
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    replace lstLib with dllEpicsLib
    set pact to true during calls to dbPutLink
    ANSI c changes, added pact set to recGblGetLinkValue
    changed error parm in recGblRecordError calls
    Added RTN_SUCCESS check for status
    added options parm to recGblLinkvalue
     added  recGblGetLinkValue, recGblPutLinkValue, recGblGetAlarmDouble
    Changes for internal database structure changes
    fixed max upperand lowar limits for long
    *** empty log message ***
     Added recGblGetGraphicDouble, recGblControlDouble, ANSI C changes
     Pre R3.4 changes
    added std hdrs and some fixes
    jba changes
    RCZ + MRK removals
    put away for mrk after epics installed
    make release
    added support for new link options
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    upgraded compiler specific macros
    upgraded memory management
    use placement new
    fixed sun pro warning
    fixed gnu warnings
    its probably best for a put callback to save a private copy of the users data that
    is being written
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    free list use epicsSingleton
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    dbEvent tweak Queue size
    dbEvent simplify db_close_events() with join
    Remove EPICS Base submodules
    Move all under modules/database
    ioc/db: avoid possible race in db_close_events()
    
    lp:1730982
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db_cleanup_events handle 0
    ioc/db: cleanup dbEvent freeLists
    Fix single-element array problem
    
    An array field with a maximum size of 1 element would not be
    treated as an array, so the record's rset::get_array_info()
    routine wasn't being called. Fixed in dbAccess for both
    dbGet() and dbPut() operations, and in dbEvent for monitors.
    
    Fixes lp:1389298
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    dbEvent: use filtered field log on post event queue
    db_close_events cleanup
    
    Move cleanup from event thread to caller.
    This handles cases (unit tests) where the task
    is never started.
    
    The pexitsem flag serves as the indicatior that
    the event task was started.
    dbEvent don't queue dropped events
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix build
    Fix: don't put dropped event (NULL) on the event queue
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Run post-event-queue filters for events
    Add context qualifier to db_field_log, support plugins for CA read operations
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Changed db_field_log types to add support for plugin-created array copies
    
    * db_field_log now is one of rec = use record, val = val inside, ref = reference inside
    * add field_type and no_elements (to allow plugins change type and array size)
    * add destructor in the ref type (called when deleting the db_field_log)
    * change dbEvent.c and dbAccess.c to use the new field log features
    Make reference (array/string) updates use a reference type db_field_log.
    
    * Redefine db_field_log to be a union between a "value" type (as before)
      and a "reference" type (pointers to values, dtor for plugin array copies).
    * Add db_delete_field_log function that correctly destructs a db_field_log.
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    dbEvent.c: use a free list for the field logs and keep a pointer in the event queue
    Refactoring: enforce consistent use of names in dbEvent.c - NO EFFECTIVE CODE CHANGES
    Rename dbChannelData() to dbChannelField()
     dbChannel_get() now uses dbChannelGetField()
     dbChannel_put() now uses dbChannelPutField()
     Conflicts:
    
            src/db/db_access.c
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Include DBE_PROPERTY in dbel output.
    cleaned up locking - this is an old code written w/o consideration of SMP
    thread safe locking issues
    changes for dbCaPutCallback
    fixed no termination from event remove loop if event queue is 100% full
    fixed purify errors occuring when an event callback deletes itself
    Updated license comments.
    cosmetic
    fixed shut down sequence
    installed patch for "events lost" problem when installing many subscriptions
    just after canceling many subscriptions
    improved diagnostics and a safer implementation of the ring space computation
    fixed warnings
    cosmetic
    dont allow disabled event to be removed from the queue
    and changed interface so that new events are initially disabled
    fixed unprotected increment that might cause problems on RISC arch
    fixed potential race condition
    dont deadlock if ca_clear_event() is in the subscription update callback
    fixed comment
    cosmetic
    fixed gnu warning
    added change priority call
    removed debug printfs
    fixed lockup when deleting events in flow control mode
    take a lock when decrementing event queue quota because this is
    no longer atomic on RISC processors
    improved dbel diagnostic
    fixed function to match prototype
    removed overly conservative list node verification
    fixed gnu warnings
    fixed gnu warnings
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    removed dated comment
    fixed improper status check on ellFind
    fixed priority polarization of event thread
    use threadPrioritySelf ()
    added pvAdapter
    changed init func to return void
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    epicsShareAPI on db_post_single_event
    changes for creating DLLs
    void * args
    fixed more sun pro detected problems
    fixed problems detected by Solaris compiler
    upgraded db event api
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    resolve diffs between Jeff's and my changes
    fixed bug where ++ -- operators were not properly guarded on RISC arch
    changes for iocCore port
    changes for 3.14
    fixed event cancel race condition
    fixed order problem npend-- vs callBackInProgress
    fixed potential event discard under heavy load
    Fix include statements
    fixed use of event->pLastLog when event->npend should be used
    added flow control mode
    fixed exit when working problem
    fixed warnings
    API changes
    added dcan lock to db_post_single_event()
    fixed problems associated with events lost msg
    remove db_addr
    fixed printf format warning
    Changes so that function prototype for db_post_event defined
    ssert to epicsAssert.h
    Changed bcopy to memcopy
    Now invokes callback if pvalue==NULL && select==alarm and event==alarm
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    access control changes
    *** empty log message ***
    added extra labor events
    changed lstLib stuff to ellLib
    changed include      <dbCommon.h> to #include      <rec/dbCommon.h>
    fixed marker event bug and ran through gcc -Wall
    dbCommon -> rec/dbCommon
    change include <rec/dbCommon> to <dbCommon>
    changed from dll to ell
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    replace lstLib with dllEpicsLib
    changes from mrk node
    fixed memcpy parms
    added include string.h
    ANSI C changes
     Pre R3.4 changes
    jba  Added 'return NULL;' to end of db_event_list
    fix to  ifdef V5_vxWorks
    Changes for APS release 3.1.0
    Changed taskParams to task_params
    mrk fix for monitor on strings
    added std hdrs and some fixes
    mrk changes to fix sync of val,stat,sevr
    added the equivalent to "adjust_severity()" for alarm severities
    ANL/LANL integration
    jba 2/6/91
    jba changes
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup, remove some unnecessary casting.
    added dbNameOfPV and dbNameSizeOfPV
    Updated license comments.
    removed c++ style comment (ifdefed out for C but still generating warnings)
    added pvAdapter
    split db_access.h so ca not dependent on db
    changes for building win32 dlls
    move all definitions for putNotify to dbNotify.h
    changes for creating DLLs
    added func proto
    fixed warnings
    C++ changes
    API changes
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    iocsh: add usage messages
    use iocshSetError()
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added JLink reporting infrastructure
    
    Command 'dbjlr <record|*> <level>' calls the report method for
    all JSON links in all records, or in one named record.
    Added level and indent arguments to the jlif::report() method.
    
    Added jlif::map_children() method for recursing through all
    JSON links, plus dbJLinkMapChildren() and dbJLinkMapAll() APIs.
    
    Implemented the report and map_children methods in the const
    and calc link types.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Mark callbackParallelThreadsDefault properly
    
    The definition gets epicsShareDef and may provide a value.
    Additional declarations get epicsShareExtern.
    db: Use dbServer API
    
    Setting TPRO now prints user@hostname instead of the thread
    name when a record is processed as a result of a caput.
    
    Also added the dbsr command, which currently just calls casr but
    will call all registered server report routines (e.g. pvaSrv).
    ioc/db: add support for parallel callback threads
    
    - use thread safe (spinlocked) callback queues
    - add callbackParallelThreads() configuration call (with iocShell binding)
    - add callbackParallelThreadsDefault variable, preset to number of CPUs
    - remove calls to epicsInterruptLock()
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add dbState library that provides a means of synchronizing plugins to events.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed soft events from numbers to strings.
    Added dynamic parts of record alias implementation.
    Added dbNotifyDump command.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    clean up and include epicsStdio.h
    fix type error
    register dbLockShowLocked
    Updated license comments.
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    Add ioccrfArgArgv argument type to support functions which take an
    arbitrary number of arguments (e.g. show).  Clean up help display
    of argument desciptors containing spaces.
    Make ioccrf argument lists constant.
    Add std namespace to ioccrf.cpp.
    Big changes to ioccrf routines.
    1) Switched from using the registry to using a C++ map.  This provides
       an easy way to add...
    2) A help command.  With no arguments, this command prints a table of
       commands.  With arguments it prints a synopsis of the specified
       command(s).
    3) ioccrf() is now thread-safe with plans to add multiple remote
       access via telnet.  The value pointers have been removed from the
       argument structures and a pointer to an array of argument unions is
       passed to the registered callback routines.
    4) All command/argument configuration structures are now const.
    add astac, dbtpn, threadSleep
    fixed DLL keyword related problems
    move location on include ioccrf
    Changes for win32 build.
    add static where appropriate
    implement many more function calls
    add casr
    change RegisterInit to Register
    changes for dlls
    new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    Extract dbEntryToAddr() from dbChannelCreate() & dbNameToAddr()
    Move dbAccess prototypes to the correct header file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use (typed) rset instead of (untyped) struct rset inside Base
    Add lset::dbPutLinkAsync and S_db_noLSET
    dbStatic: Added hook routine for dbLoadRecords()
    
    Requested by Tim Mooney for use by Autosave.
    See the Release Notes for documentation.
    
    This commit also corrects the decorations for recGblAlarmHook.
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Bunch of minor changes
    
    * Fix decorations in chfPlugin.c/.h
    * Fix missing include in dbAccessDefs.h
    * Beautification in dbChannel.c
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed trailing ';' from dbGetSevr macro definition.
    Added support for new MSI and MSS link flags
    Clean up compiler warnings in calls to dbGetLink.
    getOptions was not zeroing precision when no rset->get_precision routine.
    Fixed alignment issue on solaris-sparc-gnu.
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Oops, missed a few bits...
    static putSpecial()  =>  public dbPutSpecial()  for redundancy use.
    const arguments to dbLoadRecords and dbLoadDatabase.
    Extended Device Support interface.
    putNotifyBlocked no longer necessary
    fix dbGetLink bug for arrays
    changes for long being 64 bits
    Updated license comments.
    add const in may places
    osiTime=>epicsTime
    remove duplicate def for dbGetNelements
    removed prototype for function that is no longer exported
    added new utility functions
    first cut at multi-threading version
    move dbLoadDatabase and dbLoadRecords to dbAccess.c
    more changes for win32 build
    still changes for building win32 dlls
    changes for creating win dlls
    move all definitions for putNotify to dbNotify.h
    changes for creating DLLs
    changes so that db doesnt call as
    replace osiClock calls with tsStamp calls
    use osiTime.h to get TS_STAMP
    changes for 3.14
    added dbCaGetTimeStamp
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    add support for field attributes
    added dbGetPdbAddrFromLink. Fixed cimpiler warning messages
    API changes
    remove db_addr
    Removed precord arg from dbScanFwdLink
    Added dbScanFwdLink
    added dbGetNelements and dbIsLinkConnected
    added routines to obtain options for link field
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    drop epicsMemory.h
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    fixed ca_name() returns the record name w/o appending the field name
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    upgraded compiler specific macros
    upgraded memory management
    use placement new
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    dbNotify set PUTF
    removed () from uage messages
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove some unnecesary #includes
    dbNotify: cleanup freelist
    dbNotify: shutdown with exitDatabase
    
    Can't cleanup dbNotify while rsrv or scan tasks
    are running as there may be operations in progress.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    dbNotify: cleanup atexit
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    remove STATIC
    Added dynamic parts of record alias implementation.
    Cleanup, remove some unnecessary casting.
    forgot an unlock
    last user calls putNotifyCleanup
    fix memory leak
    safer version of dbPutNotify
    dbPutNotify did not wait if state==putNotifyUserCallbackActive
    fix race condition in dbPutNotify
    remove unnecessary dbScanLock/Unlock
    dbNotifyCancel waits for callback to complete
    Make arguments match format string.
    put notify did not act properly if a record had disp=TRUE
    putNotifyBlocked no longer necessary
    more changes to get epicsShare to work on win32
    epicsMutexLockWithTimeout no longer exists
    Updated license comments.
    new strategy when blocked; use event insread of sleep
    fixed dll sym export
    major changes
    Bugfix...
    tempory fix for dbNotify
    more improvements
    failed simplest testcvs -n update
    major revision to putNotify
    if epicsEventWaitWithTimeout fails dont continue
    fix bug that could cause dbNotifyCancel to timeout
    osiTime=>epicsTime
    replace osiSem with epicsMutex and/or epicsEvent
    add decorated names to dbtpn
    fixed gnu warnings
    removed my junk
    build dbPutNotifyInitiate and dbPutNotifyDestroy
    added pvAdapter
    fixed problem with win32 dll keywords and added new interface
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    add epicsShareAPI
    more changes for creating dlls
    changes for creating DLLs
    semId => semBinaryId and semMutexId
    changes for osiSem changes
    changes for 3.14
    Converted most void* entries in dbCommon into struct ... * entries
    and removed the casts in the code.  There are more casts in device
    and record support which should now be removed, but I haven't done
    them (yet..).
    If  dbPutNotify called dbProcess and dbProcess returned an error the notify completion callback was called twice.
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    get rid of some warning messages
    Fix include statements
    Changes for replacing default.dctsdr by all ascii files
    Made changes for ansi c
    Many changes. It should now work in all cases( I hope).
    Fixed bugs in dnNotify code. Move code to dbNotify.c from dbLink and dbAccess
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    ANSIfication of stuff (mostly missing argument types in declarations)
    Added dbla command.
    Fixed problems with #ifndef guards and include order.
    dbl dbhcr no longer have filename arg; char => const char
    Updated license comments.
    add dbior; add support for c++
    added epicsShareAPI
    changes for creating DLLs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    drop unneeded includes
    
    Avoid pulling in CALLBACK unnecessarily,
    which can aggravating MSVC.
    removed () from uage messages
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve additional cppcheck issues; fix iOS build
    Fix type problem with local CA channels
    
    This commit fixes a problem introduced in Bazaar commit 12658.
    Local CA channels were seeing the data type of a channel as an
    IOC-specific (dbFldTypes.h) type value instead of the CA type
    value from db_access.h.
    
    We introduce a pair of dbChannel*CAType() macros which convert
    the dbChannel's dbr_field_type and final_type values into the
    CA equivalent type values, and use these macros whenever the
    CA encoded field type value is needed. This ensures that the
    meaning of the dbChannel member fields never changes (in 3.14
    the addr.dbr_field_type was overwritten with the converted
    value when connected to by rsrv).
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Various updates for building on Windows/Cygwin/MinGW
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Rename dbChannelData() to dbChannelField()
     dbChannel_get() now uses dbChannelGetField()
     dbChannel_put() now uses dbChannelPutField()
     Conflicts:
    
            src/db/db_access.c
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    dbNotifyCancel waits for callback to complete
    epicsStdioRedirect
    make test commands more crash resistant
    Make arguments match format string.
    added ca_dump_dbr
    more changes to get epicsShare to work on win32
    Updated license comments.
    dbNotify API changes
    major revision to putNotify
    Changes for win32 build.
    remove redundent db_access.h
    fixed DLL import problem
    split db_access.h so ca not dependent on db
    changes for win32 dlls
    add decorated names
    move all definitions for putNotify to dbNotify.h
    changes for 3.14
    Add DBR_STSACK_STRING and DBR_CALSS
    get rid of some warning messages
    Fix include statements
    remove db_addr
    Changes for replacing default.dctsdr by all ascii files
    Changes to make more ansi compatible
    First merge of db directory to get Build to work...
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    gft was overrunning buffer; added dbPutNotifyMaptype
    replace lstLib with dllEpicsLib
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    Changes for APS release 3.1.0
    *** empty log message ***
    Much more robust version of gft
    added std hdrs and some fixes
    ANL/LANL integration
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    removed () from uage messages
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/database
    Fix warnings reported by clang 9.0.0
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Revert "dbBkpt: atexit"
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    dbBkpt: atexit
    ioc: Fix more MSVC 12.0 warnings
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Make ellFree() a 1-argument macro, calls ellFree2() with free as freeFunc.
    (M. Davidsaver): Use ELLLIST init macros.
    ellLib changes: ANSIfication patch; moved test code out of ellLib.c into
    its own unit test program in libCom/test; changed ellFree() to take a
    function pointer for the free() routine, so it can be used on Windows;
    modified epicsExit and dbBkpt to use it and pass in the free routine.
    Breakpoint initialization and cleanup.
    Updated license comments.
    avoid use of ellFree
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    fixed bugs introduced by APS's osi => epics name changes
    replace osiSem with epicsMutex and/or epicsEvent
    add dbior; add support for c++
    more changes for win32 build
    changes for building win32 dlls
    move dbAccess.h
    changes for creating win dlls
    Reflect routine name change from threadSuspend() to threadSuspendSelf().
    more changes for creating dlls
    changes for creating DLLs
    Remove task argument to threadSuspend().
    semId => semBinaryId and semMutexId
    new way to build
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for 3.14
    Fix include statements
    removed ; from if
    Changes for dynamic link modification
    Changes for replacing default.dctsdr by all ascii files
    Fixed locking error.  OOPS.
    ANSIFIED more.
    *** empty log message ***
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    doc: add description of improved simulation mode
    
    - improve sections in dbCommonInput/dbCommonOutput
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Added C++ extern "C" wrapper to dbState.h
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add dbState library that provides a means of synchronizing plugins to events.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix dbConstLink to handle a long-string array properly
    
    Added a new parser dbLSConvertJSON for long-string arrays.
    New test checks that only the first string element is used.
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Add OS X specific version of epicsMath.h to allow for use of isfiniite().
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    use proper form of include
    add trailing */
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: dbCaLinkTest fix sync
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Avoid race in linkRetarget
    
    Add dbCaSync() to avoid a race between a call to dbCaGetField()
    and the link becoming connected.
    Make dbCa routines macros to dbLink wrappers
    add dbCaLinkInitIsolated()
    
    Initialize dbCa workList lock so that CA_LINK
    creation in test code doesn't crash.
    Once created links will never connect.
    
    clean up workList for unittest when dbCaShutdown
    is called state is already exit.
    db/dbCa: add dbCaShutdown() to API, complete shutdown handling
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed arg to dbCaCallbackProcess() to make it match dbCaCallback.
    Removed matching unnecessary casts in softDev support routines.
    Removed epicsShareAPI decorator from all functions, to fix WIN32 problem
    found by Mark Rivers: The dbCaCallback typename was not decorated, but the
    functions being called through it apparently are.
    Added support for new MSI and MSS link flags
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    changes for dbCaPutCallback
    add dbCaPutLinkCallback
    Updated license comments.
    fixed the ca client library status
    add extern for C callable routines
    cleanup Attributes; no calls to ca while holding locks
    add const in may places
    osiTime=>epicsTime
    changes for creating DLLs
    semId => semBinaryId and semMutexId
    replace osiClock calls with tsStamp calls
    changes for 3.14
    added dbCaGetTimeStamp
    added routines to obtain options for link field
    Fixed numerous bugs
    Changes for dynamic link modification
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Added dbUnregisterServer() routine, plus tests
    Give dbRegisterServer a return value (0/-1)
    
    Add tests to check registration failures.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added some dbServer unit tests
    Added Doxygen comments for dbServer API
    Add EPICS_IOC_IGNORE_SERVERS environment variable
    
    dbServers cannot be registered when their names appear in this
    variable, so they should remain inactive. This feature is mainly
    intended for debugging, so the crude name search should be OK.
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Add dbServer files.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    drop unneeded includes
    
    Avoid pulling in CALLBACK unnecessarily,
    which can aggravating MSVC.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbNotify: shutdown with exitDatabase
    
    Can't cleanup dbNotify while rsrv or scan tasks
    are running as there may be operations in progress.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    C style comments for C compilers
    safer version of dbPutNotify
    add comments
    fix race condition in dbPutNotify
    put notify did not act properly if a record had disp=TRUE
    putNotifyBlocked no longer necessary
    Updated license comments.
    new strategy when blocked; use event insread of sleep
    major changes
    more improvements
    major revision to putNotify
    added missing include
    add decorated names to dbtpn
    cleaned out trash
    allow C++
    added pvAdapter
    fixed problem with win32 dll keywords and added new interface
    move all definitions for putNotify to dbNotify.h
    changes for creating DLLs
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Make from arg const in put.
    Updated license comments.
    fixed WIN32 DLL inmort/export issues
    split db_access.h so ca not dependent on db
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Various updates for building on Windows/Cygwin/MinGW
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    doc: add description of improved simulation mode
    
    - improve sections in dbCommonInput/dbCommonOutput
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    ioc/db: dbRegisterServer() only warn on actual redefinition
    
    avoid noise when simply run twice.
    Remove EPICS Base submodules
    Move all under modules/database
    dbServer: Only call client() and report() methods when running
    
    Also adjusts the tests to confirm that behaviour.
    Can't dbUnregisterServer() if stopped & no stop() method
    
    Unregistration is allowed if we're still registering though.
    This allows for cases like rsrv, which doesn't have a stop method.
    However the semantics of restarting servers after they have been
    stopped hasn't been defined, and rsrv probably wouldn't work if
    you tried that anyway, so I'm not convinced this is useful.
    Added dbUnregisterServer() routine, plus tests
    Ignore dbServer registrations after init
    
    Actually store all server states, and display it in dbsr()
    Give dbRegisterServer a return value (0/-1)
    
    Add tests to check registration failures.
    Fix check for double-registration, add test
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbRegisterServer: Don't ignore sub-string names
    
    Also adjusts the tests to check we do it properly.
    Add explicit "no servers" message to dbsr()
    
    Make dbsr explicitly say so if no dbServer layers have been
    registered with the dbServer API.
    Add EPICS_IOC_IGNORE_SERVERS environment variable
    
    dbServers cannot be registered when their names appear in this
    variable, so they should remain inactive. This feature is mainly
    intended for debugging, so the crude name search should be OK.
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Add dbServer files.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add dummy putValue methods to const link types
    
    Includes a new softTest program to detect regressions.
    Resolves http://www.aps.anl.gov/epics/core-talk/2017/msg00503.php
    Fix dbConstLink to handle a long-string array properly
    
    Added a new parser dbLSConvertJSON for long-string arrays.
    New test checks that only the first string element is used.
    ioc/db: dbConstLoadLS handle size=0
    
    handle size=0 and clarify
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Added loadLS routine to lset
    
    The long string in/out records use a different initializer
    for constant links. The new loadLS method allows a constant
    link type to initialize such a long string field.
    
    NB: This routine was added in the middle of the lset table.
    Any external link support implementations must be adjusted.
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Add isConstant and isVolatile to LSET
    Add lset::dbPutLinkAsync and S_db_noLSET
    Fix issues related to const array initialization
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    Cleanup
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    processTarget() remove unnecessary NULL test
    
    psrc and pdst will always be non-NULL
    RPRO/PUTF log instead of assert()
    RPRO/PUTF rename
    RPRO/PUTF also handle self link case
    fix RPRO/PUTF regression
    Remove Warning: 'blah.PUTF' found true with PACT false
    Remove EPICS Base submodules
    Move all under modules/database
    propagate PUTF through DB_LINK and use to RPRO async
    
    For async records to be usable in user triggered
    (eg. via RSRV) scan chains, queuing must be handled
    properly in the event that a second dbPutField()
    is made before the scan chain has completed
    (eg. a double click on an OPI).
    
    We change the meaning of PUTF so that it is
    propagated through DB links to indicate the
    pass through the scan chain directly triggered
    by a dbPutField().
    
    propagation is broken if a busy async record
    is found, and that record is instead scheduled
    to re-process on completion.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Added loadLS routine to lset
    
    The long string in/out records use a different initializer
    for constant links. The new loadLS method allows a constant
    link type to initialize such a long string field.
    
    NB: This routine was added in the middle of the lset table.
    Any external link support implementations must be adjusted.
    Add isConstant and isVolatile to LSET
    Add lset::dbPutLinkAsync and S_db_noLSET
    A cleaner way to close CA & DB links
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    Cleanup
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Move DBLINK support code into its own source file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbCa: enable unittests
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Breakpoint initialization and cleanup.
    Fixes for various GCC warnings.
    Updated license comments.
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    add dbior; add support for c++
    changes for creating DLLs
    semId => semBinaryId and semMutexId
    replace osiClock calls with tsStamp calls
    changes for 3.14
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Permit breakpoint tables to run any direction as long as the slope doesn't
    change sign. Reduced memory requirement by making the table a contiguous
    array rather than an array of pointers to intervals. Improved error reporting.
    Updated license comments.
    fixed WIN32 DLL inmort/export issues
    cvtBpt.c moved from src/bpt to here
    Changes for replacing default.dctsdr by all ascii files
    Fixed comment that broke during previous commit
    Moved cvtBpt.c from libCom so libCom now has no record header dependancies
    Channel Access changes from Jeff Hill.
    added find breakpoint table if *ppbrk is null
    removed typo from STDC prototype
    added __STDC__ ifdefs
    removed include     <lstLib.h>
    made ANSI C compatible
    New database access
    fixed conversion when off ends of table
    calc val when off ends of table
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: dbLockCleanupRecords() warn only if lockSets remain
    dbLock: add assert in dbScanLock
    
    catch locking attempts before iocInit()
    dbLock: dbLockerAlloc() accept const array of non-const pointers
    dbLock: better error check when recursive locking attempted
    Undo s/printf/errlogPrintf/ in iocsh commands
    Remove some unnecesary #includes
    dbLock: restore initialization of PV_LINK
    
    PV_LINK -> DB_LINK must happen in doResolveLinks after add_record
    dbLock: fix unlock w/o lock during iocInit
    dbLock: minor
    
    must match following condition
    dbLock: fix initialization of self links
    
    initPVLinks() doesn't correctly handle case where a record links
    to itself.  This results it being added twice to lockRecordList,
    which corrupts the list count, and the lockset ref. counter.
    
    The error appears in dbLockCleanupRecords() when not all
    locksets are free'd.
    dbLock: comments
    dbLock: minor
    dbLock: remove some unnecessary code
    
    no need to hold spinlock for lockRecordList
    the lockRecordList is protected by the lockSet::lock
    dbLock: comments
    dbLock: describe build options
    dbLock: use new backref tracking
    dbLock: multi-locking
    
    new API to lock 2 or more lockSets simultaneously
    removes global locks for dbScanLock() only
    one global lock for debugging/freelist
    Introduce dbLockPvt.h for internal API
    dbLock: remove dbLockExit()
    
    No benefit to freeing global locks in unittests,
    and this could cause problems with normal IOC
    shutdown.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Fix lock-set initialization properly.
    remove unused
    dbLock: yet another fix to dbLockCleanupRecords()
    
    track the lockRecord allocation
    dbLock: free lockSets
    dbLock: another fix to dbLockCleanupRecords()
    dbLock: fix dbLockCleanupRecords
    
    all lockRecord s allocated in one block.  oops.
    dbLock: free LSET
    dbLock: atexit
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    doc: note for dbScanLock
    Added support for new MSI and MSS link flags
    STATIC => static.
    Added dynamic parts of record alias implementation.
    fix bug
    epicsStdioRedirect
    allow null string or *
    epicsMutexLockWithTimeout no longer exists
    Updated license comments.
    TPRO did not work if dbProcess called recursively by different tasks
    remove extra debug statements; changes for clarity
    latest changes. Still extra printf statements
    Still not working. Many asserts
    fix bugs in dbLockShowLocked
    must Unlock
    fix race condition
    add dbLockShowLocked
    even scalar DB_LINKs forced into lock set
    major change in algortihm
    Fix dbScanLock so it takes global lock
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    remove start_time
    pdbbase is defined in dbAccessDefs.h
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    Reflect routine name change from threadSuspend() to threadSuspendSelf().
    more changes for creating dlls
    changes for creating DLLs
    Remove task argument to threadSuspend().
    semId => semBinaryId and semMutexId
    threadLockContextSwitch not necessary
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for 3.14
    Converted most void* entries in dbCommon into struct ... * entries
    and removed the casts in the code.  There are more casts in device
    and record support which should now be removed, but I haven't done
    them (yet..).
    call taskSuspend instead of exit
    changed from semBCreate to semMCreate
    Fix include statements
    checks that lset was allocated
    fixed bugs
    Changed extension db to dbd
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Changed extension db to dbd
    moved includes; .ascii=> .db; path changes
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Removed usage message from dbStateCreate because it is not only a shell function but an API as well. But kept check for NULL. Added check for NULL in dbStateFind as well.
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    dbState: Avoid segfaults when called with NULL pointer
    Add dbState library that provides a means of synchronizing plugins to events.
    Remove EPICS Base submodules
    Move all under modules/database
    Change paths for tools from this module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    ioc/db menu fixes
    
    * Move including menuScan.dbd from menuGlobal.dbd to base.dbd.
      Menus included in menuGlobal.dbd can't be overridden at build
      time since it gets fully expanded before installation.
    * Convert .dbd.pod files before generating menuGlobal.dbd.d
    * Remove menuCompress.dbd, nothing in Base uses it any more.
      The compress record has its own compressALG menu
    configure, ioc/db: remove clutter left by rebase, add rule for pm to html generation (include pm in ..)
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Release notes about win32-x86-mingw cross-builds
    
    Also a bit more cleanup of build rules.
    Use the new DBD processing scripts to generate dependency files.
    Remove dependency on conversion dbTo* programs.
    
    Doesn't work anyway since they're now Perl scripts, but
    isn't necessary because dbHost gets built first.
    menuGlobal: Now needs dbExpand executable
    ioc/db: Generate menuGlobal.dbd
    
    The source just duplicates what's in the Makefile anyway.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Replaced .o with $(OBJ).
    Fix dependencies.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    use const char
    asTrapWrite aslo belongs to LIB_SRCS
    fix for old config rules
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to automatically generate header file dependancies
    Changes to create vxWorks archive libraries and prods.
    Depends change.
    Modified depends rules
    Added dependancy for asLib.h.
    needs dependency
    implement asTrapWrite
    Added win32 resource files.
    fixed DLL keyword related problems
    link with the db library
    Updated dll libs.
    changes for building win32 dlls
    changes so that db doesnt depend on as; as on rec
    latest build rules
    Removed comment.
    changes for build
    Changes for dll build.
    ascheck_LIBS => PROD_LIBS
    Converted to new build method.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Added Doxygen annotations for the Link Support API
    
    Haven't actually tried processing them yet though.
    dbLink: Clarify meaning of lset isConstant and isVolatile flags
    
    Modify dbIsLinkConnected() to check lset->isVolatile first.
    Remove poptions arg from dbTryGetLink()
    db: don't set record INVALID if fetching SIML fails
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Don't inherit alarm severity from self-referential links
    
    This behavior was present in 3.14 and got lost in my link changes.
    Includes a new regression test to detect the broken behavior.
    Make dbLinkIs{Constant|Volatile}() return only true/false
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Added loadLS routine to lset
    
    The long string in/out records use a different initializer
    for constant links. The new loadLS method allows a constant
    link type to initialize such a long string field.
    
    NB: This routine was added in the middle of the lset table.
    Any external link support implementations must be adjusted.
    Add isConstant and isVolatile to LSET
    Add lset::dbPutLinkAsync and S_db_noLSET
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Make dbCa routines macros to dbLink wrappers
    dbAccess: multi-locking in dbPutFieldLink
    
    Use new locking API in dbPutFieldLink()
    Adjust dbAddLink() and dbRemoveLink()
    to pass a dbLocker* through to lockSet merge/split
    dbLink: re-intorduce struct lset and dbDb_lset"
    
    without initLink, addLink, and loadLink
    Remove trailing ; from dbGetSevr macro
    dbLink: pass DBADDR* to dbAddLink()
    
    Now we know whether a DB or CA link is created
    before calling dbAddLink().
    dbLink: remove struct lset and dbDb_lset
    
    unnecessary exposure of internal API
    Another helper, dbLoadLinkLS
    
    Replaces recGblInitConstantLink(..., DBF_STRING, ...)
    Added helper functions dbGetLinkLS() and dbPutLinkLS()
    ioc: Added extern "C" block to dbLink.h file.
    Clean up warnings from gcc 4.6.3
    Fix in dbLink.h: Include all used headers
    Move recGblInitConstantLink() functionality into dbLink.c
     Using dbFastPutConvert for string to number conversion.
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix type problem with local CA channels
    
    This commit fixes a problem introduced in Bazaar commit 12658.
    Local CA channels were seeing the data type of a channel as an
    IOC-specific (dbFldTypes.h) type value instead of the CA type
    value from db_access.h.
    
    We introduce a pair of dbChannel*CAType() macros which convert
    the dbChannel's dbr_field_type and final_type values into the
    CA equivalent type values, and use these macros whenever the
    CA encoded field type value is needed. This ensures that the
    meaning of the dbChannel member fields never changes (in 3.14
    the addr.dbr_field_type was overwritten with the converted
    value when connected to by rsrv).
    Fix export type of .LINK$ fields, add tests
    Fix Windows builds.
    
    db_access.h defines things in the CA library, not db...
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    complete rename
    Rename dbChannelData() to dbChannelField()
     dbChannel_get() now uses dbChannelGetField()
     dbChannel_put() now uses dbChannelPutField()
     Conflicts:
    
            src/db/db_access.c
    Make dbChannel_create() call dbChannelOpen()
    adapt db_get_field_and_count to dbChannel_get_count
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    db: Fix db_get_field() on an empty array field.
    
    This fixes a bug introduced with the dynamic-array branch.
    The new version of db_get_field() was using the dbr_size_n() macro to
    calculate the offset to the start of the buffer area to be zeroed, but
    when nRequest is zero this gives the wrong result; the dbr_ structures
    always contain at least one value element, and dbr_size_n() thus has
    to include that in its size calculation.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Update rsrv to support V4.13 protocol extension.
    
    The rsrv server is updated in this commit to deliver variable sized
    waveforms in response to a zero length request, implementing an
    extension to the v4 EPICS protocol tied to minor version 13.
    
    The core of the changes are in read_reply, rsrv/camessage.c, which first
    reserves packet space for the largest possible response, but then resizes
    the packet according to how much data is actually returned from the
    database.
    Fix: Replaced C++ reserved word 'new' as variable name.
    Cosmetic only.
    Fixed alignment issue on solaris-sparc-gnu.
    Fixes for various GCC warnings.
    fix double to float conversion bug
    Cleanup: removed two ancient unused routines.
    changes for long being 64 bits
    Updated license comments.
    major revision to putNotify
    help prevent execptions on double to float
    osiTime=>epicsTime
    allow put callback to work for ACKS and ACKT
    fixed gnu warnings
    removed NOOP routines
    added pvAdapter
    fixed problem with win32 dll keywords
    split db_access.h so ca not dependent on db
    more changes for win32 build
    changes for win32 dlls
    changes for building win32 dlls
    move all definitions for putNotify to dbNotify.h
    more changes for creating dlls
    converted to ANSI function definition
    changes for iocCore port
    changes for 3.14
    Add DBR_CLASS_NAME
    Fix include statements
    API changes
    remove db_addr
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    new database access has units as 16 char null terminated. old has 8 char null
    added support for DBR_PUT_ACKT DBR_PUT_ACKS and DBR_STSACK_STRING
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    added dbPutNotifyMapType
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    changes made to remove compile warning msgs
    added include string.h
    ANSI C changes
     Pre R3.4 changes
    mrk changes
    Changes for APS release 3.1.0
    *** empty log message ***
    sun4 support added
    added std hdrs and some fixes
    fixed hole in ENUM type (status and severity) return
    jba 4/18/91
    ANL/LANL integration
    jba changes
    make release
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: fix issue with compiler differences between MSVC and GNU (enum signedness)
    notes on db_field_log usage
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Add context qualifier to db_field_log, support plugins for CA read operations
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Changed db_field_log types to add support for plugin-created array copies
    
    * db_field_log now is one of rec = use record, val = val inside, ref = reference inside
    * add field_type and no_elements (to allow plugins change type and array size)
    * add destructor in the ref type (called when deleting the db_field_log)
    * change dbEvent.c and dbAccess.c to use the new field log features
    Make reference (array/string) updates use a reference type db_field_log.
    
    * Redefine db_field_log to be a union between a "value" type (as before)
      and a "reference" type (pointers to values, dtor for plugin array copies).
    * Add db_delete_field_log function that correctly destructs a db_field_log.
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    add extern for C callable routines
    osiTime=>epicsTime
    added struct tag to db_field_log type
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    drop epicsMemory.h
    use auto_ptr instead of epics_auto_ptr where applicable
    dbCa: enable unittests
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added protected virtual destructor to stop g++ warnings.
    fixed mantis 192 -  Concurrency bug in channel access to local DB
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    fixed names
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    upgraded compiler specific macros
    upgraded memory management
    use placement new
    dont include shareLib.h more than necessary
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    removed unused static variable
    free list use epicsSingleton
    adjusted free list use to new interface
    avoid holding a lock when calling a callback
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    fixed proper shutdown of local CA subscriptions
    fixed proper shutdown of local CA subscriptions
    fixed race condition
    cosmetic
    fixed possible race condition where put notify block might be nilled out
    while it is running
    added prioritry parameter, but ignore it for now
    made pName() public and added channel destroy notify in subscription class
    fixed uninitialized member
    updated to match service API changes
    fixed sun pro warnings
    fixed gnu warnings
    dont hold lock while calling callbacks
    add void return
    cleaned up implementation of locks
    fixed sun pro warnings
    fixed gnu warnings
    adapt to interface changes and upgrade locking
    improved interface to CAC
    added new uninstal methods which are initially noops
    replace osiMutex with epicsMutex; osiEvent with epicsEvent
    proper cleanup of local channels and remove static from operator
    new/delete  following convention
    added diagnostics
    made compatible with latest ca
    many changes
    added proper rundown of db events and db put call backs
    fixed gnu warnings
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Fix numeric events: any number from 0 up to less than 256 is theated as an integer event. Event 0 is no event.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    dbScan: rename scanOnce3 to scanOnceCallback
    dbScan: add scanOnce3() w/ completion callback
    dbScan: allow direct scan of I/O Intr list
    
    add scanIoImmediate() to allow drivers to implement
    I/O Intr scanning without the overhead of maintaining
    their own scan lists.
    Make IOSCANPVT a single structure
    
    Not an array of 3 io_scan_list objects.
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    db/dbScan: add scanShutdown() to API, complete shutdown handling
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    new approach to handle named events efficiently
    use EPICS_DEPRECATED macro
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Changed soft events from numbers to strings.
    PINI Processing support for PHAS.
    Use menuScan enums rather than #define macros where possible.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Removed epicsShareApi decorators.
    Give periodic scans their own scan list structure.
    Other cleanup.
    Cleanup.
    Renamed scan_list.rate => scanlist.period (which is really is).
    float => double change for temp value.
    Added scanPeriod() routine to convert a menuScan value into seconds.
    Updated license comments.
    add extern for C callable routines
    add struct dbCommon;
    define pdbbase in correct places
    changes for creating DLLs
     new routine dbGetLinkDBFtype is now available. It returns the field type of a database link.
     dbNotify was fixed to work correctly for putNotify as well as put.
     scanppl now accepts an argumeny rate. scanpel accepts an argument event_number
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/database
    dbJLink: Some extra checks at parse/init time
    dbJLink: Add jlif result enum state name strings
    Add jlif::start_child() method
    dbJLink: Pass the correct dbfType to child links
    
    API change for link types that support child links, they must now
    indicate whether a child link is an input, output or forward link
    by the return value from their parse_start_map() method. The original
    jlif_key_child_link enumeration has been replaced by 3 new values:
    jlif_key_child_inlink, jlif_key_child_outlink and jlif_key_child_fwdlink
    
    Previously we were passing the dbfType of the record link field to all
    child links within it, which was wrong.
    Remove final traces of link debug info tags
    Export dbJLinkDebug as a shell variable
    Replace the base:jlinkDebug info-item with a global variable
    
    The info item only works in dbPutString() which means dbLoadRecords()
    but not dbPutField().
    dbJLink: Handle NULL returned by jlif::alloc() better
    
    It might not mean out-of-memory, adjust error message.
    Add OOM and dbfType error checks to all jlif::alloc() routines.
    
    Change all IFDEBUG() in JLink types to use exported global variables.
    This allows debug messages to be output from the jlif::alloc()
    routines, since the jlink field isn't set when they're called.
    Add missing calls to yajl_complete_parse()
    
    Fixes leak when link parses OK but JSON errors follow.
    Includes regression test.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Adjust IOC code for yajl-2.1.0 API
    separate jlink and lset debug flags
    
    "lsetDebug" for lset callbacks and "jlinkDebug" for jlink parsing.
    jlink conditional debug print
    
    Enable magic info("linkDebug","YES") to enable
    debug prints during parsing.
    Fixes for Windows builds
    Initialize all fields of jlink, link types may not use calloc
    Clean up memory leaks
    Fix warnings from clang
    Added JLink reporting infrastructure
    
    Command 'dbjlr <record|*> <level>' calls the report method for
    all JSON links in all records, or in one named record.
    Added level and indent arguments to the jlif::report() method.
    
    Added jlif::map_children() method for recursing through all
    JSON links, plus dbJLinkMapChildren() and dbJLinkMapAll() APIs.
    
    Implemented the report and map_children methods in the const
    and calc link types.
    JLink: Convert parser->linkDepth into jlink->parseDepth
    
    This counter is indicates when we've finished parsing a link,
    and needs to be stored with link rather than the parser so it
    keeps its value while parsing embedded links. This fixes the
    embedded links bug.
    
    Also removed the limit on a link name's length.
    Fixes to dbJLink, added dbJLinkFree()
    
    Moved the clearing of key_is_link to the right place,
    embedded links now parse correctly.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Split dbJLinkInit, JLinks are now parsed at load-time
    Pass link dbfType to jlif allocator; needed!
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    minor
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbContext: local CA variable length
    dbCa: enable unittests
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Make dbChannel_create() call dbChannelOpen()
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    fix for compiler warnings in mantis 337
    renamed chronIntIdResTable::add to chronIntIdResTable::idAssignAdd to avoid
    hiding resTable::add in the public base class
    fixed solaris warnings
    fixed missing code interfacing back to net io subsystem
    Fix issue with one unpatched Solaris compiler version.
    fixed io cancel shutdown order problem
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    fixed names
    many changes associated will disconnecting the channel but not disconnecting the circuit
    fixed wrong argument
    fixed gnu warnings
    upgraded memory management
    use placement new
    fixed sun pro warning
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    avoid useless vc++ warning
    template instantiation
    assume that new throws an exception
    made CA client service list an epics singleton
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    avoid holding a lock when calling a callback
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    changed message
    Bugfix: multiple line string constant
    dont allow local PVs to connect unless the client ctx allows preemptive callback
    turn of ms already instantiated warning
    use explicit template instatiation
    match new cac api
    fixed comment
    fixed proper shutdown of local CA subscriptions
    fixed proper shutdown of local CA subscriptions
    fixed proper shutdown of local CA subscriptions
    fixed race condition
    fixed race condition
    fixed possible race condition where put notify block might be nilled out
    while it is running
    catch out of bounds read
    added prioritry parameter, but ignore it for now
    call channel destroy notify mf for each attached IO when chan is destroyed
    Changes to automatically generate header file dependancies
    changed the API for CA context manipulation
    fixed use of destroy member function without checking for nill pointer
    non need to specify hash table size
    made compatible with changes in service API
    updated to match service API changes
    fixed sun pro warnings
    dont hold lock while calling callbacks
    cleaned up implementation of locks
    adapt to interface changes and upgrade locking
    fixed gnu warnings
    improved interface to CAC
    changes for osiThread=>epicsThread
    replace osiMutex with epicsMutex; osiEvent with epicsEvent
    proper cleanup of local channels
    added diagnostics
    cosmetic
    fixed priority polarization of event thread
    cleaned up thread names
    many changes
    added proper rundown of db events and db put call backs
    force dbServiceIO to register with CA
    fixed gnu warnings
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbLock: dbLockerAlloc() accept const array of non-const pointers
    dbLock: no c++ comments in c code
    dbLock: multi-locking
    
    new API to lock 2 or more lockSets simultaneously
    removes global locks for dbScanLock() only
    one global lock for debugging/freelist
    Introduce dbLockPvt.h for internal API
    dbLock: free LSET
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    TPRO did not work if dbProcess called recursively by different tasks
    add dbLockShowLocked
    even scalar DB_LINKs forced into lock set
    make it easier for user code
    allow C++
    changes for creating DLLs
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix type problem with local CA channels
    
    This commit fixes a problem introduced in Bazaar commit 12658.
    Local CA channels were seeing the data type of a channel as an
    IOC-specific (dbFldTypes.h) type value instead of the CA type
    value from db_access.h.
    
    We introduce a pair of dbChannel*CAType() macros which convert
    the dbChannel's dbr_field_type and final_type values into the
    CA equivalent type values, and use these macros whenever the
    CA encoded field type value is needed. This ensures that the
    meaning of the dbChannel member fields never changes (in 3.14
    the addr.dbr_field_type was overwritten with the converted
    value when connected to by rsrv).
    Fix export type of .LINK$ fields, add tests
    dbChannel: shutdown from exitDatabase()
    
    Can't cleanup dbChannel while rsrv or scan tasks
    remain running.
    db/dbChannel: Rename dbr_final_type -> final_dbr_type
    remove FIXME
    Make dbChannel access functions into macros
    doc chPostEventFunc
    cleanup for dbRegisterFilter()
    Add function to dbChannel.c to create a db_field_log copy of array/string data
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Changed the structure for channel filters and channel filter plugins.
      - Made chFilterPlugin public (moved from dbChannel.c to dbChannel.h)
      - Made the interface jump table chFilterIf part of the chFilterPlugin
        (i.e. once per plugin) instead of chFilter (once per instance)
      - Added a pointer from chFilter (instance) to chFilterPlugin (plugin)
      - Added a private user pointer in chFilterPlugin
      - Changed dbFindFilter() to return a chFilterPlugin* (instead of the jump table)
      - Changed dbRegisterFilter() to accept a user private pointer as 3rd arg
    Fix: Call dbChannelDelete() when client connection is lost. [rsrv/caservertask.c]
    Improve output from Show routines.
    Various updates.
    
     * Added dbChannelGet()
     * Implement dbChannelGetField() using dbChannelGet()
     * Close filters in reverse order of opening
     * Messages and comments improved.
    Rename dbChannelData() to dbChannelField()
     dbChannel_get() now uses dbChannelGetField()
     dbChannel_put() now uses dbChannelPutField()
     Conflicts:
    
            src/db/db_access.c
    Don't parse field modifiers in dbChannelTest()
     dbChannelDelete() returns void
     update tests.
    Extended functionality of dbChannel code:
     * Deleted the chan->magic member and associated checks.
     * Moved rset->cvt_dbaddr() call into dbChannelCreate()
     * Added many accessor routines
     * Renamed dbChannelReport() to dbChannelShow() and added dbChannelFilterShow()
    Changed dbChannel management API to Test/Create/Delete
    Various improvements:
     * A filter's parse routines now return a parse_result (enum)
     * Return value from test filter parse routines is configurable
     * Either call parse_end() or parse_abort(), but never both.
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use (typed) rset instead of (untyped) struct rset inside Base
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    Cleanup dbConvert
    
    Windows warnings removed from testdbConvert by Michael
    Major reformatting of dbConvert.c
    Fixed dbConvert-memmove problems
    
    Test program crashed on Windows-x64.
    Some dbConvert.c routines used sizeof([unsigned ]long)
    instead of sizeof(epics[U]Int32).
    Fix Windows build - no math with void* pointers
    out of caution use memmove instead of memcpy
    dbConvert: optimize copy w/o convert
    
    Use memcpy() where input and output memory representations
    are the exactly the same (integer and floating point types).
    
    Assumes 2s complement integer types and that signed and
    unsigned types have the same representation.
    ioc: Fix more MSVC 12.0 warnings
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Mark source dbAddr pointers as const.
    Cleanup, remove some unnecessary casting.
    Let compiler check args for dbPutConvertRoutine[] functions.
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Don't cast away const unnecessarily - gcc warning.
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    fix double to float conversion bug
    changes for long being 64 bits
    Updated license comments.
    changes for double to float
    make default precision 6 instead of 0
    help prevent execptions on double to float
    osiTime=>epicsTime
    use ansi prototype
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    more changes for creating dlls
    changes for 3.14
    Fix include statements
    Fixed compiler warning messages
    Fixed numerous bugs
    Fixed many bugs
    Changes for dynamic link modification
    Changes for replacing default.dctsdr by all ascii files
    new database access has units as 16 char null terminated. old has 8 char null
    Changes so that function prototype for db_post_event defined
    Made changes for ansi c
    If record should be processed because of put and record is active and TPRO is true then print active message.
    Fixed some casts so that they are ANSI compatible
    putStringUshort converts to float first then to ushort
    putStringUlong converts to double first then to unsigned long
    Fixed bugs in dnNotify code. Move code to dbNotify.c from dbLink and dbAccess
    For DBR_STRING to DBF_choice allow numeric index as well as string choice
    added ability to retrieve string fields as numerics
    dbPut allows arrays of character strings to numeric field arrays.
    Made change for ACKT and ACKS
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    Fixed put to PROC when SCAN no Passive
    dbPutField calls dbProcess instead of dbScanPassive
    Removed call to recGblRecordError from dbPutLink
    added support for S_db_putDisabled
    added changes for access security
    changed if(pdblink->process_passive && psource->scan!=0)  to
    if(pdblink->process_passive && psource->scan==0) {
    add support for locking gets, caching puts, dbPutNotify
    Fixed raising of SCAN_ALARM
    Added code to support acks and ackt
    Fixed dbNameToAddr
    Added code for alarm acknowledgement
    changed  if(precord->sevr>=MAJOR_ALARM) all_done; to
    if(precord->sevr>=MAJOR_ALARM) goto all_done;
    raise SCAN_ALARM only if sevr increases
    changed #include <dbCommon.h> to #include <rec/dbCommon.h>
    replace lstLib with dllEpicsLib
    changes from mrk node
    moved conversion to string routines to cvtFast
    replaced get of disa code with recGblGetLinkValue call, ANSI c changes
    Added disable alarm severity, ansi c changes, removed dbr_field_type ref
    Changes for database internal structures
    *** empty log message ***
    *** empty log message ***
    fixed pointer bug
    put in mrk's dbNameToAddr changes for dbBase
    channel access links
     Added function dbValueSize to replace db_value_size
    Replaced dbr_value_size with dbrValueSize in dbAccess
    Fixed call to recGblRecordError
     Pre R3.4 changes
    jba Fixed cast in dbScanpassive test
    jba add retrun to dbGetLInk,bugfix for SPC_MOD,PROC processing change
    added change comment
    moved process comment before actual db processing
    bug fix for TPRO trace
    Made TPRO processing race free
    Fixing Trace
    Changed logMsg to printf for TPRO
     Support for TPRO and DISP
    Fixed error
    Changes for APS release 3.1.0
    Fixed sevaeral bugs. Allow numeric types for choices.
    Fixed arrays of strings
    Initial debugging at LANL/GTA
    added std hdrs and some fixes
    fixed output display of small <1e-7 values 5/91
    jba 4/18/91
    Severity test correction
    jba 3/21/91
    jba 2/6/91
    jba changes
    jba changes through 2/7/91
    jba changes 1/22/91
    put away for mrk after epics installed
    make release
    added support for nsev and nsta
    propagate alarms via links
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Fixed warnings for HP-UX.
    safer version of dbPutNotify
    fix race condition in dbPutNotify
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    putNotifyBlocked no longer necessary
    removed throw specifications
    Fixed bogus undefined symbols with hpux aCC compiler.
    upgraded compiler specific macros
    upgraded compiler specific macros
    upgraded memory management
    document ms compiler problems with placement delete
    use placement new
    fixed sun pro warning
    fixed gnu warnings
    its probably best for a put callback to save a private copy of the users data that
    is being written
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    avoid useless vc++ warning
    template instantiation
    free list use epicsSingleton
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    dbNotify API changes
    cosmetic
    auto mutex release now requires an auto mutex
    fixed spelling
    dont allow local PVs to connect unless the client ctx allows preemptive callback
    turn of ms already instantiated warning
    use explicit template instatiation
    fixed possible race condition where put notify block might be nilled out
    while it is running
    fixed put notify blocking bug and put notify type mapping bug
    Changes to automatically generate header file dependancies
    made compatible with changes in service API
    updated to match service API changes
    dont hold lock while calling callbacks
    add void return
    cleaned up implementation of locks
    upgrade locking
    fixed gnu warnings
    improved interface to CAC
    osiTime=>epicsTime
    replace osiMutex with epicsMutex; osiEvent with epicsEvent
    added diagnostics
    many changes
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    dbLink: Clarify meaning of lset isConstant and isVolatile flags
    
    Modify dbIsLinkConnected() to check lset->isVolatile first.
    Remove cantProceed() from dbGetLink() and dbPutLink()
    
    Fixes LP: #1528314
    Affects 3.15 branch only.
    Restore behaviour when no getValue() method exists
    Remove poptions arg from dbTryGetLink()
    db: don't set record INVALID if fetching SIML fails
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    Don't inherit alarm severity from self-referential links
    
    This behavior was present in 3.14 and got lost in my link changes.
    Includes a new regression test to detect the broken behavior.
    Fix link initialization from hex constants
    
    Fixes LP: #1699445
    Includes regression tests (some of which will fail on 3.16)
    Fix aai constant initialization
    
    The aai record is "special" and does things its own way.
    These changes let it support {const:[...]} initialization without
    breaking regular input link types which could be initialized twice
    without the new DBLINK_FLAG_INITIALIZED guard in dbInitLink().
    
    Also adds tests for this, and for similar links for waveform.
    Make dbLinkIs{Constant|Volatile}() return only true/false
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Clean up memory leaks
    Moved PV_LINK-specific code out of dbLink.c into link types
    
    This required a change to the lset::getValue arguments, removing
    the pstat and psevr pointers. Links can still return a non-zero
    value from getValue and trigger a LINK:INVALID alarm, but for any
    other alarm settings they must manipulate the record themselves.
    Various improvements
    
    * Added new lset::openLink() method, called on JSON_LINKs only
    * Cleanup in dbJLink.c to prevent memory leaks.
    * Removed jlif::start_parse() method.
    * Renamed jlif::end_parse() to end_child, which will be called on
    the parent link when a child link has succesfully finished parsing.
    Split dbJLinkInit, JLinks are now parsed at load-time
    Added loadLS routine to lset
    
    The long string in/out records use a different initializer
    for constant links. The new loadLS method allows a constant
    link type to initialize such a long string field.
    
    NB: This routine was added in the middle of the lset table.
    Any external link support implementations must be adjusted.
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Add isConstant and isVolatile to LSET
    Add lset::dbPutLinkAsync and S_db_noLSET
    Fix issues related to const array initialization
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    dbLink.c: fix dbGetLink for array of length 1
    More cleanup
    Cleanup
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Move DBLINK support code into its own source file
    Remove some unnecesary #includes
    dbLock: restore initialization of PV_LINK
    
    PV_LINK -> DB_LINK must happen in doResolveLinks after add_record
    Make dbCa routines macros to dbLink wrappers
    dbLink: backward link tracking
    dbAccess: multi-locking in dbPutFieldLink
    
    Use new locking API in dbPutFieldLink()
    Adjust dbAddLink() and dbRemoveLink()
    to pass a dbLocker* through to lockSet merge/split
    dbLink: re-intorduce struct lset and dbDb_lset"
    
    without initLink, addLink, and loadLink
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    dbLink: pass DBADDR* to dbAddLink()
    
    Now we know whether a DB or CA link is created
    before calling dbAddLink().
    dbLink: remove struct lset and dbDb_lset
    
    unnecessary exposure of internal API
    Fix lock-set initialization properly.
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Another helper, dbLoadLinkLS
    
    Replaces recGblInitConstantLink(..., DBF_STRING, ...)
    Added helper functions dbGetLinkLS() and dbPutLinkLS()
    Clean up warnings from gcc 4.6.3
    Must clear link type before calling dbLockSetSplit()
    Move recGblInitConstantLink() functionality into dbLink.c
     Using dbFastPutConvert for string to number conversion.
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    move initHooks to libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    JSON Links implementation
    
    The lnkConst.c implementation is not yet complete, no support for arrays of
    strings (JMOP).
    
    Link error messages should display their record & field name, which is not yet
    possible.
    
    The ability to embed links as parameters to other link types is not complete
    yet; this will be required for the calc link type.
    
    This code currently passes all existing tests, but additional tests are needed
    for the new functionality.
    Add lset::loadArray and JSON parsing
    
    Replace lset::loadLink with lset::loadScalar, add lset::loadArray
    Add dbLoadLinkArray() routine to dbLink.h API
    New dbConvertJSON.h API for use by dbConstLoadArray()
    drop all templateInstances.cpp
    
    No longer needed by any targets.
    Restore loadLink to lset, move CONSTANT link code into its own source file
    Move DBLINK support code into its own source file
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    Various build system issues
    
    * Removed broken Windows source browser rules and 'browse' targets
    * Fixed parallel build issue for Make > 3.81
    * Other tidying-up in RULES_ARCHS
    * Fix the RTEMS override of the ECHO variable
    ioc/db menu fixes
    
    * Move including menuScan.dbd from menuGlobal.dbd to base.dbd.
      Menus included in menuGlobal.dbd can't be overridden at build
      time since it gets fully expanded before installation.
    * Convert .dbd.pod files before generating menuGlobal.dbd.d
    * Remove menuCompress.dbd, nothing in Base uses it any more.
      The compress record has its own compressALG menu
    add dbUnitTest.h
    
    hide boilerplate of tests using the PDB
    Add dbServer files.
    Only try to generate .html files where the .dbd.pod exists
    Add new global menuPost
    
    To reduce duplication.
    Reorganize where the POD should be placed
    
    The converter now only handles POD from the root DBD object.
    However there are commands that pull POD out of named sub-objects.
    This also adds generating tables from menu choices.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix build after reorg
    Add sync plugin that uses the db state
    Add dbState library that provides a means of synchronizing plugins to events.
    Add arr plugin for array subsets (+ testcode)
    Add dbExtractArray to support extracting same type arrays with offset and increment
    Add deadband plugin (client defined monitor deadband)
    Add ts filter plugin to set timestamp to "now"
    Added chfPlugin, a simple interface for channel filter plugins.
      - chfPlugin.h contains the simple jump table and doxygen documentation
      - chfPlugin.c is a wrapper library around the yajl callbacks that parses
        any client-supplied configuration into the user's structure
      - test/chfPluginTest.c tests the library and the data conversion
    Refactor link handling code (incomplete).
      * Moved routines into dbLink.h and dbLink.c
      * Created separate routines for DB_LINK processing
      * Added dbinitLink() and dbAddLink()
      * Started a Link Support Entry Table, not used yet
      * Everything should still work as before...
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    ioc/db: Generate menuGlobal.dbd
    
    The source just duplicates what's in the Makefile anyway.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Add rule to create depends file in O.<T_A> dir. Simplify Makefile.
    Make PINI field into its own menu, adding RUN and PAUSE choices.
    Latest vesrion of gcc has this bug fixed.
    menuArrType is not used anywhere, delete.
    RCS files now used for all cygwin and mingw builds.
    Added workaround for gcc crosscompiler 4.3.1 bug in RTEMS prerelease 4.9.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Simulation mode patches from Peter Denison (Diamond)
    Removed dbCommon.h dependency on O.Common directory, it was causing much
    extra compilation and linking the *second* time you run gnumake.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    fixed names
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Changes for shared libraries and os consistancy.
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    new sorce file
    Changes for automated depends.
    Removed spurious menuLinr.dbd (LINR uses menuConvert found in src/bpt).
    Allow make inc at top level
    Changes to create vxWorks archive libraries and prods.
    dont hold lock while calling callbacks
    Modified depends rules
    Renamed DBINSTALL to DBD, RECTYPES & MENUS to DBDINC
    Added win32 resource file.
    added proper rundown of db events and db put call backs
    create proper defs for dbcar
    moved to src/misc
    build new source files
    link DLL with CA
    first cut at multi-threading version
    split db_access.h so ca not dependent on db
    cvtBpt.c moved from src/bpt to here
    get includes correct
    more changes for win32 build
    add decorated names
    changes for creating win dlls
    changes for creating DLLs
    moved recSup.h to dbStatic
    File dbCommon.h now created in install include directory.
    when building dbCommon only look in source directory
    latest build rules
    moved to libCom/taskwd
    build changes
    get rid of threadGetName
    changes for build
    Changes for dll build.
    Modified OBJS build.
    Updated directory and exe suffix.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbContextReadNotifyCache: variable length for CAC gets
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fix for compiler warnings in mantis 337
    fixed mantis 192 -  Concurrency bug in channel access to local DB
    many changes associated will disconnecting the channel but not disconnecting the circuit
    use placement new
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    free list use epicsSingleton
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    new sorce file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    fixed solaris warnings
    fixed io cancel shutdown order problem
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    removed throw specifications
    Fixed bogus undefined symbols with hpux aCC compiler.
    Fixed warning (unused function argument).
    upgraded compiler specific macros
    upgraded memory management
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    o eliminated header file for inline functions
    o created file for template instances
    must use class keyword when instantiating template
    avoid useless vc++ warning
    template instantiation
    assume that new throws an exception
    free list use epicsSingleton
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instatiation
    fixed to match new dbEvent interface
    fixed proper shutdown of local CA subscriptions
    fixed proper shutdown of local CA subscriptions
    fixed race condition
    fixed race condition
    added channel destroy notify mf
    Changes to automatically generate header file dependancies
    made compatible with changes in service API
    updated to match service API changes
    dont hold lock while calling callbacks
    cleaned up implementation of locks
    fixed sun pro warning
    fixed sun pro warnings
    adapt to interface changes and upgrade locking
    fixed gnu warnings
    improved interface to CAC
    added new uninstal methods which are initially noops
    replace osiMutex with epicsMutex; osiEvent with epicsEvent
    added diagnostics
    many changes
    added proper rundown of db events and db put call backs
    installed
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Source formatting in dbFastLinkConv
    Fix bug in fast-convert from int64 to enum
    
    Discovered on Solaris-sparc (big-endian).
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use (typed) rset instead of (untyped) struct rset inside Base
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Remove development printf() statements
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    ioc: Fix more MSVC 12.0 warnings
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Mark struct dbAddr arg's const.
    Cleanup, remove some unnecessary casting.
    Fixes for IOCs on 64-bit platforms.
    empty string to char conversions now produce 0, not '0'.
    Record types ANSIfied by John Hammonds.
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    fix double to float conversion bug
    changes for long being 64 bits
    Updated license comments.
    changes for double to float
    make default precision 6 instead of 0
    help prevent execptions on double to float
    osiTime=>epicsTime
    more changes for win32 build
    changes for building win32 dlls
    changes for creating win dlls
    more changes for creating dlls
    changes for 3.14
    Fix include statements
    str_t_e did not allow for numeric value
    Fixed numerous bugs
    Fixed many bugs
    Changes for dynamic link modification
    Fixed errors in initCommon
    Change pdbBase to pdbbase
    Changes for replacing default.dctsdr by all ascii files
    added ability to retrieve string fields as numerics
    First merge of db directory to get Build to work...
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixes and additions in dbExtractArray.c
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    
    * Add forced write of '\0' to destination to end strings correctly
    * Add dbExtractArrayFromBuf() to make array copies from ref type field logs easier
    Add dbExtractArray to support extracting same type arrays with offset and increment
    Fixed Till's report of non-thread-safe lazy-init.
    Updated license comments.
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    propagate PUTF through DB_LINK and use to RPRO async
    
    For async records to be usable in user triggered
    (eg. via RSRV) scan chains, queuing must be handled
    properly in the event that a second dbPutField()
    is made before the scan chain has completed
    (eg. a double click on an OPI).
    
    We change the meaning of PUTF so that it is
    propagated through DB links to indicate the
    pass through the scan chain directly triggered
    by a dbPutField().
    
    propagation is broken if a busy async record
    is found, and that record is instead scheduled
    to re-process on completion.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Move DBLINK support code into its own source file
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Add support for Windows FILETYPE time stamps.
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    Add newline at end of file to quiet compiler complaints.
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: dbCaLinkTest fix sync
    Avoid race in linkRetarget
    
    Add dbCaSync() to avoid a race between a call to dbCaGetField()
    and the link becoming connected.
    dbCa: dbCaGet/PutLink dynamic size
    
    dbCaGetLink return actual number of elements w/o zero padding.
    dbCaPutLink write only requested number of elements, w/o padding
    dbCa: subscribe to variable length arrays
    Make dbCa routines macros to dbLink wrappers
    dbCa: fix race in scanComplete
    
    Use a reference counter in caLink to ensure it isn't
    free'd while callbacks remain in the scanOnce queue.
    dbCa: use scanOnce3() to prevent once queue overflow
    
    Prevent CP links to high rate records from
    overflowing the once queue.
    dbCaPvt.h: normalize indentation
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added support for new MSI and MSS link flags
    changes for dbCaPutCallback
    add dbCaPutLinkCallback
    Updated license comments.
    cleanup Attributes; no calls to ca while holding locks
    dbCaTask unlocked before setting link_action=0; change vames for readibility
    let dbCaTask clean up caLink
    change connectionCallback so it does not dbScanLock
    change Remove logic
    keep private copy of pvname
    Make ALL ca_ calls only from dbCaTask
    osiTime=>epicsTime
    replace osiSem with epicsMutex and/or epicsEvent
    changes for creating DLLs
    semId => semBinaryId and semMutexId
    replace osiClock calls with tsStamp calls
    changes for 3.14
    added dbCaGetTimeStamp
    added routines to obtain options for link field
    Fixed numerous bugs
    Changes for dynamic link modification
    add dynamic_registerRecordDeviceDriver()
    
    Use epicsFindSymbol() to build a dynamic and idempotent equivalent
    to the code generated by registerRecordDeviceDriver.pl
    
    Also add runRegistrarOnce() to prevent registrars
    from running multiple times, except from unittest code.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    dbUnitTest.h add callback sync. and global mutex
    
    Add testSyncCallback() to wait for in queued and
    in-progress callbacks to complete.
    
    Also add testGlobalLock() to help tests avoid
    use after free when destroying sync. primitives.
    More clang warning clean-ups
    
    The short => int change is a UB issue, the second argument to va_start()
    must be of a type that does not undergo promotion. See
    https://wiki.sei.cmu.edu/confluence/display/cplusplus/EXP58-CPP.+Pass+an+object+of+the+correct+type+to+va_start
    Fix warnings reported by clang 9.0.0
    db: fix dbUnitTest for changes in error symbol table
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: dbUnitTest helps support int64
    ioc/db: dbUnitTest add testdbPutArrFieldOk()
    ioc/db: cleanup dbEvent freeLists
    ioc/db: dbUnitTest testMonitor leaks dbChannel
    ioc/db: testdbGetFieldEqual() detect zero size
    Fix dbUnitTest.c
    avoid void* +=
    dbUnitTest: add testdbGetArrFieldEqual()
    dbUnitTest: Improve output slightly
    dbUnitTest: more informative dbPutField*()
    dbUnitTest: show PWD when database load fails
    Increase testMonitorWait() timeout
    dbUnitTest: add testMonitor
    
    Synchronize unittests by waiting for monitor updates
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    dbUnitTest: add testdbGetFieldEqual()
    dbUnitTest: replace testdbPutField()
    
    add testdbPutFieldOk() and testdbPutFieldFail()
    which include calls to testPass() or testFail()
    
    Leave testdbVPutField() as a building block.
    dbUnitTest: testIocInitOk/testIocShutdownOk testAbort() on failure
    dbUnitTest: rename
    add dbUnitTest.h
    
    hide boilerplate of tests using the PDB
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added PINI values RUNNING and PAUSED, needed for Asyn.
    Make PINI field into its own menu, adding RUN and PAUSE choices.
    Added freebsd-x86 support, modifying freebsd-x86_64 for commonality.
    Initial version.
    Initial version.
    Updated license comments.
    Initial version - added for R3.14 compatibility.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up warning from clang/MacOS
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    ioc/db: add test for allocPvt() returning NULL to chfPluginTest
    ioc/db: add tests for strict tagged plugin options, fix 'required' algorithm
    ioc/db: add optional "tagged" plugin configuration (sets integer tag and any value in one step)
    src/ioc: fix numerous warnings appearing on MSVC 12.0 / Windows (64bit)
    Fix compiler errors on Solaris.
    un-FIXME: Can't use freeList for variable length allocations
    cleanup for dbRegisterFilter()
    integer type should be epicsInt32
    
    Can't use long for this on 64-bit systems
    booleans are stored as char not int
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Bunch of minor changes
    
    * Fix decorations in chfPlugin.c/.h
    * Fix missing include in dbAccessDefs.h
    * Beautification in dbChannel.c
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    Added pvt pointer argument to parse_error in the plugin interface
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Added required mask per plugin to shorten check loop. Trivial test change. [src/db/chfPlugin.c src/db/test/chfPluginTest.c]
    Refactor: get rid of ...Ctx (as Ctx is often used for user handles) [src/db/chfPlugin.c]
    Added chfPlugin, a simple interface for channel filter plugins.
      - chfPlugin.h contains the simple jump table and doxygen documentation
      - chfPlugin.c is a wrapper library around the yajl callbacks that parses
        any client-supplied configuration into the user's structure
      - test/chfPluginTest.c tests the library and the data conversion
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    quiet some warnings
    RSRV: fix large buffer resize
    
    Take into account that realloc may already have moved
    the data to a new buffer.
    as-hostname address review comments
    as,rsrv: use real client IP instead of untrusted host name
    rsrv: avoid redundant getpeername()
    
    also do some extra, and redundant checks,
    on accepted sockets.
    Remove EPICS Base submodules
    Move all under modules/database
    Unify rsrv socket errors, add missing error string
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    quiet win32 warnings
    Add osiSockOptMcastLoop_t and osiSockTest
    rsrv: fix large array expansion
    
    Causes a crash when a larger buffer is made even larger.
    Previous buffer not being free'd correctly.
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    EPICS_CA_AUTO_MAX_ARRAY_BYTES -> EPICS_CA_AUTO_ARRAY_BYTES
    add EPICS_CA_MCAST_TTL
    
    may be necessary/helpful for mcast search/beacon usage
    across sub-nets.
    replace caLimitArray with EPICS_CA_AUTO_MAX_ARRAY_BYTES
    ca: fix export caLimitArray on win32
    rsrv: export variable caLimitArray
    rsrv: optional max_array_bytes
    
    use of large array free list is optional
    rsrv: support larger than max. array bytes
    rsrv: use SOCKERRNO
    
    Must use OSI SOCKERRNO for correct handling
    of errors w/ winsock
    cygwin inherits winsock broadcast behavior
    rsrv: populate the server list - also on Windows builds
    Report UDP client status on Windows
    Show UDP name server status in casr 2+ output
    update release notes
    rsrv: "casr 1" shows ignore list
    rsrv: EPICS_CAS_IGNORE_ADDR_LIST
    rsrv: decouple some client/server config
    
    the automatic beacon address list should follow
    the server interface address list, and not be
    effected by any client config.
    
    Also, don't populate the interface address list
    from EPICS_CAS_BEACON_ADDR_LIST as this will
    almost never contain local interface addresses.
    Improve casr() output
    rsrv: more beacon address fixups
    
    should really be based on *server* config
    as beacons should be sent to clients attempting
    to connect to the server.
    
    By default send beacons to bcast addresses
    from the interface address list.
    rsrv: oops
    
    improper rebase
    rsrv: fix wildcard check ordering
    
    filter out mcast addresses before wildcard uniqueness check.
    Fix build for vxWorks 5.5.2 (again)
    don't use EPICS_CA_ADDR_LIST for server interface list
    
    keep existing behavior, and server binds wildcard
    when only client address list is specified.
    rsrv: loopback mcast beacons
    rsrv: fixup beacon address list handling
    
    should be based on client interface list,
    not server.
    minor
    
    fix typo
    expand error message
    skip redundant (and misleading) print of beacon address list
    Fix build for vxWorks 5.5.2
    rsrv: multicast name lookup
    rsrv: don't leak sockets when building tcp set
    rsrv: additional fallback for interface list
    expand beacon address list when binding to wildcard
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    rsrv: move some from req_server to rsrv_init
    rsrv: no lazy init of BUCKET
    rsrv: unglobalize IOC_sock
    rsrv: casr show multiple UDP clients
    remove global prsrv_cast_client
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    rsrv: better error msg when listen() fails
    rsrv: Register with dbServer API.
    rsrv: Use EPICS_CAS_INTF_ADDR_LIST in req_server
    
    Parse EPICS_CAS_INTF_ADDR_LIST into new ELLLIST casIntfAddrList.
    Display warning if contains more than one entry.
    Bind the TCP socket to the first address in this list.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    Fix: Call dbChannelDelete() when client connection is lost. [rsrv/caservertask.c]
    Improve output from Show routines.
    Make casr print the full channel name, not just the record name.
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed request and response bytes amount was revered in printf
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Latest gcc doesn't like variables named 'true'.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    db flush extra labor now returns void
    o fixed deadlock occurring when access security callback blocks for
    unresponsive client
    o made data conversion more standalone in the client library
    fixed some potential cleanup problems when there is insufficent
    memory to finish creating a new client
    Added rsrv statistics fetch for vxStats
    epicsStdioRedirect
    fixed problems with cleanup of partially created tcp client
    workaround for borland bcc weirdness
    new functions that fetch on behalf host name and user name
    new functions that fetch on behalf host name and user name
    ignore sigpipe and sigalrm
    fixed TCP and UDP information too close together in casr
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    moved udp deamon priority to below that of the beacon generator priority
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    Fixed/suppressed HP-UX (GNU) warnings
    thread safe socket error to string function
    suppress gnu warning
    fixed gnu warnings
    use new epicsSignal interface
    fixed SPARC alignment with ca put notify
    allow use of EPICS_CAS_SERVER_PORT
    Updated license comments.
    install a noop SIGPIPE handler
    fixed put notify shut down seq
    fixed another problem with multi-typed receive buffers
    improved memory management
    improved memory management
    fixed jumbo buffer memory management
    fix problems related to removing casts fro ellLib.h
    fixed warning
    fixed gnu warning and added priority to casr
    changed the way that thread priorities are computed
    better diagnostics
    better messages
    fixed gnu warnings
    large array changes
    osiTime=>epicsTime
    fixed spelling
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    errlogPrintf () is working correctly
    changed errlogPrintf to printf because errlogPrintf does not work
    fixed comment
    allow two servers on one host
    fixed SO_REUSEADDR WIN32 strangeness
    configure that WINSOCK is very different about SO_REUSEADDR
    removed synchronous DNS lockup vulnerability
    fixed Linux uses unsigned where int is used on other OS
    better message when request is too large
    use self relative priorities
    changes in thread priorities
    fixed priority polarization of event thread
    cleaned up thread names
    cleaned up thread names
    remove duplicate include
    improved bind failure messages
    improved bind failure messages
    enable socket option REUSEADDR to make debugging easier
    dont crash if this isrun before iocInit
    cosmetic
    Changes for win32 build.
    export casr; remove client_stat
    added ms keywords
    install rsrv.h
    changes to build on solaris and vxWorks
    made compatible with new version of cac
    use INVALID_SOCKET and new osi routines
    changes for building win32 dlls
    Reflect routine name change from threadSuspend() to threadSuspendSelf().
    many changes
    bsdSocketResource=>osiSockResource; extra arg for semXXXShow
    correct mistakes made in last set of changes
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for iocCore port
    dont supress ENOBUFs message
    return "no write access" when it is an SPC_NOMOD field
    merged changes from R3.13.1 patch branch
    fixed time overflow calc
    Include the next resource id allocated in casr diagnostic
    added sem diagnostic
    log number of no buf errors and print them in a diagnostic
    eliminated use of printErrono()
    cosmetic changes
    added use of db events flow control
    use free list lib
    PC arch changes
    better report
    added level arg to client_stat
    fetch the server's port number
    ssert => epicsAssert
    Added cvs Id keyword
    Ignore IOC_BUILD proto form old clients
    and make the beacon list global
    new env var
    updated for changes in bucketLib.c
    Integrating Jeff's 3.12 CA server
    quick disconnect changes
    access control changes
    access control mods
    *** empty log message ***
    added access control and put notify
    pointer => server id
    changed lstLib stuff to ellLib
    cycled through -Wall
    CA performance improvement
    added sccs id
    more statistics in client_stat()
    print nbytes on the free list in client_stat()
    better diagnostics
    substitute lstConcat() for lstExtract()
    suppress the client disconnect message
    *** empty log message ***
    V4/V5
    close socket if task create fails
    server handles client crash
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Unify rsrv socket errors, add missing error string
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rsrv: ignore CA client version older than v4.4
    
    RSRV ignore search and version messages
    from CA minor versions older than 4.
    rsrv: ignore echo and unexpected UDP
    
    Ignore UDP echo.
    By default, don't log unexpected/invalid
    UDP messages.
    Show UDP name server status in casr 2+ output
    rsrv: EPICS_CAS_IGNORE_ADDR_LIST
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    rsrv: casr show multiple UDP clients
    rsrv: more renaming
    rsrv: placeholder for cast_server thread shutdown
    rename prsrv_cast_client in cast_server()
    remove global prsrv_cast_client
    rsrv: when binding to a specific interface also bind to iface bcast
    
    An oddness of BSD sockets (not winsock) is that binding to
    INADDR_ANY will receive unicast and broadcast, but binding to
    a specific interface address receives only unicast.  The trick
    is to bind a second socket to the interface broadcast address,
    which will then receive only broadcasts.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    rsrv: Use casIntfAddrList in cast_server
    
    Remove re-parsing of EPICS_CA[S]_SERVER_PORT params.
    Bind the UDP socket to the first address in the list.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Handle SOCK_EINTR without generating warnings.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Remove duplicate taskwdInsert() call for the CAS-UDP task.
    use proper type for ioctl
    o fixed deadlock occurring when access security callback blocks for
    unresponsive client
    o made data conversion more standalone in the client library
    Added rsrv statistics fetch for vxStats
    new functions that fetch on behalf host name and user name
    fixed gnu warnings
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    removed junk
    moved udp deamon priority to below that of the beacon generator priority
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    suppress gnu warning
    suppress gnu warning
    suppress gnu warning
    suppress gnu warning
    fixed gnu warnings
    allow use of EPICS_CAS_SERVER_PORT
    Updated license comments.
    send version message to client if it is on a new protocol version
    large array changes
    supress purify warning
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    allow two servers to attach to the same udp port
    removed synchronous DNS lockup vulnerability
    fixed Linux uses unsigned where int is used on other OS
    use self relative priorities
    cleaned up thread names
    use INVALID_SOCKET to test socket() return
    improved bind failure messages
    improved bind failure messages
    enable socket option REUSEADDR to make debugging easier
    changes to build on solaris and vxWorks
    made compatible with new version of cac
    changes for building win32 dlls
    Reflect routine name change from threadSuspend() to threadSuspendSelf().
    many changes
    bsdSocketResource=>osiSockResource; extra arg for semXXXShow
    correct mistakes made in last set of changes
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for iocCore port
    dont supress ENOBUFs message
    merged changes from R3.13.1 patch branch
    reduced socket buffer size
    log number of no buf errors and print them in a diagnostic
    use ipAddrToA
    corrected use of INADDR_ANY
    eliminated use of printErrono()
    use ETHERNET_MAX_UDP for the recv buffer
    removed eventsoff flag
    use free list lib
    PC arch changes
    added level arg to client_stat
    If the IOC is out of memory allow them to connect if they stop
    some of the clients.
    use unsigned short for port
    keep trying
    ssert => epicsAssert
    Added cvs Id keyword
    new env var
    updated for changes in bucketLib.c
    Integrating Jeff's 3.12 CA server
    quick disconnect changes
    access control changes
    access control mods
    *** empty log message ***
    added access control and put notify
    *** empty log message ***
    pointer => server id
    changed lstLib stuff to ellLib
    cycled through -Wall
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    CA performance improvement
    added sccs id
    better diagnostics
    flush before changing cast client's addr
    *** empty log message ***
    MPDEBUG->CASDEBUG, init the ticks at client creation
    printf() -> logMsg()
    server handles client crash
    sun4 support added
    changed taskParams to task_params
    ANL/LANL integration
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    rsrv: Fix include list for Windows builds
    
    For some reason epicsExport.h doesn't work here, we have to
    explicitly define epicsExportSharedSymbols and them pull in
    epicsExport.h separately later. Must be something to do with
    the #undef and redef that goes on in server.h
    rsrv: epicsExport.h is last import
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    quiet some warnings
    Remove EPICS Base submodules
    Move all under modules/database
    Unify rsrv socket errors, add missing error string
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rsrv: unnecessary use of global
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Moved new variable definitions to the beginning of their block.
    Older C compilers such as vxWorks 5.x insist on this.
    Add CA message header size optimisation.
    
    If a packet is sufficiently small it can be worth the small
    optimisation of saving the 8 bytes in a large packet header.
    Drive-by refactoring in caserverio.c
    
    Minor refactoring of code block in cas_copy_in_header() to gather
    common header code.
    Update rsrv to support V4.13 protocol extension.
    
    The rsrv server is updated in this commit to deliver variable sized
    waveforms in response to a zero length request, implementing an
    extension to the v4 EPICS protocol tied to minor version 13.
    
    The core of the changes are in read_reply, rsrv/camessage.c, which first
    reserves packet space for the largest possible response, but then resizes
    the packet according to how much data is actually returned from the
    database.
    Remove duplicate typedef to which gcc objected.
    partial fix for mantis entry 160 - the following message is avoided by
    shutting down the socket only if we are not certain if the errno is indicating that
    the circuit hung up.
    
    rsrv: socket shutdown error was Transport endpoint is not connected
    new functions that fetch on behalf host name and user name
    fixed enobuf causes stuck send thread
    dont print message or wakeup receive thread from send thread
     if its a receive thread initiated shutdown
    clean up better if we receive disconnect notification when sending
    fixed gnu warnings
    hybernate send threads when there are enobuf problems
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    changed name of R3.14 ca client status
    return ECA_ style error so that better diagnostics percolate up to client
    Updated license comments.
    send version message to client if it is on a new protocol version
    zero out pad bytes (supress purify warning)
    code clarity
    restart interrupted system call
    cosmetic
    restart sendto system call if it is interrupted
    fixed sun pro warnings
    large array changes
    osiTime=>epicsTime
    removed synchronous DNS lockup vulnerability
    modernized the code to avoid any possibility of integer overflow
    include net_convert.h again so that byte swaps will run on WIN32
    changes to build on solaris and vxWorks
    made compatible with new version of cac
    changes for building win32 dlls
    many changes
    bsdSocketResource=>osiSockResource; extra arg for semXXXShow
    replace osiClock calls with tsStamp calls
    changes for iocCore port
    changed the field name "m_type" to "m_dataType" to avoid
    collision with a MACRO that is defined by the SENS IP stack
    which is mandatory in WRS's Tornado II product.
    dont supress ENOBUFs message
    merged changes from R3.13.1 patch branch
    log number of no buf errors and print them in a diagnostic
    use ipAddrToA
    use free list lib
    better message
    installed WIN32/Makefile.Host
    PC arch changes
    better report
    many r3.13 changes
    dont quit if client unreachable
    Fix alignment problem found by purify
    Added cvs Id keyword
    Integrating Jeff's 3.12 CA server
    quick disconnect changes
    *** empty log message ***
    added access control and put notify
    changed lstLib stuff to ellLib
    cycled through -Wall
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    CA performance improvement
    added sccs id
    better diagnostic
    better diagnostics
    better diagnostics
    *** empty log message ***
    MPDEBUG -> CASDEBUG
    server handles client crash
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    rsrv: Register with dbServer API.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    Added rsrv statistics fetch for vxStats
    new functions that fetch on behalf host name and user name
    Updated license comments.
    export casr; remove client_stat
    added ms keywords
    install rsrv.h
    Remove EPICS Base submodules
    Move all under modules/database
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Unify rsrv socket errors, add missing error string
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Add a ca: prefix to RSRV's identity string
    rsrv: Register with dbServer API.
    rsrv: Use osiSockIoctl_t
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    convert size_t to u long and use %lu for 64 bit arch
    avoid ioctl on closed socket during client rundown
    new functions that fetch on behalf host name and user name
    new functions that fetch on behalf host name and user name
    new functions that fetch on behalf host name and user name
    hybernate receive threads when there are enobuf problems
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    suppress gnu warning
    return ECA_ style error so that better diagnostics percolate up to client
    Updated license comments.
    send version message to client if it is on a new protocol version
    use proper format
    send server's minor version to client during connect sequence
    code clarity
    large array changes
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    removed synchronous DNS lockup vulnerability
    no message
    better message when request is too large
    cosmetic
    minor optimization
    changes to build on solaris and vxWorks
    made compatible with new version of cac
    changes for building win32 dlls
    many changes
    bsdSocketResource=>osiSockResource; extra arg for semXXXShow
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for iocCore port
    merged changes from R3.13.1 patch branch
    fixed warning
    reduced socket buffer size
    use ipAddrToA
    nit
    use matching buffer sizes
    use free list lib
    PC arch changes
    better report
    added level arg to client_stat
    sizeof A => sizeof(A)
    Added cvs Id keyword
    updated for changes in bucketLib.c
    added access control and put notify
    changed lstLib stuff to ellLib
    cycled through -Wall
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    CA performance improvement
    added static to sccsId
    added sccs id
    disconnect on message alignment problems
    better diagnostics
    suppress the nill msg disconnect message
    *** empty log message ***
     MPDEBUG -> CASDEBUG
    *** empty log message ***
    server handles client crash
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    as,rsrv: use real client IP instead of untrusted host name
    rsrv: avoid redundant getpeername()
    
    also do some extra, and redundant checks,
    on accepted sockets.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rsrv: optional max_array_bytes
    
    use of large array free list is optional
    rsrv: support larger than max. array bytes
    Show UDP name server status in casr 2+ output
    rsrv: EPICS_CAS_IGNORE_ADDR_LIST
    rsrv: multicast name lookup
    expand beacon address list when binding to wildcard
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    rsrv: no lazy init of BUCKET
    rsrv: unglobalize IOC_sock
    rsrv: casr show multiple UDP clients
    remove global prsrv_cast_client
    rsrv: when binding to a specific interface also bind to iface bcast
    
    An oddness of BSD sockets (not winsock) is that binding to
    INADDR_ANY will receive unicast and broadcast, but binding to
    a specific interface address receives only unicast.  The trick
    is to bind a second socket to the interface broadcast address,
    which will then receive only broadcasts.
    rsrv: Use EPICS_CAS_INTF_ADDR_LIST in req_server
    
    Parse EPICS_CAS_INTF_ADDR_LIST into new ELLLIST casIntfAddrList.
    Display warning if contains more than one entry.
    Bind the TCP socket to the first address in this list.
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Update rsrv to support V4.13 protocol extension.
    
    The rsrv server is updated in this commit to deliver variable sized
    waveforms in response to a zero length request, implementing an
    extension to the v4 EPICS protocol tied to minor version 13.
    
    The core of the changes are in read_reply, rsrv/camessage.c, which first
    reserves packet space for the largest possible response, but then resizes
    the packet according to how much data is actually returned from the
    database.
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    fix for mantis 296
    o fixed deadlock occurring when access security callback blocks for
    unresponsive client
    o made data conversion more standalone in the client library
    Added rsrv statistics fetch for vxStats
    new functions that fetch on behalf host name and user name
    suppress gnu warning
    suppress gnu warning
    fixed gnu warnings
    fixed SPARC alignment with ca put notify
    Updated license comments.
    send version message to client if it is on a new protocol version
    fixed put notify shut down seq
    dbNotify API changes
    PUTNOTIFY => putNotify
    removed pool status external
    detect beacons duplicated by redundant routes
    fixed spurious "server memory exhausted" message
    added priority field
    large array changes
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    use epicsAssert
    export casr; remove client_stat
    install rsrv.h
    made compatible with new version of cac
    changes for building win32 dlls
    many changes
    semId => semBinaryId and semMutexId
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for iocCore port
    dont supress ENOBUFs message
    return "no write access" when it is an SPC_NOMOD field
    removed prototype
    Include the next resource id allocated in casr diagnostic
    log number of no buf errors and print them in a diagnostic
    comment
    removed eventsoff flag
    use free list lib
    PC arch changes
    better report
    added level arg to client_stat
    many r3.13 changes
    If the IOC is out of memory allow them to connect if they stop
    some of the clients.
    use unsigned short for port
    force double alignment of the protocol buffer
    ssert => epicsAssert
    Added cvs Id keyword
    Ignore IOC_BUILD proto form old clients
    and make the beacon list global
    updated for changes in bucketLib.c
    added S_db_Pending
    Integrating Jeff's 3.12 CA server
    quick disconnect changes
    access control mods
    *** empty log message ***
    added access control and put notify
    pointer => server id
    changed lstLib stuff to ellLib
    cycled through -Wall
    CA performance improvement
    added sccs id
    dont allow flow control to turn off gets & added new routine cac_send_heartbeat() which so far is not called
    *** empty log message ***
    MPDEBUG->CASDEBUG
    server handles client crash
    sun4 support added
    ANL/LANL integration
    put spc before '\' for gnu cc
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Make rsrv register itself using a DBD file
    
    This allows the rsrv to be excluded by removing 'include rsrv.dbd'
    from a local copy of the base.dbd file.
    Server initialization, running and pausing are moved to new
    methods of the dbServer object, and the existing registration
    path is converted to just use the new rsrv.dbd file.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changed LIBSRCS to LIB_SRCS.
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    Added win32 resource file.
    install rsrv.h
    removed unused -Ds
    made compatible with new version of cac
    latest build rules
    many changes
    changes for build
    new way to build
    changes for iocCore port
    LIBRARY definition change for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    rsrv: suppress repeated UDP error messages
    Remove EPICS Base submodules
    Move all under modules/database
    Unify rsrv socket errors, add missing error string
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rsrv: beaconCounter not updated
    expand beacon address list when binding to wildcard
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    rsrv: UDP listener on more than one iface
    rsrv: when binding to a specific interface also bind to iface bcast
    
    An oddness of BSD sockets (not winsock) is that binding to
    INADDR_ANY will receive unicast and broadcast, but binding to
    a specific interface address receives only unicast.  The trick
    is to bind a second socket to the interface broadcast address,
    which will then receive only broadcasts.
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    committed a fix for mantis 302
    Latest gcc doesn't like variables named 'true'.
    Added iocBuild, iocPause and iocRun commands.
    These are mainly for redundant IOCs, but may be useful elsewhere.
    iocBuild prepares the IOC and freezes it just before it goes live.
    A subsequent iocRun kicks it into life, or restarts it when paused.
    iocPause freezes all scan tasks and disconnects the server.
    o fixed deadlock occurring when access security callback blocks for
    unresponsive client
    o made data conversion more standalone in the client library
    INADD_NONE:<repeater port> based UDP "disconnect"
    try INADD_NONE:0 based UDP "disconnect" on various OS
    try INADD_NONE based UDP "disconnect" on various OS
    oops c++ comment in c code
    UDP disconnect to INADDR_LOOPBACK and port 0 because
    a UDP connect to AF_UNSPEC only works with modern IP kernel
    use connect to AF_UNSPEC to not allow incomming messages to beacon sock
    shutdown read side of online notify socket
    o fixed errno based diagnostic converting errno to string after errno was replaced
    new functions that fetch on behalf host name and user name
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    moved udp deamon priority to below that of the beacon generator priority
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    suppress gnu warning
    fixed gnu warnings
    made configuration more like portable server
    Updated license comments.
    removed poll of memFindMax()
    detect beacons duplicated by redundant routes
    fixed spurious "server memory exhausted" message
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    dont allow strange ports in the beacon addr list
    removed synchronous DNS lockup vulnerability
    fixed Linux uses unsigned where int is used on other OS
    init sufficent space in pool global sooner
    cosmetic
    removed test message
    changes to build on solaris and vxWorks
    made compatible with new version of cac
    use INVALID_SOCKET and new osi routines
    changes for building win32 dlls
    Reflect routine name change from threadSuspend() to threadSuspendSelf().
    many changes
    eliminate multiply when delay=maxdelay
    correct mistakes made in last set of changes
    replace osiClock calls with tsStamp calls
    changes for iocCore port
    In this revision I no longer include the interface's IP address inside
    the beacon message because it is difficult to predict which interface
    will be used ahead of time, and because any beacon redirect
    servers in use can always reassign the appropriate field in the
    beacon message to the effective IP address.
    merged changes from R3.13.1 patch branch
    corrected use of INADDR_ANY
    increased min and also max beacon period
    send server port with beacon
    use free list lib
    many r3.13 changes
    fixed compile faill resulting from union member name change
    If the IOC is out of memory allow them to connect if they stop
    some of the clients.
    use unsigned short for port
    ssert => epicsAssert
    Added cvs Id keyword
    Ignore IOC_BUILD proto form old clients
    and make the beacon list global
    new env var
    EPICS_CA_SEARCH_ADDR_LIST => EPICS_CA_ADDR_LIST
    Integrating Jeff's 3.12 CA server
    quick disconnect changes
    access control changes
    *** empty log message ***
    added access control and put notify
    accomodate changes in module_types.h
    cycled through -Wall
    CA performance improvement
    added static to sccsId
    added sccs id
    better diagnostics
    new args in local_addr() and broadcast_addr()
    sun4 support added
    changed taskParams to task_params
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    rsrv: improve monitor/get error message
    as-hostname address review comments
    as,rsrv: use real client IP instead of untrusted host name
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/rsrv: fix C89 issue
    Resolve additional cppcheck issues; fix iOS build
    rsrv: remove !CA_V44() code
    
    Remove code supporting deprecated
    CA minor versions < 3
    rsrv: no ca exception response to UDP
    rsrv: ignore CA client version older than v4.4
    
    RSRV ignore search and version messages
    from CA minor versions older than 4.
    rsrv: send channel create failure
    rsrv: UDP search ignore DOREPLY
    
    Don't send notice of failure
    for lookup via. UDP.
    rsrv: ignore echo and unexpected UDP
    
    Ignore UDP echo.
    By default, don't log unexpected/invalid
    UDP messages.
    rsrv: no lazy init of BUCKET
    remove global prsrv_cast_client
    Fix type problem with local CA channels
    
    This commit fixes a problem introduced in Bazaar commit 12658.
    Local CA channels were seeing the data type of a channel as an
    IOC-specific (dbFldTypes.h) type value instead of the CA type
    value from db_access.h.
    
    We introduce a pair of dbChannel*CAType() macros which convert
    the dbChannel's dbr_field_type and final_type values into the
    CA equivalent type values, and use these macros whenever the
    CA encoded field type value is needed. This ensures that the
    meaning of the dbChannel member fields never changes (in 3.14
    the addr.dbr_field_type was overwritten with the converted
    value when connected to by rsrv).
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    ioc: Fix more MSVC 12.0 warnings
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Add context qualifier to db_field_log, support plugins for CA read operations
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    fix camessage
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    neglected to unlock on error return path
    Moved new variable definitions to the beginning of their block.
    Older C compilers such as vxWorks 5.x insist on this.
    Guard memset in camessage.c to prevent wild memory overrun if mismatch
    between payload and data size.
    Update rsrv to support V4.13 protocol extension.
    
    The rsrv server is updated in this commit to deliver variable sized
    waveforms in response to a zero length request, implementing an
    extension to the v4 EPICS protocol tied to minor version 13.
    
    The core of the changes are in read_reply, rsrv/camessage.c, which first
    reserves packet space for the largest possible response, but then resizes
    the packet according to how much data is actually returned from the
    database.
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    ANSIfication of stuff (mostly missing argument types in declarations)
    removed inadvertent ! at beginning of line in if statement
    additional changes for the mantis 296 pach
    fix for mantis entry 300:
    'assert (size <= ntohs ( pMsg->m_postsize ))' failed in ..caserverio.c line 344
    fix for mantis 296
    db flush extra labor now returns void
    Remove duplicate typedef to which gcc objected.
    o fixed deadlock occurring when access security callback blocks for
    unresponsive client
    o made data conversion more standalone in the client library
    Added rsrv statistics fetch for vxStats
    added AS write trap for put callback
    disconnect servers that send missaligned protocol
    disconnect clients that send missaligned protocol
    new functions that fetch on behalf host name and user name
    fixed gnu warnings
    fixed sun pro warning message
    changed name of protocol command
    putNotifyBlocked no longer necessary
    distinguish between db status and other types
    fixed SPARC alignment with ca put notify
    return ECA_ style error so that better diagnostics percolate up to client
    Updated license comments.
    send version message to client if it is on a new protocol version
    fixed race condition occuring when a put notify is canceled by a ca clear channel
    at the same instant that it completes
    removed junk
    fixed put notify shut down seq
    dbNotify API changes
    fixed problem with improper drain of messages that will not fit
    PUTNOTIFY => putNotify
    improved memory management
    improved memory management
    improved memory management
    tack change in dbEvent interface (now new events are initially disabled)
    store the priority for use in casr
    fixed gnu warning
    change priority of client when recinving the version request
    cosmetic
    reduce the number of error constants in use
    better diagnostics
    better messages
    fixed gnu warnings
    fixed gnu warnings
    fixed undefined symbol on Solaris
    large array changes
    osiTime=>epicsTime
    replace osiSem with epicsMutex and/or epicsEvent
    implement asTrapWrite
    removed synchronous DNS lockup vulnerability
    use epicsAssert
    more diagnostics when we run low on pool
    fixed improper logic when we run out of memory
    fixed improper test for message too large
    better message when request is too large
    cosmetic
    asLib.h no longer needed
    include net_convert.h again so that byte swaps will run on WIN32
    improved samnity checking for search/claim requests
    Fix test for PV name termination.
    changes to build on solaris and vxWorks
    made compatible with new version of cac
    changes for building win32 dlls
    many changes
    bsdSocketResource=>osiSockResource; extra arg for semXXXShow
    correct mistakes made in last set of changes
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for iocCore port
    dont send exception message if bad request received over UDP
    Moved vxWorks.h include to top.
    changed the field name "m_type" to "m_dataType" to avoid
    collision with a MACRO that is defined by the SENS IP stack
    which is mandatory in WRS's Tornado II product.
    return "no write access" when it is an SPC_NOMOD field
    Moved ifdef to get camessage.c to build.
    merged changes from R3.13.1 patch branch
    Include the next resource id allocated in casr diagnostic
    improved message
    use proper net byte order for exception reflect
    send server port with beacon
    moved flow control to db event module
    use free list lib
    PC arch changes
    added level arg to client_stat
    many r3.13 changes
    If the IOC is out of memory allow them to connect if they stop
    some of the clients.
    added arch independent type
    dont reuse res id
    dont send exception msg to all serach requests when the server
    runs out of memory (send exception resp only in reply to search
    requests that find a match)
    init unintialized (and unused) fields in the protocol
    ssert => epicsAssert
    Ignore IOC_BUILD proto form old clients
    and make the beacon list global
    dont alloc chan in response to search message
    updated for changes in bucketLib.c
    handle pend status from dbPutNotify()
    flush send after every put notify
    dont send out of memory exception in reply to search requests that
            dont have a matching channel name
    Integrating Jeff's 3.12 CA server
    quick disconnect changes
    access control changes
    access control mods
    *** empty log message ***
    added access control and put notify
    *** empty log message ***
    events on action now a subroutine
    pointer => server id
    changed lstLib stuff to ellLib
    cycled through -Wall
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    CA performance improvement
    added static to sccsId
    added sccs id
    dont allow flow control to turn off gets & added new routine cac_send_heartbeat() which so far is not called
    If there is no memory to attach a monitor- dont use it
    disconnect on bad message
    use lstFind to verify channel (not hand written loop)
    checked back in to restore lost changes
    better diagnostics
    retry
    verify channel before delete (catch corrupt client)
    *** empty log message ***
    MPDEBUG -> CASDEBUG, db_post_single_event replaces read_reply() one place
    server handles client crash
    sun4 support added
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    add extern for C callable routines
    more changes for creating dlls
    Added epicsShare API for win32 build.
    moved include from base/include; .ascii => .db
    Changes for replacing default.dctsdr by all ascii files
    Channel Access changes from Jeff Hill.
    moved some files into new errSymLib.c
    put away working version
    cleanup
    initial version
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Change paths for tools from this module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix Windows builds
    
    The windows shell doesn't like commands that start ../
    Those commands are all found using TOOLS, so by making that
    an absolute path we fix that problem.
    However GNUmake doesn't recognize targets with relative paths
    as being the same as their absolute path, so we have to fix up
    some places that were using TOOLS in dependencies.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Moved SLOPE to before LINEAR, just in case any apps rely on the first
    breakpoint table being LINEAR+1 (unlikely, but possible).  This also
    deliberately breaks any apps that haven't converted to using constants
    defined in the generated menu*.h files.
    Added SLOPE conversion type, for manual entry of ESLO and EOFF values.
    extension .db changed to .dbd
    moved include from base/include; .ascii => .db
    Changes for replacing default.dctsdr by all ascii files
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Introduce the .dbd.pod extension
    
    Rules to convert to .html and .dbd
    Rename existing files
    Fix various build rules to match.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changed $(MAKEBPT) to $(TOOLS)/makeBpt$(HOSTEXE) to fix win32-x86 build.
    Remove comment line.
    Executed host tools should be from EPICS_BASE_HOST_BIN directory.
    Change for win32 builds.
    Changes for GNU make -j option (multiple jobs).
    Updated license comments.
    Removed dependency on dbStaticLib (only actually used for the definition
    of struct brkInt found in dbBase.h), replaced float with double.
    Changes to automatically generate header file dependancies
    Changes to create vxWorks archive libraries and prods.
    Modified depends rules
    Renamed BPTS to DBD and MENUS to DBDINC
    changes for building win32 dlls
    BPTS now created in install directory.
    latest build rules
    changes for build
    Changes for dll build.
    Changed LIB to LIBRARY.
    new way to build
    new way to build
    use new HOSTEXE extension
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Changes for replacing default.dctsdr by all ascii files
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc: Fix more MSVC 12.0 warnings
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix bad string handling in makeBpt.
    This behaved badly when confronted with windows CR+LF end of lines.
    Using fgets() left a stray CR at the end of the returned string.
    printf warning
    fix indentation and add missing calloc checks
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Fix gcc warnings.
    Fixed/suppressed HP-UX (GNU) warnings
    Updated license comments.
    Removed dependency on dbStaticLib (only actually used for the definition
    of struct brkInt found in dbBase.h), replaced float with double.
    changes for building win32 dlls
    Added output file name as an optional command line param.
    define storage for pdbbase
    get rid of warnimng messages
    extension .db changed to .dbd
    moved include from base/include; .ascii => .db
    Make output file appear in directory in which makeBpt is executed
    Changes for replacing default.dctsdr by all ascii files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    use iocshSetError()
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    dbtools: Added command-line variable parameters.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Document -D option to msi
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    dbLoadTemplate.h missing extern "C"
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    dbtools: Added command-line variable parameters.
    dbtools: Source code clean-up, code layout changes only.
    Updated license comments.
    Changes for win32 build.
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix warnings from dbmfStrdup() change
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    dbtools: Added command-line variable parameters.
    dbtools: Source code clean-up, code layout changes only.
    Ok, so we should allow / and \ in bareword...
    Removed a whole load of unnecessary characters from bareword, which now
    matches the dbStaticLib parser's definition.
    Fixed lex & yacc parsers for dbLoadTemplate() - this is now stricter in what
    it will accept, but any rejected characters weren't legal before anyway.
    Don't need action for characters which are silently consumed.
    Clean up several problems with lexical analyzer.
    Clean up warnings.
    Use new xxStrdup() functions.
    Cleanup compiler warnings due to our using 8-bit lexers.
    Allow quoted strings to contain any ascii character
    Replace dbVarSub with macLib.
    Allow C style escape sequences
    Fix long vx memory free list problem
    Fix most compiler warning messages
    Changed these to use the dbmf library for malloc/free of buffers
    Allow for ~ in both pv name and value.
    updated to use the new db format without the database() section
    added several characters to the list of valid input characters
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    dbtools: shuffle files towards a reasonable layout, keep test files in test dir
    Changed LIBSRCS to LIB_SRCS.
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to automatically generate header file dependancies
    Changes to create vxWorks archive libraries and prods.
    Modified depends rules
    Added win32 resource file.
    Updated dll libs.
    Added dbLoadTemplate.h dependancy.
    Changes for win32 build.
    latest build rules
    Added HTMLS.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    dbtools: Added another possibility for pattern_substitutions rule.
    Implemented "global" variables in substitution files.
    
    Rewrote the YACC grammar, with help from Benjamin Franksen in formally
    defining the substitution file format in EBNF.  This version also
    changes the way in which variables are added to the sub_collect
    string; previously it appended a ',' after every entry, and removed it
    off the end before calling dbLoadRecords(), but now we put the ',' at
    the beginning of each entry, and just offer dbLoadRecords() the string
    starting at the second character (not that this really matters, macLib
    will quite happily ignore either a leading or a trailing comma in the
    variable definition string).
    
    We now warn if there are substitution values for which we have no
    name, or if the file uses the deprecated syntax which permitted a
    bareword token in front of the variable substitution or pattern
    definition braces.
    dbtools: Added command-line variable parameters.
    dbtools: Source code clean-up, code layout changes only.
    Memory allocation checks.
    Fixed lex & yacc parsers for dbLoadTemplate() - this is now stricter in what
    it will accept, but any rejected characters weren't legal before anyway.
    Clean up several problems with lexical analyzer.
    Clean up warnings.
    s/unistd.h/osiUnistd.h/
    Include unistd.h to remove warning.
    Fix file stmt without quotes.
    Allow quoted filenames, needed if they contain any ${ENVMACRO}s
    Updated license comments.
    include not needed
    unistd.h not available on winXX
    include unistd.h
    include dbAccess.h instead of defining dbLoadRecords
    Changes for win32 build.
    Fixed typo.
    Tornado II defines _WIN32 ????
    allow empty template
    changes for 3.14
    removed subtool
    Add some includes to get rid of some warning messages
    win32 keyword change
    suppress warning message for unexpanded macros.
    incremented var_count too quickly
    Increase buffer size to 5000 bytes
    include getopt.h only on win32
    added getopt prototype (for NT)
    Replace dbVarSub with macLib.
    Allow C style escape sequences
    Fix long vx memory free list problem
    Fix most compiler warning messages
    Changed these to use the dbmf library for malloc/free of buffers
    Include stdlib.h.
    reset line number at start of routines
    Changed the error message
    added ability to include files without substitution in the pattern file.
    updated to use the new db format without the database() section
    Put static on sub_it() definition.
    Fix for a problem I believe is about quotes in patternsin dbInitSubs().
    Added some debug code.
    Renamed version.h to epicsVersion.h
    Removed rec/ from dbCommon.h include. (rec directory moved).
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    asCa.c normalize indentation
    
    whitespace only
    Revert "asCaStop() join worker thread"
    
    This reverts commit afc31f2f064974e97ef61a9dc6cc58692a1b0a5f.
    
    # Conflicts:
    #       modules/database/src/ioc/as/asCa.c
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    asCaStop() join worker thread
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Reordered include lines for windows dll build.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Expand READONLY macro, deprecate.
    Added ascaStats(), for Mantis #281.
    epicsStdioRedirect
    char => const char
    ascar is new
    check for access security not started
    changes to make things build
    add ascar
    make sure now events are missed
    Updated license comments.
    changed the API for CA context manipulation
    non need to specify hash table size
    possibly bad guess for the number of channels
    remove test statements accidently left in code
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    better exception handler messages
    revert to using ca_task_initialize
    change to be like dbca
    include db_access.h
    changes for building win32 dlls
    more changes for creating dlls
    semId => semBinaryId and semMutexId
    changes for osiSem changes
    add ca exception handler
    added keywords from shareLib.h
    changes for 3.14
    make it a little more robust against ca problems
    replace SEVCHK by checking return status
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    fix compiler warning messages
    ca_build_and_connect changed to ca_search_and_connect
    removed calink
    removed include of calink.h
    Modified astac to display record name
    still original version
    Still Original version
    Still initil version
    Still original version
    Still version 0
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup some of the more obscure gcc warnings.
    Improve error checking and messages from AS file parser.
    epicsStdioRedirect
    Updated license comments.
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    Add include for string.h
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    Still version 0
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    missing includes
    
    Need definition of FILE
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    asShutdown
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    char => const char
    Added versions of the dump routines that write to an arbitrary file
    pointer instead of stdout.
    Updated license comments.
    add extern for C callable routines
    add decorated names to astac
    better separation on code
    fixed problem with win32 dll keywords
    changes for building win32 dlls
    changes so that db doesnt depend on as; as on rec
    Moved asDbLib.h and asLib.h to src/include.
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    Moved include files from base/include
    Added so that individual files dont have to have long notice
    Still version 0
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    iocsh: add usage messages
    use iocshSetError()
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Reordered include lines for windows dll build.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Remove most dbDump commands because there are already other commands
    that call them.
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    clean up and include epicsStdio.h
    remove vardefs; use variable definition instead
    for asCaDebug change & to p
    for variable type is void * const
    gret rid of dead code
    add ascar
    Updated license comments.
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    Make ioccrf argument lists constant.
    Add std namespace to ioccrf.cpp.
    Big changes to ioccrf routines.
    1) Switched from using the registry to using a C++ map.  This provides
       an easy way to add...
    2) A help command.  With no arguments, this command prints a table of
       commands.  With arguments it prints a synopsis of the specified
       command(s).
    3) ioccrf() is now thread-safe with plans to add multiple remote
       access via telnet.  The value pointers have been removed from the
       argument structures and a pointer to an array of argument unions is
       passed to the registered callback routines.
    4) All command/argument configuration structures are now const.
    add astac, dbtpn, threadSleep
    fixed DLL keyword related problems
    move location on include ioccrf
    fixed some of the DLL export problems
    correct name
    add static where appropriate
    implement many more function calls
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    astac argument checks
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    asShutdown
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Replaced dbAddr with dbChannel in all CA-server related code
     * Routines with a db_access interface are named dbChannel_xxx
     * Using dbch for member variable names in Jeff's code
    
    It seems to work!
    
    TODO: Make dbChannel use a freelist
    Reordered include lines for windows dll build.
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    void *asp => struct *.
    Removed some casts and cleaned up 'type-punned pointer' warnings.
    epicsStdioRedirect
    char => const char
    more changes for allowing FILE *fp for diagnostics
    Added versions of the dump routines that write to an arbitrary file
    pointer instead of stdout.
    Bugfix: non-vxWorks OSs must copy string command line args
    Updated license comments.
    use CA server high for priority offset
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    add decorated names to astac
    better separation on code
    use threadOnce
    add epicsShareAPI to asInit
    changes for building win32 dlls
    more changes for creating dlls
    changes so that db doesnt depend on as; as on rec
    get rid of warning; get rid of threadDestroy
    changes for 3.14
    better error message if asInit fails
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    fix compiler warning messages
    changed recdes to recordType
    Modified astac to display record name
    If asSetFilename has been called and asInit fails make sure error returned
    change pdbBase to pdbbase
    Changes for replacing default.dctsdr bu all ascii files
    If asSetFilename is given NULL argument then next call to asInit turns off access security.
    Allow character '-' in pvnames.
    Still Original version
    Still initil version
    Still original version
    Still version 0
     Still on initial implementation
    First working version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    missing includes
    
    Need definition of FILE
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Removed all epicsShareAPI attributes from src/ioc.
    
    There were none at all in src/std.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added ascaStats(), for Mantis #281.
    ascar is new
    changes to make things build
    add ascar
    Updated license comments.
    made compatible with C++ test codes in mrkSoftTest
    changes for building win32 dlls
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add missing link libraries
    ioc/as: dbCore needs ca
    Removed dbStaticHost library.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Replaced .o with $(OBJ).
    Fix dependencies.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    use const char
    asTrapWrite aslo belongs to LIB_SRCS
    fix for old config rules
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to automatically generate header file dependancies
    Changes to create vxWorks archive libraries and prods.
    Depends change.
    Modified depends rules
    Added dependancy for asLib.h.
    needs dependency
    implement asTrapWrite
    Added win32 resource files.
    fixed DLL keyword related problems
    link with the db library
    Updated dll libs.
    changes for building win32 dlls
    changes so that db doesnt depend on as; as on rec
    latest build rules
    Removed comment.
    changes for build
    Changes for dll build.
    ascheck_LIBS => PROD_LIBS
    Converted to new build method.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Remove duplicate MBA template files
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Move the perl client scripts into a new caPerlApp template
    template: add circle.db to exampleApp for pdbGroup
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    update template
    
    use waveform as long string
    use app. name in header and macro name
    update example template
    add version header to example template
    templates: Unify PV name prefixes, remove "Host"
    
    The difference between host IOCs and embedded ones does not
    justify having a different prefix.
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup, fix an issue reported by Kazuro Furukawa.
    Added creation of ioc/dllPath.bat for Win32 IOCs.
    Added initTrace command to exampleApp, registers a verbose initHook.
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Renamed CONFIG_APP to CONFIG_SITE.
    Added nfsCommands@RTEMS.
    Added example code that registers a new iocsh command.
    Added st.cmd@Cross files for cross builds.
    The <appname>Include.dbd file is no longer needed.
    Moved wildcards from unnecessary file configure/RULES.iocBoot to iocBoot/Makefile
    Removed vlinac, not really a template.
    Simplify virtual-linac build procedure.  Sequence programs are now enabled
    simply by adding a SNCSEQ entry to configure/RELEASE.
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    Removed sioc scripts.
    Tidying up various things:
    
    Made the support library contain only the xxxRecord and device support,
    then renamed _APPNAME_Support.dbd to xxxSupport.dbd to reflect this.
    Actually I should rename the library to libxxxSupport, but I didn't yet.
    
    Now we link the dbSubExample.o code directly to the application,
    renamed the registrar routine inside this to mySubRegistrar,
    and also moved the registrar() dbd entry into _APPNAME_Include.dbd.
    make clear distinction between support and ioc apps
    Moved base.dbd from both makeBaseApp templates into src/misc.
    An application only needs a copy if it wants to remove stuff.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Removed complex C++ registration of subroutines,
    replaced by function() statments in .dbd file.
    add dbSubExample
    Changed SCRIPTS to SCRIPTS_HOST.
    make exampleMain a .cpp file
    Added RTEMS template files.
    Changes to create vxWorks archive libraries and prods.
    Modifications to support architecture-specific template files.
    Changed seq file from .st to .stt.
    Remove RULES.registerRecordDeviceDriver and RULES.Db
    makeDbDepends.pl and makeIocCdCommands.pl moved to base/configure/tools
    remove threadInit; add caMonitor.c
    The exampleApp now has one src directory.
    changes for iocsh
    vxSrc => iocSrc
    change example for iocCore on host
    changes so that example works on vxWorks
    Converted to new build method.
    new way to build
    new way to build
    More changes for R3.14.
    changes for 3.14
    changes for 3.14
    new version using templates
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Changes for replacing default.dctsdr by all ascii files
    New file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Better Makefile for makeBaseApp top dir
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove lower-case paths, they break apps on Win32.
    Added *App and *app as DEPEND_DIRS for iocBoot and iocboot.
    Changes for GNU make -j option (multiple jobs).
    Added wildcard for ioc boot dirs.
    Fix to prevent dirs showing up multiple times when matching multiple wildcards
    changes for 3.14
    changes for 3.14
    Changes to automatically generate CONFIG_APP definitions.
    Still changing
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fix to prevent dirs showing up multiple times when matching multiple wildcards
    The exampleApp now has one src directory.
    Dir vxSrc replaced by iocSrc.
    change example for iocCore on host
    changes for 3.14
    Still working of bessy changes
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Tidying up various things:
    
    Made the support library contain only the xxxRecord and device support,
    then renamed _APPNAME_Support.dbd to xxxSupport.dbd to reflect this.
    Actually I should rename the library to libxxxSupport, but I didn't yet.
    
    Now we link the dbSubExample.o code directly to the application,
    renamed the registrar routine inside this to mySubRegistrar,
    and also moved the registrar() dbd entry into _APPNAME_Include.dbd.
    make clear distinction between support and ioc apps
    function replaced by registrar
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Removed complex C++ registration of subroutines,
    replaced by function() statments in .dbd file.
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    template: fix compiler warning in dev...Version.c
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix xxxRecord in templates to make exampleApp work
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Need epicsMath.h to use epicsNAN.
    Changed get_alarm_double() behaviour in analog records to return epicsNAN for limits with NO_ALARM severity
    Rename pxxx -> prec in xxxRecord.c
    changes for epicsExport
    Make rec, softDev, and testDev libs shared.
    change alarm to checkAlarms
    changes for 3.14
    changtes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    update template
    
    use waveform as long string
    use app. name in header and macro name
    add version header to example template
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added example code that registers a new iocsh command.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added the aSub record type, derived from Andy Foster's genSub.
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    Added a debug variable to the example mySub routines,
    making this settable from the ioc shell.
    Tidying up various things:
    
    Made the support library contain only the xxxRecord and device support,
    then renamed _APPNAME_Support.dbd to xxxSupport.dbd to reflect this.
    Actually I should rename the library to libxxxSupport, but I didn't yet.
    
    Now we link the dbSubExample.o code directly to the application,
    renamed the registrar routine inside this to mySubRegistrar,
    and also moved the registrar() dbd entry into _APPNAME_Include.dbd.
    mySub can be static
    changes for epicsExport
    fix epicsShare decoration
    changes for new build rules
    use NELEMENTS instead of registryFunction.h
    function replaced by registrar
    Clean up some printf format/argument warnings.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Removed complex C++ registration of subroutines,
    replaced by function() statments in .dbd file.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rec: implement new promptgroup (gui_group) choices
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    major changes for new makwBaseApp
    Changed extension .db to .dbd
    Changes for dynamic link modification
    .ascii=>.db
    Changes for replacing default.dctsdr: Renamed all record support modules
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added example code that registers a new iocsh command.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    epicsExit
    Change comment to match file name.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Updated license comments.
    make exampleMain a .cpp file
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    changes for osiThread=>epicsThread
    Register more commands automatically from within ioccrf.cpp.
    Register common IOC shell commands automatically as part of ioccrf constructors.
    remove call to threadExitMain
    remove threadInit; add caMonitor.c
    The exampleApp now has one src directory.
    add threadInit()
    build changes
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Don't register the hook more than once.
    Added initTrace command to exampleApp, registers a verbose initHook.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added the aSub record type, derived from Andy Foster's genSub.
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    Remove EPICS Base submodules
    Move all under modules/database
    template: add qsrv (if available) to exampleApp
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add opt-in switch to makeBaseApp example
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    Updates to build rules and genVersionHeader.pl script
    
    Added -q (quiet) flag, renamed INSTALL_QUIETLY build variable.
    Moved GENVERSION variables into normal locations.
    Changed from :: rule to : rule with FORCE dependency.
    Removed use of --git-dir, only works when CWD is TOP.
    Simplified some parts, more perlish.
    Added VCS used to generated output file.
    Expanded on the -v (verbose) output.
    update template
    
    use waveform as long string
    use app. name in header and macro name
    update example template
    add version header to example template
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup, fix an issue reported by Kazuro Furukawa.
    _APPNAME__SNCFLAGS doesn't get used...
    Link locally-compiled code that uses epicsExport.h into the support library
    (DLL) rather than directly into the IOC executable.  Necessary on Win32
    builds because symbol decoration requirements are different.
    Added initTrace command to exampleApp, registers a verbose initHook.
    Added example code that registers a new iocsh command.
    make snc propram reentrient
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    add registrar(sncExampleRegistrar)
    Renamed the support library to xxxSupport, to match previous tidy-up.
    Tidying up various things:
    
    Made the support library contain only the xxxRecord and device support,
    then renamed _APPNAME_Support.dbd to xxxSupport.dbd to reflect this.
    Actually I should rename the library to libxxxSupport, but I didn't yet.
    
    Now we link the dbSubExample.o code directly to the application,
    renamed the registrar routine inside this to mySubRegistrar,
    and also moved the registrar() dbd entry into _APPNAME_Include.dbd.
    make clear distinction between support and ioc apps
    changes for new build rules
    function replaced by registrar
    Make rec, softDev, and testDev libs shared.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Removed complex C++ registration of subroutines,
    replaced by function() statments in .dbd file.
    add dbSubExample
    make caMonitor a host application
    Added caExample_SRCS definition - SRCS required for automated depends.
    Make vxCom an OBJ library
    make exampleMain a .cpp file
    Removed unneeded vxWorks LDFLAGS undefined iocInit line.
    Removed references for baseLIBOBJS.
    Changes to create vxWorks archive libraries and prods.
    Added pv_DIR defintions.
    add new features for seqExample
    changes for drvTS
    Converted st file to stt file.
    changes for seq support
    Add commented line for location of sequencer
    registerRecordDeviceDriver now part of iocCore
    Renames RECTYPES, DBDNAME, registerRecordDeviceDriver.cpp
    Change the registerRecordDeviceDriver.pl script to create
    registerRecordDeviceDriver.c as a C++ file (.cpp) so that it can
    use a static constructor to register the registerRecordDeviceDriver()
    command with the IOC shell
    Remove the old registerRecordDeviceDriverRegister.[ch] source files.
    Changed seq location.
    added caMonitor
    Since registerRecordDeviceDriver.c is part of example_SRCS_DEFAULT there's
    no need to add it to example_SRCS_RTEMS.
    The exampleApp now has one src directory.
    Removed MUNCH_LIBRARY.
    Added munching.
    changes so that example works on vxWorks
    changes for 3.14
    Converted to new build method.
    new way to build
    More changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    changtes for 3.14
    major changes for new makwBaseApp
    new version using templates
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Changes for replacing default.dctsdr by all ascii files
    New file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added initTrace command to exampleApp, registers a verbose initHook.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    changes for epicsExport
    change for win32
    more changes to get epicsShare to work on win32
    more changes for epicsShare
    Make rec, softDev, and testDev libs shared.
    changes for 3.14
    changtes for 3.14
    major changes for new makwBaseApp
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fixed bad example code.
    Use double for local type, not float.
    add new features for seqExample
    Converted st file to stt file.
    changes for seq support
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    template: add circle.db to exampleApp for pdbGroup
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added the aSub record type, derived from Andy Foster's genSub.
    add dbSubExample
    Remove EPICS Base submodules
    Move all under modules/database
    template: add circle.db to exampleApp for pdbGroup
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added compressExample record.
    Ralphs latest changes
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    template: add circle.db to exampleApp for pdbGroup
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    add version header to example template
    templates: Unify PV name prefixes, remove "Host"
    
    The difference between host IOCs and embedded ones does not
    justify having a different prefix.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Changed template in macro name to all caps TEMPLATE.
    Modified to reflect new <name>_TEMPLATE changes.
    We should discourage the creation of .dbd files in Db subdirectories.
    From 3.14 they also need the _RegisterRecordDeviceDriver.cpp stuff,
    which should appear in a src directory.
    fix mistake
    add dbSubExample
    Updated comments. Include RULES not RULES.Db
    Converted to new build method.
    changes to get example to build
    More changes for R3.14.
    changes for 3.14
    Ralphs latest changes
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added dynamic parts of record alias implementation.
    changes to get example to build
    Added substitution on INPA line.
    Ralphs latest changes
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added nfsCommands@RTEMS.
    Modifications to support architecture-specific template files.
        nfsCommands is only needed for vxWorks IOCs
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Modified comments regarding usage of nfsMountAll.
    Modifications to support architecture-specific template files.
        nfsCommands is only needed for vxWorks IOCs
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Allow use of a site configure directory by defining RULES in CONFIG.
    Moved wildcards from unnecessary file configure/RULES.iocBoot to iocBoot/Makefile
    Removed DIRS def (DIRS defined in RULES.iocBoot).
    changes for 3.14
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added creation of ioc/dllPath.bat for Win32 IOCs.
    Added envPaths functionality, and using these variables in st.cmd files
    make clear distinction between support and ioc apps
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    More comments on setting names, added the #! line and chmod +x comment
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    add version header to example template
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    In vxWorks 5.5.2,  ld < file.munch  breaks future shell includes.
    Added initTrace command to exampleApp, registers a verbose initHook.
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    Added a debug variable to the example mySub routines,
    making this settable from the ioc shell.
    make clear distinction between support and ioc apps
    use _APPNAME_ instead of example
    Make commented-out cd command syntactically-correct.
    add dbSubExample
    remove comments about TIMEZONE
    Changes to create vxWorks archive libraries and prods.
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    add new features for seqExample
    changes for drvTS
    changes for seq support
    exampleApp.dbd renamed to example.dbd
    put drcTS command in correct place
    timezone and drvTS for vxWorks
    add sample TIMEZONE definition
    remove threadInit; add caMonitor.c
    The exampleApp now has one src directory.
    registerRecordDeviceDriver=>registerRecordDeviceDriverBase
    TSinit now automatically called
    Fix for user name.
    change example for iocCore on host
    run iocInit
    added threadInit()
    changes so that example works on vxWorks
    changes to get example to build
    changes for 3.14
    change dbLoadTemplate to dbLoadRecords
    Ralphs latest changes
    change #< nfsCommands to #< ../nfsCommands
    Still working toward beta12
    Still changing
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed how we decide whether or not to build cdCommands.
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Create RTEMS-specific README.
    Modify st.cmd to reflect RTEMS directory structure.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    add version header to example template
    templates: Unify PV name prefixes, remove "Host"
    
    The difference between host IOCs and embedded ones does not
    justify having a different prefix.
    templates: Make st.cmd templates safe against spaces in TOP.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added initTrace command to exampleApp, registers a verbose initHook.
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Don't use '0' for string arguments which should be empty...
    Added envPaths functionality, and using these variables in st.cmd files
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    Added a debug variable to the example mySub routines,
    making this settable from the ioc shell.
    make clear distinction between support and ioc apps
    Added _APPNAME_ to ioc boot stuff.
    More comments on setting names, added the #! line and chmod +x comment
    add dbSubExample
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    add new features for seqExample
    changes for seq support
    exampleApp.dbd renamed to example.dbd
    Added Host to record names.
    changes for new shell
    changes for iocsh
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove ARCH from cdCommands and envPaths files
    
    Set it in iocshRegisterCommon() instead.
    Remove ARCH from iocBoot/ioc/Makefile@Common templates.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added envPaths functionality, and using these variables in st.cmd files
    make clear distinction between support and ioc apps
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    add version header to example template
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Added parentheses to the exampleBoot st.cmd@RTEMS file.
    Added initTrace command to exampleApp, registers a verbose initHook.
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Don't use '0' for string arguments which should be empty...
    Added envPaths functionality, and using these variables in st.cmd files
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    Added a debug variable to the example mySub routines,
    making this settable from the ioc shell.
    make clear distinction between support and ioc apps
    use _APPNAME_ instead of example
    add dbSubExample
    Create RTEMS-specific README.
    Modify st.cmd to reflect RTEMS directory structure.
    Fixed  _USER_.
    Initial version.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Made RTEMS and vxWorks comments the same.
    Added nfsCommands@RTEMS.
    Modifications to support architecture-specific template files.
        nfsCommands is only needed for vxWorks IOCs
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Made RTEMS and vxWorks comments the same.
    make clear distinction between support and ioc apps
    Modifications to support architecture-specific template files.
        Only vxWorks IOCs need an nfsCommands file installing
    Modifications to support architecture-specific template files.
        nfsCommands is only needed for vxWorks IOCs
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Allow use of a site configure directory by defining RULES in CONFIG.
    Moved wildcards from unnecessary file configure/RULES.iocBoot to iocBoot/Makefile
    Removed DIRS def (DIRS defined in RULES.iocBoot).
    changes for 3.14
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added creation of ioc/dllPath.bat for Win32 IOCs.
    Added envPaths functionality, and using these variables in st.cmd files
    make clear distinction between support and ioc apps
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    In vxWorks 5.5.2,  ld < file.munch  breaks future shell includes.
    Cleanup, fix an issue reported by Kazuro Furukawa.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    make clear distinction between support and ioc apps
    appbin => topbin
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    Ralphs latest changes
    change #< nfsCommands to #< ../nfsCommands
    Still working toward beta12
    Still changing
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Added st.cmd@Cross files for cross builds.
    Added envPaths functionality, and using these variables in st.cmd files
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    make clear distinction between support and ioc apps
    Initial version.
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed how we decide whether or not to build cdCommands.
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    templates: Unify PV name prefixes, remove "Host"
    
    The difference between host IOCs and embedded ones does not
    justify having a different prefix.
    templates: Make st.cmd templates safe against spaces in TOP.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup, fix an issue reported by Kazuro Furukawa.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Added envPaths functionality, and using these variables in st.cmd files
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    make clear distinction between support and ioc apps
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove ARCH from cdCommands and envPaths files
    
    Set it in iocshRegisterCommon() instead.
    Remove ARCH from iocBoot/ioc/Makefile@Common templates.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added envPaths functionality, and using these variables in st.cmd files
    make clear distinction between support and ioc apps
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    changes for 3.14
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Updating example iocsh startup scripts
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Added parentheses around command arguments for CEXP.
    
    In particular the generated cdCommands file, and the lines in
    the st.cmd@RTEMS file template.
    Cleanup, fix an issue reported by Kazuro Furukawa.
    Patch from Diamond; App names may include chars that are not
    valid in a C identifier, such as '-', but we use the App name
    in the <name>_registerRecordDeviceDriver routine name.
    This patch replaces all such invalid chars with '_'.
    Fixed directory for dbd file.
    Added envPaths functionality, and using these variables in st.cmd files
    Name the registerRecordDeviceDriver subroutine after the dbd file it was
    created from; allows applications to be split up and loaded separately.
    make clear distinction between support and ioc apps
    Initial version.
    Modifications to support architecture-specific template files.
        vxWorks-specific and Common files for host IOCs
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fix to prevent dirs showing up multiple times when matching multiple wildcards
    The exampleApp now has one src directory.
    Dir vxSrc replaced by iocSrc.
    change example for iocCore on host
    changes for 3.14
    Still working of bessy changes
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    epicsExit
    Change comment to match file name.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Updated license comments.
    make exampleMain a .cpp file
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    changes for osiThread=>epicsThread
    Register more commands automatically from within ioccrf.cpp.
    Register common IOC shell commands automatically as part of ioccrf constructors.
    remove call to threadExitMain
    remove threadInit; add caMonitor.c
    The exampleApp now has one src directory.
    add threadInit()
    build changes
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup, fix an issue reported by Kazuro Furukawa.
    Removed old comment.
    Commented out xxx.dbd and added instructions for support dbds.
    The <appname>Include.dbd file is no longer needed.
    make clear distinction between support and ioc apps
    changes for new build rules
    function replaced by registrar
    Make rec, softDev, and testDev libs shared.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Removed complex C++ registration of subroutines,
    replaced by function() statments in .dbd file.
    add dbSubExample
    make caMonitor a host application
    Added caExample_SRCS definition - SRCS required for automated depends.
    Make vxCom an OBJ library
    make exampleMain a .cpp file
    Removed unneeded vxWorks LDFLAGS undefined iocInit line.
    Removed references for baseLIBOBJS.
    Changes to create vxWorks archive libraries and prods.
    Added pv_DIR defintions.
    add new features for seqExample
    changes for drvTS
    Converted st file to stt file.
    changes for seq support
    Add commented line for location of sequencer
    registerRecordDeviceDriver now part of iocCore
    Renames RECTYPES, DBDNAME, registerRecordDeviceDriver.cpp
    Change the registerRecordDeviceDriver.pl script to create
    registerRecordDeviceDriver.c as a C++ file (.cpp) so that it can
    use a static constructor to register the registerRecordDeviceDriver()
    command with the IOC shell
    Remove the old registerRecordDeviceDriverRegister.[ch] source files.
    Changed seq location.
    added caMonitor
    Since registerRecordDeviceDriver.c is part of example_SRCS_DEFAULT there's
    no need to add it to example_SRCS_RTEMS.
    The exampleApp now has one src directory.
    Removed MUNCH_LIBRARY.
    Added munching.
    changes so that example works on vxWorks
    changes for 3.14
    Converted to new build method.
    new way to build
    More changes for R3.14.
    Changes for hp700 build
    changes for 3.14
    changtes for 3.14
    major changes for new makwBaseApp
    new version using templates
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Changes for replacing default.dctsdr by all ascii files
    New file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up build rules, remove CapFast & dbst support
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    make clear distinction between support and ioc apps
    Updated comments to reflect <name>_TEMPLATE changes.
    We should discourage the creation of .dbd files in Db subdirectories.
    From 3.14 they also need the _RegisterRecordDeviceDriver.cpp stuff,
    which should appear in a src directory.
    Updated comments. Include RULES not RULES.Db
    More changes for R3.14.
    changes for 3.14
    Ralphs latest changes
    major changes for new makwBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    make clear distinction between support and ioc apps
    Fix to prevent dirs showing up multiple times when matching multiple wildcards
    changes for 3.14
    Still working of bessy changes
    major changes for new makwBaseApp
    Createing templates for makeBaseApp
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added variable keyword example.
    
    What is this App directory supposed to be for?
    make clear distinction between support and ioc apps
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    make clear distinction between support and ioc apps
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up build rules, remove CapFast & dbst support
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    make clear distinction between support and ioc apps
    Updated comments to reflect <name>_TEMPLATE changes.
    We should discourage the creation of .dbd files in Db subdirectories.
    From 3.14 they also need the _RegisterRecordDeviceDriver.cpp stuff,
    which should appear in a src directory.
    Updated comments. Include RULES not RULES.Db
    More changes for R3.14.
    changes for 3.14
    Ralphs latest changes
    major changes for new makwBaseApp
    Fix Makefiles to use RULES_DIRS instead of _TOP
    avoided embedded TOP for non sub-modules
    Build modules/database/test/std/link directory too
    Remove EPICS Base submodules
    Move all under modules/database
    Move all under modules/libcom
    Move macLib.pm and macLib.plt here
    
    Use @TOP@ in macLib.plt library path
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changes for GNU make -j option (multiple jobs).
    Updated license comments.
    Removed generic dir since it no longer contains a Makefile.
    for 3.14 only a single Makefile
    Moved config dir to base/config.
    fixed build
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    moved files from /base/include
    Changes for replacing default.dctsdr by all ascii files
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Add a test to record seq in "Specified" mode
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec/test: add compressTest
    
    test circular buffer mode for FIFO and LIFO
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Permit trailing commas in JSON maps & arrays
    
    Handled in both dbYacc and yajl parsers.
    Adds tests to linkInitTest.
    Add tests for 64-bit constant link initializers
    Convert devI64inSoft for Link Support
    
    Includes tests to make sure it actually works
    Fix aai constant initialization
    
    The aai record is "special" and does things its own way.
    These changes let it support {const:[...]} initialization without
    breaking regular input link types which could be initialized twice
    without the new DBLINK_FLAG_INITIALIZED guard in dbInitLink().
    
    Also adds tests for this, and for similar links for waveform.
    Additional linkInitTest checks
    
    Now tests array record types and the eventRecord.
    Also moved repeated IOC startup code into separate function.
    Fix dbConstLink to handle a long-string array properly
    
    Added a new parser dbLSConvertJSON for long-string arrays.
    New test checks that only the first string element is used.
    printfRecord: Handle const long-strings in "%ls"
    
    Adds some tests for printfRecord.
    std/rec/test: start linkInitTest
    Remove EPICS Base submodules
    Move all under modules/database
    Remove EPICS Base submodules
    Move all under modules/database
    test/rec: add tests for new SIML fetch failure behavior
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Don't inherit alarm severity from self-referential links
    
    This behavior was present in 3.14 and got lost in my link changes.
    Includes a new regression test to detect the broken behavior.
    Fix link initialization from hex constants
    
    Fixes LP: #1699445
    Includes regression tests (some of which will fail on 3.16)
    add test for lp:1577108
    conditional test of registerAllRecordDeviceDrivers()
    move test of registerAllRecordDeviceDrivers()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    missing test spec
    fix long long constants
    std/rec/test: recMiscTest check in64in/out
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Add dummy putValue methods to const link types
    
    Includes a new softTest program to detect regressions.
    Resolves http://www.aps.anl.gov/epics/core-talk/2017/msg00503.php
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    add test for lp:1577108
    Remove EPICS Base submodules
    Move all under modules/database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec/test: add test for deadband mechanism of analog record types
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec/test: add asTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add asyncSoftTest to record test harness
    std/rec/test: recMiscTest check in64in/out
    std/rec/test: start linkInitTest
    std/rec/test: add compressTest
    
    test circular buffer mode for FIFO and LIFO
    std/rec/test: add linkRetargetLinkTest
    std/rec/test: add asTest to RTEMS test harness
    Renamed the record test harness routine
    
    Now named epicsRunRecordTests and as such it
    matches the other test harness routines.
    std/rec/test: test dbGet() and dbPut() for array field
    
    test with waveform record to check that DBADDR
    modifications aren't seen by the caller.
    std/rec/test: add test for deadband mechanism of analog record types
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Demonstrate and use numeric literals in calc args
    std/rec/test: extend linkRetargetLink w/ jlink
    Avoid race in linkRetarget
    
    Add dbCaSync() to avoid a race between a call to dbCaGetField()
    and the link becoming connected.
    linkRetargetLinkTest set number of tests
    std/rec/test: add linkRetargetLinkTest
    EPICS::IOC.pm Save parms, more debug annotations
    Increase timeout for caget to 15 seconds
    netget: Run caget and pvget using EPICS::IOC instead of `back-ticks`
    
    This lets us collect and echo their stderr streams, and if they
    hang up without responding we can kill them directly instead of
    just giving up and bailing out.
    
    Left debug output turned on for now.
    Replace EPICS::IOC->kill() with exit() and close() methods
    Enable IOC debug output in netget.plt
    Improve timeout diagnostics from netget.plt
    Added timeout to netget script
    
    Not tested on Windows.
    Adjustment to netget test port settings, not a full fix though
    Use private server ports in netget test
    Last attempt with the netget test before I disable it
    netget test: Configure environment to keep traffic local
    Adjust pvget regexp for newer output
    Added Perl EPICS::IOC module and netget test program
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    test/rec: add tests for new SIML fetch failure behavior
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Demonstrate and use numeric literals in calc args
    std/rec/test: extend linkRetargetLink w/ jlink
    std/rec/test: add linkRetargetLinkTest
    Remove EPICS Base submodules
    Move all under modules/database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    RPRO/PUTF also handle self link case
    fix RPRO/PUTF regression
    test for RPRO/PUTF regression
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    update asTest
    
    test dbGetString()
    and fix cleanup order
    asTest: fix link with mingw
    
    This test has device support, which the registerRDD script
    always emits as dllimport, so it fails to link if the dsets
    are part of the executable itself.
    
    Use iocsh to avoid calling the RDD function directly since
    a DLL can't link against functions in the main executable.
    asTest: quiet
    iocInit: prepareLinks after autosave pass0
    
    Allow autosave to restore link fields again...
    std/rec/test: add asTest
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec/test: recMiscTest check in64in/out
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Adjust record and device support for array constants
    std/rec/test: extend arrayOpTest to cover an array of size 1 (detects bug lp:1389298)
    std/rec/test: test dbGet() and dbPut() for array field
    
    test with waveform record to check that DBADDR
    modifications aren't seen by the caller.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix link initialization from hex constants
    
    Fixes LP: #1699445
    Includes regression tests (some of which will fail on 3.16)
    move test of registerAllRecordDeviceDrivers()
    rename dynamic_registerRecordDeviceDriver -> registerAllRecordDeviceDrivers
    test dynamic_registerRecordDeviceDriver()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec/test: explicitly register test subroutine for subroutine record (fix build on MinGW)
    analogMonitorTest: char array too small
    std/rec/test: add test for deadband mechanism of analog record types
    test include public Com and db headers
    
    Ensure that headers which are meant to be included
    actually can be.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add tests for 64-bit constant link initializers
    Fix 32-bit issue in linkInitTest.c
    Convert devI64inSoft for Link Support
    
    Includes tests to make sure it actually works
    Fix aai constant initialization
    
    The aai record is "special" and does things its own way.
    These changes let it support {const:[...]} initialization without
    breaking regular input link types which could be initialized twice
    without the new DBLINK_FLAG_INITIALIZED guard in dbInitLink().
    
    Also adds tests for this, and for similar links for waveform.
    Additional linkInitTest checks
    
    Now tests array record types and the eventRecord.
    Also moved repeated IOC startup code into separate function.
    Fix dbConstLink to handle a long-string array properly
    
    Added a new parser dbLSConvertJSON for long-string arrays.
    New test checks that only the first string element is used.
    printfRecord: Handle const long-strings in "%ls"
    
    Adds some tests for printfRecord.
    std/rec/test: start linkInitTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use (typed) rset instead of (untyped) struct rset inside Base
    rec/test: asTest fixup rtems test harness
    
    Since this test has device support it must appear in a
    DLL for windows dynamic builds.
    However, the rRDD function is in the executable,
    and not accessible here.  So use iocsh.
    For rtems/vxworks the test harness clears
    iocsh registrations, so iocsh can't work here.
    update asTest
    
    test dbGetString()
    and fix cleanup order
    asTest: copy+paste error
    
    Didn't remove all use of local variable
    asTest: fix link with mingw
    
    This test has device support, which the registerRDD script
    always emits as dllimport, so it fails to link if the dsets
    are part of the executable itself.
    
    Use iocsh to avoid calling the RDD function directly since
    a DLL can't link against functions in the main executable.
    asTest: quiet
    iocInit: prepareLinks after autosave pass0
    
    Allow autosave to restore link fields again...
    std/rec/test: add asTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    test include public Com and db headers
    
    Ensure that headers which are meant to be included
    actually can be.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/rec/test: add compressTest
    
    test circular buffer mode for FIFO and LIFO
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Add dummy putValue methods to const link types
    
    Includes a new softTest program to detect regressions.
    Resolves http://www.aps.anl.gov/epics/core-talk/2017/msg00503.php
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Don't inherit alarm severity from self-referential links
    
    This behavior was present in 3.14 and got lost in my link changes.
    Includes a new regression test to detect the broken behavior.
    simmTest.c: Allow the clock to not always tick
    
    On some systems the wall clock may tick slowly, so we must allow
    the time to not change at all between checks.
    Show the time differences.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    simmTest imprecise
    Remove EPICS Base submodules
    Move all under modules/database
    test/rec: add tests for new SIML fetch failure behavior
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add tests for Async Soft Channel devices
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Set asynSoftTest plan
    Rename asyncSoft main routine
    Add tests for Async Soft Channel devices
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    arrayOpTest: check initial dbGet value
    Adjust record and device support for array constants
    std/rec/test: missing testdbPrepare()
    std/rec/test: extend arrayOpTest to cover an array of size 1 (detects bug lp:1389298)
    std/rec/test: test dbGet() and dbPut() for array field
    
    test with waveform record to check that DBADDR
    modifications aren't seen by the caller.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Renamed the record test harness routine
    
    Now named epicsRunRecordTests and as such it
    matches the other test harness routines.
    std/rec/test: add test for deadband mechanism of analog record types
    Testing: Fixed filters test harness build on RTEMS
    
    Added a new Files: line to the testspec file to document which
    files need to be available for the tests to be run properly.
    This is generated from the Makefile variable TESTFILES.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    pdevLibVirtualOS needs epicsShareDef and explicitly setting to NULL,
    but we can't do the latter in the os/default version.
    Fixed compiler warnings.
    Use new, simpler, RTEMS test harness.
    Use new configuration entries.
    More timing cleanups for RTEMS.
    Let epicsExitTest work on systems with strict priority scheduling.
    Exit properly.
    Add epicsExit test.
    Clean up some typos.
    Add test harness for RTEMS.
    conditional test of registerAllRecordDeviceDrivers()
    Add a test to record seq in "Specified" mode
    avoid 'struct dset'
    
    doesn't work if -DUSE_TYPED_DSET
    test include public Com and db headers
    
    Ensure that headers which are meant to be included
    actually can be.
    avoided embedded TOP for non sub-modules
    Added Perl EPICS::IOC module and netget test program
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    missing test files
    Add dummy putValue methods to const link types
    
    Includes a new softTest program to detect regressions.
    Resolves http://www.aps.anl.gov/epics/core-talk/2017/msg00503.php
    Add tests for Async Soft Channel devices
    std/rec/test: recMiscTest check in64in/out
    std/rec/test: start linkInitTest
    add test for lp:1577108
    Add missing dependencies for Test.dbd files
    rec/test: add missing TESTFILES
    std/rec/test: add compressTest
    
    test circular buffer mode for FIFO and LIFO
    asTest: fix link with mingw
    
    This test has device support, which the registerRDD script
    always emits as dllimport, so it fails to link if the dsets
    are part of the executable itself.
    
    Use iocsh to avoid calling the RDD function directly since
    a DLL can't link against functions in the main executable.
    std/rec/test: add linkRetargetLinkTest
    std/rec/test: add asTest to RTEMS test harness
    std/rec/test: add asTest
    Renamed the record test harness routine
    
    Now named epicsRunRecordTests and as such it
    matches the other test harness routines.
    std/rec/test: test dbGet() and dbPut() for array field
    
    test with waveform record to check that DBADDR
    modifications aren't seen by the caller.
    std/rec/test: explicitly register test subroutine for subroutine record (fix build on MinGW)
    std/rec/test: add test for deadband mechanism of analog record types
    Add a test to record seq in "Specified" mode
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    update asTest
    
    test dbGetString()
    and fix cleanup order
    std/rec/test: add asTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    RPRO/PUTF test all three link types
    
    Shouldn't be any difference, but check IN_LINK
    and FWD_LINK to be sure.
    RPRO/PUTF also handle self link case
    test for RPRO/PUTF regression
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add arr plugin for array subsets (+ testcode)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    std/filters/test: add simple processing callback to arrRecord
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add arr plugin for array subsets (+ testcode)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filter/test: use dbUnitTest
    Add a plan to std/filters/test/syncTest.c
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    Clean up build warnings from clang.
    sync needs to free held events
    
    The sync plugin may hold an update internally.
    If this is done then it must be free'd when
    the dbChannel is closed.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix filter plugin tests as well
    Add test code for sync plugin.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filter/test: use dbUnitTest
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    Clean up build warnings from clang.
    update dbndTest
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix filter plugin tests as well
    Fix compiler warnings and minor issues.
    Add arr plugin for array subsets (+ testcode)
    Added tests for ts and dbnd plugins, fix in dbnd.c: make local functions static
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filter/test: use dbUnitTest
    More fixes for Cygwin builds.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    fix tsTest
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix filter plugin tests as well
    Fix compiler warnings and minor issues.
    Add arr plugin for array subsets (+ testcode)
    Added tests for ts and dbnd plugins, fix in dbnd.c: make local functions static
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add tests for dbGet() with db_field_log
    
    Regression testing for a bug where an array field with a sub-array
    channel filter can read past the end of the db_field_log array,
    because in dbGet() the call to prset->get_array_info() occurs even
    when pfl is supposed to be overriding the record's array.
    std/filters/test: add input link to arrRecord
    std/filters/test: add simple processing callback to arrRecord
    Fix tests after menuScan changes
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    Add arr plugin for array subsets (+ testcode)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    ugly hack to make unit test run
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filter/test: use dbUnitTest
    Added extern "C" wrappers to clean up some Solaris warnings
    std/filters: make arrTest run location more flexible
    Various updates for building on Windows/Cygwin/MinGW
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Clean up warnings from gcc 4.6.3
    Clean up build warnings from clang.
    arrTest cleanup on exit
    
    Do test db cleanup after hooks registered by iocInit
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    Change arr plugin behaviour from exclusive to inclusive range end specifier
    Fix bug in arr plugin (for incr <= 0), add tests for invalid and out-of-bound parameters
    Add arr plugin for array subsets (+ testcode)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove remaining REC_TYPE defines
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Testing: Fixed filters test harness build on RTEMS
    
    Added a new Files: line to the testspec file to document which
    files need to be available for the tests to be run properly.
    This is generated from the Makefile variable TESTFILES.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    pdevLibVirtualOS needs epicsShareDef and explicitly setting to NULL,
    but we can't do the latter in the os/default version.
    Fixed compiler warnings.
    Use new, simpler, RTEMS test harness.
    Use new configuration entries.
    More timing cleanups for RTEMS.
    Let epicsExitTest work on systems with strict priority scheduling.
    Exit properly.
    Add epicsExit test.
    Clean up some typos.
    Add test harness for RTEMS.
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add missing link libraries
    oops
    std/filter/test: use dbUnitTest
    Add missing dependencies for Test.dbd files
    Add missing Testfile
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Testing: Fixed filters test harness build on RTEMS
    
    Added a new Files: line to the testspec file to document which
    files need to be available for the tests to be run properly.
    This is generated from the Makefile variable TESTFILES.
    Missing $(DEP) dependency in std/filters/test
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix filter plugin tests as well
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    fix build after reorg
    Add test code for sync plugin.
    Add arr plugin for array subsets (+ testcode)
    Added tests for ts and dbnd plugins, fix in dbnd.c: make local functions static
    Minor build cleanups
    
    Removed %.C and %.H from vpath (rules were deleted some time ago)
    Added %.pl to vpath for use in ioc/registry/Makefile
    configure/tools doesn't exist any more, remove from configure/Makefile
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved configure/tools perl tools to src/tools directory.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
       defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Fix so the CONFIG_APP_INCLUDE files for base get included.
    Added CONFIG_TARGETS so we build CONFIG_APP_INCLUDE
    (needed for SHRLIB_SEARCH_DIRS)
    Updated license comments.
    Removed reference to installEpics.
    new way to build
    new way to build
    Tools installed into <install_location>/config/tools.
    Fixed install of tools files.
    More config file changes for R3.14.
    changes for 3.14
    install tools
    new way to build
    new build method
    added
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    std/filter/test: use dbUnitTest
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    ugly hack to make unit test run
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    missed a TOP
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2007-04-17: Added functionality for CDEFS. Still needs changes to dbToRecordtypeH.
    2004-07-12: More implementation, can't remember the details now.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    Fix tests, use EPICS::Readfile
    2007-04-19: Reorganized cdefs, C++ guard and some formatting.
    2004-07-12: More implementation, can't remember the details now.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-07-09: Progress!
    Added a class for each Recfield DBF_TYPE, use this to
    simplify conversion to C code.
    dbToRecordtypeH incomplete, but it outputs the record struct.
    190 tests, 100% ok.
    2004-06-23: Fixed various things, added Recordtype and global DBD object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Fix Menu declaration test
    tools: Support for DB files, added dbExpand.pl
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2007-04-19: Reorganized cdefs, C++ guard and some formatting.
    2004-07-08: Lots of development work, parser works.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    tools: Support for DB files, added dbExpand.pl
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-06-04: Added individual object tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Move base.plt into test/tools and adjust lib path
    Fix regex's, add tests for DBD::Base
    
    Changed $RXname to accept {} chars in the middle of a PV name.
    RXdqs now handles escaped double-quotes and back-slashes properly.
    New test program for the DBD::Base class and checks for each of
    the $RXxxx variable regex's.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tools/test/*.plt 'use lib' lines
    
    This allows the tests to work when INSTALL_LOCATION is set.
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    2004-06-04: Added individual object tests.
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Move macLib.plt to libcom
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    tools: add assembleSnippets.pl and test
    Run the tools/test files under the test harness
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    re-write scanIoTest
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: ensure dbCaLinkTest tests dbContextReadNotifyCacheAllocator
    
    Read the same size twice to ensure that a cached buffer is reused
    ioc/db/test: extend dbCaLinkTest to check CAC get operation
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added test link type, fix dbPutLinkTest for JSON_LINKs
    Rename JSON_STR to JSON_LINK
    Add basic support and tests for a JSON link address type
    dbPutLinkTest: check HW link parsing
    dbPutLinkTest: test link string parsing
    
    Test parsing to CONTANT and DB_LINK.
    dbCa isn't initialized, so no test for CA_LINK.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbPutLinkTest: check HW link parsing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Rename JSON_STR to JSON_LINK
    Add basic support and tests for a JSON link address type
    Add xRecord device support
    db/test: devExtend() only during pass 0
    oops
    dbPutLinkTest: check HW link parsing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    quiet some warnings
    
    unused variable iseq
    undefined struct dbBase
    ioc/db/test: add test for recGblCheckDeadband()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    change arrRecord cvt_dbaddr() to behave like waveformRecord et al.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    Add tests for dbGet() with db_field_log
    
    Regression testing for a bug where an array field with a sub-array
    channel filter can read past the end of the db_field_log array,
    because in dbGet() the call to prset->get_array_info() occurs even
    when pfl is supposed to be overriding the record's array.
    std/filters/test: add simple processing callback to arrRecord
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add arr plugin for array subsets (+ testcode)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Rename JSON_STR to JSON_LINK
    Add basic support and tests for a JSON link address type
    Add xRecord device support
    dbPutLinkTest: check HW link parsing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    jlink conditional debug print
    
    Enable magic info("linkDebug","YES") to enable
    debug prints during parsing.
    db/test: dbPutLinkTest include json links and more
    add testing lset
    Added test link type, fix dbPutLinkTest for JSON_LINKs
    Rename JSON_STR to JSON_LINK
    Add basic support and tests for a JSON link address type
    dbPutLinkTest: don't use variadic macros
    
    MSVC doesn't seem to support them correctly
    dbPutLinkTest: attempt MSVC workaround
    
    Apparently MSVC doesn't play well with variadic macros.
    ioc/db/test: fix dbPutLinkTest.c to compile on Windows
    Invalid HW links no longer partially initialized
    INST_IO no longer accept invalid string as empty
    db/test: extend dbPutLinkTest to cover dbParseLink()
    dbPutLinkTest: check HW link parsing
    dbPutLinkTest: check parsing of CA_LINK
    Suppress errlog output of expected warning messages.
    dbPutLinkTest: set # of tests
    dbPutLinkTest: test link string parsing
    
    Test parsing to CONTANT and DB_LINK.
    dbCa isn't initialized, so no test for CA_LINK.
    dbPutGetTest test plain array field
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db/test: dbPutGetTest add test for lp:1678494
    db/test: add dbPutGetTest
    dbStatic: dbPutStringNum() overflow handling
    
    Default to accepting over-size integers in DB fields, truncate to field size.
    E.g. permits setting DBF_LONG fields to 0xffffffff.
    Adds dbConvertStrict config variable to disable this.
    dbStatic: dbPutStringNum(, "") not an error
    
    Restore previous behavour that empty string
    is equivalent to numeric zero.
    
    epicsParse*() returns S_stdlib_noConversion
    where previously strtoul() did not.
    
    Conflicts:
            src/ioc/db/test/Makefile
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbChannelShow reporting detail level changed
    dbChannelTest missing call to testdbPrepare()
    ioc/db/test: dbChannelTest use dbUnitTest.h
    Fix export type of .LINK$ fields, add tests
    Suppress errlog output of expected warning messages.
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Make db unit tests self contained
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix db plugin tests
    
    Avoid installing xRecord.dbd.  This would otherwise be installed
    by the DBDINC.
    
    Also must split out recordtype definition from record instance
    definition and run the registrar function between the two loads.
    This is due to new sanity checks in the loading process
    ugly hack to make unit test run
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Changed the structure for channel filters and channel filter plugins.
      - Made chFilterPlugin public (moved from dbChannel.c to dbChannel.h)
      - Made the interface jump table chFilterIf part of the chFilterPlugin
        (i.e. once per plugin) instead of chFilter (once per instance)
      - Added a pointer from chFilter (instance) to chFilterPlugin (plugin)
      - Added a private user pointer in chFilterPlugin
      - Changed dbFindFilter() to return a chFilterPlugin* (instead of the jump table)
      - Changed dbRegisterFilter() to accept a user private pointer as 3rd arg
    Fix compiler warnings.
    Improve output from Show routines.
    Tindying up.
     Fixed issues with dbChannelDelete() and dbChannelShow().
    Don't parse field modifiers in dbChannelTest()
     dbChannelDelete() returns void
     update tests.
    Extended functionality of dbChannel code:
     * Deleted the chan->magic member and associated checks.
     * Moved rset->cvt_dbaddr() call into dbChannelCreate()
     * Added many accessor routines
     * Renamed dbChannelReport() to dbChannelShow() and added dbChannelFilterShow()
    Changed dbChannel management API to Test/Create/Delete
    Various improvements:
     * A filter's parse routines now return a parse_result (enum)
     * Return value from test filter parse routines is configurable
     * Either call parse_end() or parse_abort(), but never both.
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbLockTest and dbStressLock
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Allow some callback slow-ups before failing tests
    
    The tests occasionally fail on Windows because the server
    is busy; this will accept up to 4 slow callbacks without
    them causing the build to fail.
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    cleanup callback and callback*Test
    ioc/db/test: add timing statistics to callbackTest
    defer printing for callbackTest
    
    test*() uses printf() so don't print
    any results until all results are collected.
    On RTEMS/vxWorks buffering of printf() gives
    long delays which skew the test results.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Extended testing to trigger callbacks from multiple threads, more tests.
    Removed Main.c file, converted to use testMain.h and epicsUnitTest.h.
    Updated license comments.
    add delay so there is time to contact NTP server
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    remove errVerbose
    changes for creating DLLs
    initialize taskwdInit, errlogInit, callbackInit
    new tests for db
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: add a test for dbcaStats (detects bug lp:1394212)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix typo
    dbScan: rename scanOnce3 to scanOnceCallback
    dbScanTest: start with test of scanOnce3()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    dbChArrTest use dbUnitTest.h
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added extern "C" wrappers to clean up some Solaris warnings
    memset transposed arguments
    Add tests for dbGet() with db_field_log
    
    Regression testing for a bug where an array field with a sub-array
    channel filter can read past the end of the db_field_log array,
    because in dbGet() the call to prset->get_array_info() occurs even
    when pfl is supposed to be overriding the record's array.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db/test: Cleanup unused variable
    dbStressLock: attempt to fix solaris linking failure
    libCom: cross mingw imports posix time.h by default
    
    at least mingw 4.9.1 for Debian 8 i386 host.
    db/test: dbStressTest conditional TIME_STATS
    dbLock: use new backref tracking
    dbLockTest and dbStressLock
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Cleanup dbConvert
    
    Windows warnings removed from testdbConvert by Michael
    Major reformatting of dbConvert.c
    Fixed dbConvert-memmove problems
    
    Test program crashed on Windows-x64.
    Some dbConvert.c routines used sizeof([unsigned ]long)
    instead of sizeof(epics[U]Int32).
    add testdbConvert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    ioc/db: dbRegisterServer() only warn on actual redefinition
    
    avoid noise when simply run twice.
    Remove EPICS Base submodules
    Move all under modules/database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added test link type, fix dbPutLinkTest for JSON_LINKs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    db: validate dbrType
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: fix jlinkz dllimport/export
    jlif future proof for 64-bit json parser
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    db/test: Fix warning from clang
    db/test: dbPutLinkTest include json links and more
    add testing lset
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbLockTest and dbStressLock
    dbLockTest: test creation of DB links
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    start dbCaLinkTest
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add tests for dbGet() with db_field_log
    
    Regression testing for a bug where an array field with a sub-array
    channel filter can read past the end of the db_field_log array,
    because in dbGet() the call to prset->get_array_info() occurs even
    when pfl is supposed to be overriding the record's array.
    std/filters/test: add input link to arrRecord
    std/filters/test: add simple processing callback to arrRecord
    Fix tests after menuScan changes
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    Add arr plugin for array subsets (+ testcode)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db/test: dbPutLinkTest include json links and more
    Remove constant link checks from test device
    Add xRecord device support
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add dbState library that provides a means of synchronizing plugins to events.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db/test: dbPutLinkTest include json links and more
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    benchmark dbConvert
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    ugly hack to make unit test run
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    start dbCaLinkTest
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add tests for dbGet() with db_field_log
    
    Regression testing for a bug where an array field with a sub-array
    channel filter can read past the end of the db_field_log array,
    because in dbGet() the call to prset->get_array_info() occurs even
    when pfl is supposed to be overriding the record's array.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    Add arr plugin for array subsets (+ testcode)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add xRecord device support
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added some dbServer unit tests
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    start dbCaLinkTest
    dbScanTest: start with test of scanOnce3()
    Added missing tests to epicsRunDbTests.c
    Fixes for VxWorks & RTEMS builds
    
    * C++ comments are not legal in C code
    * Declare scanIoTest() in epicsRunDbTests.c
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    ioc/db/test: add test for recGblCheckDeadband()
    dbLockTest: test creation of DB links
    dbPutLinkTest: test link string parsing
    
    Test parsing to CONTANT and DB_LINK.
    dbCa isn't initialized, so no test for CA_LINK.
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    add testdbConvert
    Make db unit tests self contained
    db cleanup
    
    cleanup to allow database re-load
    db/test: Create a test harness for vxWorks & RTEMS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Suppress errlog output of expected warning messages.
    dbUnitTest: testIocInitOk/testIocShutdownOk testAbort() on failure
    dbUnitTest: rename
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    add dbUnitTest.h
    
    hide boilerplate of tests using the PDB
    dbShutdownTest
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Change pvlOptTSELisTime to DBLINK_FLAG_TSELisTIME
    
    Renames recGblTSELwasModified() to TSEL_modified() in dbLink.c.
    Adds some tests for using JSON link types in dbCommon links.
    db/test: dbPutLinkTest include json links and more
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    scanIoTest: set # of tests
    Clean up in src/ioc/db/test/scanIoTest.c
    re-write scanIoTest
    scanIoTest: Extend time for callback threads to run.
    
    Needed for VxWorks 5.5.2 on 68K
    Fixes for VxWorks & RTEMS builds
    
    * C++ comments are not legal in C code
    * Declare scanIoTest() in epicsRunDbTests.c
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    dbStaticTest: More friendly test output
    Change indfield settings in new dbInitEntryFrom*()
    
    Can get indfield value from dbAddr->pflddes->indRecordType.
    Make FromRecord set indfield=0 like dbFindRecord() does.
    
    Adjust dbStaticTest to match.
    Fix dbStaticTest recnode flags check
    ioc/db/test: check record node flags
    ioc/db/test: dbStaticTest dbInitEntryFromAddr() works before iocInit()
    ioc/db/test: dbStaticTest test operations on aliases
    rename dbInitEntryFromChannel -> dbInitEntryFromAddr
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Allow some callback slow-ups before failing tests
    
    The tests occasionally fail on Windows because the server
    is busy; this will accept up to 4 slow callbacks without
    them causing the build to fail.
    Fix shutdown issues with scan and callback.
    
    The main reason for this merge proposal is the change to "public" API functions.
    
    Use atomic counter to resolve data race on threadsRunning in callback.
    
    Split up callbackShutdown() and scanShutdown() into two phases *Stop() and
    *Cleanup(). The *Stop() functions signal worker threads, and wait for them to
    exit. The *Cleanup() functions actually reclaim global resources.
    
    These two mechanisms have couplings which are quite complex. I/O Intr scans
    involve both scan lists and callbacks.
    cleanup callback and callback*Test
    ioc/db/test: add test for parallel callback threads
    ioc/db/test: add timing statistics to callbackTest
    defer printing for callbackTest
    
    test*() uses printf() so don't print
    any results until all results are collected.
    On RTEMS/vxWorks buffering of printf() gives
    long delays which skew the test results.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Extended testing to trigger callbacks from multiple threads, more tests.
    Removed Main.c file, converted to use testMain.h and epicsUnitTest.h.
    Updated license comments.
    add delay so there is time to contact NTP server
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    remove errVerbose
    changes for creating DLLs
    initialize taskwdInit, errlogInit, callbackInit
    new tests for db
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Set testPlan in dbCaStatsTest.c
    dbCaStatsTest: set # of tests
    ioc/db/test: add a test for dbcaStats (detects bug lp:1394212)
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    start dbCaLinkTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    Added test link type, fix dbPutLinkTest for JSON_LINKs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add xRecord device support
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix chfPluginTest for MS 2015 compiler
    dbChannelShow reporting detail level changed
    Build issues for MinWG
    ioc/db: add test for allocPvt() returning NULL to chfPluginTest
    ioc/db: add tests for strict tagged plugin options, fix 'required' algorithm
    ioc/db/test: add test for tagged plugin configuration
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    ioc/db/test: make chfPluginTest more flexible wrt %e formatting of double
    db/test: Tell Win32 to only print 2-digit exponents
    
    By default the MS libraries print 3-digit exponents,
    whereas the ANSI standard is for 2-digits.
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    Silence expected errlog output from chfPluginTest.
    Clean up build warnings from clang.
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    chfPluginTest: more verbose error messages
    Make db unit tests self contained
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix db plugin tests
    
    Avoid installing xRecord.dbd.  This would otherwise be installed
    by the DBDINC.
    
    Also must split out recordtype definition from record instance
    definition and run the registrar function between the two loads.
    This is due to new sanity checks in the loading process
    Change interface to ...Show functions, minor refactoring
    
    * ...Show functions take an indent argument (number of spaces to print
      in front of each line) instead of a char* intro to avoid allocation at each level,
      replacing '\t' with 8 spaces in top level code where necessary
    * Refactor element_size -> field_size (as used in dbAddr), also in dbChannel
      functions
    * Fix: wrong macro name in unused part of db_field_log.h
    Minor fixes in chfPluginTest.c
    Add ability for plugins to drop db_field_log updates (+tests)
    Extend and add lots of tests in chfPluginTest.c
    
    * Add tests for callback registration (pre and post)
    * Add tests for callback execution (pre and post)
    * Add tests for report function and array destructor
    * Add test for combinations of two plugins (that register pre eventq, post eventq or in
      both chains), checking the order of calls and db_field_log changes independently
    * Make test messages more verbose and comprehensive
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Change mechanism to detect data type/size changes by plugins
    
    * Remove "probe" type from db_field_log
    * Supply probe when registering plugin chains
    * Minor refactoring (rename) in dbfl_type and chFilter
    Restructured pre- and post-event queue chains, type/size change detection
    
    * Add new db_field_log type "probe" for type change detection
    * Move linked lists for pre- and post-event-queue chains into dbChannel,
      function pointers and arguments into chFilter
    * Remove set-type-chain completely
    * Simplify register functions in filter and plugin interfaces
    * Add functions to run the pre and post chains to dbChannel
    * Refactor in db_field_log: field_size -> element_size
    * Refactor in dbEvent:
      db_post_single_event_first -> db_create_event_log
      db_post_single_event_final -> db_queue_event_log (removed from public interface)
    * Change tests to compile
    Allow filter plugin to change the type of data and the array size
    
    * Add field_size to db_field_log
    * Add final type, dbr_type, no_elements, and field size to dbChannel
      (plus matching access methods)
    * Add set-type callback chain to find out final sizes and types
    * Add registration calls for pre-event-queue and post-event-queue insertion
    Changed db_field_log types to add support for plugin-created array copies
    
    * db_field_log now is one of rec = use record, val = val inside, ref = reference inside
    * add field_type and no_elements (to allow plugins change type and array size)
    * add destructor in the ref type (called when deleting the db_field_log)
    * change dbEvent.c and dbAccess.c to use the new field log features
    Add filter/plugin insertion into the high-priority filter list (pre event queue).
    
    * Move evSubscrip from dbEvent.[ch] (private) to dbChannel.h (public).
    * Split up db_post_single_event_private into two parts:
      ..._first creates a new db_field_log chunk and copies from db.
      ..._final puts a db_field_log into the event queue.
    * Add a typedef for the pre-event-queue recursive callbacks.
    * Add a register function for the callback (plus void* arg) to filter and
      plugin interfaces.
    * Add the code that builds up the pre-event-queue callback chain.
    * Changes to the test files to compile (no tests added yet).
    * Fix missing include in db_field_log.h.
    Added required mask per plugin to shorten check loop. Trivial test change. [src/db/chfPlugin.c src/db/test/chfPluginTest.c]
    Added chfPlugin, a simple interface for channel filter plugins.
      - chfPlugin.h contains the simple jump table and doxygen documentation
      - chfPlugin.c is a wrapper library around the yajl callbacks that parses
        any client-supplied configuration into the user's structure
      - test/chfPluginTest.c tests the library and the data conversion
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    missing include
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove REC_TYPE and UNTYPED_RSET/oldRecSup.h; add casts to record types
    partly fix lp:1666924, i.e. for rset only, as described in the ticket
    
    This means:
    
    * typed method definitions for struct rset
    * using REC_TYPE macro in place of dbCommon
    * define REC_TYPE as dbCommon unless defined
    * in record supports, define REC_TYPE before including epics headers
    * fix a few method types in record supports (e.g. void* -> REC_TYPE*)
    * fix the type errors gcc finds in dbAccess.c and dbConvert.c
    db/test: add simple processing callback to xRecord
    Add xRecord device support
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Make db unit tests self contained
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    dbPutGetTest test plain array field
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db/test: dbPutGetTest check dbGet() of long string field
    db/test: dbPutGetTest check for dbGet() attribute crash
    db/test: dbPutGetTest add test for lp:1678494
    db/test: add dbPutGetTest
    dbStatic: dbPutStringNum() overflow handling
    
    Default to accepting over-size integers in DB fields, truncate to field size.
    E.g. permits setting DBF_LONG fields to 0xffffffff.
    Adds dbConvertStrict config variable to disable this.
    dbStatic: dbPutStringNum(, "") not an error
    
    Restore previous behavour that empty string
    is equivalent to numeric zero.
    
    epicsParse*() returns S_stdlib_noConversion
    where previously strtoul() did not.
    
    Conflicts:
            src/ioc/db/test/Makefile
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: dbStaticTest test operations on aliases
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix comment
    dbLockTest: check additional recursive case
    Make dbLockTest work when LOCKSET_DEBUG undefined
    dbLockTest and dbStressLock
    ioc/db/test: Fix dependency problems.
    
    dbLockTest.c never actually uses xRecord.h, while
    dbPutLinkTest needed a depedency rule for it.
    dbLockTest: test creation of DB links
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Testing: Fixed filters test harness build on RTEMS
    
    Added a new Files: line to the testspec file to document which
    files need to be available for the tests to be run properly.
    This is generated from the Makefile variable TESTFILES.
    RTEMS test harness show run directory
    rtems test harness setup to create temp files
    
    Apparently the default location for tmp files
    doesn't exist in the default IMFS tree.
    db/test: Create a test harness for vxWorks & RTEMS
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    pdevLibVirtualOS needs epicsShareDef and explicitly setting to NULL,
    but we can't do the latter in the os/default version.
    Fixed compiler warnings.
    Use new, simpler, RTEMS test harness.
    Use new configuration entries.
    More timing cleanups for RTEMS.
    Let epicsExitTest work on systems with strict priority scheduling.
    Exit properly.
    Add epicsExit test.
    Clean up some typos.
    Add test harness for RTEMS.
    Fix ..// => ../ in Makefile-relative source paths
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    test: fix path to private db includes
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added some dbServer unit tests
    ioc/dbStatic: add dbInitEntryFromChannel()
    
    Constant time population of a DBENTRY from
    a valid dbAddr.
    typo
    db/test: add dbPutGetTest
    db/test: dbPutLinkTest include json links and more
    add testing lset
    dbStatic: dbPutStringNum(, "") not an error
    
    Restore previous behavour that empty string
    is equivalent to numeric zero.
    
    epicsParse*() returns S_stdlib_noConversion
    where previously strtoul() did not.
    
    Conflicts:
            src/ioc/db/test/Makefile
    Added test link type, fix dbPutLinkTest for JSON_LINKs
    Comments in Makefile
    Add missing dependencies for Test.dbd files
    Revert, test programs may be included in harness without being run
    remove dbChArrTest from testHarness
    
    dbChArrTest calls iocInit() and so can't
    be in the shared test harness
    Add tests for dbGet() with db_field_log
    
    Regression testing for a bug where an array field with a sub-array
    channel filter can read past the end of the db_field_log array,
    because in dbGet() the call to prset->get_array_info() occurs even
    when pfl is supposed to be overriding the record's array.
    db/test: missing/wrong .db file names
    ioc/db/test: fix Makefile to link against librt on Solaris and Linux only
    db/test: Link dbStressTest against librt on all targets (not just solaris)
       man clock_gettime: "Link with -lrt (only for glibc versions before 2.17)."
    Build fixes for Solaris
    db/test: Add missing dependency
    ioc/db/test: wrong variable for -I
    Fixed some build issues in db/test
    ioc/db/test: extend dbCaLinkTest to check CAC get operation
    dbLockTest and dbStressLock
    start dbCaLinkTest
    db/test: copy arrRecord from std/filters/test
    re-write scanIoTest
    Add xRecord device support
    Fix Windows builds
    dbScanTest: start with test of scanOnce3()
    ioc/db/test: add a test for dbcaStats (detects bug lp:1394212)
    Fix tests after menuScan changes
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    ioc/db/test: Fix dependency problems.
    
    dbLockTest.c never actually uses xRecord.h, while
    dbPutLinkTest needed a depedency rule for it.
    Merge from parallel-cbthreads-2: return value for callbackRequest, add tests
    dbPutLinkTest: check HW link parsing
    ioc/db/test: add test for recGblCheckDeadband()
    add missing TESTFILES
    dbLockTest: test creation of DB links
    ioc/db/test: Fix Windows build
    dbPutLinkTest: test link string parsing
    
    Test parsing to CONTANT and DB_LINK.
    dbCa isn't initialized, so no test for CA_LINK.
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    dbShutdownTest
    benchmark dbConvert
    add testdbConvert
    ioc/db/test: add test for parallel callback threads
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Testing: Fixed filters test harness build on RTEMS
    
    Added a new Files: line to the testspec file to document which
    files need to be available for the tests to be run properly.
    This is generated from the Makefile variable TESTFILES.
    minor
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Make db unit tests self contained
    db/test: Create a test harness for vxWorks & RTEMS
    fix db plugin tests
    
    Avoid installing xRecord.dbd.  This would otherwise be installed
    by the DBDINC.
    
    Also must split out recordtype definition from record instance
    definition and run the registrar function between the two loads.
    This is due to new sanity checks in the loading process
    ugly hack to make unit test run
    fix build after reorg
    fix test build
    Add dbState library that provides a means of synchronizing plugins to events.
    Add [s:i:e] sub-array shorthand parsing and unit test
    Added chfPlugin, a simple interface for channel filter plugins.
      - chfPlugin.h contains the simple jump table and doxygen documentation
      - chfPlugin.c is a wrapper library around the yajl callbacks that parses
        any client-supplied configuration into the user's structure
      - test/chfPluginTest.c tests the library and the data conversion
    Adding dbChannel JSON parser and test files.
     Passes 33 tests.
    db/test: Adjust and simplify libraries.
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    db/test: On vxWorks make a callbackTest.munch that works.
    Automate the running of callbackTest.
    Removed Main.c file, converted to use testMain.h and epicsUnitTest.h.
    Only build OBJS for vxWorks.
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    added ca
    Added dirs for libraries.
    use dbIoc
    build changes
    new tests for db
    Do nothing Makefile.
    new way to build
    dont build if_depen.c under vxWorks
    More Makefile changes for R3.14.
    for 3.14 only single Makefile
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    change arrRecord cvt_dbaddr() to behave like waveformRecord et al.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: dbCaLinkTest fix sync
    Cosmetic cleanups
    Add dbLinkDoLocked() support
    
    New lset method, implemented in all link types.
    Includes a test for the dbCa implementation.
    db/test: missing coverage for dbGetLink w/ larger element count
    dbCa: dbCaGet/PutLink dynamic size
    
    dbCaGetLink return actual number of elements w/o zero padding.
    dbCaPutLink write only requested number of elements, w/o padding
    dbCaLinkTest fixes
    
    * Attempt to fix Windows build failures
    * Use C-style comments, not C++
    Clean up compiler warnings
    ioc/db/test: ensure dbCaLinkTest tests dbContextReadNotifyCacheAllocator
    
    Read the same size twice to ensure that a cached buffer is reused
    ioc/db/test: extend dbCaLinkTest to check CAC get operation
    start dbCaLinkTest
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    db/test: add simple processing callback to xRecord
    dbPutLinkTest: check HW link parsing
    dbPutLinkTest: test link string parsing
    
    Test parsing to CONTANT and DB_LINK.
    dbCa isn't initialized, so no test for CA_LINK.
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    ugly hack to make unit test run
    Integrated dbChannel more and extended its functionality:
     * Register filters in pdbbase, using a list and gphash
     * Do record and field search first
     * Test loads a DBD/DB file to provide a record to find
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    add testing lset
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db/test: fixup arrShorthandTest to use dbUnitTest
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    Use a free-list for dbChannel and chFilter objects.
    
    Have to make sure the dbChannel subsystem is initialized
    properly when testing though.
    Clean up build warnings from clang.
    Various fixes for vxWorks
    
    Provide a separate dbd file for each test.
    Don't require a writable filesystem.
    Simplfy xRecord.c again.
    Make db unit tests self contained
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix db plugin tests
    
    Avoid installing xRecord.dbd.  This would otherwise be installed
    by the DBDINC.
    
    Also must split out recordtype definition from record instance
    definition and run the registrar function between the two loads.
    This is due to new sanity checks in the loading process
    Change arr plugin behaviour from exclusive to inclusive range end specifier
    Add [s:i:e] sub-array shorthand parsing and unit test
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up build warnings from clang.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Argh!!!
    More msi.plt retries for Jenkins builds on Windows
    Testing msi: Add retries if necessary
    
    Hoping this will fix the annoying problems on Windows Jenkins.
    Testing msi: Add retries if necessary
    
    Hoping this will fix the annoying problems on Windows Jenkins.
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    MSI testing
    
    When testing the msi program, don't rely on EPICS_HOST_ARCH
    to find the binary executable as we may be running the tests
    on a cross-arch such as linux-x86-debug.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merge 'ignore-siml-failure' and document.
    Module updates
    Move tool configs into module cfg/CONFIG* files
    Submodule updates
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/database
    Use @TOP@ and @ARCH@ in .plt files
    
    No need for msi-copy(.exe) as a result.
    Tests should now work with INSTALL_LOCATION set, and
    don't need to use databaseModuleDirs either.
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add missing link libraries
    Use msi for dependency rules generation
    
    Added -D command, modified RULES.Db to use it.
    MSI testing
    
    When testing the msi program, don't rely on EPICS_HOST_ARCH
    to find the binary executable as we may be running the tests
    on a cross-arch such as linux-x86-debug.
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix Makefiles to use RULES_DIRS instead of _TOP
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Add submodule context
    Structural changes to create database module
    Structural changes to create ca module
    Fix location of TOOLS in top Makefile
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Remove 3.13 compatibility build vars
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved configure/tools perl tools to src/tools directory.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
    defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Changes for GNU make -j option (multiple jobs).
    Converted to R3.14 Makefiles.
    Install config/tools/* into INSTALL_LOCATION/config/tools not bin/(arch>.
    Build msi only for host target.
    Build with R3.14 rules if available (not tested...)
    Added if test for COMPAT* macros.
    Fixed Makefile so distclean target will work.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Added license information.
    Removed release* targets.
    Updated license comments.
    Added config/tools to dirs.
    Moved MakeRelease to configure/tools.
    no change
    new way to build
    More R3.14 Makefile changes.
    added configure
    changes for 3.14
    fix imcompatibilities with subtool
    Added INSTALL_BIN definition.
    First version
    fixed install outside base
    removed unused unistall target
    kay's perl branch
    Top level dir no longer passed to MakeRelease
    Now includes RULES_TOP, changed DIRS def.
    use RULES_DIRS
    Added uninstall of config dir.
    Chnges for move of config directory.
    Top dir now base not epics
    Removed unused ARCH_TYPE
    uninstall base/man
    base/rec=>base/db base/include now installed
    Added base/tools scripts functionality to base/Makefile, removed scripts
    Moved base/tools/MakeRelease to base dir.
    Changed include file from CONFIG_SITE to CONFIG
    Replace ARCH_TYPE with .
    Replace ARCH_TYPE with .
    Removed install dependancy from release rule
    Removed depends dependancy in release and built_release rules
    Introduce temporary symbol (ARCH_TYPE=$$ARCH) and use in later targets/rules
    to avoid problem with $* symbol resolution in some versions of gnumake.
    Modified syntax of makefile usage
    Cleanup of files
    Changed clean to tools/Clean.  Added "uninstall" dependency.
    Minor changes
    Modified to eork with extensions and do depends
    New stuff.
    Dependencies are now generated with a "make release".
    Added Log and/or Id.
    Fixed.
    pre_build / new configuration
    Now supports new config directory setup.
    Defaults to install instead of build
    Added support for config.mk
    Now works with Makefile.Build_Type, i.e. Makefile.Vx  Makefile.Unix
    Update
    Better Version
    Added top-level Makefiles to repository
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Move all under modules/database
    Move all under modules/libcom
    New src/std/link/test directory with tests for the state link type
    Don't install libcomModuleDirs.pm
    
    It's only needed by bldEnvData.pl which is never installed.
    Make it a dependency so it gets built, and use it from O.<host>
    Export tool configurations as cfg/CONFIG_* files
    Freeze SONAME=3.17.0
    Structural changes to create database module
    Structural changes to create ca module
    Perl scripts use perl module for RELEASE dependencies
    Add module version numbering
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    fix makefile typo
    std/rec/test: add test for deadband mechanism of analog record types
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    dbShutdownTest
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    disable filter tests until fixed...
    clean all
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Reorganize src/Makefile
    
    Group entries by "Module"
    move alarm.h to libCom/misc
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Remove 3.13 compatibility build vars
    Oops, s/dbTools/dbtools/.
    Missing dependency fixed, misc needs dbTools
    
    - from Michael Davdisaver
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added dBStatic to cas depend dirs. Needs alarm.h
    Fix missing parallel build dependency.
    
    Ron Sluiter pointed out that gdd/dbMapper.h includes db_access.h so
    gdd has to be built after ca, simplifying the cas dependency too.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    Updated DEPEND_DIRS for vxWorks directory.
    libCom/test/fdmgrTest depends on ca.
    Build cap5 everywhere other than WIN32 archs.
    Change build order again; declare dependencies locally.
    Add dependency catools on alarm.h which is in dbStatic.
    Moved cap5 to the end of the list, so it doesn't matter if it fails.
    Move cap5 after softIoc.
    Added Perl5 interface to CA.  Not tested on Windows...
    Build misc/ before dev/ so extended devices can link properly on Solaris.
    Added new tools directory.
    Changes for GNU make -j option (multiple jobs).
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Moved ca to immediately follow libCom.
    Need to have built the RTEMS stuff before any programs.
    Move softIoc after RTEMS dir.
    Changed build order: build tests immediately after their parent.
    Move template stuff lower down.
    Removed ifeq and ifneq tests on vxWorks and RTEMS.
    += catools
    toolsComm now calls libCom so there is a new build order
    Moved excas.
    add excas
    Added softIoc application.
    accidently committed version not buildibg gdd and cas
    remove *Recdes* and *Flddes*
    Updated license comments.
    Change build order so that RTEMS libCom test applications build properly
    when building from scratch.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Added makeBaseExt directory.
    uncommented gdd and cas
    misc before iocsh
    add iocsh; build misc later
    Only build vxWorks directory when there is a vxWorks target.
    order of build
    change build order
    add db/test
    Removed cxxtemplates dir because it was moved to libCom.
    Removed include directory.
    add libCom/test
    moved where ca is built
    new way to build
    Moved osi directory to libCom.
    Added makeBaseApp to dirs list.
    remove tools
    temporily dont build makeBaseApp
    changes for configure
    New Makefile added.
    Modified Makefile to use new tools directory.  MGB:
    moved blderrSymTbl stuff to libCom only
    only build errSymTbl from this makefile -
    the other early builds have been moved to their respective
    Imakefile(s) in the appropriate object area
    forgeot to remove targets from the all:: target
    moved the seqsource and devtestsource target functions back
    to the appropriate object Imakefiles
    moved target camathsource stuff to Unix/share/toolsComm/math/Imakefile
    add the camath
    moved devtest to toolsComm/devtest
    added devtestsource target
    backed out devtest
    *** empty log message ***
    reworked for errInc.c blderrSymTbl etc.
    moved some src builds to here
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca: Fix client bug (race condition) in ipAddrToAsciiEngine
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    include branching added
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    upgraded ipAddrToAscii API and improved shutdown procedures
    Suppressed HPUX warnings.
    upgraded compiler specific macros
    upgraded memory management
    use epics_throws macro
    use placement new
    Updated license comments.
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    make copy constructor and assignment oper private
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    exp passed to assert must not change the state of the data structures
    patch for DECXX compiler detected issues (found by Kazuro FURUKAWA)
    see <URL:http://www-linac.kek.jp/epics/osf/>
    flushBlockThreshold no longer takes a message size argument
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    added comQueSendMsgMinder class
    optimized protocol transfer
    workaround for Borland compiler bug
    optimizations suggested by quantify
    removed throw specifications
    typedef has an exception specification
    workaround for WRS T2.2 cygnus gnu compiler bugs
    cleaned up throw specifications
    tabs => spaces
    upgraded compiler specific macros
    fixed borland warnings
    use epics_throws macro
    use placement new
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    optimized
    renamed functions and moved tcpiiu functions here
    assume that new throws an exception
    removed off normal code from inline function
    make copy constructor and assignment oper private
    restructure to eliminate use of select
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    added guards to interface
    Suppress bogus HP aCC warnings
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    o fixed clients that dont see server's beacon dont reconnect
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    o when successful search response arrives dont allow search period to get to long
    o dont scan channels when searching to find lowest retry count as this doesnt change behavior and adds overhead
    many changes associated will disconnecting the channel but not disconnecting the circuit
    improved disconnect search interval
    restructured locking to match current design practices for CAC
    optimizations suggested by quantify
    dont include shareLib.h more than necessary
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    search timer now uses a private lock
    use udp specific mutex
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    make copy constructor and assignment oper private
    no need to save pointer to timer queue now
    adapt to new timer API
    large array changes
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Updated license comments.
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    libca: addAddrToChannelAccessAddressList report success
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    committed a fix for mantis 302
    include osiSock.h
    Updated license comments.
    fixed spelling
    supress duplicate addr list message in certain situations
    dont use c++ style comment in header used by C files
    fixed gnu warning
    broke apart monolithic iocinf.h header file
    allow CA addr list to include ports and improve duplicate detect
    major revisions
    moved new definitions here
    fixed sun pro warnings
    first cut at multi-threading version
    dont save interface's IP address when querying local interfaces
    fixed dll export
    use correct data type for an IP port
    asynch connect, faster connect, ...
    many pc port, const in API, and other changes
    added missing prototype
    MS  windows changes
    NT/ALPHA(VMS/printf handler) changes
    Changes for NT, ALPHA/OSF, and VAX/VMS port
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed EPICS_UPDATE_LEVEL to EPICS_PATCH_LEVEL.
    Changed BASE_ to EPICS_.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource files.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    getName() returns string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    upgraded ipAddrToAscii API and improved shutdown procedures
    upgraded ipAddrToAscii API and improved shutdown procedures
    dont use a free list
    Updated license comments.
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    restructure to eliminate use of select
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Updated license comments.
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    redesigned class hierarchy
    better destroy sequence
    removed unused methods and data
    improved message
    added missing void
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    broke apart monolithic iocinf.h header file
    osiTime=>epicsTime
    fixed more sun pro warnings
    first cut at multi-threading version
    replace osiClock calls by tsStamp calls
    changes for iocCore port
    asynch connect, faster connect, ...
    More Channel Access Revisions from Jeff Hill.
    Channel access changes from Jeff Hill.
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Client side support for automatic resizing arrays.
    
    In this commit the channel access client is modified to allow a zero
    size request in a caget or camonitor call.  This is passed through to
    the corresponding CA_PROTO_READ_NOTIFY or CA_PROTO_EVENT__ADD message,
    but only if the minor version of the protocol is >=13.
    
    This commit also adds a new protocol test, CA_V413(), which detects a
    server which claims to understand the new zero length request.
    
    Finally, this commit prepares for a subtle change in the CA protocol.
    A request for a zero length subscription or data request, which will
    only be made for protocol version 4.13 and above, is interpreted as a
    request for autosized data, where the intrinsic dynamic length of the
    requested waveform should be returned.
    
    With the synchronous ca_array_get() call there is no mechanism available
    to pass back the size of the retrieved data if it is different from
    the requested count, so the simplest thing is to ensure we don't
    request autosizing data through this api.
    exp passed to assert must not change the state of the data structures
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    write request now goes directly to iiu
    fixed bug occurring when interfacing with EPICS 3.11
    fixed ca_host_name() returns name of the local host
    getName() and getHostName return string size
    new #include
    fixed CA fails if channel is destroyed in disconnect handler
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Changes to support communication with protocol revisions prior to 4.2 (EPICS 3.11)
    fixed header file names
    fixes for bugs 133 and 134 in Mantis
    o fixed clients that dont see server's beacon dont reconnect
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    o when successful search response arrives dont allow search period to get to long
    o dont scan channels when searching to find lowest retry count as this doesnt change behavior and adds overhead
    cancel outstanding IO when a channel becomes unresponsive
    fixed 1st monitor update not delivered when didnt change
    when unresponsive
    fixed logic surrounding subscription cancel
    1) When channel is destroyed, but subscription not installed into a server
    2) When subscription is destroyed, but has not been installed in server
    fixed channel uninstall message was not sent to server and other problems
    new subscription member func preventing subscription from being installed twice
    Cosmetic
    removed overly stringent assert
    fixed disconnect notify supressed when channel state is disconnected
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    fixed names
    many changes associated will disconnecting the channel but not disconnecting the circuit
    keep circuit open with disconnected channels attached if the circuit
    becomes unresponsive
    fixed disconnect callback when channel known to be disconnected
    Minor changes added for Borland's C++ compiler on Linux
    improved disconnect search interval
    require guard when sending crate chan msg
    receive watchdog delay diagnostic
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    dont allow ordinary delete
    fixed visual c++ 6.0 build issues
    use const for the channel name pointer
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    moved someof the functionality into the old interface
    cosmetic
    many structural improvements
    avoid useless vc++ warning
    template instantiation
    assume that new throws an exception
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    call epics builtin inline byte swapping
    fixed warnings
    Reintroduced two different interfaces (=widths) for priority.
    Changes for HP-UX 11 - first semi-stable version
    dont use implicit template instantiation because Tornado II GNU isnt ready
    turn of ms already instantiated warning
    use explicit template instantiation
    destroy all IO function included now in uninstallChannel()
    return "not connected" before "no write access" for put
    added new priority parameter
    reduce the numbe rof error constants in use
    fixed borland warning
    simplified schedualing
    optimized out v41ok test
    removed warning message
    added printf MF
    large array changes
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    dont hold lock while calling callbacks
    optimized free list locking
    changed locking hierarchy
    fixed subscription install race
    fixed gnu warnings
    many changes
    use C++ style late declarations
    fixed bug in string size test
    fixed gnu warnings
    redesigned class hierarchy
    added beacon period diagnostic
    improved IIU shutdown seq for IO
    upgraded event subscription logic
    fixed event subscriptions
    added uninstallSubscription () func
    improved performance
    fixed deadlock discovered during connect / disconnect test
    optimized access to IIU
    fixed use of nill piiu pointer
    removed junk, make iiu wait for users to finish with io before
    going away
    fixed lock where an unlock should be
    eliminated claimsPendingIIU class
    fixed too many arguments for format
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    check for disconnected state first so they will get that error code
    fixed GNU and SUN PRO warnings
    many, many changes
    clean up
    use iter.valid() and not iter.eol() (cosmetic)
    cleaning up
    added preemptive callback control
    reinstalled flow control
    eliminate the UDP send thread
    elevated priority of CAC timer event thread
    fixed lock () where unlock() was needed
    removed lock macros
    attach to channel in the constructor
    fixed several bugs
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed name of error code
    upgraded compiler specific macros
    use placement new
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    moved exception handling out of c++ functions
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    Changes for HP-UX 11 - first semi-stable version
    cosmetic
    large array changes
    broke apart monolithic iocinf.h header file
    cosmetic
    fixed borland warning
    major revisions
    fixed sun pro warnings
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    casw shouldn't use monotonic
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    use new data conversion interface
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    print only one message for each beacon if every beacon is printed
    removed use of %T which isnt in ansi C
    every  beacon printed option
    fixed ms warnings
    many changes associated will disconnecting the channel but not disconnecting the circuit
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    Fractional seconds need leading 0s and all 9 digits
    Changed timestamp output format to one that can be easily parsed
    Added flush after each anomaly to stop pipes from buffering output
    fixed usage printf
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    use placement new
    fixed beacon detect logic does not detect reconnected servers
    new command line, better formatting
    Updated license comments.
    detect beacons duplicated by redundant routes
    call epics builtin inline byte swapping
    cosmetic
    Moved CA_..._PORT static casts from caProto.h into C++ sources.
    Changes for HP-UX 11 - first semi-stable version
    use errlogPrintf
    no longer need to specify hash table size
    large array changes
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    osiTime=>epicsTime
    added beacon period diagnostic
    changes for osiThread=>epicsThread
    fixed the date printout
    better message
    added new line at EOF
    fixed gnu warning
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed situations where local host name cache is repatedly created and destroyed
    added include for typedef used in this header
    fix for mantis 297
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    o removed operators new and delete from cacChannel
    o getName and getHostName now return string length
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    fixed channel uninstall message was not sent to server and other problems
    Suppress HP aCC warnings.
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    fixed disconnect callback when channel known to be disconnected
    changed msg arrival notify to cb lock/unlock
    receive watchdog delay diagnostic
    improved client scedualing fro fdManager based apps
    added missing include
    use epics_throws macro
    use placement new
    eliminate disconnect message from ca_task_exit
    dont include shareLib.h more than necessary
    Updated license comments.
    Suppress HPUX warning
    interface change
    made constructor DLL export
    made CA client service list an epics singleton
    fixed dll symbol export
    doc
    make copy constructor and assignment oper private
    Reintroduced two different interfaces (=widths) for priority.
    Changes for HP-UX 11 - first semi-stable version
    use type bool for single bit bitfields
    fixed HPUX warning
    added new exception
    added new priority parameter
    removed comment
    large array changes
    added comment
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    optimized free list locking
    changed external interface for IO
    redesigned class hierarchy
    added beacon period diagnostic
    removed destroy method and added uninstall method
    accomodate Marty's osi => epics name changes
    added newline at EOF
    added inline functions to avoid undefined symbols
    proper cleanup of local channels
    removed unused methods and data
    dont use 0u in pure virtual declaration
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    added host name pointer function
    locking mechanism is now virtual
    export cacChannel class from the DLL
    fixed build problem (lack of cacChannel class in cacIO.h)
    added local channel IO class
    fixed gnu warnings
    fixed several bugs
    added missing void
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    drop epicsMemory.h
    use auto_ptr instead of epics_auto_ptr where applicable
    Clean up build warnings from Darwin (clang).
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed mantis 361
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    fixed mantis 239
    eliminated redundancy with original ca client API
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    eliminated redundant code from subscription and channel destroy
    fixed channel uninstall message was not sent to server and other problems
    Fix to get around weird HP aCC behaviour ("C" linkage for friends):
    caInstallDefaultService() calls a static member function instead of being a friend.
    fixed gnu warnings
    fixed solaris warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    fixed borland build issues
    Updated to work with Kylix.
    depricated ca_add_event
    moved cb locking to ca ctx class
    receive watchdog delay diagnostic
    improved client scedualing fro fdManager based apps
    removed throw specifications
    added beacon anomaly count diagnostic
    upgraded compiler specific macros
    upgraded compiler specific macros
    removed private array new/delete
    use epics_throws macro
    use placement new
    eliminate disconnect message from ca_task_exit
    dont include shareLib.h more than necessary
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    added currently connected flag
    removed unused member
    moved io in progress counter to old interface
    usue oldCAC specific mutex
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    make copy constructor and assignment oper private
    changed oldCAC from class to struct
    added comment
    improved subscription startup sequence
    added new priority parameter
    simplified schedualing
    installed some limited self test capabilities so that the hash tables
    can be verified during regression testing
    fixed a disconnect related problem and also improved
    structure of locking
    no longer need to specify hash table size
    o set default number of channels guess
    o clean up get copy ifit fails prematurely
    large array changes
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines here
    dont hold lock while calling callbacks
    fixed gnu warnings
    changed loc of free list lock and added getCopy
    fixed sun pro warnings
    redesigned class hierarchy
    installed workaround for gnu warning
    fixed sun pro warnings
    improved performance
    allowed acces to the chid from the evid
    use of static on operator new and delete does not appear to follow
    convention (other than in effective C++)
    many, many changes
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Updated license comments.
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines to oldAccess.h
    dont hold lock while calling callbacks
    upgraded locking
    fixed gnu warnings
    redesigned class hierarchy
    made lock members const
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed spelling
    fixed to use const char chan name ptr
    cosmetic
    Updated license comments.
    better progress logging during regression testing
    added multiple include guard
    will not build with GNU unless the enum is defined
    added a new parameter to the regresion test
    allow use from C++
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    upgraded catime to allow N channels to be specified
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Expand READONLY macro, deprecate.
    More ANSI C conversion
    new error code
    fixed disconnect callback when channel known to be disconnected
    moved error message table out of header file
    added missing epicsShareDef (should impact only the VAX)
    improved message
    dont include shareLib.h more than necessary
    add old client error code
    Updated license comments.
    improved message
    change putNotify timout message
    dont terminate client in default exception if the array request was too large
    new error code
    added bad priority error constant
    new error constant and mark defunct entries
    improved message
    fixed message
    large array changes
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    upgraded event subscription logic
    improved message
    many, many changes
    new error message
    clarified message
    major revisions
    first cut at multi-threading version
    Moved cadev.h caerr.h and caeventmask.h to src/include.
    fixed typo
    added bad functionpointer error
    added ECA_BADCHID
    updated DLL keywords
    C++ compatibility
    asynch connect, faster connect, ...
    added epicsShareAPI to ca_message_text[]
    many pc port, const in API, and other changes
    added epicsShareAPI to ca_message()
    fixed problem in ca_import_cancel()
    info level => warning several codes
    VMS changes and traditional C changes
    made character string pointers be const
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    upgraded compiler specific macros
    removed private array new/delete
    use epics_throws macro
    use placement new
    dont include shareLib.h more than necessary
    Updated license comments.
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed compiler warning
    fix for mantis 258
    better fix for mantis 111
    fix for mantis 111: force recv thread to run first when both receive watchdog
    and receive thread are blocking for the preeemptive callback control lock
    hostName() function name change to getHostName()
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Changes to support communication with protocol revisions prior to 4.2 (EPICS 3.11)
    fixes for bugs 133 and 134 in Mantis
    removed #define DEBUG
    improved debug diagnostics
    fixed debug diagnostics
    Bugfixes for compiling with -DDEBUG
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    Changed order of member initializers in tcpRecvWatchdog's constructor to avoid warning.
    many changes associated will disconnecting the channel but not disconnecting the circuit
    timeout now results in unresponsive circuit notify and not an abort shutdown
    improved warning message
    fixed spelling
    removed knowledge of preemptive cb enable
    optimized time fetch during flush
    broke up extra long message because this causes buffer over run in errlog facility
    receive watchdog delay diagnostic
    optimizations suggested by quantify
    improved message
    print warning message and dont disconnect if the client application
    is never reading its input - also dont reset the beaconAnomaly flag
    if we send data
    fixed gnu warning
    Updated license comments.
    use cac ref to force tcpiiu shutdown
    cosmetic
    Changes for HP-UX 11 - first semi-stable version
    supress disconnect message unles DEBUG is set
    revert to using virtual destroy() to destroy timers
    no need to save pointer to timer queue now
    adapt to new timer API
    fixed sun pro warnings
    large array changes
    broke apart monolithic iocinf.h header file
    osiTimer => epicsTimer
    moved location of debug printf define
    fixed gnu warnings
    made tcp recv and send watch dogs embedded objects and
    added debug diagnostics
    improved performance
    fixed improper format
    added cancel method
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    distinguish between a clean and an abrupt shutdown.
    cancel send watchdog timer immediately after exiting send
    cancel () watchdog when disconnecting and report correct disconnect
    timer total interval
    many, many changes
    cleaned up disconnect timer logic
    workaround for Solaris compiler bug
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    rsrv: ignore CA client version older than v4.4
    
    RSRV ignore search and version messages
    from CA minor versions older than 4.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Client side support for automatic resizing arrays.
    
    In this commit the channel access client is modified to allow a zero
    size request in a caget or camonitor call.  This is passed through to
    the corresponding CA_PROTO_READ_NOTIFY or CA_PROTO_EVENT__ADD message,
    but only if the minor version of the protocol is >=13.
    
    This commit also adds a new protocol test, CA_V413(), which detects a
    server which claims to understand the new zero length request.
    
    Finally, this commit prepares for a subtle change in the CA protocol.
    A request for a zero length subscription or data request, which will
    only be made for protocol version 4.13 and above, is interpreted as a
    request for autosized data, where the intrinsic dynamic length of the
    requested waveform should be returned.
    
    With the synchronous ca_array_get() call there is no mechanism available
    to pass back the size of the retrieved data if it is different from
    the requested count, so the simplest thing is to ensure we don't
    request autosizing data through this api.
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    changed name of protocol command
    fixed last command def
    fixed beacon detect logic does not detect reconnected servers
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    added comment
    document protocol revision uses
    detect beacons duplicated by redundant routes
    cosmetic
    Moved CA_..._PORT static casts from caProto.h into C++ sources.
    Changes for HP-UX 11 - first semi-stable version
    changed noop request to version request
    added 8 bit unsigned integer type
    large array changes
    automate production of version string
    doc
    many, many changes
    first cut at multi-threading version
    changed the field name "m_type" to "m_dataType" to avoid
    collision with a MACRO that is defined by the SENS IP stack
    which is mandatory in WRS's Tornado II product.
    removed revision comments in favor of CVS
    added ETHERNET_MAX_UDP
    connect/search proto changes
    removed use of ## for VAXC port
    added CA version string
    installed into CVS
    ca server installation
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    checked off large arrays
    updated notes
    removed dated entry
    new tasks
    large array changes
    improved the way that socket error numbers are converted to strings,
    changed () to (void) in func proto, and fixed missing parameter to
    checkConnWatchdogs() bug resulting from this
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    Fixed warnings for HP-UX.
    fixed gnu warning
    no need to print channelname in show routine
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    removed throw specifications
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    upgraded compiler specific macros
    document ms compiler problems with placement delete
    dont allow use of ordinary delete
    cosmetic
    Updated license comments.
    dont hide global new with placement new/delete
    workaround for gnu g++ bug
    workaround for ms compiler bug
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    dont initiate IO in constructor
    dont always use default exception handler
    fixed gnu warnings
    large array changes
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines to oldAccess.h
    fixed ws in endif clause
    dont hold lock while calling callbacks
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    installed osdWireFormat.h
    use new data conversion interface
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    optimized time fetch during flush
    optimized comBuf transactions
    removed throw specifications
    upgraded compiler specific macros
    removed unused paramter tag
    removed junk and added missing type name
    fixed throw spec
    use epics_throws macro
    removed unused include
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    optimized
    Changes for HPUX
    restructured
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    restructure to eliminate use of select
    broke apart monolithic iocinf.h header file
    changed locking hierarchy
    added newline at EOF
    fixed borland warning
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    cleaned up construction sequence
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    optimizations suggested by quantify
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    cosmetic
    avoid double io cancel
    supress channel destroy exception in "old" API  layer and reclaim storage
    for oldSubscription when channel is destroyed
    large array changes
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines to oldAccess.h
    dont hold lock while calling callbacks
    changed loc of free list lock
    fixed sun pro warnings
    redesigned class hierarchy
    fixed sun pro warnings
    improved performance
    allowed acces to the chid from the evid
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved create channel unexpected exception diagnostic
    added comment
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    added ca_context_detach
    moved friends of  oldChannelNotify to oldChannelNotify.cpp
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    epicsExit
    fixed plural
    protect against exceptions occurring when eliminating excessive send backlog
    o creating channel
    o creating subscription
    also eliminated redundant code from subscription destroy
    fixed channel uninstall message was not sent to server and other problems
    fixed ms warnings
    fixed solaris warnings
    cosmetic
    workaround for 68k cross compiler bug
    make sure that evid is set before first subscription cb arrives
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    return ECA_PUTFAIL instead of ECA_INTERNAL when unexpected write exception occurs
    return an error condition if they try to start a preemptive callback enabled context
    when the thread already has a single threaded context.
    new error code
    fixed disconnect callback when channel known to be disconnected
    fixed borland build issues
    depricated ca_add_event
    return ECA_INTERNAL when the caught exception type is unknown
    receive watchdog delay diagnostic
    improved client scedualing fro fdManager based apps
    added beacon anomaly count diagnostic
    moved error message table here
    Suppressed HPUX warnings.
    use placement new
    fixed sun pro warnings
    cosmetic
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    added ca_context_status()
    restructured exception handler
    assume that new throws an exception
    fixed sun pro warning
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    improved message
    fuixed warning messages
    Changes for HP-UX 11 - first semi-stable version
    Commented out redundant extern "C" declarations to avoid HP aCC errors
    added new routine that tests if preemptive callback is enabled
    exported the CA client context id
    added comment
    catch additional exceptions and modified subscription startup
    to work better with local channels
    added channel create priority and catch C++ exceptions before they enter C code
    reduce the number of error constants in use
    added try catch block to pend io
    added try catch to be safe
    simplified schedualing
    moved odd ball delay == 0.0 is wait forever behavior into
    legacy ca_pend_io interface.
    moved odd ball delay == 0.0 is wait forever behavior into
    legacy ca_pend_event interface so that we dont need to
    keep doing this in the future.
    changed the API for CA context manipulation
    installed some limited self test capabilities so that the hash tables
    can be verified during regression testing
    fix improper auto ptr release bug
    non need to specify hash table size
    o set default number of channels guess
    o clean up get copy ifit fails prematurely
    restored ca_pend()
    large array changes
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines to oldAccess.h
    reformat
    dont hold lock while calling callbacks
    call errlogFlush before aborting
    changed locking hierarchy
    fixed gnu warnings
    many changes
    changed class hierarchy in cacIO.h
    added beacon period diagnostic
    fixed inlines that show up undefined only with gnu
    changes for osiThread=>epicsThread
    fixed sun pro warning
    fixed sun pro warnings
    use extern "C" with func def so that arg missmatch will be detected
    improved performance
    optimized fetchClientContext ()
    allowed acces to the chid from the evid
    restored Roger Coles data type manipulation macros to their
    orignal horrific state
    cleanup if event add fails
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed GNU and SUN PRO warnings
    many, many changes
    clean up
    cleaned up double if stmnt into one if stmnt
    uses host name pointer function now
    cleaning up
    added preemptive callback control
    reinstalled flow control
    use thread once during initialization
    fixed several bugs
    check for non null pointer
    fixed host name func to match prototype
    fixes for various sun pro compiler warnings
    major revisions
    pvEventQueuePostSingleEventNoop noew returns void
    changed function names
    fixed more sun pro warnings
    sun pro warnings
    more fixes for sun pro warnings
    more sun pro warning fixes
    more fixes for sun pro warnings
    fixed more sun pro warnings
    fixed sun pro warning
    backed out certain sun pro compiler warning fixes
    fixed more sun prowarnings
    fixed sun pro warnings
    fix some of the Cfront like Sun Pro warnings
    fixed gnu warning
    fixed unintialized local problem
    added ca_puser()
    Add explicit initialization for nullBuff -- gcc complained otherwise.
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    Fix for incomplete copy through of compound types on big endian architecture.
    This bug was unfortunately introduced in R3.14.9
    use new data conversion interface
    removed space in front of #else
    support for armv4l impure little endian
    dont use strcpy, and supress memcpy if src and dest ptr are equivalen
    cosmetic
    Updated license comments.
    LOCAL => static
    call epics builtin inline byte swapping
    fixed borland warning
    large array changes
    broke apart monolithic iocinf.h header file
    reformat and remove junk
    major revisions
    dont include net_convert.h
    first cut at multi-threading version
    improved VAX floating point
    conn.c
    Add cvrt_string for DBR_CLASS
    connect/search proto changes
    asynch connect, faster connect, ...
    many pc port, const in API, and other changes
    Use copyin structure to avoid VAX fp except when ieee is in VAX fp type
    - also use dbr_ types
    NT changes and (long) cast problem fixed
    NT/ALPHA(VMS/printf handler) changes
    little endian no MIT float byte swap
    dont alloc channel in response to search request changes
    Changes for NT, ALPHA/OSF, and VAX/VMS port
    More Channel Access Revisions from Jeff Hill.
    Channel access changes from Jeff Hill.
    *** empty log message ***
    added access control and ring buffers
    (Bad func proto if not ANSI C and on VMS)
    ANSI C conversion & select() under vxWorks
    CA performance improvement
    added sccs ID and ca_test_io() and ca_host_name()
    ca_printf
    ANL/LANL integration
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Bugfixes for compiling with -DDEBUG
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    optimized time fetch during flush
    Updated license comments.
    now stores a cac ref
    make copy constructor and assignment oper private
    restructure to eliminate use of select
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for mantis 346
    Fixed warnings for HP-UX.
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed 1st monitor update not delivered when didnt change
    when unresponsive
    fixed logic surrounding subscription cancel
    1) When channel is destroyed, but subscription not installed into a server
    2) When subscription is destroyed, but has not been installed in server
    new subscription member func preventing subscription from being installed twice
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    dont allow ordinary delete
    Updated license comments.
    moved chan out to derived class
    Changes for HPUX
    all virtual functions in baseNMIU are now pure
    dont hide global new with placement new/delete
    workaround for gnu g++ bug
    workaround for ms compiler bug
    placement new issues
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    fixed borland warning
    use proper printf
    fixed sun pro warnings
    large array changes
    broke apart monolithic iocinf.h header file
    fixed sun pro warning
    fixed sun pro warnings
    dont hold lock while calling callbacks
    optimized free list locking
    changed locking hierarchy
    many changes
    redesigned class hierarchy
    improved IIU shutdown seq for IO
    upgraded event subscription logic
    removed disconnect virtual func and added isSubscriptin vf
    removed include of inline functions
    fixed warning
    improved performance
    fixed deadlock discovered during connect / disconnect test
    improved management of per channel IO list
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    clean up
    fixed some GNU warnings
    fixed several bugs
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Added null check in modules/ca/src/client/udpiiu.cpp to prevent possible dereferencing of null pointer. Flagged as error by Codacy static code analysis.
    
    Codacy link: https://app.codacy.com/gh/epics-base/epics-base/file/42103575495/issues/source?bid=16430872&fileBranchId=16430872#l950
    Launchpad bug: https://bugs.launchpad.net/epics-base/+bug/1862916
    
    LP: #1862916
    quiet some warnings
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    ca: suppress repeated UDP error messages
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    add EPICS_CA_MCAST_TTL
    
    may be necessary/helpful for mcast search/beacon usage
    across sub-nets.
    replace use of epics_auto_ptr w/ eapt_array
    
    add helpers for udpiiu to calculate parameters maxPeriod and nTimers,
    allowing them to be const.
    Add SearchArray to hold fixed-size array of auto_ptr.
    Fix build for vxWorks 5.5.2
    libca: enable mcast loopback
    src/ca/client: no need to remove const
    repeaterSubscribeTimer.patch from lp:1479316
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Removed comment about ellfree @Windows in udpiiu.cpp (suggested by Jeff).
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    Silence compiler warning
    fix for mantis 297
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    dont allow unbounded round trip estimates
    fixed bug occurring when interfacing with EPICS 3.11
    standards unconformant C++ compilers (such as msvs 6.0) dont like
    two for loops with the same varaible name in the same scope
    Fixed fixes for HP-UX.
    Fixed warnings for HP-UX.
    fixed ca_host_name() returns name of the local host
    getHostName returns string size
    improved shutdown sequence
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    use arch independent type to hold revision level of proto
    fixed sunpro warnings
    fixed header file names
    fixes for bugs 133 and 134 in Mantis
    o fixed clients that dont see server's beacon dont reconnect
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    o when successful search response arrives dont allow search period to get to long
    o dont scan channels when searching to find lowest retry count as this doesnt change behavior and adds overhead
    fixed gcc 3.4 issue
    fixed channel uninstall message was not sent to server and other problems
    removed repeater confirm through cac
    cosmetic
    fixed ms warnings
    fixed solaris warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    increased locking requirements
    fixed disconnect callback when channel known to be disconnected
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed syntax error
    improved disconnect search interval
    Fixed HP aCC compiler warnings
    o restructured locking to match current design practices for CAC
    o when installing a channel into the udp iiu install it to the front of
    the list, and not the back, so that its search request will be sent
    first and so that its retry count will be considered when calculating
    the minimum retry count.
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    removed msg minder
    patch for fdManager based client tool lock up problems
    added cacMessageProcessingMinder class
    receive watchdog delay diagnostic
    optimizations suggested by quantify
    improved client scedualing fro fdManager based apps
    Tornado 2.2 doesn't like const for the second argument to sendto()
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    simplified
    cosmetic
    fixed code that no longer works with gcc 3.2 agressive alias analysis
    removed double checked lock optimization
    improved message
    fixed beacon detect logic does not detect reconnected servers
    eliminate disconnect message from ca_task_exit
    cosmetic
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    search timer now uses a private lock
    eliminated dead lock vulnerability
    avoid use of ellFree because we get a freee and a malloc in different dlls
    more work on tcp shutdown sequence
    export shutdown capability for ~cac
    removed removeAllChannels() mf
    adapt to interface change
    Changes for HPUX
    firmed up compile time lock requirements
    fixed return from void function
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    auto mutex release now requires an auto mutex
    detect beacons duplicated by redundant routes
    fix for CONNRESET with disconnected udp socket issue
    call epics builtin inline byte swapping
    Fixed some static_cast / HP aCC tag problems.
    fixed warnings
    Moved CA_..._PORT static casts from caProto.h into C++ sources.
    Fuzzily wise-guyishly fixed a misspelling.
    Changes for HP-UX 11 - first semi-stable version
    dont send udp wakeup message if the socket is closed
    use explicit template instantiation
    moved the udp fd reg to be called from the user thread
    function name change
    use subroutine to compute the priority
    restructure to eliminate use of select
    changed noop request to version request
    fixed benign gnu warning
    dont pull bytes out of sock until obtaining the cb lock so single
    threaded apps work better
    simplified schedualing
    better test to determine if this is a receive processing thread
    large array changes
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    changed locking hierarchy
    fixed sun pro warning
    many changes
    socket is now private
    cosmetic
    fixed potentiall bug when communicating with earlier versions
    upgraded event subscription logic
    changes for osiThread=>epicsThread
    fixed sun pro warnings
    osi => epics name change  to accomodate aps
    accomodate Marty's osi => epics name changes
    exported repater related functionality
    improved performance
    fixed sun pro warning
    upgraded use DNS asynchronously in order to avoid lock ups
    improved socket shutdown behavior and fixed byte order for
    status code retrieved from exception message
    modified shutdown sequence
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed sun pro warning
    execute shutdown locgic with lock applied
    fixed GNU warnings
    cosmetic
    fixed repeater register port bug
    fixed Linux uses unsigned where int is used on other OS
    getsockname does not return an IP address for wildcarded UDP socket
    so we must force use of loop back address
    cosmetic
    many, many changes
    clean up
    use shutdown() in addition to close because of subtle difference
    between linux and Solaris when knock a thread out of recv()
    cleaning up
    added preemptive callback control
    reinstalled flow control
    eliminate the UDP send thread
    elevated priority of CAC timer event thread
    fixed solaris cleanup hang by using close instead of shutdown
    fixed solaris cleanup hang by using close instead of shutdown
    added shutdown () sys call diagnostics
    removed warning messages
    check for shutdown condition when socket sys call returns EINTR
    added exception handler for UDP protocol errors
    cleaned up thread names
    removed warning message when lower priority is unavailable
    cosmetic
    fixes for various sun pro compiler warnings
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed ms warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    removed throw specifications
    fixed gnu warning
    upgraded compiler specific macros
    upgraded compiler specific macros
    removed private array new/delete
    use epics_throws macro
    use placement new
    cleanedup placement delete ifdef block
    dont include shareLib.h more than necessary
    workaround for borland compiler does not have placement delete
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    made get/put functions void
    turn off hpux warnings
    dont hide global new with placement new/delete
    workaround for ms compiler bug
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    function name change
    improved sync group startup sequence
    restructure to eliminate use of select
    simplified schedualing
    dont always use default exception handler
    large array changes
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fixed warnings for HP-UX.
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed 1st monitor update not delivered when didnt change
    when unresponsive
    Updated license comments.
    new interface
    all virtual functions in baseNMIU are now pure
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    optimized free list locking
    changed locking hierarchy
    must include inlines
    removed comment
    changed external interface for IO
    fixed gnu warnings
    upgraded event subscription logic
    added isSubscription () func
    improved performance
    improved management of per channel IO list
    added newline at EOF
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for compiler warnings in mantis 337
    Quiet compiler warnings about uninitialized values
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    optimized protocol transfer
    optimized comBuf transactions
    cosmetic
    removed throw specifications
    Suppressed HPUX warnings.
    upgraded compiler specific macros
    fixed problem introduced by warning fix
    fixed borland warnings
    use epics_throws macro
    use placement new
    Updated license comments.
    added newline at eof
    optimized
    use exception to pass back failed situation
    All HPUX warnings fixed.
    added cast
    Some more HP aCC warning fixes.
    fixed warnings
    Changes for HP-UX 11 - first semi-stable version
    restructure to eliminate use of select
    optimized word pop
    fixed sun pro warnings
    large array changes
    broke apart monolithic iocinf.h header file
    better member func name
    improved performance
    fixed type of inclusion used
    many, many changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    improved "usage" diagnostic and cmd line syntax
    many, many changes
    include proper ANSI header and fix usage diagnostic
    upgraded catime to allow N channels to be specified
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    replace use of epics_auto_ptr w/ eapt_array
    
    add helpers for udpiiu to calculate parameters maxPeriod and nTimers,
    allowing them to be const.
    Add SearchArray to hold fixed-size array of auto_ptr.
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Guard memset in camessage.c to prevent wild memory overrun if mismatch
    between payload and data size.
    Client side support for automatic resizing arrays.
    
    In this commit the channel access client is modified to allow a zero
    size request in a caget or camonitor call.  This is passed through to
    the corresponding CA_PROTO_READ_NOTIFY or CA_PROTO_EVENT__ADD message,
    but only if the minor version of the protocol is >=13.
    
    This commit also adds a new protocol test, CA_V413(), which detects a
    server which claims to understand the new zero length request.
    
    Finally, this commit prepares for a subtle change in the CA protocol.
    A request for a zero length subscription or data request, which will
    only be made for protocol version 4.13 and above, is interpreted as a
    request for autosized data, where the intrinsic dynamic length of the
    requested waveform should be returned.
    
    With the synchronous ca_array_get() call there is no mechanism available
    to pass back the size of the retrieved data if it is different from
    the requested count, so the simplest thing is to ensure we don't
    request autosizing data through this api.
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    Added virtual destructors (in most cases protected) to remove g++ warnings:
        'class ...' has virtual functions but non-virtual destructor
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    fixed bug occurring when interfacing with EPICS 3.11
    fixed ca_host_name() returns name of the local host
    getName() and getHostName return string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Changes to support communication with protocol revisions prior to 4.2 (EPICS 3.11)
    fixes for bugs 133 and 134 in Mantis
    o fixed clients that dont see server's beacon dont reconnect
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    o when successful search response arrives dont allow search period to get to long
    o dont scan channels when searching to find lowest retry count as this doesnt change behavior and adds overhead
    channelNode public memebers should be protected members
    fixed channel uninstall message was not sent to server and other problems
    Suppress HP aCC warnings.
    fixed ms warnings
    fixed solaris warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    new channel create received flag and new circuit responive, unresponsive, and
    hangup methods
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    fixed disconnect callback when channel known to be disconnected
    require guard when sending create chan msg
    receive watchdog delay diagnostic
    optimizations suggested by quantify
    removed throw specifications
    upgraded compiler specific macros
    upgraded compiler specific macros
    removed private array new/delete
    use epics_throws macro
    dont allow ordinary delete
    fixed visual c++ 6.0 build issues
    eliminate disconnect message from ca_task_exit
    dont include shareLib.h more than necessary
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    moved someof the functionality into the old interface
    firmed up compile time lock requirements
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    changed priotocol revision
    fixed warnings
    Changes for HP-UX 11 - first semi-stable version
    added new priority parameter
    simplified schedualing
    optimized out v41ok test
    added printf MF
    fixed sun pro warnings
    large array changes
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    Fixed warnings for HP-UX.
    fixed ca_host_name() returns name of the local host
    getName() and getHostName return string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Client side support for automatic resizing arrays.
    
    In this commit the channel access client is modified to allow a zero
    size request in a caget or camonitor call.  This is passed through to
    the corresponding CA_PROTO_READ_NOTIFY or CA_PROTO_EVENT__ADD message,
    but only if the minor version of the protocol is >=13.
    
    This commit also adds a new protocol test, CA_V413(), which detects a
    server which claims to understand the new zero length request.
    
    Finally, this commit prepares for a subtle change in the CA protocol.
    A request for a zero length subscription or data request, which will
    only be made for protocol version 4.13 and above, is interpreted as a
    request for autosized data, where the intrinsic dynamic length of the
    requested waveform should be returned.
    
    With the synchronous ca_array_get() call there is no mechanism available
    to pass back the size of the retrieved data if it is different from
    the requested count, so the simplest thing is to ensure we don't
    request autosizing data through this api.
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed 1st monitor update not delivered when didnt change
    when unresponsive
    fixed logic surrounding subscription cancel
    1) When channel is destroyed, but subscription not installed into a server
    2) When subscription is destroyed, but has not been installed in server
    new flag preventing subscription from being installed twice
    fixed gnu warnings
    fixed solaris warnings
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    bumped ifdef to sun pro version 5.4 -
    still waiting for sun pro to allow a virtual destructor
    removed throw specifications
    upgraded compiler specific macros
    upgraded compiler specific macros
    use epics_throws macro
    dont allow ordinary delete
    More HP aCC warnings fixed
    workaround for sunpro virtual destructor multiply defined symbols problem
    workaround for borland compiler does not have placement delete
    Updated license comments.
    workaround sun pro problem again
    moved chan out to derived class
    Changes for HPUX
    turn off hpux warnings
    workaround for sun pro bug
    all virtual functions in baseNMIU are now pure
    dont hide global new with placement new/delete
    workaround for ms compiler bug
    placement new issues
    made baseNMIU::show() virtual
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    turn of ms already instantiated warning
    simplified schedualing
    cosmetic
    large array changes
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    client: add module version numbering
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Update rsrv to support V4.13 protocol extension.
    
    The rsrv server is updated in this commit to deliver variable sized
    waveforms in response to a zero length request, implementing an
    extension to the v4 EPICS protocol tied to minor version 13.
    
    The core of the changes are in read_reply, rsrv/camessage.c, which first
    reserves packet space for the largest possible response, but then resizes
    the packet according to how much data is actually returned from the
    database.
    back out prev change
    added missing epicsShareExtern
    Expand READONLY macro, deprecate.
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    cosmetic
    changes for long being 64 bits
    dont include shareLib.h more than necessary
    added new type for DBR_CLAA_NAME.
    Updated license comments.
    fixed problem in dbr_text_to_type
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    large array changes
    broke apart monolithic iocinf.h header file
    osiTime=>epicsTime
    restored Roger Coles data type manipulation macros to their
    orignal horrific state
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed more sun pro warnings
    Always provide `extern' declaration of dbr_size, dbr_value_offset, and
    dbr_value_size.  For some reason g++ makes these `local' unless the
    extern declaration is present.
    first cut at multi-threading version
    support for C++
    split db_access.h so ca not dependent on db
    still changes for building win32 dlls
    changes for win32 dlls
    changes for building win32 dlls
    changes for creating DLLs
    replace osiClock calls with tsStamp calls
    removed redundant func protos
    Add DBR_CLASS_NAME
    C++ changes
    updated dll keywords
    API changes
    remove db_addr
    C++ support
    removed READONLY which disagrees with VAX compiler
    added include of stddef.h for gcc compilation
    vms changes
    removed #if 0
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    patch for DECXX compiler detected issues (found by Kazuro FURUKAWA)
    see <URL:http://www-linac.kek.jp/epics/osf/>
    Fixed warnings for HP-UX.
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    fixed borland build
    fixed scalar string to wire formatting
    fixed problem with large array header push optimization
    optimized protocol transfer
    removed throw specifications
    workaround for WRS T2.2 cygnus gnu compiler bugs
    cleaned up throw specifications
    cleaned up throw specifications
    upgraded compiler specific macros
    fixed borland warnings
    fixed borland warnings
    use epics_throws macro
    use placement new
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    optimized
    renamed functions and moved tcpiiu functions here
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    removed off normal code from inline function
    use explicit template instantiation
    restructure to eliminate use of select
    large array changes
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    better member func name
    rearrange include hierarchy
    moved inline def
    improved performance
    fixed deadlock discovered during connect / disconnect test
    fixed type of inclusion used
    removed debug message
    set debug level with unsigned number now
    cosmetic
    fixed GNU warnings
    fixed GNU and SUN PRO warnings
    many, many changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Set file+line for epicsMutex
    
    Makes the output of epicsMutexShowAll more useful wrt. libca.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    src/ca/client: no need to remove const
    repeaterSubscribeTimer.patch from lp:1479316
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for mantis 297
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed sunpro warnings
    fixes for bugs 133 and 134 in Mantis
    improved diagnostic
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    improved warning message
    Updated license comments.
    Changes for HP-UX 11 - first semi-stable version
    fixed sun pro warnings
    revert to using virtual destroy() to destroy timers
    no need to save pointer to timer queue now
    adapt to new timer API
    large array changes
    broke apart monolithic iocinf.h header file
    osiTimer => epicsTimer
    moved loc of attempts counter incr
    fixed GNU and SUN PRO warnings
    removed "pinging repeater" message
    cleaning up
    eliminate the UDP send thread
    fixed sun pro warnings
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    new #include
    Fixed/suppressed HP-UX native (aCC) warnings
    added ca_dump_dbr
    Updated license comments.
    fixed gnu warnings
    fixed gnu warnings
    large array changes
    broke apart monolithic iocinf.h header file
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    cosmetic
    Updated license comments.
    reduced scope of constants
    removed leftover junk
    cosmetic
    work around problems in the Tornado compiler
    adjust to changing hash table api
    large array changes
    broke apart monolithic iocinf.h header file
    reformat
    changed list interface
    fixed GNU and SUN PRO warnings
    fixes for various sun pro compiler warnings
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Make SearchDest.h include all the headers it needs
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed situations where local host name cache is repatedly created and destroyed
    getName() returns string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    adapt to new epicsSingleton interface
    Updated license comments.
    changed loacal host name cache object to an epics singleton
    use string.h until std c++ lib is stable
    broke apart monolithic iocinf.h header file
    many, many changes
    installed into CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    fixed ca_host_name() returns name of the local host
    getName() and getHostName return string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    Fixed warnings for HP-UX.
    no need to print channelname in show routine
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    removed throw specifications
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    upgraded compiler specific macros
    document ms compiler problems with placement delete
    dont allow use of ordinary delete
    More HP aCC warnings fixed
    Updated license comments.
    dont hide global new with placement new/delete
    workaround for gnu g++ bug
    workaround for ms compiler bug
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    use explicit template instantiation
    dont initiate IO in constructor
    dont always use default exception handler
    large array changes
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines to oldAccess.h
    fixed ws in endif clause
    dont hold lock while calling callbacks
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed ms warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Updated license comments.
    reordered init to eliminate gnu warning
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    auto-adjust iterations for payload size
    fixed formating
    fixed incorrect Mbps calc based on rounded payload size
    fixed gnu compiler issues
    report send and recv Mbps independently to better understand fullduplex ethernet bw
    upgraded to properly test array performance
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    initialize test values
    fixed to use const char chan name ptr
    reduced memory consumption with large channel counts
    Fixed catime auto-numbering PV format spec
    fixed test name
    Updated license comments.
    COSMETIC
    no message
    dont run if they specify zero channels
    fixed borland warning
    use uniform PV name extension
    changed the API for CA context manipulation
    no longer need to specify hash table size
    set number of channels guess
    large array changes
    broke apart monolithic iocinf.h header file
    osiTime=>epicsTime
    cosmetic
    many, many changes
    fixed gnu formatted IO warning
    correctly calculate the number of bytes in the CA connect sequence
    upgraded catime to allow N channels to be specified
    fixed printf format miss-match
    major revisions
    first cut at multi-threading version
    replace osiClock calls by tsStamp calls
    changes for iocCore port
    better message
    added latency test
    shorter iteration count for VMS
    cosmetic
    print Mbps
    fixed warning
    connect/search proto changes
    fixed warnings
    pc port changes
    asynch connect, faster connect, ...
    many pc port, const in API, and other changes
    fixed spelling
    new ca_pend_event() duration test
    assert.h => epicsAssert.h
    clean up
    NT/ALPHA(VMS/printf handler) changes
    Changes for NT, ALPHA/OSF, and VAX/VMS port
    CA performance improvement
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    workaround for legacy vxWorks compiler bug check
    imprved fix for mantis 312
    committed a fix for mantis 312
    getName() returns string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    upgraded ipAddrToAscii API and improved shutdown procedures
    dont use a free list
    Updated license comments.
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    added missing include
    restructure to eliminate use of select
    broke apart monolithic iocinf.h header file
    upgraded locking
    added new line at EOF
    improved performance
    upgraded use DNS asynchronously in order to avoid lock ups
    fixed sun pro warnings
    many, many changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca: large array free list is optional
    ca: support alloc larger than max array bytes
    
    automatically try to allocate a custom buffer
    when a message larger than ca max array bytes
    is encountered.
    Clean up build warnings from Darwin (clang).
    HPUX: Delete HP-specific return statements.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Bug fixes to CA client introduced by CA-over-TCP code.
    Client side support for automatic resizing arrays.
    
    In this commit the channel access client is modified to allow a zero
    size request in a caget or camonitor call.  This is passed through to
    the corresponding CA_PROTO_READ_NOTIFY or CA_PROTO_EVENT__ADD message,
    but only if the minor version of the protocol is >=13.
    
    This commit also adds a new protocol test, CA_V413(), which detects a
    server which claims to understand the new zero length request.
    
    Finally, this commit prepares for a subtle change in the CA protocol.
    A request for a zero length subscription or data request, which will
    only be made for protocol version 4.13 and above, is interpreted as a
    request for autosized data, where the intrinsic dynamic length of the
    requested waveform should be returned.
    
    With the synchronous ca_array_get() call there is no mechanism available
    to pass back the size of the retrieved data if it is different from
    the requested count, so the simplest thing is to ensure we don't
    request autosizing data through this api.
    Fixed issue "TCP Nameserver Connection Down Blocks All Callbacks" and cleaned up the SearchDest list / TCP circuit relation
    * Pulled out tcpiiu::SearchDestTCP to have cac create the SearchDest independent from the TCP circuit
    * Reorganized the relation between the SearchDestTCP and the TCP circuit:
      - SearchDest stays always on the cac list
      - TCP connection going down sets SearchDest inactive and SearchDestTCP's circuit member to NULL
      - Next seach request creates the new TCP circuit and sets SearchDestTCP's member, but leaves SearchDest inactive
      - Successful connect sets SearchDest active
    * ReceiveThread releases the cac mutex before going to sleep in connect loop
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    fix for mantis 366
    accomodate archaic vxWorks gnu compiler
    improved TCP circuit creation failure exception diagnostics
    fixed the following issues with detection of flow control mode
    o the flow control contig frame thresh should be based on max array size
    o it appears that the wakeup mechanism for the send thread, who sends
    the flow control on/off messages was broken
    o looking at full buffers isnt a perfect detection scheme compared to
    the simpler approach of just checking to see if bytes are pending in
    the socket before calling recv
    fix for mantis 357
    removed optimization which could make the ca client library
    vulnerable if the following function indicates recv bytes are pending but
    recv blocks anyways.
    
    osiSockIoctl_t bytesPending = 0;
    int status = socket_ioctl ( this->sock, FIONREAD, & bytesPending );
    made lib more robust if server sends duplicate connect channel response
    fix for mantis 284
    fix for compiler warnings in mantis 337
    fixed situations where local host name cache is repatedly created and destroyed
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    fixed compiler warning
    catch client initiated write requests with invalid dbr types in the client library
    fixed bug occurring when interfacing with EPICS 3.11
    removed return of void from void function which makes standards incompliant
    compiler bark
    fix for mantis 153
    better fix for mantis 111
    dont pass time stamp to receive watchdog notify
    fix for mantis 111: force recv thread to run first when both receive watchdog
    and receive thread are blocking for the preeemptive callback control lock
    
    I also added a guard in a place that appeared to be not  adaquately
    protected.
    fixed ca_host_name() returns name of the local host
    getHostName returns string size
    no longer needs to call exitWaitRelease
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Changes to support communication with protocol revisions prior to 4.2 (EPICS 3.11)
    fixed sunpro warnings
    fixes for bugs 133 and 134 in Mantis
    fixed gcc 3.4 issue
    fixed the following problems
    o application could hang for too long in ca_context_destroy() attempting a
    clean shutdown if circuit is known to be unresponsive
    o unexpected errno from recv message was improperrly supressed
    for locally initiated circuit abort
    many changes
    disconnect servers that send missaligned protocol
    disconnect servers that send missaligned protocol
    supress disconnect callback when context is destroyed
    fixed channel uninstall message was not sent to server and other problems
    fixed no reconnect 2nd time bug
    Bugfixes for compiling with -DDEBUG
    fixed ms warnings
    removed legacy unguard incompatible with current structure of code
    fixed solaris warnings
    hybernate send/receive threads when there are enobuf problems
    fixed gnu warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    fixed names
    many changes associated will disconnecting the channel but not disconnecting the circuit
    keep circuit open with disconnected channels attached if the circuit
    becomes unresponsive
    fixed disconnect callback when channel known to be disconnected
    Fixed HP aCC warnings
    added virtual circuit free list and fixed race condition in virtual circuit shutdown sequence
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    Fixed HP-UX (aCC) compiler warnings
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    cleaned up shutdown procedure
    Fixed/suppressed HP-UX native (aCC) warnings
    Minor stuff: broke up some looong strings in printf()s.
    thread safe socket error to string function
    removed msg minder
    changed name of protocol command
    patch for fdManager based client tool lock up problems
    added cacMessageProcessingMinder class
    added comQueSendMsgMinder class
    remo ved unused code
    optimized protocol transfer
    optimized time fetch during flush
    use posix sockets
    cosmetic
    Name change to reflect routine's affects on all 'slow' system calls.
    receive watchdog delay diagnostic and fixed echo request flush
    optimizations suggested by quantify
    improved client scedualing fro fdManager based apps
    removed throw specifications
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    fixed hang at exit problem
    fixed shutdown bug
    fixed premature shutdown under load bug
    improved shutdown
    the portable success test for ioctl is if it returns an int greater than or equal to zero
    continue with lock applied is holding lock?
    supress error message about bad fd when its a normal abort shutdown
    shut up purify (mistake is in winsock but we can init the var and avoid the umr)
    switch back to using peek to see if bytes are coming
    fixed premature disconnect under load bug
    cleaned up blockUntilBytesArePendingInOS ()
    dont spin for 50 calls to recv() if the incoming circuit is full - 5 times is probably better
    removed extra ws
    fixed comment
    fixed gnu warnings
    moved signaling code
    force receive thread to hang around for its blocking socket call interrupt signal
    upgraded compiler specific macros
    use epics_throws macro
    fixed gnu compiler errors
    o interrupt socket system calls on unix with a signal'
    o use placement new
    cosmetic
    eliminate disconnect message from ca_task_exit
    fixed sun pro warnings
    changed tsDLIterBD to tsDLIter
    supress bad fd message when circuit is aborted
    Updated license comments.
    exit send thread by returning, and not by epicsThread::exit()
    changed loacal host name cache object to an epics singleton
    doc
    improved tcp shutdown sequence
    avoid warning message on LInux
    optimized flush and fixed tcp shutdown sequence
    more work on tcp shutdown sequence
    cosmetic
    improved shutdown sequence
    moved functions to comQueSend
    many structural improvements
    improved exception handling
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    better test to see if a large message will fit in the old buffer
    changed circuit shutdown procedure
    fixed warnings
    Changes for HP-UX 11 - first semi-stable version
    Fixed function name misspelling.
    moved the tcp fd reg to be called from the udp thread
    function name change
    supress shutdown when a circuit times out while connecting
    use subroutine to compute the priority and dont restart
    the recv watchdog while holding the callback lock
    test for channel connected outside the clear channel request stub
    improved tcp shut down seq
    doc
    we must call shutdown in addition to close on Linux
    removed unnec lock
    make gnu hoppy
    restructure to eliminate use of select
    changed noop request to version request
    changes resulting from loss of one-to-one correlation between BHE and tcpiiu
    and added new priority parameter
    fixed gnu warning
    cosmetic
    changes to ensure graceful shutdown on LInux
    fixed shutdown to work for circuits that are connecting
    o increse stack size for threads calling call backs
    o use shutdown() to knock threads out of recv(), but will this work on Solaris ?
    The above change reacts to bugs in XTNextEvent() when an fd that has been
    closed is registerd with XtAppAddInput
    fixed borland warning
    fixed benign purify warning
    fixed solaris warnings
    improved recv schedualing
    simplified schedualing
    fixed potential deadlock
    improved schedualing of recv process thread
    fixed potential deadlock
    simplified locking
    fixed a disconnect related problem and also improved
    structure of locking
    properly display version number of server
    use osiSocklen_t
    use socklen_t for linux
    large array changes
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    dont hold lock while calling callbacks
    changed locking hierarchy
    fixed subscription install race
    many changes
    rearranged if hierarchy in read / write request protocol stubs
    changed list interface
    fixed sun pro warnings
    redesigned class hierarchy
    print warning message if IO is still installed in tcp iiu when
    it disconnects
    added beacon period diagnostic, fixed flush logic, made tcp
    recv and send watch dogs embedded objects
    improved IIU shutdown seq for IO
    upgraded event subscription logic
    fixed event subscriptions
    changes for osiThread=>epicsThread
    osi => epics name change  to accomodate aps
    accomodate Marty's osi => epics name changes
    cleaned up disconnect sequence
    g++ requires address operator for  mem func ptr
    bhe no-longer self deletes
    include inline func for gnu
    improved performance
    fixed deadlock discovered during connect / disconnect test
    removed debug output
    upgraded use DNS asynchronously in order to avoid lock ups
    improved shutdown behavior
    changed abotive shutdown
    fixed potential race condition and turned TCPNODELAY on
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    distinguish between a clean and an abrupt shutdown.
    cancel send watchdog timer immediately after exiting send
    execute shutdown locgic with lock applied
    fixed GNU warnings
    use socket_close () instead of shutdown ()
    fixed GNU and SUN PRO warnings
    many, many changes
    clean up
    added host name pointer function
    cleaning up
    added preemptive callback control
    reinstalled flow control
    increase the maximum size of the cached host name string
    elevated priority of CAC timer event thread
    added shutdown () sys call diagnostics
    fixed recv thread shutdown bug
    cleaned up disconnect timer logic
    check for shutdown condition when socket sys call returns EINTR
    cleaned up thread names
    cosmetic
    removed warning message when lower priority is unavailable
    write flush removed because it servers no purpose and slows
    things down
    fixes for various sun pro compiler warnings
    workaround for Solaris compiler bug
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    dont pass time stamp to beacon notify
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Bugfixes for compiling with -DDEBUG
    improved diagnostics
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    improved diagnostics
    fixed beacon time stamp initialization for beacons associated with active circuits
    optimizations suggested by quantify
    removed throw specifications
    replace server list with server pointer
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    upgraded compiler specific macros
    use epics_throws macro
    document ms compiler problems with placement delete
    fixed gnu compiler errors
    use placement new
    fixed beacon detect logic does not detect reconnected servers
    initialize the beacon sequence number
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    removed inline from bhe constructor
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    detect beacons duplicated by redundant routes
    dont use implicit template instantiation because Tornado II GNU isnt ready
    turn of ms already instantiated warning
    use explicit template instantiation
    fixed sun pro warning
    now there can be multiple tcpiiu per BHE
    added diagnostic
    large array changes
    broke apart monolithic iocinf.h header file
    changed org of free list locking
    fixed gnu warnings
    osiTime=>epicsTime
    added beacon period diagnostic
    bhe no-longer self deletes
    changed functions to not be inline to fix Borland build
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    cleaned up disconnect timer logic
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    allow freeList template arguments to be specified
    avoid conversion ambiguities
    upgraded compiler specific macros
    use epics_throws macro
    use placement new
    Updated license comments.
    dont hold lock while calling callbacks
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Updated license comments.
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    redesigned class hierarchy
    better destroy sequence
    removed unused methods and data
    improved message
    added missing void
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Try out a representative sample of APIs from multiple libraries
    Set file+line for epicsMutex
    
    Makes the output of epicsMutexShowAll more useful wrt. libca.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix build failure on Solaris
    use auto_ptr instead of epics_auto_ptr where applicable
    epicsMutex C++ API: New constructor and newEpicsMutex macro
    
    The new constructor accepts source file & line number.
    The macro passes these in.
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    fixed mantis 361
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    byte swap socket data structures with socket lib byte swap
    fixed mantis 239
    fixed mantis 239
    fixed R3.14.7 wont build for  vxWorks 6.0
    moved friend ca_clear_subscription to this file
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    should set the private variable id to nill when deleteing it
    epicsExit
    eliminated redundant code from subscription and channel destroy
    changed to call new idAssignAdd func
    fixed channel uninstall message was not sent to server and other problems
    Fix to get around weird HP aCC behaviour ("C" linkage for friends):
    caInstallDefaultService() calls a static member function instead of being a friend.
    fixed solaris warnings
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    fixed disconnect callback when channel known to be disconnected
    fixed borland build issues
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    += new copyright notice
    thread safe socket error to string function
    removed msg minder and moved cb locker to ca ctx class
    improved client scedualing fro fdManager based apps
    added beacon anomaly count diagnostic
    upgraded compiler specific macros
    use placement new
    changed the name of class oldCAC to ca_client_context
    fixed spelling
    fixed preemptive callback enable was backwards
    fixed maintenance of outstanding io count
    fixed sun pro warning
    reordered ctor init to eliminate gnu warning
    moved io in progress counter to old interface
    usue oldCAC specific mutex
    assume that new throws an exception
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    Changes for HP-UX 11 - first semi-stable version
    allow any CA system thread to attach to a ca context
    throw standard exception class
    simplified schedualing
    changed the API for CA context manipulation
    no longer need to specify hash table size
    set default number of channels guess
    fixed format problem
    fixed gnu warnings
    large array changes
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    fixed compiler warning
    Fixed fixes for HP-UX.
    Fixed warnings for HP-UX.
    fixed R3.14.7 wont build for  vxWorks 6.0
    fixed ca_host_name() returns name of the local host
    getName() and getHostName return string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    increased locking requirements
    fixed disconnect callback when channel known to be disconnected
    Updated license comments.
    more work on tcp shutdown sequence
    match new interface
    many structural improvements
    fixed syntax error detected only by sun pro
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    auto mutex release now requires an auto mutex
    Fixed function name misspelling.
    dont use implicit template instantiation because Tornado II GNU isnt ready
    turn of ms already instantiated warning
    use explicit template instantiation
    fixed problems where lock was released but channel was
    inconsistently attached to an IIU
    test for channel connected outside the clear channel request stub
    beacon period no-longer fetched through the IIU
    fixed borland warning
    simplified schedualing
    added recv proc flush postpone
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    doc
    changed locking hierarchy
    fixed subscription install race
    many changes
    removed redundant brackets
    fixed gnu warnings
    changed list interface
    fixed sun pro warnings
    redesigned class hierarchy
    added beacon period diagnostic
    improved IIU shutdown seq for IO
    upgraded event subscription logic
    fixed inlines that show up undefined only with gnu
    fixed event subscriptions
    accomodate Marty's osi => epics name changes
    added uninstallSubscription () func
    improved performance
    fixed deadlock discovered during connect / disconnect test
    eliminated claimsPendingIIU class and also debug sleep call
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed inline not emitted if not defined in module w virtual destructor and -g
    fixed GNU and SUN PRO warnings
    fixed inline virtual destructor
    many, many changes
    clean up
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed 1st monitor update not delivered when didnt change
    when unresponsive
    workaround for problems occurring when a channel or subscription is deleted in a get callback handler
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    dont allow ordinary delete
    Updated license comments.
    moved chan out to derived class
    Changes for HPUX
    all virtual functions in baseNMIU are now pure
    dont hide global new with placement new/delete
    workaround for gnu g++ bug
    workaround for ms compiler bug
    placement new issues
    fixed borland warning
    large array changes
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    optimized free list locking
    many changes
    fixed gnu warnings
    redesigned class hierarchy
    fixed missing inline func includes on sun pro
    improved IIU shutdown seq for IO
    removed disconnect virtual func
    removed include of inline func
    improved performance
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    clean up
    fixed some GNU warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    libca: addAddrToChannelAccessAddressList report success
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    Use compile-time assertions, from Micheal Davidsaver.
    fix for mantis 331
    s/FALSE/false/
    committed a fix for mantis 302
    socket related data structures should use socket byte swap
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    improved port default
    cosmetic
    Updated license comments.
    removed broadcast overlap testing
    call epics builtin inline byte swapping
    supress duplicate addr list message in certain situations
    Changes for HP-UX 11 - first semi-stable version
    fixed hpux warnings
    use explicit template instantiation
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    reformat
    allow CA addr list to include ports and improve duplicate detect
    upgraded use DNS asynchronously in order to avoid lock ups
    clean out orphans
    many, many changes
    added host name pointer function
    fixed duplicate address entry search loop bug
    install loopback address into the address list if no interfaces
    found during auto-configure.
    major revisions
    proper flush for claim messages
    changed symbol names and moved routines within the file
    fixed sun pro warnings
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed situations where local host name cache is repatedly created and destroyed
    Fixed warnings for HP-UX.
    o removed operator delete
    o default getHostName now returns string length
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting the circuit
    receive watchdog delay diagnostic
    fixed gnu warnings
    use epics_throws macro
    use placement new
    Updated license comments.
    doc
    changed loacal host name cache object to an epics singleton
    moved someof the functionality into the old interface
    changed standard priorities
    added new priority parameter
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    defunct
    simplified
    added beacon period diagnostic
    better variable name
    improved performance
    avoid benign diagnostic from error checking programs
    many, many changes
    added host name pointer function
    changed locking mechanisms
    fixes for various sun pro compiler warnings
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca: large array free list is optional
    ca: Fix client bug (race condition) in ipAddrToAsciiEngine
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    ca: Avoid possible race condition during cac shutdown.
    
    While the cac dtor runs and waits for TCP circuit threads to exit,
    new circuits could be opened by name resolution replies on existing
    (still active) circuits.
    Avoid this by setting a flag (lock being held) in the dtor, and
    checking it in cac::transferChanToVirtCircuit.
    Fixed issue "TCP Nameserver Connection Down Blocks All Callbacks" and cleaned up the SearchDest list / TCP circuit relation
    * Pulled out tcpiiu::SearchDestTCP to have cac create the SearchDest independent from the TCP circuit
    * Reorganized the relation between the SearchDestTCP and the TCP circuit:
      - SearchDest stays always on the cac list
      - TCP connection going down sets SearchDest inactive and SearchDestTCP's circuit member to NULL
      - Next seach request creates the new TCP circuit and sets SearchDestTCP's member, but leaves SearchDest inactive
      - Successful connect sets SearchDest active
    * ReceiveThread releases the cac mutex before going to sleep in connect loop
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    fixed the following issues with detection of flow control mode
    o the flow control contig frame thresh should be based on max array size
    o it appears that the wakeup mechanism for the send thread, who sends
    the flow control on/off messages was broken
    o looking at full buffers isnt a perfect detection scheme compared to
    the simpler approach of just checking to see if bytes are pending in
    the socket before calling recv
    fix for mantis 334
    fixed situations where local host name cache is repatedly created and destroyed
    Added virtual destructors (in most cases protected) to remove g++ warnings:
        'class ...' has virtual functions but non-virtual destructor
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    remove writeRequest from the interface
    fixed bug occurring when interfacing with EPICS 3.11
    better fix for mantis 111
    added comment
    prevent ~cac from completing if iiu uninstall is still in progress
    fixed CA fails if channel is destroyed in disconnect handler
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    no need to maintain count of circuits insttalled when they are installed on a
    doubly linked list
    supress disconnect callback when context is destroyed
    fixed channel uninstall message was not sent to server and other problems
    removed repeater confirm through cac
    fixed shutdown deadlock
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    new unresponsive circuit notify method
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    fixed disconnect callback when channel known to be disconnected
    fixed borland build issues
    upgraded ipAddrToAscii API and improved shutdown procedures
    added virtual circuit free list and fixed race condition in virtual circuit shutdown sequence
    function name change
    removed mmsg minder and eliminate dlow level knowledge of cb locker
    patch for fdManager based client tool lock up problems
    added cacMessageProcessingMinder class
    removed unused argument
    optimizations suggested by quantify
    improved client scedualing fro fdManager based apps
    removed throw specifications
    added beacon anomaly count diagnostic
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    added server list
    cosmetic
    upgraded compiler specific macros
    upgraded memory management
    use epics_throws macro
    use placement new
    fixed beacon detect logic does not detect reconnected servers
    dont include shareLib.h more than necessary
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    improved tcp shutdown sequence
    more work on tcp shutdown sequence
    moved someof the functionality into the old interface
    Changes for HPUX
    firmed up compile time lock requirements
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    auto mutex release now requires an auto mutex
    detect beacons duplicated by redundant routes
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    added privateUninstallIIU()
    removed destroyAllIO() func, and removed unused member data
    fixed problems where lock was released but channel was
    inconsistently attached to an IIU
    use subroutine to compute the priority
    restructure to eliminate use of select
    added new priority parameter
    removed unused code
    fixed borland warning
    simplified schedualing
    better test to determine if this is a receive processing thread
    fixed and also simplified locking logic
    correct fix for thread switch problem on Linux
    work correctly on systems without preemptive schedualing
    made mf private
    improved schedualing of recv process thread
    installed some limited self test capabilities so that the hash tables
    can be verified during regression testing
    fixed bug in proper cleanup of client context
    simplified locking
    fixed a disconnect related problem and also improved
    structure of locking
    rearranged code so that we have a late start
    process receive thread again
    IO deletes must wait for callback completion
    no need to specify hash table size
    set number of channels guess
    large array changes
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    use new data conversion interface
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    optimized protocol transfer
    optimized comBuf transactions
    fixed gnu warning
    optimizations suggested by quantify
    removed throw specifications
    upgraded compiler specific macros
    added parens to fix borland warning
    use epics_throws macro
    use placement new
    Updated license comments.
    optimized
    added comment
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    Explicit cast to fix HP aCC warning.
    fixed gnu warning
    restructure to eliminate use of select
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    use epicsMin/Max instead of tsMin/Max
    
    Don't remove tsMinMax.h yet as it appeared
    in caServerApp template.
    drop epicsMemory.h
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Deleted trailing ';' from epicsPlacementDeleteOperator macro
    (which looks like a member function, but isn't).
    Fixed issue "TCP Nameserver Connection Down Blocks All Callbacks" and cleaned up the SearchDest list / TCP circuit relation
    * Pulled out tcpiiu::SearchDestTCP to have cac create the SearchDest independent from the TCP circuit
    * Reorganized the relation between the SearchDestTCP and the TCP circuit:
      - SearchDest stays always on the cac list
      - TCP connection going down sets SearchDest inactive and SearchDestTCP's circuit member to NULL
      - Next seach request creates the new TCP circuit and sets SearchDestTCP's member, but leaves SearchDest inactive
      - Successful connect sets SearchDest active
    * ReceiveThread releases the cac mutex before going to sleep in connect loop
    Fix for: TCP Nameserver Connections Do Not Reconnect
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    made lib more robust if server sends duplicate connect channel response
    fixed situations where local host name cache is repatedly created and destroyed
    fix for mantis 297
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    fixed bug occurring when interfacing with EPICS 3.11
    fix for mantis 153
    better fix for mantis 111
    fix for mantis 111: force recv thread to run first when both receive watchdog
    and receive thread are blocking for the preeemptive callback control lock
    
    I also added a guard in a place that appeared to be not  adaquately
    protected.
    fixed ca_host_name() returns name of the local host
    getHostName returns string size
    removed waitRelease mf
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Changes to support communication with protocol revisions prior to 4.2 (EPICS 3.11)
    fixes for bugs 133 and 134 in Mantis
    fixed gcc 3.4 issue
    made two member functions private
    supress disconnect callback when context is destroyed
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    Changed the strange way that receiveTimeoutNotify() was declared as HP's aCC compiler didn't like it.
    many changes associated will disconnecting the channel but not disconnecting the circuit
    increased locking requirements and added unresponsive/responsive
    circuit notify methods
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    fixed disconnect callback when channel known to be disconnected
    cosmetic
    Updated to work with Kylix.
    added virtual circuit free list
    new sockHasBeenClosed flag
    require guard when sending create chan msg
    optimized time fetch during flush
    Name change to reflect routine's affects on all 'slow' system calls.
    receive watchdog delay diagnostic
    optimizations suggested by quantify
    improved client scedualing fro fdManager based apps
    removed throw specifications
    fixed 1st argument to select
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    improved shutdown
    cleaned up blockUntilBytesArePendingInOS ()
    new member function
    upgraded compiler specific macros
    guard against use of a nill pointer
    use epics_throws macro
    fixed gnu compiler errors
    use placement new
    Updated license comments.
    removed unused include
    improved tcp shutdown sequence
    more work on tcp shutdown sequence
    cleaned up shut down sequence
    many structural improvements
    fixed gnu warning
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class
    auto mutex release now requires an auto mutex
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    Fixed function name misspelling.
    added start(), removed destroy(), and made connect() private
    changed clear channel interface
    added stop threads member func
    restructure to eliminate use of select
    changed noop request to version request
    changes resulting from loss of one-to-one correlation between BHE and tcpiiu
    removed function parameter
    cleaned out recvFlag
    simplified schedualing
    no need to save pointer to timer queue now
    optimized word pop
    code clarity
    fixed sun pro warnings
    fixed gnu warnings
    large array changes
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    dont pass time stamp to receive watchdog notify
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Changes to support communication with protocol revisions prior to 4.2 (EPICS 3.11)
    fixes for bugs 133 and 134 in Mantis
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    fixed names
    many changes associated will disconnecting the channel but not disconnecting the circuit
    removed unused method
    optimized time fetch during flush
    receive watchdog delay diagnostic
    optimizations suggested by quantify
    Updated license comments.
    now stores a cac ref
    make copy constructor and assignment oper private
    restructure to eliminate use of select
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Suppress bogus HP aCC warnings
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Client side support for automatic resizing arrays.
    
    In this commit the channel access client is modified to allow a zero
    size request in a caget or camonitor call.  This is passed through to
    the corresponding CA_PROTO_READ_NOTIFY or CA_PROTO_EVENT__ADD message,
    but only if the minor version of the protocol is >=13.
    
    This commit also adds a new protocol test, CA_V413(), which detects a
    server which claims to understand the new zero length request.
    
    Finally, this commit prepares for a subtle change in the CA protocol.
    A request for a zero length subscription or data request, which will
    only be made for protocol version 4.13 and above, is interpreted as a
    request for autosized data, where the intrinsic dynamic length of the
    requested waveform should be returned.
    
    With the synchronous ca_array_get() call there is no mechanism available
    to pass back the size of the retrieved data if it is different from
    the requested count, so the simplest thing is to ensure we don't
    request autosizing data through this api.
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    eliminated redundancy with original ca client API
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    added fix for failure when nill access rights handler installed
    fixed ms warnings
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    moved conn cb change to be guarded by func in ca context class
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    eliminate disconnect message from ca_task_exit
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    fixed maintenance of outstanding io count
    reordered init to eliminate gnu warning
    moved io in progress counter to old interface
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    cosmetic
    Changes for HP-UX 11 - first semi-stable version
    turn of ms already instantiated warning
    use explicit template instantiation
    added priority parameter
    fixed sun pro warnings
    dont always use default exception handler
    fixed gnu warnings
    large array changes
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    changed loc of free list lock
    redesigned class hierarchy
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fix for mantis 346
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed 1st monitor update not delivered when didnt change
    when unresponsive
    workaround for problems occurring when a channel or subscription is deleted in a put callback handler
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    moved chan out to derived class
    Changes for HPUX
    all virtual functions in baseNMIU are now pure
    dont hide global new with placement new/delete
    workaround for gnu g++ bug
    workaround for ms compiler bug
    placement new issues
    fixed borland warning
    cosmetic
    large array changes
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    dont hold lock while calling callbacks
    optimized free list locking
    many changes
    fixed gnu warnings
    redesigned class hierarchy
    fixed missing inline func includes on sun pro
    improved IIU shutdown seq for IO
    removed disconnect virtual func
    removed include of inline functions
    improved performance
    added newline at EOF
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    clean up
    fixed some GNU warnings
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    better fix for mantis 111
    dont pass time stamp to send timeout notify
    hostName() function name change to getHostName()
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    Bugfixes for compiling with -DDEBUG
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    timeout now results in unresponsive circuit notify and not an abort shutdown
    removed knowledge of preemptive cb enable
    optimized time fetch during flush
    fixed shutdown bug
    improved message
    print warning message and dont disconnect if the client application
    is never reading its input
    Updated license comments.
    use cac ref to force tcpiiu shutdown
    supress disconnect message unles DEBUG is set
    fixed sun pro warnings
    revert to using virtual destroy() to destroy timers
    no need to save pointer to timer queue now
    adapt to new timer API
    large array changes
    broke apart monolithic iocinf.h header file
    osiTimer => epicsTimer
    reformat
    fixed sun pro warnings
    add new line at EOF
    made tcp recv and send watch dogs embedded objects
    distinguish between a clean and an abrupt shutdown.
    cancel send watchdog timer immediately after exiting send
    cleaned up disconnect timer logic
    changed message
    workaround for Solaris compiler bug
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    New DBE_PROPERTY event type and support in catools and mbbi/mbbo records
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Updated license comments.
    doc
    first cut at multi-threading version
    Moved cadev.h caerr.h and caeventmask.h to src/include.
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    use new data conversion interface
    updated little endian arch list to include defined(_armv4l_) || defined (_X86_64_)
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    cosmetic
    Updated license comments.
    large array changes
    fixed sun pro problem
    removed unused junk
    cleaned up arch ifdefs
    Add check for __i386__ to detect Linux 'x86 machines.
    major revisions
    added dll export keywords
    first cut at multi-threading version
    conn.c
    added defined(_X86_) for gnu C
    added beacon anomaly flag init/allow ip 255.255.255.255
    connect/search proto changes
    pc port changes
    asynch connect, faster connect, ...
    many pc port, const in API, and other changes
    Use dbr_ types
    NT/ALPHA(VMS/printf handler) changes
    little endian no MIT float byte swap
    dont alloc channel in response to search request changes
    Changes for NT, ALPHA/OSF, and VAX/VMS port
    Channel access changes from Jeff Hill.
    added access control and ring buffers
    ANSI C and select under vxWorks
    CA performance improvement
    added sccs ID and ca_test_io() and ca_host_name()
    cosmetic changes
    ANL/LANL integration
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved show function
    fix for mantis 306
    Fixed fixes for HP-UX.
    Fixed warnings for HP-UX.
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed sunpro warnings
    fixes for bugs 133 and 134 in Mantis
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Updated license comments.
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    redesigned class hierarchy
    better destroy sequence
    removed unused methods and data
    improved message
    added missing void
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fix: Return when called with no argument (to avoid failing assertion)
    Updated license comments.
    better progress logging during regression testing
    fixed selection of preemptive call back
    added a new parameter to the regresion test
    improved "usage" diagnostic
    many, many changes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    remove another __DATE__
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca: assume that CA name servers have minor version >=12
    
    Assume that servers listed in EPICS_CA_NAME_SERVERS
    support CA >=12, practically >=1 to support the
    authentication messages.
    EPICS_CA_AUTO_MAX_ARRAY_BYTES -> EPICS_CA_AUTO_ARRAY_BYTES
    replace caLimitArray with EPICS_CA_AUTO_MAX_ARRAY_BYTES
    ca: fix export caLimitArray on win32
    ca: large array free list is optional
    ca: Fix client bug (race condition) in ipAddrToAsciiEngine
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    ca: Avoid possible race condition during cac shutdown.
    
    While the cac dtor runs and waits for TCP circuit threads to exit,
    new circuits could be opened by name resolution replies on existing
    (still active) circuits.
    Avoid this by setting a flag (lock being held) in the dtor, and
    checking it in cac::transferChanToVirtCircuit.
    Examining the previous change I see that it will introduce a race condition when circuits are being created and destroyed at close to the same instant in time. See revision 11786 of cac.cpp which fixes mantis 334 if you are interested in what this code does. After running the regression tests, I pushed in a fix (which is removing above mentioned change and restoring the increment of iiuExistenceCount in cac::findOrCreateVirtCircuit.
    Bug fixes to CA client introduced by CA-over-TCP code.
    Fixed issue "TCP Nameserver Connection Down Blocks All Callbacks" and cleaned up the SearchDest list / TCP circuit relation
    * Pulled out tcpiiu::SearchDestTCP to have cac create the SearchDest independent from the TCP circuit
    * Reorganized the relation between the SearchDestTCP and the TCP circuit:
      - SearchDest stays always on the cac list
      - TCP connection going down sets SearchDest inactive and SearchDestTCP's circuit member to NULL
      - Next seach request creates the new TCP circuit and sets SearchDestTCP's member, but leaves SearchDest inactive
      - Successful connect sets SearchDest active
    * ReceiveThread releases the cac mutex before going to sleep in connect loop
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    improved VC creation failure exception diagnostics
    fixed the following issues with detection of flow control mode
    o the flow control contig frame thresh should be based on max array size
    o it appears that the wakeup mechanism for the send thread, who sends
    the flow control on/off messages was broken
    o looking at full buffers isnt a perfect detection scheme compared to
    the simpler approach of just checking to see if bytes are pending in
    the socket before calling recv
    made lib more robust if server sends duplicate connect channel response
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    fix for mantis 334
    fixed situations where local host name cache is repatedly created and destroyed
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    use new data conversion interface
    Stop "warning: `id' defined but not used" messages from gcc -- use a char[]
    instead of a char* and they go away!
    fixed mantis 260
    fix for a potential race in ca_context_destroy
    fixed send thread blocks trying to destroy the IIU because the
    callback lock was taken without using a callback lock manager
    fixed bug occurring when interfacing with EPICS 3.11
    Fixed fixes for HP-UX.
    Fixed warnings for HP-UX.
    dont pass time stamp to probe response notify
    fixed R3.14.7 wont build for  vxWorks 6.0
    hostName() renamed to getHostName()
    prevent ~cac from completing if iiu uninstall is still in progress
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed header name
    fixes for bugs 133 and 134 in Mantis
    eliminated very short window where channel could be installed
    by udp thread while  iiu is being destroyed.
    no need to maintain count of circuits insttalled when they are installed on a
    doubly linked list
    fixed logic surrounding subscription cancel
    1) When channel is destroyed, but subscription not installed into a server
    2) When subscription is destroyed, but has not been installed in server
    supress disconnect callback when context is destroyed
    changed to call new idAssignAdd func
    fixed id string
    fixed channel uninstall message was not sent to server and other problems
    new subscription member func preventing subscription from being installed twice
    use global printf for debug stuff
    Bugfixes for compiling with -DDEBUG
    removed repeater confirm through cac
    fixed shutdown deadlock
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    keep circuit open with disconnected channels attached if the circuit
    becomes unresponsive
    fixed disconnect callback when channel known to be disconnected
    upgraded ipAddrToAscii API and improved shutdown procedures
    fixed race condition in virtual circuit shutdown sequence
    added virtual circuit free list and fixed race condition in virtual circuit shutdown sequence
    improved disconnect search interval
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    cleaned up shutdown procedure
    Fixed/suppressed HP-UX native (aCC) warnings
    Minor fix: += generate local exception on virtual circuit disconnect.
    remove channels from circuit in timer expire callback
    removed mmsg minder and eliminate dlow level knowledge of cb locker
    changed name of protocol command
    patch for fdManager based client tool lock up problems
    fixed Borland warning
    removed unused argument
    optimizations suggested by quantify
    improved client scedualing fro fdManager based apps
    removed throw specifications
    added beacon anomaly count diagnostic
    fixed 1st argument to select
    fixed Linux warning
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    implement flush with fast access list
    gnu compiler required reinterpret_cast<> when converting from void * to another pointer
    reinterpret cast not required when casting a void * pointer to another pointer type
    suppress gnu warning
    simplified
    dont return void from a void function (some compilers dont support this)
    fixed gnu warnings
    upgraded compiler specific macros
    upgraded memory management
    use epics_throws macro
    use placement new
    fixed beacon detect logic does not detect reconnected servers
    eliminate disconnect message from ca_task_exit
    fixed sun pro warnings
    fixed sun pro warnings
    initialize the beacon sequence number
    added version string
    added version string
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    call errlogFlush() in ~cac
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    improved tcp shutdown sequence
    fixed another tcp shutdown problem
    more work on tcp shutdown sequence
    fixed udp shutdown in ~cac
    improved ioCancel and shutdown sequence
    moved someof the functionality into the old interface and improved shutdown sequence
    Changes for HPUX
    make this compile on vc++ 6
    fixed shutdown problem
    use auto_ptr to avoid leaks
    firmed up compile time lock requirements
    firmed up compile time lock requirements
    many structural improvements
    avoid useless vc++ warning
    template instantiation
    assume that new throws an exception
    made CA client service list an epics singleton
    fixed sun pro warning
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    changed channel and subscription uninstal procedures
    avoid deadlock when holding callback lock, deleting channel, but not
    identified as thread that might be in possesion of cb lock
    call epics builtin inline byte swapping
    Some more HP aCC warning fixes.
    cosmetic
    Changes for HP-UX 11 - first semi-stable version
    fixed build failure after Ralph's function spelling fix
    UDP wakeup message when channel is deleted is not required
    dont use implicit template instantiation because Tornado II GNU isnt ready
    turn of ms already instantiated warning
    use explicit template instantiation
    call tcp fd reg callback from UDP thread
    more restrictions on use of preemptive callback enabled - and
    merged IO cancel routine  into channel uninstall
    supressed message about orphaned IO requests at exit because it
    is perfectly normal for channels and therefore subscription IO
    blocks to exist at exit (its the user's responsability to delete
    them.
    changed sprintf format
    fixed problems where lock was released but channel was
    inconsistently attached to an IIU
    cosmetic
    use subroutine to compute the priority and rearranged cac constructor
    to be robust in the face of exceptions (workaround for TII g++ bug)
    send clear channel to the server when claim reply arrives and
    there is no matching channel in the client. Also cleared up
    other potential glitches related to deleting channels.
    improved tcpiiu shut down seq
    COSMETIC
    workaround for new ( std::no_throw ) Tornado II compiler bug check
    use std::bad_alloc()
    use proper form of delete
    fixed gnu warnings
    restructure to eliminate use of select
    changed noop request to version request
    fixed gnu warnings
    fixed hang during channel delete and added client prioritization
    removed double ECA_DISCONN exception callback
    send channel destroy exception to all IO  and send disconnect exception
    to subscription IO
    removed function parameter
    better message
    fixed borland warning
    cosmetic
    fixed IIU disconnect problem
    simplified schedualing
    fixed sun pro warnings
    better test to determine if this is a receive processing thread,
    and moved delay == 0 is wait forever to legacy ca_pend_io interface
    fixed and also simplified locking logic
    correct fix for thread switch problem on Linux
    kludge to test thread switch on Linux
    fixed cac rundown bugs
    changed name of constant and added block until recv
    backlog is complete to pend_event
    work correctly on systems without preemptive schedualing
    improved schedualing of recv process thread
    fixed diagnostic
    allow subscription delete from subscription callback
    installed some limited self test capabilities so that the hash tables
    can be verified during regression testing
    fixed autoLock where autoRelease should have been
    fixed bug in proper cleanup of client context
    simplified locking
    eliminate redundant code
    fixed a disconnect related problem and also improved
    structure of locking
    fixed gnu warning
    rearranged code so that we have a late start
    process receive thread again
    IO deletes must wait for callback completion
    fixed bug where resource was deallocated but it was
    still in the hash table, and no longer need to specify
    the hash table size
    set number of channels guess
    fixed bug where suibscription cancel request was not sent to
    server when user canceled IO
    fixed sun pro warnings
    large array changes
    fixed sun pro warning
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    changed file name
    dont hold lock while calling callbacks
    optimized free list locking
    fixed proper IO destroy when channel exits
    changed locking hierarchy
    osiTimer => epicsTimer
    fixed gnu warnings
    many changes
    removed redundant brackets
    removed function pointer dump
    fixed gnu warnings
    changed list interface
    dont delete channels in destructor
    cosmetic
    osiTime=>epicsTime
    make tcpiiu object unavailable to udp before shutting it down
    fixed logic when beacon arrives for a dead IIU
    better variable name
    upgraded event subscription logic
    moved inline include to appropriate file
    changes for osiThread=>epicsThread
    fixed sun pro warning
    fixed sun pro warnings
    accomodate Marty's osi => epics name changes
    cosmetic
    fixed bugs in disconnect sequence
    g++ requires address operator for  mem func ptr
    bhe no-longer self deletes
    improved performance
    upgraded use DNS asynchronously in order to avoid lock ups
    allowed acces to the chid from the evid
    improved management of per channel IO list
    proper cleanup of local channels
    made IO counter into independent class
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed repeater register port bug
    fixed inline not emitted if not defined in module w virtual destructor and -g
    fixed Linux uses unsigned where int is used on other OS
    fixed GNU and SUN PRO warnings
    many, many changes
    clean up
    specify that the client's timer queue is thread managed
    cleaning up
    added preemptive callback control
    reinstalled flow control
    eliminate the UDP send thread
    elevated priority of CAC timer event thread
    dont break out of semaphore block every 60 sec as in the past
    cleaned up disconnect timer logic
    cosmetic
    changed locking mechanisms
    use thread once during initialization
    changed the name of bsdSock{Attach,Release}
    added local channel rundown and split mutex
    fixed several bugs
    workaround for Solaris compiler bug
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    destroy putCallback prior to calling callback in case they delete the
    channel in the callback
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    supress channel destroy exception in "old" API  layer
    large array changes
    dont hold lock while calling callbacks
    changed loc of free list lock
    fixed sun pro warnings
    redesigned class hierarchy
    fixed sun pro warnings
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    ca: suppress repeated UDP error messages
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    use epicsMin/Max instead of tsMin/Max
    
    Don't remove tsMinMax.h yet as it appeared
    in caServerApp template.
    drop epicsMemory.h
    replace use of epics_auto_ptr w/ eapt_array
    
    add helpers for udpiiu to calculate parameters maxPeriod and nTimers,
    allowing them to be const.
    Add SearchArray to hold fixed-size array of auto_ptr.
    src/ca/client: no need to remove const
    repeaterSubscribeTimer.patch from lp:1479316
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    fix for mantis 297
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    dont allow unbounded round trip estimates
    fixed bug occurring when interfacing with EPICS 3.11
    fixed ca_host_name() returns name of the local host
    getHostName returns string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    o fixed clients that dont see server's beacon dont reconnect
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    o when successful search response arrives dont allow search period to get to long
    o dont scan channels when searching to find lowest retry count as this doesnt change behavior and adds overhead
    fixed gcc 3.4 issue
    fixed channel uninstall message was not sent to server and other problems
    removed repeater confirm through cac
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    increased locking requirements
    fixed disconnect callback when channel known to be disconnected
    improved disconnect search interval
    restructured locking to match current design practices for CAC
    receive watchdog delay diagnostic
    optimizations suggested by quantify
    improved client scedualing fro fdManager based apps
    fixed 1st argument to select
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    simplified
    dont include shareLib.h more than necessary
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    more work on tcp shutdown sequence
    export shutdown capability for ~cac
    removed removeAllChannels() mf
    adapt to interface change
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    auto mutex release now requires an auto mutex
    make copy constructor and assignment oper private
    restructure to eliminate use of select
    simplified schedualing
    better test to determine if this is a receive processing thread
    large array changes
    fixed sun pro warning
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    patch for DECXX compiler detected issues (found by Kazuro FURUKAWA)
    see <URL:http://www-linac.kek.jp/epics/osf/>
    Added virtual destructors (in most cases protected) to remove g++ warnings:
        'class ...' has virtual functions but non-virtual destructor
    installed osdWireFormat.h
    use new data conversion interface
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    optimized string out
    optimized protocol transfer
    optimized time fetch during flush
    optimized comBuf transactions
    optimizations suggested by quantify
    removed throw specifications
    upgraded compiler specific macros
    fixed problem introduced by warning fix
    added parens to fix borland warning
    use epics_throws macro
    use placement new
    Updated license comments.
    optimized
    Changes for HPUX
    restructured
    assume that new throws an exception
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    All HPUX warnings fixed.
    added cast
    Some more HP aCC warning fixes.
    fixed warnings
    Changes for HP-UX 11 - first semi-stable version
    Minor changes to fix HP aCC warnings.
    fixed gnu warning
    restructure to eliminate use of select
    simplified schedualing
    added new pop routines
    large array changes
    broke apart monolithic iocinf.h header file
    upgraded locking
    fixed borland warning
    improved performance
    fixed deadlock discovered during connect / disconnect test
    use proper form of include
    fixed GNU and SUN PRO warnings
    many, many changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca: Fix acctst.c for older C compilers
    
    All declarations must still precede other statements within a block...
    fixed test name in output
    improved multiSubscrDestroyNoLateCallbackTest quality by temporarily raing the priority of the main thread in the ca context
    fixed the test name of multiSubscrDestroyNoLateCallbackTest
    removed deadlock potential from test code
    improved the quality of the multiSubscrDestroyLateNoCallbackTest
    fixed credit line comment
    regression test for https://bugs.launchpad.net/epics-base/+bug/1179642
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved test id in diag message
    monitorAddConnectionCallbackTest test was too specific -
    we shouldnt test for exactly two subscription updates when
    more than two is sufficent
    added \n to printf diagnostic
    improved failure diagnostic
    use verify instead of assert
    improved fdManagerVerify progress diagnostics
    improved test diagnostic
    added test failure diagnostic
    added SEVCHK string
    fixed broken test
    improved tests
    improved tests
    improved tests
    improved tests
    improved tests
    improved tests
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    test for mantis 346
    regression test for mantis 284
    fix for compiler warnings in mantis 337
    added verifyContextRundownFlush
    ANSIfication of stuff (mostly missing argument types in declarations)
    fixed compiler warning
    improved test
    added ca_name() test
    added epicsExit
    fixed to use const char chan name ptr
    added manually operated chan disconnect / connect test
    added channel connected context destroy test
    removed call to epicsThreadSleep() in verifyImmediateTearDown()
    added test to detect failure when nill access rights handler installed
    removed status check from ca_pend_event
    new regression tests
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    fixed regression tests so that they specify preemptive callback for local pv situation
    changes allowing the test to work with enumerated channels
    documented level required to get a channel dump
    improved the ca_task_exit() trest
    added test to detect ca context run down problems
    added test to detect ca context run down problems
    added void to func proto
    more stringent connect w disconnected chan test
    cosmetic
    fixed too many messages from test
    improved diagnostics
    improved test
    added more progress indicators
    improved test
    added receive watchdog delay test
    fixed gnu compiler issue
    improved client scedualing fro fdManager based apps
    fixed gnu warning
    added beacon anomaly count diagnostic
    improved assert failure in test
    made ca_pend_io() tmo configuarble
    increased timeout
    fixed gnu warning
    improved prioritized channel test
    added diagnostics
    cleaned up test
    added display of time
    improved diagnostics
    moved gr enum test up
    fixed message
    removed extra cr
    proper search for beacon period parm
    fixed beacon period name
    deallocate memory when test completes
    Updated license comments.
    fixed spelling
    better progress logging during regression testing
    cosmetic
    upgraded test
    changed test order
    increased time out
    improved test
    better function name
    improved test
    removed c++ style comment
    added more array tests
    added additional tests
    changed time out
    fuixed warning messages
    added a new parameter to the regresion test
    cosmetic
    cosmetic
    cosmetic
    improved test for local channels
    wait for connection count to return to normal
    restructure to eliminate use of select
    test the entire priority range
    added a test to verify client side priorities
    fixed no write access test  management bug
    improved test
    fixed borland warning
    improved beacon period test
    more tests
    fixed comment
    detect problems with ca poll
    fixed spelling in comment
    upgraded test diagnostics
    improved test diagnostics
    use Eric's new putenv API
    added test for monitor delete in event callback
    installed some limited self test capabilities so that the hash tables
    can be verified during regression testing
    fix improper auto ptr release bug
    improved monitor first update test
    added time stamp tests
    added more tests
    added more exception tests
    added array exception test
    improved diagnostic
    avoid precision problems with 0.0 constant
    removed use of TRUE and FALSE
    restored ca_pend()
    fixed bug in test
    fixed gnu warnings
    large array changes
    broke apart monolithic iocinf.h header file
    changed to C style comment
    improved test
    fixed spelling
    improved beacon period test
    removed use of TRUE
    removed use of min./max
    fixed gnu warnings
    made tests work with local channels
    osiTime=>epicsTime
    fixed conn handler conn test to allow multiple loops
    fixed C++ style comment in C file
    added several new tests
    rearranged order of tests
    improved subscription test
    call diagnostic routines
    improved performance
    allowed acces to the chid from the evid
    restored Roger Coles data type manipulation macros to their
    orignal horrific state
    detect problems with type manipulation macros
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed GNU and SUN PRO warnings
    many, many changes
    added test for first subscription update
    no message
    improved test
    fixed several bugs
    major revisions
    fixed more sun pro warnings
    first cut at multi-threading version
    replace osiClock calls by tsStamp calls
    changes for iocCore port
    improved access control message
    added gr dbl test
    added dbr_long_t readback test
    improved VAX floating point
    fixed warnings
    verify that conn is dropped when channel count goes to zero
    fixed include
    cleanup
    use epicsAssert.h
    added array as string test
    fixed problem where 3.13.beta11 unable to connect to 3.11 with correct native type
    added no pend event in event call back test
    improved CPU consumption by select() under vxWorks
    fixed warnings
    connect/search proto changes
    local host connect compatible
    asynch connect, faster connect, ...
    fixed array test
    doc
    added additional vector tests
    included string.h
    many pc port, const in API, and other changes
    umsigned => unsigned
    fixed NT warnings
    fixed gnu warnings
    turned on analog value wrap-around test
    many 3.13 beta changes
    changed put test
    more tests
    improved the test
    MS windows changes
    Added test of the duration of ca_pend_event()
     better fp test
    assert.h => epicsAssert.h
    init conts var that will later be initialized by CA.
    epicsPrintf() changes
    NT/ALPHA(VMS/printf handler) changes
    .
    fixed vx exit handler problems
    dont alloc channel in response to search request changes
    Changes for NT, ALPHA/OSF, and VAX/VMS port
    removed #if .
    Channel access changes from Jeff Hill.
    access control changes
    access control mods
    *** empty log message ***
    added access control and ring buffers
    ANSI C conversion & select() under vxWorks
    replace #elif with equiv. #else - #if defined() ... #endif for non-ANSI-C preprocessors
    merged LANL changes
    put away for mda correction of (#elif's)
    CA performance improvement
    added sccs ID and ca_test_io() and ca_host_name()
    ca_printf
    *** empty log message ***
    updated CA test routines
    sun4 support added
    ANL/LANL integration
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    destroy getCallback prior to calling callback in case they delete the
    channel in the callback
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed channel delete in get callback handler bug discovered by regression tests
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    supress channel destroy exception in "old" API  layer
    large array changes
    dont hold lock while calling callbacks
    upgraded locking
    fixed sun pro warnings
    redesigned class hierarchy
    fixed sun pro warnings
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    updated caEventRate to allow multiple subscriptions and provide better statistics
    Updated license comments.
    improved "usage" diagnostic
    installed event rate test
    doc/ca: clarify variable size array subscription
    (cherry-picked from branch 3.15)
    Remove EPICS Base submodules
    Move all under modules/ca
    Update version number in CAref.
    
    Also removed Amaya and validator stuff.
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix EPICS_CA_AUTO_ARRAY_BYTES doc'n in CAref.html
    CAref mention EPICS_CA_MCAST_TTL
    EPICS_CA_AUTO_MAX_ARRAY_BYTES -> EPICS_CA_AUTO_ARRAY_BYTES
    ca: update CAref.html with changes to beacon address list
    
    Note that server beacon address list will no longer
    consider client address list as a fallback.
    Update version numbers for 3.15.1-rc1
    Linux builds: Define _GNU_SOURCE and _DEFAULT_SOURCE
    
    These replace the mixture of macros used to pick the features
    presented by the standard system header files on Linux.
    
    Updated the section of the CA reference manual that showed some
    example compile lines to correct for 3.15 build changes.
    
    Removed unused code & out-of-date comments.
    Document changes.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    catools: Fix help text for "-s" option (also in CA RefMan)
    ca: Minor fix in CA Reference Manual
    ca: Added chapter about firewalls to CA Reference Manual
    CAref: Under DBR_STSACK_STRING s/ackv/acks/
    Document the dynamic-array changes.
    Added EPICS_CA_NAME_SERVERS paragraph. Fixed lots of minor issues (unprintable characters).
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    Added doc for new DBE_PROPERTY flag in CA Reference Manual
    Added -l.. commandline options to catools (by Stephanie Allison)
    added more excas options
    documented excas
    doc for excas
    test for mantis 285
    EPICS_CA_BEACON _PERIOD wasnt listed as the default for EPICS_CAS_BEACON_PERIOD
    New DBE_PROPERTY event type and support in catools and mbbi/mbbo records
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    restored doc for ca_add_fd_registration
    Added -p option to commandline tools to specify CA priority.
    Changed timestamp related commandline options, added choice of client and/or server timestamps.
    Added CSS style for function headers.
    Fixed Mantix #127.
    += caput -c option; updated usage infos and documentation to match
    $Id$ keyword broken.
    improved doc on preemptive callback mode
    fixed html 4.01 compliance issues
    fixed repeated sentance
    clarrified return from ca_poll, ca_pend_event
    added ca_context_detach
    no message
    clarified search rate doc
    command line tools caget, camonitor: += as-string option.
    doc for EPICS_CA_MAX_SEARCH_PERIOD
    added warnings about calling CA from interrupt context, also more doc
    about vxWorks 5.4 netowrk stack pool
    added additional doc on array size config
    added -420 for China's MIN_WEST
    fixed ca_context_create doc
    o added additional data type doc
    o added more info on binding servers to interfaces
    fixed argument declaration in ca_clear_channel
    removed use of EPICS_CA_ADDRESS_LIST
    fixed undefined link
    added build doc
    Added <space><dot> after the $Id$ so amaya doesn't wrap inside the $...$.
    += Doc for commandline tools added in 3.14.6
    fixed beacon address list configuration doc
    more doc on the ca repeater
    Bugfix in trigger mask spec
    fixed channel uninstall message was not sent to server and other problems
    print only one message for each beacon if every beacon is printed
    every  beacon printed option for casw
    added sections on behavior changes in R3.14.5
    clarified how one determines if a channel is connected
    added comment about lifespan of dbr pointer
    deleted repeated word
    fixed structure
    fixed structure
    fixed structure
    fixed spelling
    added section discussing reconnect issues when server's address changes
    += First version of CA commandline tools (caget only)
    += caget
    mentioned that CA port numbers have been registered with iana
    small clarification
    small clarification
    updated doc on ca_client_status()
    cleaned up casw doc
    removed duplicate word
    depricated ca_add_event
    added ca_dump_dbr
    fixed spelling
    added para on ca client library context
    small change to section on netmasks
    fixed spelling
    better explanation of subnet masks
    Use <th> for table header lines.
    TS_MIN_WEST = 0 for UK, not -60 (except in summer time...)
    Attempt to stop amaya's word-wrap from inserting a line-break in the middle
    of the $Id:...$ expansion, which prevents CVS from recognizing.
    fixed several spelling errors
    Fixed some internal link targets that didn't exist.
    improved acctst doc
    added paragraph on mbuf starvation
    upgraded error code section
    updated caEventRate to allow multiple subscriptions and provide better statistics
    swapped "client" for "server" in one place
    added client does not see server's beacons troubleshooting hyperlink
    added doc for structures
    documented structures passed by value to callbacks
    added doc for
    o EPICS_CAS_INTF_ADDR_LIST
    o dbr_type_to_text
    o and many small clarifications
    added an example for indexing arrays within a structured CA data type
    index entry for ca_sate
    removed epicsShareAPI keyword
    document the CA data types
    new command line to casw
    added description of CA repeater
    clean up
    improved server configuration documentation
    Various cleanup edits.
    No text changes, just layout.
    Changed (c) comments to HTML comments,
    Added charset to content-type header,
    fixed one HTML validator error.
    Updated license comments.
    added ca_context_status()
    fixed improper documentation of connection timeout default
    better progress logging during regression testing
    clarified monitor subscription interface
    document port config
    moved CVS revision
    added CVS revision
    fixed index
    improved doc on direct acces to fields in the per channel structure
    fixed format of code embedded in descriptive text
    added warning about direct access to fields in the channel structure
    stated that multiple threads are not allowed if preemptive callback is disabled
    doc
    changed ca create channel doc
    fixed redundant titles
    added doc for channel priorities
    fixed amaya link
    added date entry
    added amaya icon
    fixed more of the links
    installed into CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up build warnings from Darwin (clang).
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    removed junk
    Updated license comments.
    firmed up compile time lock requirements
    placement new issues
    LOCAL => static
    changed name of constant and added block until recv
    backlog is complete to pend_event
    large array changes
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    made destructors virtual
    dont hold lock while calling callbacks
    optimized free list locking
    changed locking hierarchy
    fixed gnu warning
    osiTimer => epicsTimer
    many changes
    changed list interface
    fixed sun pro warnings
    redesigned class hierarchy
    osiTime=>epicsTime
    removed unused semaphore
    installed workaround for gnu warning
    made tcp send / recv watch dogs be embedded objects
    improved IIU shutdown seq for IO
    upgraded event subscription logic
    fixed gnu warnings introduced by prev change
    fixed borland warning
    fixed event subscriptions
    changes for osiThread=>epicsThread
    osi => epics name change  to accomodate aps
    accomodate Marty's osi => epics name changes
    removed disconnect vf, added isZSubscripton vf
    use extern "C" with func def so that arg missmatch will be detected
    bhe no-longer self deletes, export repeater related functionality
    removed redun qual
    improved performance
    fixed deadlock discovered during connect / disconnect test
    upgraded use DNS asynchronously in order to avoid lock ups
    removed debug message
    improved management of per channel IO list
    use of static on operator new and delete does not appear to follow
    convention (other than in effective C++)
    eliminated claimsPendingIIU class and moved IO counters into
    independent class
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed sunpro warning
    distinguish between a clean and an abrupt shutdown.
    cancel send watchdog timer immediately after exiting send
    removed unused data member
    clean out orphans
    removed declaration for unused class
    fixed GNU and SUN PRO warnings
    fixed inline virtual destructor
    many, many changes
    clean up
    added host name pointer function
    cleaning up
    added preemptive callback control
    reinstalled flow control
    increase the maximum size of the cached host name string
    eliminate the UDP send thread
    elevated priority of CAC timer event thread
    cleaned up disconnect timer logic
    check for shutdown condition when socket sys call returns EINTR
    addded lock member functions
    removed variable which is no-longer extern
    fixed build problem (lack of cacChannel class in cacIO.h)
    added local channel list and split mutex to avoid deadlock
    fixed gnu warnings
    fixed several bugs
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    workaround for Solaris compiler bug
    major revisions
    dont include addrList.h
    fixed sun pro warnings
    fixed more sun pro warnings
    doc
    use virtual destructor
    remoded const from puser member
    first cut at multi-threading version
    replace osiClock calls by tsStamp calls
    dont include osiTime.h
    changes for iocCore port
    added prenthesis around arguments to VALID_MSG macro
    fixed problem with VALID_MSG(PIIU) macro
    dont detect a flow control situation when select is telling us there is
    something to read when there isnt anything there
    added ca_vprintf() function
    improved the way that socket error numbers are converted to strings,
    changed () to (void) in func proto, and fixed missing parameter to
    checkConnWatchdogs() bug resulting from this
    added congestion thresh parm for search alg
    Modified log message.
     CLR_CA_TIME() now correctly zeros the delay
    removed caHostFromInetAddr
    added lock count var
    fixed task variable problem
    fixed problem where 3.13.beta11 unable to connect to 3.11 with correct native type
    Added an explicit include of tsDefs.h before cadef.h to avoid the
    functions in it being declared as export and also to avoid its
    allocating space when it should be declaring a reference.
    fixed dll export problems
    added beacon anomaly flag init/allow ip 255.255.255.255
    improved CPU consumption by select() under vxWorks
    connect/search proto changes
    send_needed => pushPending, and added ca_number_iiu_in_fc
    use free lists
    pc port changes
    asynch connect, faster connect, ...
    smaller external sym name for VAXC
    many pc port, const in API, and other changes
    local except => except handler
    removed os specific code
    removed unused proto
    restored io_done_sem (removed by cleanup)
    fixed posix signal problem with "cc -Xc"
    many 3.13 beta changes
    function prototype changes
    Use recast delay greater than one vxWorks tick
    Initial delay between search frames went from .1 to .01 sec,
    Added flush pending flag, Make all usage of port be unsigned short.
    added func proto for cacDisconnectChannel()
    added KLUDGE def of S_db_Pending
    added shareLib.h and const to proto
    added caIOBlockListFree() declaration
    assert.h => epicsAssert.h
    fix cast causes excess CPU consumption
    epicsPrintf() changes
    NT/ALPHA(VMS/printf handler) changes
    removed debug
    added new EPICS env var
    fixed delete of cast iiu when all disconn chan deleted
    fixed vx exit handler problems
    more fixes for use of defunct task var under vxWorks
    Fixed vxWorks exit handler used wrong task variable
    dont alloc channel in response to search request changes
    Changes for NT, ALPHA/OSF, and VAX/VMS port
    More Channel Access Revisions from Jeff Hill.
    Channel access changes from Jeff Hill.
    organizing os dependent code
    quick disconnect changes
    access control changes
    *** empty log message ***
    *** empty log message ***
    added access control and ring buffers
    now caches the beacon addr and period seen so far
    ANSI C and select under vxWorks
    pointer => client id
    V5 switches out
    replace #elif with equiv. #else - #if defined() ... #endif for non-ANSI-C preprocessors
    changed dll/lst to ellLib stuff
    merged LANL changes
    changed from dll to ell
    put away for mda correction of (#elif's)
    changed (LIST to DLLLIST) and (NODE to DLLNODE)
    Modified to support vxWorks5.1 and GNU2.2.3 cross compiler.
    CA performance improvement
    added sccs ID and ca_test_io() and ca_host_name()
    added excep fd's and send_needed flag
    initial rebroadcast delay is now a #define
    declare post_msg() integer
    new vxWorks variable for task with the event lock
    *** empty log message ***
    preprocessor syntax error under UNIX
    V4/V5 vxWorks
    *** empty log message ***
    server handles client crash
    sun4 support added
    ANL/LANL integration
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    use epicsMin/Max instead of tsMin/Max
    
    Don't remove tsMinMax.h yet as it appeared
    in caServerApp template.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved show function
    initialize time at last send when creating search timer. This
    guarantees no possibility of bogus search response delay
    measurement
    fix for mantis 258
    fixed R3.14.7 wont build for  vxWorks 6.0
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed gnu warnings
    fixed sunpro warnings
    fixes for bugs 133 and 134 in Mantis
    avoid cast that reduces size of type
    Added a cast for HP's compiler
    o fixed clients that dont see server's beacon dont reconnect
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    o when successful search response arrives dont allow search period to get to long
    o dont scan channels when searching to find lowest retry count as this doesnt change behavior and adds overhead
    removed junk
    Bugfixes for compiling with -DDEBUG
    many changes associated will disconnecting the channel but not disconnecting the circuit
    fixedsearch interval computation
    improved disconnect search interval
    Fixed HP aCC compiler warnings
    restructured locking to match current design practices for CAC
    optimizations suggested by quantify
    removed double checked lock optimzation
    Updated license comments.
    o upgraded udp to use version and sequence numbers
    o fixed race condition in search timer
    search timer now uses a private lock
    correct logic surrounding search timer schedualing flags
    use udp specific mutex
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    auto mutex release now requires an auto mutex
    Changes for HP-UX 11 - first semi-stable version
    dont delay for initial round trip estimate until first search
    revert to using virtual destroy() to destroy timers
    no need to save pointer to timer queue now
    adapt to new timer API
    large array changes
    broke apart monolithic iocinf.h header file
    changed locking hierarchy
    fixed min type mismatch for 68k
    osiTimer => epicsTimer
    many changes
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    fixed GNU and SUN PRO warnings
    many, many changes
    use iter.valid() and not iter.eol() (cosmetic)
    cleaning up
    added preemptive callback control
    reinstalled flow control
    eliminate the UDP send thread
    elevated priority of CAC timer event thread
    major revisions
    fixed sun pro warnings
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert epicsShareAPI to epicsStdCall in modules/ca
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Expand READONLY macro, deprecate.
    More ANSI C conversion
    addred proto for ca_detach_context
    ca_get_host_name() used to return void, but has been changed to
    return the string length.
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    depricated ca_add_event
    added ca_dump_dbr
    removed epicsShareAPIV
    receive watchdog delay diagnostic
    added beacon anomaly count diagnostic
    doc
    dont include shareLib.h more than necessary
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    added ca_context_status()
    fixed dll symbol export
    vixed pre ansi c prototype
    Reintroduced two different interfaces (=widths) for priority.
    Changes for HP-UX 11 - first semi-stable version
    added new routine that tests if preemptive callback is enabled
    use ca_client_context in the original API
    changed ca_client_context to oldCAC
    changed standard priorities
    new create channel API
    removed junk
    changed the API for CA context manipulation
    installed some limited self test capabilities so that the hash tables
    can be verified during regression testing
    no longer need to specify hash table size
    set number of channels guess
    restored ca_pend()
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    fixed proto for trad C
    fixed comment and directly call ca_pend_xxx
    redesigned class hierarchy
    added beacon period diagnostic
    changes for osiThread=>epicsThread
    changes from Ken Evans
    use extern "C" with func def so that arg missmatch will be detected
    allowed acces to the chid from the evid
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    added preemptive callback control
    reinstalled flow control
    fixed gnu warnings
    fixes for various sun pro compiler warnings
    various gnu compiler dialect issue fixes
    major revisions
    separate pvAdapter definitions from cadef
    dont wrap other header files with extern "C"
    cosmetic
    cosmetic
    removed 'const' from ca_add_fd_registration arg
    fixed prototype for ca_add_exception_event()
    cleaned up include order
    fixed more sun pro warnings
    added ca_puser()
    Move conditional inclusion of stdarg.h after conditional define of CAC_ANSI_FUNC_PROTO.
    first cut at multi-threading version
    Moved cadev.h caerr.h and caeventmask.h to src/include.
    added ca_signal_formatted ()
    improved the way that socket error numbers are converted to strings,
    changed () to (void) in func proto, and fixed missing parameter to
    checkConnWatchdogs() bug resulting from this
    fixed comment
    improved doc
    added missing macros
    added ca_get_ioc_connection_count ()
    more changes to allow traditional C
    improved doc
    fixed problem where 3.13.beta11 unable to connect to 3.11 with correct native type
    fixed pre-ansi compiler no macros problem
    const=>READONLY
    connect/search proto changes
    updated DLL keywords
    pc port changes
    asynch connect, faster connect, ...
    doc
    fixed spelling
    reorganized for improved readability
    many pc port, const in API, and other changes
    added ca_version() proto and pFile/lineNo args to exception args
    VMS changes and traditional C changes
    added sync grp status and ca_poll()
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    fixed situations where local host name cache is repatedly created and destroyed
    getName() returns string size
    use less than full length of buffer with gethostname in case there are errors in the implementation of gethostname
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    adapt to new epicsSingleton interface
    Updated license comments.
    changed loacal host name cache object to an epics singleton
    Ensure that host name is always null-terminated.
    fixed problem discovered by Eric Norum
    fixed sun pro warnings
    many, many changes
    installed into CVS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    we dont need tocheck the return from new with assert
    fixed sun pro warning message
    record connection delays
    workaround for visual c++ 6.0 not compatible with c++ standards
    longer timeout
    changed to 1:1 ratio channels to monitors to better reflect reality
    removed unused parameter
    better diagnostic
    fixed gnu warning
    updated caEventRate to allow multiple subscriptions and provide better statistics
    use fprintf because errlogPrintf output is clipped at exit
    Updated license comments.
    use errlogPrintf
    broke apart monolithic iocinf.h header file
    fixed sun pro warnings
    osiTime=>epicsTime
    installed event rate test
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1179642
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    fix for mantis 297
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixed ms warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    fixed gnu warning
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    adapt to interface change
    moved exception hanling to C interface
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    removed deadlock vulnerabilities
    restructure to eliminate use of select
    simplified schedualing
    changed name of constant and added block until recv
    backlog is complete to pend_event
    fixed a disconnect related problem and also improved
    structure of locking
    dont always use default exception handler
    large array changes
    broke apart monolithic iocinf.h header file
    moved oldChannelNotify inlines to oldAccess.h
    fixed gnu warning
    dont hold lock while calling callbacks
    changed locking hierarchy
    fixed gnu warning
    fixed gnu warnings
    upgraded locking
    changed list interface
    redesigned class hierarchy
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    use iter.valid() and not iter.eol() (cosmetic)
    cleaning up
    added preemptive callback control
    reinstalled flow control
    dont break out of semaphore block every 60 sec as in the past
    fixed some GNU warnings
    various gnu compiler dialect issue fixes
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    new show interface
    fixed disconnect notify supressed when channel state is disconnected
    many changes associated will disconnecting the channel but not disconnecting the circuit
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    improved diagnostics
    removed unused argument
    removed throw specifications
    replace server list with server pointer
    cosmetic
    upgraded compiler specific macros
    upgraded compiler specific macros
    upgraded memory management
    use epics_throws macro
    use placement new
    fixed beacon detect logic does not detect reconnected servers
    dont include shareLib.h more than necessary
    new diagnostics
    Updated license comments.
    made constructor public
    removed inline from bhe constructor
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    detect beacons duplicated by redundant routes
    make copy constructor and assignment oper private
    turn of ms already instantiated warning
    now there can be multiple tcpiiu per BHE
    large array changes
    broke apart monolithic iocinf.h header file
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    Try out a representative sample of APIs from multiple libraries
    Fix ..// => ../ in Makefile-relative source paths
    avoided embedded TOP for non sub-modules
    Set embedded modules' SHRLIB_VERSION from CONFIG variables
    Remove EPICS Base submodules
    Move all under modules/ca
    Move CA version numbers into cfg/CONFIG_CA_VERSION
    Freeze SONAME=4.13.1
    client: add module version numbering
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    drop all templateInstances.cpp
    
    No longer needed by any targets.
    ca: Only install test $(OBJ) files on vxWorks.
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Install test objects on vxWorks only.
    RCS files now used for all cygwin and mingw builds.
    build template instances only for vxWorks
    fixes for bugs 133 and 134 in Mantis
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Only build OBJS for vxWorks.
    Changes for shared libraries and os consistancy.
    fixed cpu consumption problems in clients that use fd managers
    together with ca fd registration
    eliminate disconnect message from ca_task_exit
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    eliminated the tcp kill timer
    added template instance file
    new modules
    Added win32 resource file.
    install ca diagnostics header file
    added html doc
    rearranged code so that we have a late start
    process receive thread again
    Changes to create vxWorks archive libraries and prods.
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    new files
    redesigned class hierarchy
    installed event rate test
    fixed borland warning
    added casw
    improved performance
    upgraded use DNS asynchronously in order to avoid lock ups
    removed junk
    changed names and added new source files
    better diagnostics and disconnect claims pending channels
    in tcpiiu::~tcpiiu
    many, many changes
    added new source file: localHostName.cpp
    added preemptive callback control
    reinstalled flow control
    fixed gnu warnings
    major revisions
    separate pvAdapter definitions from cadef
    first cut at multi-threading version
    first cut at multi-threading version
    first cut at multi-threading version
    Do nothing Makefile.
    new way to build
    dont build if_depen.c under vxWorks
    More Makefile changes for R3.14.
    for 3.14 only single Makefile
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca: Fix client bug (race condition) in ipAddrToAsciiEngine
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    upgraded ipAddrToAscii API and improved shutdown procedures
    Minor changes added for Borland's C++ compiler on Linux
    removed throw specifications
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    upgraded compiler specific macros
    upgraded memory management
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    fixed memory leak
    firmed up compile time lock requirements
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    simplified schedualing
    broke apart monolithic iocinf.h header file
    reformat
    upgraded use DNS asynchronously in order to avoid lock ups
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Updated license comments.
    moved someof the functionality into the old interface
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    1) replaced elimateExcessiveSendBacklog with
    requestMessageBytesPending and flush
    2) Removed callback control guards from this interface
    Suppress bogus HP aCC warnings
    fixed ca_host_name() returns name of the local host
    getName() and getHostName return string size
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    fixed channel uninstall message was not sent to server and other problems
    fixed solaris warnings
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    increased locking requirements
    fixed disconnect callback when channel known to be disconnected
    receive watchdog delay diagnostic
    eliminate disconnect message from ca_task_exit
    Updated license comments.
    more work on tcp shutdown sequence
    new virtual iiu interface
    many structural improvements
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    auto mutex release now requires an auto mutex
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    Fixed function name misspelling.
    fixed problems where lock was released but channel was
    inconsistently attached to an IIU
    changed clear channel interface
    beacon period no-longer fetched through the IIU
    simplified schedualing
    added recv proc flush postpone
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    avoid conversion ambiguities
    Updated license comments.
    make copy constructor and assignment oper private
    fixed bug where resource was deallocated but it was still in the hash table
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    src/ca/client: no need to remove const
    repeaterSubscribeTimer.patch from lp:1479316
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    fix for mantis 297
    Suppress bogus HP aCC warnings
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Updated license comments.
    make copy constructor and assignment oper private
    no need to save pointer to timer queue now
    adapt to new timer API
    large array changes
    broke apart monolithic iocinf.h header file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting
    the circuit
    many changes associated will disconnecting the channel but not disconnecting the circuit
    added noop cb lock/unlock in base
    Updated license comments.
    broke apart monolithic iocinf.h header file
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    redesigned class hierarchy
    better destroy sequence
    removed unused methods and data
    improved message
    added missing void
    major revisions
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    caRepeater /dev/null
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    fixes for bugs 133 and 134 in Mantis
    Updated license comments.
    broke apart monolithic iocinf.h header file
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    cache the client ctx ref prior to calling callback in case they delete the
    channel in the callback
    fixed a bug where the callback control gaurd was used from a different thread
    than the one that created it
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Minor changes added for Borland's C++ compiler on Linux
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    Updated license comments.
    changed the name of class oldCAC to ca_client_context
    io counters are now in old interface
    moved template instances to a separate file
    avoid useless vc++ warning
    template instantiation
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    turn of ms already instantiated warning
    use explicit template instantiation
    cosmetic
    supress channel destroy exception in "old" API  layer
    clean up get copy ifit fails prematurely
    fixed sun pro warnings
    large array changes
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    fixed sun pro warnings
    fixed gnu warnings
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    we dont need tocheck the return from new with assert
    Updated license comments.
    commented out unreachable code
    broke apart monolithic iocinf.h header file
    osiTime=>epicsTime
    fixed sun pro warnings
    use proper form of include
    changed messages
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Added Multicast to caRepeater
    
    Modifications to allow for CA multicast listening by adding multicast address
    from EPICS_CA_BEACON_ADDR_LIST (or EPICS_CA_ADDR_LIST if beacon list is empty).
    Original modifications from Jim Smedinghoff, with further changes by Pierrick Hanlet.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    exp passed to assert must not change the state of the data structures
    fixed gnu warning
    fixed gnu warnings
    use new data conversion interface
    added missing included
    new #include
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    removed calls to exit() which cause problems on RTEMS where exit() has
    different behavior than on vxWorks.
    fixed logic error in repeaterClient::verify
    many changes associated will disconnecting the channel but not disconnecting the circuit
    Fixed HP aCC warnings
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    Minor changes added for Borland's C++ compiler on Linux
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed what appears to be a socket leak
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    fixed socket return from makeSocket not initialized
    thread safe socket error to string function
    removed throw specifications
    Suppressed HPUX warnings.
    fixed bogus undefined symbols with hpux compiler
    upgraded compiler specific macros
    removed unused paramter tag
    document ms compiler problems with placement delete
    use placement new
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    += more comments
    avoided large bss
    many structural improvements
    avoid useless vc++ warning
    template instantiation
    LOCAL => static
    epicsAutoMutex has a new name, fixed free lists, and use c++ thread class,
    and fixed dll symbol exports
    fix for CONNRESET with disconnected udp socket issue
    call epics builtin inline byte swapping
    fixed warnings
    Moved CA_..._PORT static casts from caProto.h into C++ sources.
    Changes for HP-UX 11 - first semi-stable version
    turn of ms already instantiated warning
    use explicit template instantiation
    changed noop request to version request
    fixed sun pro warning
    fixed gnu warnings
    broke apart monolithic iocinf.h header file
    changed loc of free list lock
    fixed gnu warnings
    changed list interface
    removed gnu warning elim class
    installed workaround for gnu warning
    changes for osiThread=>epicsThread
    replace nill beacon addr as nec
    added new debug message
    fixed sun pro warning
    cosmetic
    fixed Linux uses unsigned where int is used on other OS
    fixed GNU and SUN PRO warnings
    many, many changes
    cosmetic
    cosmetic
    codmetic
    cosmetic
    cosmetic
    changed the name of bsdSock{Attach,Release}
    cosmetic
    major revisions
    use new symbol name
    fixed sun pro warnings
    first cut at multi-threading version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Convert modules/ca to use LIBCA_API instead of epicsShare
    
    Also unified the header exclusion guard names,
    removed a couple of files that are no longer used,
    dropped the '3.13.7' from the Copyright header.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    removed CVS Id tokens as they cause never ending hassles when merging
    in from branches
    Updated license comments.
    cosmetic
    reduced scope of constants
    removed leftover junk
    Reintroduced two different interfaces (=widths) for priority.
    Changes for HP-UX 11 - first semi-stable version
    changed name of priority member
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    allow c++
    new way to build
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    use aToIPAddr and auto attach to winsock if its a static build
    moved inline destructor here
    connect proto changes
    new header file for ipAddrToA()
    API changes
    many improvements
    vxWorks port changes
    (char *) cast below is for brain dead wrs prototype
    SOLARIS port
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    added ca_dump_dbr
    eliminated annoying 5 second delay when waiting for completion
    print dbr type as a text string
    Updated license comments.
    wait a bit longer for IO completion
    osiTime=>epicsTime
    replace tsStampToText with tsStampToStrftime
    clear channel to avoid disconnect warning
    call ca_task_exit()
    fixed printf format warnings from GNU
    use YYYY/MM/DD
    self define ERROR and OK
    new way to build
    replace calls to tsDefs.h by calls to tsStamp
    3.14 has only a single Makefile
    use proper format for unsigned number
    fixed warning
    use arch indep types
    Get rid of error messages
    Clean up and get rid of warninmg messages
    removed gnu warnings
    fixed gcc warnings
    check status in call back
    use DBR_STRING parameter instead of just zero
    use arch independent types
    Resolve diffs between last commits
    made ca_test.c (more) portable
    Changed long to dbr_long_t to get rid of warnings
    Fixed get so it doesnt try ACK request types
    added def for print_returned
    handle enums as unsigned short
    Fixed enums
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    documentation
    changed char to long to be safe- oustanding count
    *** empty log message ***
    Made compatable with db_test.c
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    improved syntax diagnostic
    changes for osiThread=>epicsThread
    add call to threadInit
    self define ERROR and OK
    get definition for ERROR
    new way to build
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    Fixed some inconsistencies with data print formats for enums and arrays.
    Added -p option to specify CA priority.
    Applied caput patches from Andy Foster; updated usage infos to match
    fixed msvc++ 8 assert failure.
    
    I had a closer look at the MS and the POSIX doc. It appears that
    there is confusion between the two related to how the arguments
    are interpreted when the user buffer pointer is null. In the POSIX
    doc it clearly states that the count only applies if the user pointer
    isn't nill. In the MS doc it clearly states that the count is also the
    size of the internally allocated buffer when the user pointer is nill.
    
    It seems that a reasonable compromise will be to specify a buffer
    size of BUFSIZ (defined by POSIX and fortunately also by windows).
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Fix: name clash on Solaris.
    Use epicsTime (instead of tsDefs); improved timestamp format and behaviour; fixed compiler warnings.
    oops.
    += cainfo
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    catools: Fix help text for "-s" option (also in CA RefMan)
    Add autosizing array support for caget and camonitor.
    Added -l.. commandline options to catools (by Stephanie Allison)
    Remove fake BNL copyright notice until we have a license agreement.
    New DBE_PROPERTY event type and support in catools and mbbi/mbbo records
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    Fixed some inconsistencies with data print formats for enums and arrays.
    Added -p option to specify CA priority.
    Minor fix in help message.
    Changed timestamp related commandline options, added choice of client and/or server timestamps.
    Applied caput patches from Andy Foster; updated usage infos to match
    Win32 doesn't support line buffering, so fflush after every printf.
    Patches for max array size determination as suggested by Malcolm Waters (Diamond).
    fixed msvc++ 8 assert failure.
    
    I had a closer look at the MS and the POSIX doc. It appears that
    there is confusion between the two related to how the arguments
    are interpreted when the user buffer pointer is null. In the POSIX
    doc it clearly states that the count only applies if the user pointer
    isn't nill. In the MS doc it clearly states that the count is also the
    size of the internally allocated buffer when the user pointer is nill.
    
    It seems that a reasonable compromise will be to specify a buffer
    size of BUFSIZ (defined by POSIX and fortunately also by windows).
    Use separate flag for once_connected state; += as-string option.
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    += connection status reporting (based on Jeff's suggestions plus timestamps for connection loss events)
    Use correct option character.  optopt is valid only when getopt returns '?'.
    Cosmetic changes (misleading var name).
    Fix: name clash on Solaris.
    Use epicsTime (instead of tsDefs); improved timestamp format and behaviour; fixed compiler warnings.
    += '-g' option to set %g precision
    camonitor += relative and incremental timestamps
    += camonitor
    Fixed DLL definitions for epicsGetopt (on WIN)
    += epicsGetopt to declare (default) or implement (WIN) getopt()
    Removed malloc.h reference (Eric says ANSI says stdlib.h)
    Added parseOptions to add getopt() functionality (and allow compiling on WIN32)
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    ca/client/tools: add -F option to caput usage output
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    catools: Fix caput so it can write enums w/o strings
    Memory allocation checks from Micheal Davidsaver.
    Fix: caput quits when connection fails (catools)
    Remove fake BNL copyright notice until we have a license agreement.
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    Fixed some inconsistencies with data print formats for enums and arrays.
    Added -p option to specify CA priority.
    Fixed possible race condition storing callback status.
    Applied caput patches from Andy Foster; updated usage infos to match
    Fixed comment.
    Integrating change by Malcolm Waters: += put_callback option - heavily based on caget
    fixed msvc++ 8 assert failure.
    
    I had a closer look at the MS and the POSIX doc. It appears that
    there is confusion between the two related to how the arguments
    are interpreted when the user buffer pointer is null. In the POSIX
    doc it clearly states that the count only applies if the user pointer
    isn't nill. In the MS doc it clearly states that the count is also the
    size of the internally allocated buffer when the user pointer is nill.
    
    It seems that a reasonable compromise will be to specify a buffer
    size of BUFSIZ (defined by POSIX and fortunately also by windows).
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Add os-independent epicsStrtod() routine.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Move the string array declarations into alarm.h
    
    This also removes all internal use of alarmString.h which
    is now deprecated again (see 3.14.5, Jan 2004).
    Move alarm string arrays into libCom
    
    Using idea from Peter Heesterman:
     * Instanciate the alarm strings once in libCom
     * Remove the epicsAlarmGlobal macro
     * Make sure the decorations are right
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Add autosizing array support for caget and camonitor.
    Added -l.. commandline options to catools (by Stephanie Allison)
    Memory allocation checks from Micheal Davidsaver.
    Remove CVS Id that causes just too much trouble.
    Remove fake BNL copyright notice until we have a license agreement.
    Print OFS for empty (suppressed) STAT/SEVR fields (catools)
    Fix: Print indentation (catools)
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    Fixed some inconsistencies with data print formats for enums and arrays.
    Added -p option to specify CA priority.
    Changed timestamp related commandline options, added choice of client and/or server timestamps.
    Use separate flag for once_connected state.
    += connection status reporting (based on Jeff's suggestions plus timestamps for connection loss events)
    Warning fix.
    Cosmetic changes (misleading var name).
    Bugfix for absolute timestamps.
    Fix: name clash on Solaris.
    Use epicsTime (instead of tsDefs); improved timestamp format and behaviour; fixed compiler warnings.
    camonitor += relative and incremental timestamps
    Removed malloc.h reference (Eric says ANSI says stdlib.h)
    Added parseOptions to add getopt() functionality (and allow compiling on WIN32)
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    catools: Fix help text for "-s" option (also in CA RefMan)
    Add autosizing array support for caget and camonitor.
    Added -l.. commandline options to catools (by Stephanie Allison)
    Memory allocation checks from Micheal Davidsaver.
    Remove fake BNL copyright notice until we have a license agreement.
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    Fixed some inconsistencies with data print formats for enums and arrays.
    Added -p option to specify CA priority.
    Fix: Don't print space after single value, only between values of an array
    Applied caput patches from Andy Foster; updated usage infos to match
    Patches for max array size determination as suggested by Malcolm Waters (Diamond).
    Integrating change by Malcolm Waters: fix for "-c -w 0" hanging forever
    fixed msvc++ 8 assert failure.
    
    I had a closer look at the MS and the POSIX doc. It appears that
    there is confusion between the two related to how the arguments
    are interpreted when the user buffer pointer is null. In the POSIX
    doc it clearly states that the count only applies if the user pointer
    isn't nill. In the MS doc it clearly states that the count is also the
    size of the internally allocated buffer when the user pointer is nill.
    
    It seems that a reasonable compromise will be to specify a buffer
    size of BUFSIZ (defined by POSIX and fortunately also by windows).
    Use separate flag for once_connected state; += as-string option.
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Use correct option character.   optopt is valid only when getopt returns '?'.
    Cosmetic changes (misleading var name).
    Fix: name clash on Solaris.
    Use epicsTime (instead of tsDefs); improved timestamp format and behaviour; fixed compiler warnings.
    += cainfo
    += '-g' option to set %g precision
    Fixed DLL definitions for epicsGetopt (on WIN)
    += epicsGetopt to declare (default) or implement (WIN) getopt()
    Removed malloc.h reference (Eric says ANSI says stdlib.h)
    Added parseOptions to add getopt() functionality (and allow compiling on WIN32)
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Add autosizing array support for caget and camonitor.
    Added -l.. commandline options to catools (by Stephanie Allison)
    Remove CVS Id that causes just too much trouble.
    Remove fake BNL copyright notice until we have a license agreement.
    Bugfixes plus added support for escaping non-printables and field separator to CA commandline tools.
    Added support for handling strings as arrays of char (aka long strings); new -S option switches this feature.
    Fixed some inconsistencies with data print formats for enums and arrays.
    Added -p option to specify CA priority.
    Changed timestamp related commandline options, added choice of client and/or server timestamps.
    Use separate flag for once_connected state.
    += connection status reporting (based on Jeff's suggestions plus timestamps for connection loss events)
    Cosmetic changes (misleading var name).
    Fix: name clash on Solaris.
    Use epicsTime (instead of tsDefs); improved timestamp format and behaviour; fixed compiler warnings.
    camonitor += relative and incremental timestamps
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Move all under modules/database
    Pull in the podToHtml.pl script and rules from 3.15
    
    This lets src/cap5 build with Perl installations that lack Perl's
    podchecker and pod2html scripts (e.g. Fedora 27).
    Install databaseModuleDirs.pm into bin/<host>
    
    Adjust all scripts to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    RTEMS: Add epicsMemFs and hook for app specific FS setup
    
    Default falls back to network FS.
    
    Compile in a set of files as a epicsMemFS structure.
    epicsMemFsLoad() creates a set of files based on this.
    Move maclib.pm to libcom
    Perl scripts use perl module for RELEASE dependencies
    Change paths for tools from this module
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Support for 'make junitfiles' target.
    
    The Perl XML::Generator module must be installed to use this.
    Support "link(name, lset)" syntax in DBD files
    
    Both Perl and dbStaticLib support included.
    Also added a new std/link directory for link types.
    Nothing looks up the registered link support tables yet.
    tools: install assembleSnippets.pl
    tools: Support for DB files, added dbExpand.pl
    Perl style fixes, document more Perl programs
    Generate documentation from Perl modules
    
    Add rules to generate HTML from POD in Perl modules and scripts.
    Generate docs from several EPICS/ Perl modules.
    Add podRemove.pl script
    
    Use this to generate .dbd files from .dbd.pod files
    so installed *Record.dbd files don't have the
    dbdCommon.dbd file expanded out.
    
    Fixes lp:1417428
    Build stability fixes
    
    Change menuGlobal.dbd and stdRecords.dbd to be generated
    as a list of unexpanded include statements, not expanded
    out as they have been recently on this branch. This means
    any .dbd.pod files in those lists don't have to have been
    filtered to remove the POD statements which significantly
    simplifies the dependency graph. I had experienced build
    loops at times, which this change should prevent.
    src/tools: export additional variables to pkg-config
    
    No need for new names/capitalization
    src/tools: ensure epics-base.pc is generated only for EPICS_HOST_ARCH
    Restructured patch.
    
    * Move the construction of the .pc files into src/tools
    * Make more use of the built-in rules for variable substitution
    * Make PKGCONFIG an Makefile variable for installing .pc files
    * Use EPICS_PATCH_LEVEL for the final digit in the version number
    introduce genVersionHeader.pl
    configure: Removed generation of xxxInclude.dbd files
    
    Rules now expand the source DBD files directly in to the target.
    Also removed the makeIncludeDbd.pl script which is no longer needed.
    Add podToHtml.pl script
    
    New rules to use this for .pod and .pm conversions
    Replace use of pod2html in ca/client/perl
    Make HTMLS_DIR default to . if not set.
    
    Remove HTMLS_DIR setting for files generated from DBD/POD.
    Change dbdToHtml.pl to parse POD from DBD comments
    registerRecordDeviceDriver updates
    
    Added -D and -o <outfile> options
    Changed the build rules to use -o
    Moved the script into src/tools
    tools: Delete makeDbDepends.pl from Makefile
    Delete filterWarnings.pl script
    
    Was only used on HPUX which we don't support any more.
    Move src/dbHost scripts and modules into src/tools.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    Use $FindBin::Bin so we don't need to expand @TOP@.
    Needed for package management systems such as in Debian.
    Fix generation of .t files on Windows.
    Work done in makeMakefileInclude.pl now done in RULES_TARGET.
    Renamed convertRelease target 'STDOUT' to 'releaseTops' and fixed build files.
    Removed the -h option to convertRelease, use $ENV{EPICS_HOST_ARCH} instead.
    Reworked variables associated with expandVars to make it simpler to use.
    Split EPICS::Utils module into three parts.
    Moved code from fullPathName.pl into the new EPICS::Path module.
    Changed convertRelease.pl to use new modules.
    Added some documentation to RELEASE_NOTES.html
    Moved Perl modules from Ctlsys to EPICS.
    Cleanup and corrections in expandVars@.
    Removed perl scripts cp.pl mkdir.pl mv.pl rm.pl.
    Removed EXPANDFLAGS definition. It is defined in configure/RULES_EXPAND.
    Removed debugging lines.
    Moved configure/tools files to src/tools directory.
    moved to top/configure/tools
    3.14 has only a single Makefile
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Moved tools to src/tools dir. base/tools dir removed.
    Changes for replacing default.dctsdr by all ascii files
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Apply partial solution for Windows builds of Cap5
    cap5: Fix replace_access_rights_event() channel method
    cap5: Add replace_access_rights_event() channel method
    cap5: Fix fisibility of boot_Cap5
    
    Old method doesn't work any more, not sure what changed.
    Move the string array declarations into alarm.h
    
    This also removes all internal use of alarmString.h which
    is now deprecated again (see 3.14.5, Jan 2004).
    cap5: Fix symbol export when using -fvisibility=hidden
    
    The boot_Cap5 symbol must be exported for the module to load.
    Clean up warnings on Darwin
    Clean up build warnings from clang.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    cap5: Support dynamic array sizes through the Perl API.
    Reduce warnings when built with Perl 5.10.
    Make certain that long strings are zero-terminated.
    Allow subscriptions of length zero, means native size.
    Modified to build on Perl 5.8.4.
    Added an END {} block and CA->context_destroy method for proper shutdown.
    Added long string support and DBE_PROPERTY.
    Cosmetic.
    Make ca_put use best_type for both single-valued and array PVs.
    Added Perl5 interface to CA.  Not tested on Windows...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    ca: Minor cleanups in capr.pl
    ca: Support DBF_INT64 and DBF_UINT64 in capr.pl
    ca: Fix capr.pl to handle missing fields properly
    
    When using an EPICS 7 softIoc.dbd file with a PV from an older version
    of Base which didn't have all the fields, our attempts to read those
    fields will time out, but the internal logic was buggy. Don't try to
    print the values of timed out fields at all. The user will still see a
    warning about connection timeouts at the top.
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/ca
    Install caModuleDirs.pm into bin/<host>
    
    Adjust capr.pl to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Add caModuleDirs.pm, needed for capr.pl
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Several cleanups.
    * Fixed number base issue
    * DBD file parser accepts spaces
    * Added -w seconds option for CA timeout
    * Improved argument parsing
    * More perlish, should start up faster
    Removes complaints when the string to print has dollars.
    Simplistic solution to parser problems
    consistently use double quotes
    removing ezca strings mapping
    Help or capr.pl
    renaming variables and cleaning-up
    Default interest level, clean up
    
    Removing one-parameter caget.
    Interest level zero if not specified
    Require default dbd
    removing diagnostics
    re-organizing print out and diagnostics
    Install capr.pl
    Parallel caget
    Comment removed
    relocating library refs within base
    Adding capr.pl
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix oops in last commit
    Apply partial solution for Windows builds of Cap5
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added Perl5 interface to CA.  Not tested on Windows...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update some version numbers in documentation
    cap5: Add replace_access_rights_event() channel method
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    cap5: Support dynamic array sizes through the Perl API.
    cap5: minor documentation updates/fixes.
    Added an END {} block and CA->context_destroy method for proper shutdown.
    Revised documentation a bit.
    Added long string support and DBE_PROPERTY.
    Make ca_put use best_type for both single-valued and array PVs.
    Fixed problem using CA.pm from scripts outside of Base.
    Use $FindBin::Bin instead of expanding @TOP@.
    Added Perl5 interface to CA.  Not tested on Windows...
    Fix some ca/perl builds
    
    Use the pre-expanded Perl configuration variables.
    Conda builds of Perl need these (and a fix to the Perl
    config files, see https://github.com/conda/conda/issues/8425
    for details).
    drop unnecessary *ModuleDirs
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Move the perl client scripts into a new caPerlApp template
    Install caModuleDirs.pm into bin/<host>
    
    Adjust capr.pl to use it from there.
    Host arch's may use different absolute paths to the same Base directory,
    so they can't share a single copy of that module.
    Add caModuleDirs.pm, needed for capr.pl
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Add podToHtml.pl script
    
    New rules to use this for .pod and .pm conversions
    Replace use of pod2html in ca/client/perl
    Fixes for build issues found on Darwin.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Install capr.pl
    Parallel caget
    Use hdepends command to generate header file dependancies for Darwin
    because Darwin has multiple -arch compiler flags.
    Remove space after -I option for osf-alpha.
    Cleanup.
    A proper fix for the xsubpp problems on Perl 5.8.0.
    Use $FindBin::Bin instead of expanding @TOP@.
    Build cap5 everywhere other than WIN32 archs.
    Use a Make variable that is actually used...
    Restore the $(BAT) stuff in case this bit did work.
    Previous commit broke build.
    Give up building this on Win32 for now.
    Try to make the build more win32-compatible, not tested.
    Find xsubpp and podchecker from the path to the perl binary.
    Added Perl5 interface to CA.  Not tested on Windows...
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/ca
    Move all under modules/database
    Move the perl client scripts into a new caPerlApp template
    template: add circle.db to exampleApp for pdbGroup
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Update example template, release notes
    
    Changed device support to use the long string input rectype.
    Moved the device registration into its own file.
    Used _APPNAME_ more, trying to prevent future name clashes.
    update template
    
    use waveform as long string
    use app. name in header and macro name
    update example template
    add version header to example template
    templates: Unify PV name prefixes, remove "Host"
    
    The difference between host IOCs and embedded ones does not
    justify having a different prefix.
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup, fix an issue reported by Kazuro Furukawa.
    Added creation of ioc/dllPath.bat for Win32 IOCs.
    Added initTrace command to exampleApp, registers a verbose initHook.
    Added two example database substitutions files and converted the example st.cmd
    files to use these instead of repeated dbLoadRecords commands.
    Renamed CONFIG_APP to CONFIG_SITE.
    Added nfsCommands@RTEMS.
    Added example code that registers a new iocsh command.
    Added st.cmd@Cross files for cross builds.
    The <appname>Include.dbd file is no longer needed.
    Moved wildcards from unnecessary file configure/RULES.iocBoot to iocBoot/Makefile
    Removed vlinac, not really a template.
    Simplify virtual-linac build procedure.  Sequence programs are now enabled
    simply by adding a SNCSEQ entry to configure/RELEASE.
    Switch back from a registrar() entry to a function() entry.
    Use the new DBD file auto-constructor, with conditionals.
    Make SNC compilation conditional on $(SNCSEQ).
    Build both standalone and component versions of sncExample.
    Removed sioc scripts.
    Tidying up various things:
    
    Made the support library contain only the xxxRecord and device support,
    then renamed _APPNAME_Support.dbd to xxxSupport.dbd to reflect this.
    Actually I should rename the library to libxxxSupport, but I didn't yet.
    
    Now we link the dbSubExample.o code directly to the application,
    renamed the registrar routine inside this to mySubRegistrar,
    and also moved the registrar() dbd entry into _APPNAME_Include.dbd.
    make clear distinction between support and ioc apps
    Moved base.dbd from both makeBaseApp templates into src/misc.
    An application only needs a copy if it wants to remove stuff.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Removed complex C++ registration of subroutines,
    replaced by function() statments in .dbd file.
    add dbSubExample
    Changed SCRIPTS to SCRIPTS_HOST.
    make exampleMain a .cpp file
    Added RTEMS template files.
    Changes to create vxWorks archive libraries and prods.
    Modifications to support architecture-specific template files.
    Changed seq file from .st to .stt.
    Remove RULES.registerRecordDeviceDriver and RULES.Db
    makeDbDepends.pl and makeIocCdCommands.pl moved to base/configure/tools
    remove threadInit; add caMonitor.c
    The exampleApp now has one src directory.
    changes for iocsh
    vxSrc => iocSrc
    change example for iocCore on host
    changes so that example works on vxWorks
    Converted to new build method.
    new way to build
    new way to build
    More changes for R3.14.
    changes for 3.14
    changes for 3.14
    new version using templates
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Changes for replacing default.dctsdr by all ascii files
    New file
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Changed main to int main.
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    Use only non-deprecated routines.
    Initial version.
    remove threadInit; add caMonitor.c
    The exampleApp now has one src directory.
    remove unused variable
    major changes for new makwBaseApp
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Memory allocation checks.
    It makes more sense to make ca_puser(chid) the address of the MYNODE, not
    the address of an array element containing the MYNODE address.  As puser is
    not actually used in this code it's not a real bug, but it could cause a
    subtle bug in any code that starts from here if the programmer doesn't
    completely understand what's going on...
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    use the new create channel interface similar to the other ca example
    Switch to non-deprecated routines.
    make caMonitor a host application
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    added caMonitor
    Remove EPICS Base submodules
    Move all under modules/ca
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    changes for new build rules
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    restore ModuleDirs in caPerlApp
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    Remove EPICS Base submodules
    Move all under modules/ca
    Create a ModuleDirs file & adjust template scripts to use it
    Move the perl client scripts into a new caPerlApp template
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    cap5: Support dynamic array sizes through the Perl API.
    Added long strings, DBE_PROPERTY and -F option
    Use $FindBin::Bin instead of expanding @TOP@.
    Improve messages slightly.
    Added Perl5 interface to CA.  Not tested on Windows...
    restore ModuleDirs in caPerlApp
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    Remove EPICS Base submodules
    Move all under modules/ca
    Create a ModuleDirs file & adjust template scripts to use it
    Move the perl client scripts into a new caPerlApp template
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Added long string support
    Use $FindBin::Bin instead of expanding @TOP@.
    Improve messages slightly.
    Added Perl5 interface to CA.  Not tested on Windows...
    restore ModuleDirs in caPerlApp
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    Remove EPICS Base submodules
    Move all under modules/ca
    Create a ModuleDirs file & adjust template scripts to use it
    Move the perl client scripts into a new caPerlApp template
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup
    Use $FindBin::Bin instead of expanding @TOP@.
    Improve messages slightly.
    Added Perl5 interface to CA.  Not tested on Windows...
    restore ModuleDirs in caPerlApp
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    Remove EPICS Base submodules
    Move all under modules/ca
    Create a ModuleDirs file & adjust template scripts to use it
    Move the perl client scripts into a new caPerlApp template
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    cap5: Support dynamic array sizes through the Perl API.
    cap5: caget should print limits using %g, not %d.
    Added long string support, output structure types fully.
    Use $FindBin::Bin instead of expanding @TOP@.
    Improve messages slightly.
    Added Perl5 interface to CA.  Not tested on Windows...
    Remove EPICS Base submodules
    Move all under modules/ca
    Create a ModuleDirs file & adjust template scripts to use it
    Move the perl client scripts into a new caPerlApp template
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    changes for new build rules
    Moved CA client examples into their own caClientApp
    Added caServerApp - copied from src/cas/example/simple
    Made simpleApp significantly more useful
    Made exampleApp use the _APPNAME_ macro instead of example in various places
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Add submodule context
    Structural changes to create database module
    Structural changes to create ca module
    Fix location of TOOLS in top Makefile
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Remove 3.13 compatibility build vars
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved configure/tools perl tools to src/tools directory.
    Replaced O.<T_A> files CONFIG_APP_INCLUDE and RULES_INCLUDE creation with
    defs and rules in configure files CONFIG_APP_INCLUDE and RULES_BUILD
    Changes for GNU make -j option (multiple jobs).
    Converted to R3.14 Makefiles.
    Install config/tools/* into INSTALL_LOCATION/config/tools not bin/(arch>.
    Build msi only for host target.
    Build with R3.14 rules if available (not tested...)
    Added if test for COMPAT* macros.
    Fixed Makefile so distclean target will work.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    Added license information.
    Removed release* targets.
    Updated license comments.
    Added config/tools to dirs.
    Moved MakeRelease to configure/tools.
    no change
    new way to build
    More R3.14 Makefile changes.
    added configure
    changes for 3.14
    fix imcompatibilities with subtool
    Added INSTALL_BIN definition.
    First version
    fixed install outside base
    removed unused unistall target
    kay's perl branch
    Top level dir no longer passed to MakeRelease
    Now includes RULES_TOP, changed DIRS def.
    use RULES_DIRS
    Added uninstall of config dir.
    Chnges for move of config directory.
    Top dir now base not epics
    Removed unused ARCH_TYPE
    uninstall base/man
    base/rec=>base/db base/include now installed
    Added base/tools scripts functionality to base/Makefile, removed scripts
    Moved base/tools/MakeRelease to base dir.
    Changed include file from CONFIG_SITE to CONFIG
    Replace ARCH_TYPE with .
    Replace ARCH_TYPE with .
    Removed install dependancy from release rule
    Removed depends dependancy in release and built_release rules
    Introduce temporary symbol (ARCH_TYPE=$$ARCH) and use in later targets/rules
    to avoid problem with $* symbol resolution in some versions of gnumake.
    Modified syntax of makefile usage
    Cleanup of files
    Changed clean to tools/Clean.  Added "uninstall" dependency.
    Minor changes
    Modified to eork with extensions and do depends
    New stuff.
    Dependencies are now generated with a "make release".
    Added Log and/or Id.
    Fixed.
    pre_build / new configuration
    Now supports new config directory setup.
    Defaults to install instead of build
    Added support for config.mk
    Now works with Makefile.Build_Type, i.e. Makefile.Vx  Makefile.Unix
    Update
    Better Version
    Added top-level Makefiles to repository
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RTEMS: Warning cleanups from Eric.
    RTEMS: Allow for 64-bit compatibility in RTEMS 4.10.
    missing header
    Added support for MVME2700 (and perhaps MVME2400) as supplied by Matt Rippa.
    Allow EPICS_TS_NTP_INET in environment to override NTP server setting.
    Clean up GEV VPD support.
    Add VPD offset.
    Add open argument.
    Add errno header.
    More GEV changes.
    Add serial EEPROM support.
    Add default address for GEV memory.
    Use standard types.
    Add NTP server to PPCBUG boots.
    Clean up MOTLOAD environment variable support.
    Documented, too!
    Improve operation of MOTLOAD machines.
    Add RTEMS initialization hooks.
    Pick NFS server and mount point from PPC bug argument string.
    Fix typo.
    Allow environment to override default domain.
    Set TZ environment variable from NVRAM.
    Assist drvTs by setting environment variable.
    Add NFSMOUNT support.
    EPICS uses its own logging facilities so don't bother with log_host.
    BSP function name change.
    Clean up the way NVRAM access is handled.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    rtems_init cleanup
    
    Remove unnecessary (as of RTEMS 4.9) prototypes
    Remove unused *Fatal
    constify string contant
    RTEMS: add zoneset()
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    RTEMS: show PWD and nfsMount() args on start
    libCom/RTEMS: ensure lookup of localhost on RTEMS
    
    create /etc/hosts if it doesn't already exist
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add RTEMS R4.10 support
    Arrange for compatability with compile-time and run-time linking.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Allow EPICS_TS_NTP_INET in environment to override NTP server setting.
    Fix typo -- allow building on case-sensitive file systems.
    Fix up free space calculation.
    Use more efficient mechanism for determining free space.
    Clean up some warnings.
    Use new general time registration.
    Round off sleep times -- makes timed scan threads work better when
    high-quality time source (e.g. event receiver) is used.
    Remove old-style stack check code.  spy provides a better mechanism.
    Now that libCom:iocClock() is working there's no need to fiddle around with NTP
    during startup.
    More timing cleanups for RTEMS.
    Create properly-formatted POSIX TZ environment variable from EPICS_TIMEZONE.
    Back out name change since RTEMS will not change until the next RTEMS release.
    Name change in RTEMS release.
    Minor fix in printf string.
    Fix in the new code (suggested by Eric Norum).
    Get host name using gethostname() after network is init'd.
    Force panic if application-supplied routine returns a non-zero value.
    Add RTEMS initialization hooks.
    Get rid of a bunch of conditional compile statements.
    Ensure that rtems_shutdown_executive() gets called even if the main
    routine does not return but rather calls exit() either directly or
    indirectly (through epicsExit()).
    Arrange to return to BSP (and likely then to bootstrap ROM) when iocsh terminates.
    Make nfsMount command a little more convenient.  Create mount point if it's missing.
    Set POSIX TZ environment variable from EPICS_TIMEZONE.
    Allow for simultaneous local and remote filesystems.
    Add another environment variable.
    Set IOC_NAME environment variable from boot parameters.
    Cosmetic.
    Add iocsh command to print amount of available heap space.
    It's not an error if a directory can't be created because it already exists.
    Add NFSMOUNT support.
    Add reboot reason.
    Add missing argument.
    Use linker constants to find flash size/location.
    Add support for in-memory filesystem.
    Allows for fully standalone IOCs.
    Clean up initialization.  Add NVRAM code for uC5282.
    Some BSPs don't leave the cursor at the left margin.
    Improve error message.
    Clean out local debugging code.
    Clean up network configuration.
    Clean up NFS/TFTP remote fileystem setup.
    Don't use TFTP if not needed.
    Use NFS by default.
    Allow configuration from PPCBUG NVRAM.
    Include oisUnistd.h to pick up some missing prototypes.
    Must set ticksPerSecond before using it!
    Use EPICS logging routines.  No more syslog.
    Unless othersise specified, run the network daemons at a lower priority than
    the EPICS scan threads.  This makes the scan response much more deterministic.
    Clean up architecture-specific hooks.
    Add hook for __i386__ remote serial debugging.
    Updated license comments.
    With the release of gcc-3.1, the weak reference to iocshRegister is
    overridden by the first non-weak declaration in the iocsh.h header.
    This caused iocshRegister to be undefined when building the test
    applications.  Fix the problem by adding a file which provides a
    dummy version of iocshRegister if the real routine is not present.
    Don't use libCom routines since doing so causes problems when linking
    the IOC test programs in base/src/libCom/tests.
    Remove some dead code.
    Use weak reference to iocshRegister so that the same init code can be used
    with full IOC applications (which include the iocsh routines) and also with
    IOC test programs (which do not include the iocsh routines).
    Don't treat a return from main() as a fatal error condition.
    Now that RTEMS no longer uses main() internally it is possible to use the
    standard EPICS application main().  This makes it much easier to build the
    test programs in src/libCom/test.
    Try for a minute or so.  This makes the code match the documentation.
    Don't lock up if no NTP time synchronization packet is received.  Try for about
    30 seconds then set the date and time to a default value (January 1, 2001).
    This should make it easier for people to get EPICS/RTEMS working since they
    can try out the example application without having an NTP server on their
    network.
    Use st.cmd in the top-level IOC directory, not in bin/scripts.  This change
    means that the st.cmd script produced for the example application needs to
    be edited by hand before it can be used by an RTEMS IOC.
    RTEMS TFTP driver now handles leading ../ path name components properly.
    Thus, for ../../dbd/example.dbd to be found properly, the st.cmd script
    must be moved down two directories.  For now it is in bin/scripts, but
    that may change.
    RTEMS TFTP driver now supports a limited form of chdir().  This means that
    the hack of redefining fopen is no longer necessary.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Remove unused include file.
    Include header to get stack check function prototypes.
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    Clean up restart message.
    Add logging (console and syslog) of reason for most recent restart.
    Change prompt from `rtems> ' to `epics> '
    Don't proceed until clock has been synchronized with NTP.
    Remove RTEMS-specific semaphore show command.  The generic epicsMutexShowAll
    provides similar functionallity.
    Allow for longer task names in semaphore show messages.
    No need to call epicsThreadInit since it is now completely internal to
    osdThread.c.
    changes for osiThread=>epicsThread
    Make ioccrf argument lists constant.
    Add std namespace to ioccrf.cpp.
    Register more commands automatically from within ioccrf.cpp.
    Register common IOC shell commands automatically as part of ioccrf constructors.
    Big changes to ioccrf routines.
    1) Switched from using the registry to using a C++ map.  This provides
       an easy way to add...
    2) A help command.  With no arguments, this command prints a table of
       commands.  With arguments it prints a synopsis of the specified
       command(s).
    3) ioccrf() is now thread-safe with plans to add multiple remote
       access via telnet.  The value pointers have been removed from the
       argument structures and a pointer to an array of argument unions is
       passed to the registered callback routines.
    4) All command/argument configuration structures are now const.
    Add stackCheck command to show per-task stack usage.  Stack statistics
    are gathered only when STACK_CHECKER_ON is defined as 1 in rtems_config.c.
    This should be done only when necessary since it slows down context switches.
    Split RTEMS configuration from startup routines.  This makes it possible
    for application developers to supply their own configuration while
    retaining the RTEMS startup routines.
    Use a special RTEMS-specific version of fopen to add the RTEMS TFTP
    prefix to path names.  This is a cleaner solution since it requires
    no changes to any other EPICS code and works for all places that
    files are opened.
    Increase number of file descriptors.
    Add comment showing how to enable the stack checker.
    Increase RTEMS executive workspace.  Don't bother trying to fit EPICS/RTEMS
    on to machines with less than 16 Mbytes of RAM.
    Ensure console serial line handshaking is off.  We don't want a rogue terminal
    or terminal concentrator locking things up.
    Fix typo that was making the startup/shell task non-FP.
    The latest release of RTEMS reduced the default size of many system values.
    Modify rtems_init.c to restore these to values which will work with EPICS.
    Move clockInit call to threadInit.
    Minor cleanups.
    Increase init task (IOC sh) priority to be higher than all EPICS tasks.
    Adjust RTEMS workspace to a size that allows simple IOC applications
    to run on machines with `only' 4 Megabytes of memory.
    Add `level' argument to semstat command.
    Dynamically size task, semaphore, timer and queue tables.
    Set aside more memory for RTEMS executive and network buffers.
    RTEMS IOCs now need at least 8Mbytes.
    Remove reference to non-existent include file.
    Add RTEMS-specific netstat and semstat commands.
    Track change to IOC shell common registration.
    Convert iocccrf to take a single pathname argument.
    If the pathname is NULL, emit prompts and read from stdin.
    Use the last component of the pathname as the `filename' argument to showError.
    Get the prompt from the IOCSH_PS1 environment variable or use default "iocsh> ".
    Return 0 on success.  Print message and return -1 on failure (e.g. can't open file).
    If using readline, get history size from IOCSH_HISTSIZE environment variable.
    Add include file to finish off previous change.
    Add call to registerRecordDeviceDriverRegister().
    There is no longer an RTEMS-specific command interpreter.
    Its functions have been taken over by the routines in src/iocsh.
    Clean up formatting.
    Allow for more semaphores -- sequencers use a whole bunch!
    Add loopback network interface.
    Allow NULL `substitution' argument to dbLoadRecords.
    RTEMS initialization routines.
    Adding this file to libCom lets the EPICS Makefiles produce a complete
    RTEMS executable image.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Force panic if application-supplied routine returns a non-zero value.
    Add RTEMS initialization hooks.
    Make devLib available from other OSs iff they provide the right table in an
    external support application.
    Add OS-dependent VME support.
    Updated license comments.
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Put RTEMS network tasks at higher priority than any EPICS task.
    RTEMS-4.7 changes.
    Clean up network configuration.
    if_fxp is now working.
    Changes for RTEMS pc386 target.
    Now works on non-i386, non-ppc targets.
    Allow configuration from PPCBUG NVRAM.
    Use EPICS logging routines.  No more syslog.
    Unless othersise specified, run the network daemons at a lower priority than
    the EPICS scan threads.  This makes the scan response much more deterministic.
    Add temporary configuration for PPC network device.
    Select NIC at run-time instead of at EPICS build-time.
    Updated license comments.
    Add support for Intel EtherExpress Pro network interface.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Make network driver name match the one imposed by the 3C509 driver.
    Allow network interface card to be selected using site-specific
    configuration file.  Provide example selection for RTEMS pc386 target.
    Split RTEMS configuration from startup routines.  This makes it possible
    for application developers to supply their own configuration while
    retaining the RTEMS startup routines.
    Rework epicsMakeMemFs.pl script to use higher level constructs
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add RTEMS initialization hooks.
    Make devLib available from other OSs iff they provide the right table in an
    external support application.
    Add OS-dependent VME support.
    Updated license comments.
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    RTEMS thread join
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add RTEMS R4.10 support
    Adapt to older versions of RTEMS.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Added support for MVME2700 (and perhaps MVME2400) as supplied by Matt Rippa.
    Clean  up warnings.
    Enable collection of malloc statistics.
    Ensure that BSP-specific overrides get into the configuration.
    Remove old-style stack check code.  spy provides a better mechanism.
    Improve operation of MOTLOAD machines.
    More timing cleanups for RTEMS.
    Fix typo.
    Avoid conflict with test harness.
    += changes for arm (missing RTC)  == Needs Review ==
    Extensions can increase context-switch time, so use as few as possible.
    Add infrastructure for spy command.
    Clean up initialization.  Add NVRAM code for uC5282.
    RTEMS-4.7 changes.
    MVME167 doesn't have RTC code 'yet'.
    MVME5500 BSP now supplies RTC (time-of-day) driver.
    Clean up network configuration.
    pc386 BSP now provides time-of-day clock.
    Changes for RTEMS pc386 target.
    Use NFS by default.
    Allow configuration from PPCBUG NVRAM.
    Updated license comments.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Split RTEMS configuration from startup routines.  This makes it possible
    for application developers to supply their own configuration while
    retaining the RTEMS startup routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    getsockopt wants socklen_t
    RTEMS now provides the getprotobyXXX routines.
    Updated license comments.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Big changes to ioccrf routines.
    1) Switched from using the registry to using a C++ map.  This provides
       an easy way to add...
    2) A help command.  With no arguments, this command prints a table of
       commands.  With arguments it prints a synopsis of the specified
       command(s).
    3) ioccrf() is now thread-safe with plans to add multiple remote
       access via telnet.  The value pointers have been removed from the
       argument structures and a pointer to an array of argument unions is
       passed to the registered callback routines.
    4) All command/argument configuration structures are now const.
    Add utility routines which vxWorks provides but RTEMS does not.
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add module version numbering
    Structural changes to create libcom module
    Structural changes to create core module
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    Remove 3.13 compatibility build vars
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    get rid of dev/drv support; use OBJ library only
    unbundle
    drv before rec
    changes for build
    new way to build
    More R3.14 changes.
    new way to build
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RTEMS: Removed RTEMS/base directory.
    
    All files were moved up one level.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add RTEMS initialization hooks.
    Make devLib available from other OSs iff they provide the right table in an
    external support application.
    Add OS-dependent VME support.
    Updated license comments.
    installed into cvs
    avoided embedded TOP for non sub-modules
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add spinlock_pt.hpp for older VxWorks versions
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add spinlock_pt.hpp for older VxWorks versions
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add vxWorks directory with Boost smart_ptr headers
    
    This is the minimal set of files needed, copied from pvCommonCPP.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Support MinGW cross-builds on linux-x86 and x86_64
    More file permission fixes.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Changed EPICS_UPDATE_LEVEL to  EPICS_PATCH_LEVEL.
    Changed BASE_ to EPICS_.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource file.
    Added win32 resource files.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add module version numbering
    Generate module version files with new RULES_EXPAND facilities
    
    Also removes the separate *VersionNum.h@ templates
    Try out a representative sample of APIs from multiple libraries
    Fix ..// => ../ in Makefile-relative source paths
    WIN32: Add symbol lookup
    avoided embedded TOP for non sub-modules
    Set embedded modules' SHRLIB_VERSION from CONFIG variables
    Remove EPICS Base submodules
    Move all under modules/libcom
    New src/std/link/test directory with tests for the state link type
    Don't install libcomModuleDirs.pm
    
    It's only needed by bldEnvData.pl which is never installed.
    Make it a dependency so it gets built, and use it from O.<host>
    Export tool configurations as cfg/CONFIG_* files
    Freeze SONAME=3.17.0
    Structural changes to create database module
    Structural changes to create ca module
    Perl scripts use perl module for RELEASE dependencies
    Add module version numbering
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    fix makefile typo
    std/rec/test: add test for deadband mechanism of analog record types
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    dbShutdownTest
    Moved filter plugins, fixed portability issues.
    
    The filter plugins are now in src/std/filters
    and their tests in the test subdirectory.
    
    Various portability issues found and fixed:
     * Variable declarations after statements in a block
     * Code assuming that epicsInt32 = long
     * // comments in C files
    
    Removed a number of tests that weren't really tests;
    preconditions for future tests that don't actually check
    the code being tested should call testAbort() if the
    condition fails, which tells the test harness that you
    meant to die at that point.
    
    Split up lots of very long source lines.
    
    Probably made a few other changes that I forget about now.
    fix arrTest
    
    Don't use compiled in paths
    include menuConvert as this is now required at runtime
    disable filter tests until fixed...
    clean all
    Run the tools/test files under the test harness
    Move src/dbHost scripts and modules into src/tools.
    Merge std/*
    
    Combine recIoc and softDevIoc libraries into dbRecStd
    
    Move base.dbd from ioc/misc/ to std/softIoc/
    
    Generate stdRecords.dbd from the std/rec/Makefile list of record
    types instead of hard-coding it in base.dbd
    Merge ioc/*.
    
    Merge miscIoc rsrvIoc dbtoolsIoc asIoc dbIoc registryIoc dbStaticIoc
    into dbCore.
    
    Move ioc/misc/asSubRecordFunctions.c to std/dev/asSubRecordFunctions.c
    since it depends on the subRecord type.
    
    Extracted ioc variable definitions from base.dbd into dbCore.dbd
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Reorganize src/Makefile
    
    Group entries by "Module"
    move alarm.h to libCom/misc
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Remove 3.13 compatibility build vars
    Oops, s/dbTools/dbtools/.
    Missing dependency fixed, misc needs dbTools
    
    - from Michael Davdisaver
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added dBStatic to cas depend dirs. Needs alarm.h
    Fix missing parallel build dependency.
    
    Ron Sluiter pointed out that gdd/dbMapper.h includes db_access.h so
    gdd has to be built after ca, simplifying the cas dependency too.
    Reorganized files, configure to use new versions.
    
    * Moved Readfile and macLib into tools/EPICS
    * dbHost/Getopts was a duplicate
    * Added (c) headers
    * Build in the dbHost dir
    * Switch build system to use Perl versions.
    Updated DEPEND_DIRS for vxWorks directory.
    libCom/test/fdmgrTest depends on ca.
    Build cap5 everywhere other than WIN32 archs.
    Change build order again; declare dependencies locally.
    Add dependency catools on alarm.h which is in dbStatic.
    Moved cap5 to the end of the list, so it doesn't matter if it fails.
    Move cap5 after softIoc.
    Added Perl5 interface to CA.  Not tested on Windows...
    Build misc/ before dev/ so extended devices can link properly on Solaris.
    Added new tools directory.
    Changes for GNU make -j option (multiple jobs).
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Moved ca to immediately follow libCom.
    Need to have built the RTEMS stuff before any programs.
    Move softIoc after RTEMS dir.
    Changed build order: build tests immediately after their parent.
    Move template stuff lower down.
    Removed ifeq and ifneq tests on vxWorks and RTEMS.
    += catools
    toolsComm now calls libCom so there is a new build order
    Moved excas.
    add excas
    Added softIoc application.
    accidently committed version not buildibg gdd and cas
    remove *Recdes* and *Flddes*
    Updated license comments.
    Change build order so that RTEMS libCom test applications build properly
    when building from scratch.
    Move RTEMS initialization/configuration files from the libCom
    os-dependent directory to their own directory.
    This solves the problem in which these files include header files
    which are not yet installed when libCom is being built.
    Added makeBaseExt directory.
    uncommented gdd and cas
    misc before iocsh
    add iocsh; build misc later
    Only build vxWorks directory when there is a vxWorks target.
    order of build
    change build order
    add db/test
    Removed cxxtemplates dir because it was moved to libCom.
    Removed include directory.
    add libCom/test
    moved where ca is built
    new way to build
    Moved osi directory to libCom.
    Added makeBaseApp to dirs list.
    remove tools
    temporily dont build makeBaseApp
    changes for configure
    New Makefile added.
    Modified Makefile to use new tools directory.  MGB:
    moved blderrSymTbl stuff to libCom only
    only build errSymTbl from this makefile -
    the other early builds have been moved to their respective
    Imakefile(s) in the appropriate object area
    forgeot to remove targets from the all:: target
    moved the seqsource and devtestsource target functions back
    to the appropriate object Imakefiles
    moved target camathsource stuff to Unix/share/toolsComm/math/Imakefile
    add the camath
    moved devtest to toolsComm/devtest
    added devtestsource target
    backed out devtest
    *** empty log message ***
    reworked for errInc.c blderrSymTbl etc.
    moved some src builds to here
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix and test for macLib losing error status
    
    Problem found & diagnosed by Mark Rivers.
    Remaining Revision-Id keywords in source
    libCom: Fix use-after-free bug in macCore.c
    Added note to fixme comment to state that a function is relying on its current setup.
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix the macLib buffer overflow issue, Bug 551909.
    This is mostly Eric's patches, without the valend name change.
    macLib cleanup, added support for scoped macros.
    New test program for regular macros as well as the environment variable tests.
    Warning suppression bug fix from Benjamin Franksen.
    fixed DLL export
    Fix printf args/formats.
    More string termination bugs, this time missing terminators.
    Fixed dbLoadTemplates oops!  Environment variables tests don't exercise the
    non-dirty path as much...
    Replaced macErrMessage macros with errlogPrintf
    Fixed 2 possible buffer overflow bugs
    Added an entry type string for error/warning messages
    Implemented default values in macro expansions $(name=default)
    Improved usefulness of error reporting
    Made various input arguments and internal variables const char*.
    Macro expansion using environment variables as macro definitions.
    Add epicsStrDup().
    bugs rported by Mark Rivers
    Removed log history comments.
    Updated license comments.
    Fixed HPUX warnings.
    Cleaned up warnings - the RCS Log: keyword was on the comment line
    that starts with a '/' which RCS replicates for these notes...
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Allow message about referenced but undefined to be suppressed
    updated dll keywords
    Fix long memory free list problem
    %d => %ld
    fixed warnings
    added macLib
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated macLibREADME
    Updated macLib documentation
    Updated to cover recent changes such as default values, and remove things that
    were never implemented.
    Update README file to reflect some recent changes.
    bugs rported by Mark Rivers
    Allow message about referenced but undefined to be suppressed
    added macLib
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Clean up build warnings from Visual Studio.
    libCom/macLib: Don't use unsigned chars in macParseDefns()
    
    These pointers are really pointing to standard chars.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix NULL handle issue
    macLib cleanup, added support for scoped macros.
    New test program for regular macros as well as the environment variable tests.
    fixed DLL export
    Replaced macErrMessage macros with errlogPrintf
    Fixed 2 possible buffer overflow bugs
    Added an entry type string for error/warning messages
    Implemented default values in macro expansions $(name=default)
    Improved usefulness of error reporting
    Made various input arguments and internal variables const char*.
    bugs rported by Mark Rivers
    Fixed compiler warnings connected to missing char->int casts
    Removed log history comments.
    Updated license comments.
    Remove call to max().
    fixed pool corruption problems
    Cleaned up warnings - the RCS Log: keyword was on the comment line
    that starts with a '/' which RCS replicates for these notes...
    updated dll keywords
    fixed warnings
    added macLib
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    added macLib
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Updated iocshBody to keep track of macro context to allow scoping of macro variables from iocshRun/Load
    offset by a space
    Returned macEnvExpand to original parameters, added macDefExpand
    Whitespace changes snuck in due to editor
    Changing macEnvExpand to accomodate macro definitions
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix the macLib buffer overflow issue, Bug 551909.
    This is mostly Eric's patches, without the valend name change.
    macLib cleanup, added support for scoped macros.
    New test program for regular macros as well as the environment variable tests.
    Replaced macErrMessage macros with errlogPrintf
    Fixed 2 possible buffer overflow bugs
    Added an entry type string for error/warning messages
    Implemented default values in macro expansions $(name=default)
    Improved usefulness of error reporting
    Cosmetic typo.
    Made various input arguments and internal variables const char*.
    Macro expansion using environment variables as macro definitions.
    Removed log history comments.
    Updated license comments.
    add extern for C callable routines
    Cleaned up warnings - the RCS Log: keyword was on the comment line
    that starts with a '/' which RCS replicates for these notes...
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Allow message about referenced but undefined to be suppressed
    updated dll keywords
    fixed warnings
    added macLib
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    removing some extra whitespace to cleanup the diff
    Updated iocshBody to keep track of macro context to allow scoping of macro variables from iocshRun/Load
    Returned macEnvExpand to original parameters, added macDefExpand
    Whitespace changes snuck in due to editor
    Changing macEnvExpand to accomodate macro definitions
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    macEnv avoid cantProceed
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Reduce initial size of expanded string.
    Replaced macErrMessage macros with errlogPrintf
    Fixed 2 possible buffer overflow bugs
    Added an entry type string for error/warning messages
    Implemented default values in macro expansions $(name=default)
    Improved usefulness of error reporting
    Made various input arguments and internal variables const char*.
    Efficiency improvements.  Cut down on copy operations.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Move macLib.pm and macLib.plt here
    
    Use @TOP@ in macLib.plt library path
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Move macLib.pm and macLib.plt here
    
    Use @TOP@ in macLib.plt library path
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added epicsStrnDup() and dbmfStrndup() routines
    
    The JSON parser passes string arguments with a length
    instead or nil-terminating them. These routines make it
    simple to copy such strings into either permanent or
    temporary storage.
    libCom/dbmf: Add dbmfStrcat3() for JSON parsing
    
    Also removed all epicsShareAPI attributes
    Made string arguments const char *
    db cleanup
    
    cleanup to allow database re-load
    Added dbmfStrdup() function.
    Updated license comments.
    add extern for C callable routines
    changed comment
    fixed conflict
    updated dll keywords
    Still original version
    fixed WIN32 DLL symbol exports
    Added a simple library for doing malloc/free from a buffer pool
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: dbmfMalloc cantProeed() on failure
    
    most calling code doesn't check for NULL.
    Added epicsStrnDup() and dbmfStrndup() routines
    
    The JSON parser passes string arguments with a length
    instead or nil-terminating them. These routines make it
    simple to copy such strings into either permanent or
    temporary storage.
    libCom/dbmf: Add dbmfStrcat3() for JSON parsing
    
    Also removed all epicsShareAPI attributes
    Made string arguments const char *
    dbmf: instrument with valgrind
    dbmf: cleanup indent
    
    whitespace only
    dbmf: add flag to disable freelist
    Memory allocation checks.
    Oops, currected *Strdup routines.
    Added dbmfStrdup() function.
    Fixed printf warnings by casting size_t to unsigned long.
    Updated license comments.
    replace osiSem by epicsMutex/epiceEvent
    semIf => semMutexId
    changes for osiSem changes
    Changes for WIN32 build.
    changes for 3.14
    DLL keyword adjustments
    fixed conflict
    updated dll keywords
    Still original version
    fixed WIN32 DLL symbol exports
    Added a simple library for doing malloc/free from a buffer pool
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Use epicsStrHash()
    fixed removeAll does not set the nInUse count to zero
    improved string hash table distribution
    removed #include
    renamed chronIntIdResTable::add to chronIntIdResTable::idAssignAdd to avoid
    hiding resTable::add in the public base class
    Fixed problems when instantiating several iterator functions.
    Shouldn't test code at least ensure that all compile properly?
    added iterator typedef
    fixed problem introduced by warning fix
    fixed borland warning
    fixed sun pro warnings
    Updated license comments.
    improved show routine
    avoid divide by zero when table is empty
    Bugfix (HPUX compiler was complaining)
    doc
    changed certain functions to inline
    added iterator classes
    cosmetic
    added removeAll mf
    removed inline because of sun pro bug
    switched to inline
    assume that new throws an exception
    reduced scope of constants
    fixed sun pro warning
    supress warning
    Some more HP aCC warning fixes.
    dont allocate table space until its needed and remove leftover junk
    Changes for HP-UX 11 - first semi-stable version
    added todo comment
    fixed warnings
    turn of ms already instantiated warning
    fixed sun pro warning
    include typeinfo
    call show routines of bucket entries from the resource table show function
    Fixed HPUX warnings.
    cosmetic
    fixed comment
    Extended the ~tsSLList<T>() workaround, egcs-2.91.66 doesn't like this either.
    work around problems in the Tornado compiler
    now uses linear hashing technique to expand the table w/o
    causing significant outliers in insertion or lookup delays
    made compatible with prev changes
    cosmetic
    fixed missing const
    fixed missing const
    fixed loop iteration bug in traversal functions
    changed list interface
    work around braindead sun pro compiler
    fixed parse error
    added member function that returns the number of entries installed
    fixed borland warning
    fixed gnu warnings
    fixed MS warnings
    allow traverse to work correctly when the node is deleted
    fixed const traverse
    added const traverse function
    removed entry delete functionality
    fixed SLL iterator performance
    SLL iterator speed up
    fixed SLL iterator performance
    fixed SLL iterator performance
    fixed SLL iterator performance
    fixed SLL iterator performance
    fixed comment
    tabs to spaces
    avoid problems with compilers that dont have default template arguments
    avoid problems with the borland compiler
    fixed ifdef on vis C++ version
    fixed spelling problems
    fixed GNU and SUN PRO warnings
    moved inline func out of instantiate ifdef
    cosmetic
    use location exception
    made compatible with gcc 2.7.2
    converted const static data member to static member func for old gnu compilers
    fixed iterator class pTable => table ref
    removed epicsShareClass from template
    doc
    turn off exceptions for all versions of vxWorks andd allow iterators to be copied
    rearranged exception classes
    addwd epicsShareClass to stringId
    back out stringIdentifier class
    fixed spelling
    fixed solaris compiler incompatibility
    rearranged to compile on the solaris compiler, and added index
    bit width template args to string identifier
    removed redundant function prototype
    o use care converting "char" to "unsigned"
    o use C++ style cast
    moved inline functions out of class definition
    doc
    reinstalled const cast away
    removed const cast away
    fixed problem associated with deleting "const char *"
    on the solaris compiler
    attempted to clean up HP-UX warnings
    cleaned up fast string hash table
    fixed solaris architecture specific problem where xxx>>32 was ignored
    workaround vis c++ 5.0 bug
    changed some inline func to normal func
    guess at DEC C++ compiler bug workaround
    moved resourceLib.cc into resourceLib.h
    allow epicsAssert.h
    fixed compiler compatibility problems
    stringId::T[] => stringIdFastHash[]
    API changes
    added auto cleanup of installed classes to destroy
    many improvements
    string id resource now copies id
    fixed removes use of iter.cur()
    fixed missing ref in list decl
    added remove() to iter class + made node's prev/next private
    installed  ca server templates
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Bugfix in tsDLList<T>::push
    new list push method
    added removeAll mf
    cosmetic
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    added assignment operator to iterator
    cleaned up assignment and copy operator for node class
    make node assignment public again
    added invalid iterator
    allow creation of end of seq  iterator
    cosmetic
    made compatible with prev changes
    workaround for borland compiler bug
    fixed proper return type for inc and dec operator
    cosmetic
    fixed add list to not use default assignment op
    changed list interface
    cosmetic
    fixed syntax err that ms did not detect
    backed out part of the operator = change
    cleaned up operator =
    find should use the current version of the iterator
    convert tabs to spaces
    doc
    deprecated old iterators
    Was the last committed version ever tested? Who defines should implement ...
    Moved some inline operators to the class definition (HP aCC error fix)
    fixed duplicate definition of valid () member func
    fixed problem which slipped through testing because IDE modified
    installed version.
    added valid iterator member to bidirectional iterator class
    added iter for const items
    allow the current item in an iterator to be examined
    removed getPrev and getNext from public interface in node
    removed getPrev and getNext from public interface in node
    fixed issues discoverd by GNU G++
    moved inline functions out of class definition
    made compatible with visual C++ 6.0
    removed redundant API
    attempted to clean up HP-UX warnings
    cosmetic
    allow use of epicsAssert.h
    rearranged to allow compilation by g++ 2.8.1
    fixed hp sompiler warnings
    fixed compiler compatibility problems
    added no arg reset() to bwd iter
    API changes
    fixed class decl order for VMS
    many improvements
    added first() to list class, added first()/last() to iterator.
    use pointer (not ref) for list in iter class
    added remove() to iter class + made node's prev/next private
    installed  ca server templates
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed comment
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    removed exception specifications
    upgraded compiler specific macros
    use epics_throws macro
    added throw specifications
    Updated license comments.
    fixed debug build
    cleanup
    removed debug template parameter
    use #define not static const
    assume that new throws an exception
    simplified
    fix gnu compiler detected problem
    rearranged for better readability
    fixed to preserve 8 byte alignment
    fixed to preserve 8 byte alignment
    use EPICS_FREELIST_DEBUG for debug builds
    turn of ms already instantiated warning
    revert to malloc/free if EPICS_DEBUG is defined
    use now throw new
    pushed locking out to users new/delte operator
    added double include protection
    fixed doc
    fixed borland warning
    osiMutex replaced by epicsMutex
    use nonambig this
    temp removed use of RTTI
    added additional debug output
    added debug messages
    doc
    check for N == 0 in release function also
    added diagnostics
    added debug level
    cosmetic
    beter size check
    added default for number of objects allocated
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    fixed double include
    Updated license comments.
    convert tabs to spaces
    cosmetic changes
    min() => tsMin() also max
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Applied missing-header.patch
    libCom: Revert 12374 which breaks MSVC++ builds
    
    Both the Microsoft 2008 and 2010 compilers fail with this change.
    libCom: Removed epicsSingleton workaround
    
    This undoes commit 11565, "workaround for archaic T202 g++ bug"
    which doesn't actually seem to be necessary for T202 compilation.
    It also replaces 'typename' with 'class', for another compiler.
    
    Modification provided by Dirk Zimoch.
    libCom: Explicitly use namespace std for size_t declaration in epicsSingleton.h
    
    This fixes a compile error that occurs in new gcc versions (since ~4.6.1)
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    workaround for archaic T202 g++ bug
    Nested classes have no special access priviledges to their outer class, but
    only the vxWorks compiler seems to check this.  Added friend to fix.
    An implicit constructor is only created if no user-defined ones exist.
    redesigned this facility for simplicity, clarity, and robustness
    fixed template arg does not default with sunpro
    fixed sunpro warnings
    fixed sunpro warnings
    fixed sunpro warnings
    supress sun pro warnings
    fixed ms warnings
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    removed exception specifications
    fixed typo
    workaround borland 5.5 bug
    fixed gnu warnings
    upgraded compiler specific macros
    added typename keyword for sun pro
    use epics_throws macro
    += 'typename' before member type names
    fixed SMP problems
    Updated license comments.
    dont destroy singleton in destructor because other file scope objects
    may reference the singleton in their destructors
    simplified
    use epicsThreadOnce so that we are not dependent on static member data
    improved dll interface
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    More Windows build fixes.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    removed #include
    Updated license comments.
    added assignment operator to iterator
    switched to inline
    added invalid iterator
    fixed warnings
    allow one list to be initialized from, and also steal the contents from,
    another list
    workaround for borland compiler bug
    fixed lack of const
    changed list interface
    fixed gnu warnings
    fixed gnu warnings
    fixed missing const
    fixed SLL iterator performance
    fixed SLL iterator performance
    fixed SLL iterator performance
    fixed iterator performance
    convert tabs to spaces
    proper form of incude
    made more functions inline
    fixed spelling problems
    fixed GNU and SUN PRO warnings
    use location exception
    added double include protection
    turn off exceptions for all versions of vxWorks andd allow iterators to be copied
    removed extra semi colon
    moved inline functions out of class definition
    Changed the remove() function in tsSLList class because users were
    confused by it. The name is now removeNextItem() and it is now a private
    member of class tsSLNode.
    fixed missing new line at EOF
    attempted to clean up HP-UX warnings
    eliminated dangling ptr warning from bounds checker
    rearranged to allow compilation by g++ 2.8.1
    fixed gnu warning
    fixed hp sompiler warnings
    fixed compiler compatibility problems
    API changes
    fixed class decl order for VMS
    many improvements
    string id resource now copies id
    use pointer (not ref) for list in iter class
    added remove() to iter class + made node's prev/next private
    installed  ca server templates
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    doc
    API changes
    doc
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    epicsGuard.h add typedefs linking guard and release
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    added code to catch bugs where a guard is used when it is released
    added mf to check for identical mutex
    removed leftover junk
    Updated license comments.
    moved implementation od inline functions
    allow assignment
    fixed sun pro warning
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Use epicsStrHash()
    Updated license comments.
    avoid useless vc++ warning
    installed
    broke apart monolithic iocinf.h header file
    dont hold lock while calling callbacks
    redesigned class hierarchy
    better destroy sequence
    removed unused methods and data
    improved message
    added missing void
    major revisions
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    drop unused tsBTree.h
    drop unused epicsOnce
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Applied Ambroz Bizjak's epicsSingletonMutex.patch
    epicsSingletonMutex.patch from lp:1479316
    epicsMutex C++ API: New constructor and newEpicsMutex macro
    
    The new constructor accepts source file & line number.
    The macro passes these in.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    redesigned this facility for simplicity, clarity, and robustness
    fixed sun pro warning
    Updated license comments.
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    global update in test directory
    fixed tests
    min() => tsMin() also max
    API changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    fixed type of inclusion used
    global update in test directory
    API changes
    updated tests
    many improvements
    installed test codes for the ca server templates
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    made compatible with prev changes
    changed list interface
    fixed SLL iterator performance
    fixed type of inclusion used
    global update in test directory
    API changes
    updated tests
    updated tests to current version
    installed test codes for the ca server templates
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    use verify instead of assert (in tests)
    cleaned up minimal subroutine timer
    Updated license comments.
    updated iterator test
    test presettuing the table size
    removed explicit template mechanism
    improved test
    made compatible with gcc 2.7.2
    update
    removed sunos bs
    added iterator test
    back out stringIdentifier class
    eliminated GNU warnings
    fixed sun pro warnings
    updated to reflect new API
    upgraded tests
    global update in test directory
    moved resourceLib.cc into resourceLib.h
    API changes
    updated tests
    string id resource now copies id
    added remove() to iter class + made node's prev/next private
    installed test codes for the ca server templates
    ca server installation
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    removed strict compiler specification
    Modified TOP definition.
    converted to new makefile format
    updated to new makefile format
    new way to build
    single Makefile for 3.14
    installed makefiles
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    use verify instead of assert (in tests)
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    made compatible with prev changes
    changed list interface
    added tests for tsDllList::find()
    fixed type of inclusion used
    reformatted
    global update in test directory
    API changes
    updated tests
    many improvements
    updated tests to current version
    installed test codes for the ca server templates
    ca server installation
    Redo 97b29129/0fbfc741 that was lost in upmerging
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    made compatible with prev changes
    changed list interface
    fixed SLL iterator performance
    fixed type of inclusion used
    Changed the remove() function in tsSLList class because users were
    confused by it. The name is now removeNextItem() and it is now a private
    member of class tsSLNode.
    global update in test directory
    API changes
    updated tests
    many improvements
    updated tests to current version
    added remove() to iter class + made node's prev/next private
    installed test codes for the ca server templates
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    changes for long being 64 bits
    Updated license comments.
    add extern for C callable routines
    remove old style C; use signed char for cvtCharToString; get rid of some warning messages
    cvtFast.h
    updated dll keywords
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fix cvtFast and tests
    
    We might still want to change the actual behaviour though,
    see the FIXME comments.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Convert NaN values properly.
    changes for long being 64 bits
    Updated license comments.
    remove old style C; use signed char for cvtCharToString; get rid of some warning messages
    changes for ToOctalString and ToHwxString
    changes for 3.14
    workaround for Tornado II not using LONG_MAX and LONG_MIN
    that are constants of type long
    cvtDoubleToString will display big numbers better
    get rid of some warning messages
    cleaned up the DLL symbol export
    Get rid of some of the warning messages
    Get rid of warning messages for LONG_MIN
    updated dll keywords
    API changes and include with  not <>
    Get rid of extra trailing \0
    Prevent unilialized precision for cvtStringToDouble
    cvtDoubleToString: honor precision for wierd numbers
    If on vxWorks add #include <vxWorks.h>
    cvtFloatToString and cvtDoubleToString failed for the value 1e7
    For cvtDoubleToString use fixed up to 1e16
    Channel Access changes from Jeff Hill.
    removal of strtoul
    always compiles strtoul() for unix
    brought back strtoul
    The ExpToString routines now just call sprintf. Bug for .1 fixed, only ansi prototypes supported
    Replaced gcvt by sprintf and e format
    cvtFloatToCompactString() - handle 0.0 same as cvtDoubleToCompactString() -- 0.0 should be rendered in f format rather than g format to be "compact"
    cvtDoubleToCompactString() - handle 0.0 as f format, not e format
    added strtoul from GNU
    Support Old stype C
    removed unsigned tests < 0
    added bit field extract/insert
    Moved from dbAccess. mda added aditional routines
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create libcom module
    Structural changes to create core module
    Removed commit date from CONFIG_BASE_VERSION
    Set various EPICS_VERSION_* environment variables
    
    These are set at the same time as the ARCH variable.
    Had to add EPICS_VERSION_SHORT and EPICS_VERSION_FULL to epicsVersion.h.
    
    This uses more uniform names, should we change epicsVersion.h names?
    We would continue to support the old names in parallel for some time.
    Perl style fixes, document more Perl programs
    libCom: Cleaned up bldEnvData.pl and makeEpicsVersion.pl
    
    Added a -q flag, and cleaned up and simplified the code.
    Added -h (help) options, and make more use of other modules.
    libCom: epicsVersion.h changes
    
    Make version numbers easier to compare.
    libCom: Recognize -pre and -rc in version snapshot.
    libCom: Changes to epicsVersion.h generation
    
    Use DEV instead of CVS in names.
    Lower-case the -rc<n> status strings.
    Rename CVS_DATE to COMMIT_DATE.
    No Bazaar equivalent to the CVS tag $Name$ exists.
    Modernize and "use strict" in the Perl code.
    Added deprecated EPICS_UPDATE_LEVEL..
    Win32 changes.
    Version numbering system change.
    dont place the @(#) symbol in the version string
    Removed all BASE_ macros.
    Updated license comments.
    Added code to remove trailing whitespace and carriage return.
    Shortened string output.
    Allow output to O.Common
    Bug fix on comment line.
    Added cvs tag to epics release strings.
    Release string now contains update name/level only if non blank/non zero.
    make first line #!/usr/bin/perl
    Added EPICS_* defs.
    kay's perl branch
    Check if input string to aToIPAddr is null
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Use epicsUInt types, stdint.h is not found on all platforms
    fixed ms compiler build
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    libCom: Back-ported aToIPAddr fix from 3.15 branch.
    
    Cherry-picked 3.15 revno 12398 with some changes.
    libCom: aToIPAddr() finds numeric hostnames
    
    Hostnames that begin with one or more digits were not being looked up
    by name, causing problems at BNL.
    This commit also changes the vxWorks implementation of hostToIPAddr()
    to use inet_aton() instead of inet_addr().
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    doc
    Updated license comments.
    fixed host name parse
    fixed parsing of port numbers with host names
    fixed comment
    simplify code by starting out with unsigned
    added missing include directive
    cleaned out osdSockResource
    osdSocketResource => osiSockResource
    fixed inconsitent use of htonl()
    check for a valid host name after trying a dotted ip addr
    add include for string.h
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Set file+line for epicsMutex
    
    Makes the output of epicsMutexShowAll more useful wrt. libca.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: revise ipAddrToAscii
    
    create multiple light-weight engines to
    track transactions by engine and cancel
    all transactions when an engine is released.
    
    prior to fix for lp:1527636 this was ensured
    for the last/only owner for the engine singleton.
    ca: Fix client bug (race condition) in ipAddrToAsciiEngine
    ca: Fix client bug (race condition) in ipAddrToAsciiEngine
    Remaining Revision-Id keywords in source
    ipAddrToAsciiAsync.: don't try to join the daemon thread
    
    This isn't really necessary and may unnecessarily delay
    things (~10 sec. on Linux) if a query to an unreachable
    DNS server is in progress.
    epicsMutex C++ API: New constructor and newEpicsMutex macro
    
    The new constructor accepts source file & line number.
    The macro passes these in.
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    fixed bug introduced after R3.14.9, but before R3.14.10-RC1 and R3.14.10-RC2
    improved fix for mantis 316
    improved fix for mantis 316
    imprved fix for mantis 316
    Fixed warning on Solaris.
    The ipToAsciiProxy thread calls upon vendor libraries which may use significant amounts of stack.  Account for this by providing the thread with an epicsThreadStackBig stack.
    fixed compiler warning
    fixed gnu build issue
    fix for mantis 276 - EDM on OS X gets access fault in ipAddrToAsciiEngine::allocate
    ipAddrToAsciiTransactionPrivate free list is __not__ locked externally
    so the epicsMutexNOOP non-default template parameter causes
    the free list to not be locked. The free list was changed to embed a
    lock/unlock around all allocate and deallocate requests.
    use epicsThreadGetStackSize is set stacksize
    added missing include
    new #include
    fixed locking associated with the cleanup flag
    (this is not a known problem, the problem was identified instead during code inspection)
    include <climits>
    fixed bug where entry was deleted from within entry's callback
    fixed false error detected by old gnu compiler
    explicit templ instantiation for acient tornado compiler
    Updated to workaround issue with Kylix.
    upgraded API and improved shutdown procedures
    made some improvements for SMP systems which are a good conservative design
    but may not have been necessary
    define pure virtual ipAddrToAsciiAsynchronous::ioCompletionNotify  for
    situations where the derived class's destructor is running precisely when
    the io completes, but the ipAddrToAsciiAsynchronous destructor has
    not yet run
    changed tsDLIterBD to tsDLIter
    dont convert to an ip address when the request times out
    Updated license comments.
    fixed spelling
    changed interface so that callback is immediate if there is no space in the queue
    changed name of guard class
    auto mutex release now requires an auto mutex
    fixed potential deadlock (dont hold lock when calling cb)
    increase stack size
    removed redundant parens
    upgraded locking
    fixed gnu warnings
    changed list interface
    fixed borland warning
    changes for osiThread=>epicsThread
    osi replaced bu epics
    added diagnostics
    fixed sun pro compiler warning
    set flag before emitting signal
    first cut
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Use OS __CYGWIN__ macro, deprecate our CYGWIN32
    Windows: Fix static builds on MinGW
    
    Xiaoqiang Wang proposed some fixes that allow static builds on
    the MinGW targets to succeed. Some additional changes made to
    blockingSockTest.cpp also clean that up.
    libCom: Expand comments on -fvisibility in shareLib.h
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Add some missing epicsShareClass decorations.
    
    Also set the gcc-4 visibility attribute in shareLib.h
    Added shared library support for cygwin and mingw builds.
    Changes for shared library build using MinGW compiler on win32.
    Added mote about deprecating epicsShareAPI.
    do not include epicsStdio
    include epicsStdio
    fixed my lame spelling
    improved documentation
    doc
    Updated license comments.
    removed epicsShareSym
    tabs to spaces and dont export in epicsShareDef
    Fixed HPUX warnings.
    removed extern from epicsShareDef because strange mysteries
    persist with the microsoft compiler: sometines extern is required
    with the instantiation and other times not ...
    add extern keyword to file scope variable definition for visual C++
    depite the fact that their doc indicates that this is not required.
    fixed sun pro specific pragma
    changed GNU from "extern __inline__" to "static __inline__"
    added INLINE definition
    visual C++ requires extern with defs
    removed extern from epicsShareDef and moved extern in
    epicsShareExtern
    use extern in WIN32 global ddefs
    Tornado II defines _WIN32 ????
    fixed shared/static issues on WIN32
    EPICS_DLL => EPICS_DLL_NO (so we are backwards compatible
    doc
    allow non-shareable lib build under WIN32
    improved doc
    dont use Vis C++ key words under the  Cygnus GNU environment
    improved doc
    improved doc
    Added epicsShareAPIV for variable args functions.  These cannot be
    _stdcall, so the current implementation was not working.
    epicsShareAPIV should be used for functions with both ... and va_list
    type arguments.
    Added more information to the comments.
    win32 keyword change
    updated dll keywords
    rem _WINDLL => bad when other DLLs involved
    VMS changes
    more pc related changes
    moved files from /base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
     - removed message about a stack trace going to be printed
     - consistent naming: 'StackTrace' everywhere...
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed warnings on MinGW.
    Fixed Mantis #290.
    Make cantProceed() take printf-style message args.
    Better solution to zero-sized alloc requests.
    [cm]allocMustSucceed() now accept values of 0 for their size and count arguments and can return a NULL in these cases.
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    More warnings.
    Fix up warnings.
    Updated license comments.
    call errlogFlush before terminating
    dont call errlogPrintf if no memory
    changes for osiThread=>epicsThread
    various, mostly posix, thread mods
    provide better error behavior for main host thread
    removed extra arg from threaduspend()
    check for null errorMessage
    Changes for WIN32 build.
    changes for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    eliminate option to turn off exceptions
    fixed gnu warnings
    use errlogPrintf instead of fprintf (stderr, ...)
    removed extra include
    fixed gnu warnings
    fixed unterminated string
    dont use C++ std lib
    checked in wrong version
    removed RTTI
    fixed committed wrong file version
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: all valgrind hooks to epicsMutex free-list
    epicsExit: add epicsExitLater() to trigger process exit without blocking
    Make epicsExit subsystem reusable.
    
    Calling epicsAtExit() after epicsExitCallAtExits() now
    recreates the per-process list and registers the routine.
    epicsExit: optional debug printing
    
    Add a flag to cause a string to be printed
    before each handler is run to show the order.
    libCom: Remove epicsShareAPI from epicsExit APIs
    
    Passing epicsExitCallAtExits into atexit() was generating
    a warning about passing in a __stdcall routine pointer.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Make ellFree() a 1-argument macro, calls ellFree2() with free as freeFunc.
    ellLib changes: ANSIfication patch; moved test code out of ellLib.c into
    its own unit test program in libCom/test; changed ellFree() to take a
    function pointer for the free() routine, so it can be used on Windows;
    modified epicsExit and dbBkpt to use it and pass in the free routine.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Fix memory leak.
    installed epics thread exit capabilities
    installed epics thread exit capabilities
    removed atexit handler that calls epicsThreadExit because:
    o recursive exit call is bad
    o this causes shutdown problems with DLL codes on windows
    => the workaround is an atexit handler that calls epicsExitCallAtExits in
    the poosix osdThreads atexit handler
    atReboot calls epicsExitCallAtExits not epicsExit
    do not call exit on vxWorks
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    Updated license comments.
    add defs for c++
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move the string array declarations into alarm.h
    
    This also removes all internal use of alarmString.h which
    is now deprecated again (see 3.14.5, Jan 2004).
    Move alarm string arrays into libCom
    
    Using idea from Peter Heesterman:
     * Instanciate the alarm strings once in libCom
     * Remove the epicsAlarmGlobal macro
     * Make sure the decorations are right
    move alarm.h to libCom/misc
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Reduce duplication of alarm strings.
    Cleaned up alarm status and severity string representation, alarmString.h is deprecated now.
    Updated license comments.
    add extern for C callable routines
    changes for 3.14
    fixed string defs
    added missing defines/enums, corrected defines
    moved include files. .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    ioc/db: dbUnitTest helps support int64
    Remaining Revision-Id keywords in source
    Flag epicsBoolean with EPICS_DEPRECATED
    Replace the epicsBoolean type in epicsTypes.h
    epicsTypes.h: Don't use C99 types
    
    The __STDC_VERSION__ >= 199901L test never succeeds
    in C++, and there were issues with the epicsInt8
    definition anyway (int8_t is signed, but char might
    not be).
    
    I also removed the epicsBoolean enum which we never use.
    epicsTypes: Added epicsInt64 and epicsUInt64
    
    With size checks for them in epicsTypesTest.
    Also added static checks of type sizes there, since we can.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Expand READONLY macro, deprecate.
    Can't make epicsInt8 a 'signed char', it breaks too much stuff.
    This is a problem - on some archs char is signed, on others not.
    An epicsInt8 is signed, but a bare 'char' isn't necessarily.
    base types on std C if recent dialect is available
    Missing closing $ in RCS keyword.
    better support for c++
    cosmetic
    Updated license comments.
    fixed type of inclusion used
    updated dll keywords
    VMS changes
    eliminated sbufs
    moved files from /base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsExit: add epicsExitLater() to trigger process exit without blocking
    epicsExit: optional debug printing
    
    Add a flag to cause a string to be printed
    before each handler is run to show the order.
    libCom: Remove epicsShareAPI from epicsExit APIs
    
    Passing epicsExitCallAtExits into atexit() was generating
    a warning about passing in a __stdcall routine pointer.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    installed epics thread exit capabilities
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    epicsConvert is new. For now it just has epicsConvertDoubleToFloat
    Updated license comments.
    allow c++
    new way to build
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    use aToIPAddr and auto attach to winsock if its a static build
    moved inline destructor here
    connect proto changes
    new header file for ipAddrToA()
    API changes
    many improvements
    vxWorks port changes
    (char *) cast below is for brain dead wrs prototype
    SOLARIS port
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: revise ipAddrToAscii
    
    create multiple light-weight engines to
    track transactions by engine and cancel
    all transactions when an engine is released.
    
    prior to fix for lp:1527636 this was ensured
    for the last/only owner for the engine singleton.
    Remaining Revision-Id keywords in source
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed HP aCC warnings
    upgraded API
    Updated license comments.
    changed interface so that callback is immediate if there is no space in the queue
    make copy constructor and assignment oper private
    fixed potential deadlock (dont hold lock when calling cb)
    Fixed HPUX warnings.
    fixed gnu warnings introduced by prev change
    changes for osiThread=>epicsThread
    get things to build again after Marty's osi => epics name changes
    osi replaced bu epics
    use epicsEvent
    added diagnostics
    first cut
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Avoid 'strict-aliasing' warnings.
    Added function() keyword handling to dbd files again, works properly now.
    Also moved the code from the generated app_registerRecordDeviceDriver.cpp
    file to iocsh/registryCommon.*
    replace p by pcar_<type>_
    Casting through a (void*) to avoid warnings on HP's native C++ compiler. (Found with motorRecord 5.2)
    new file
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Updated license comments.
    Move readline support to src/libCom/osi/os/xxx/.
    The single source file is in src/libCom/osi/os/default/epicsReadline.c which
    uses the readline library routines or uses local code to read lines of input.
    Selection is made by src/libCom/osi/os/XXX/osdReadline.h.  The default
    version does not cause the readline library routines to be used.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Updated license comments.
    installed
    removed osi file name stuff
    added osi file name defs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    Updated license comments.
    changes for 3.14
    cleaned up the DLL symbol export
    Modified things related to epicsExportSharedSymbols so the imports and
    exports are in the right places.
    created for 64 bit architecture support
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: printf spec for cantProceed
    Make cantProceed() take printf-style message args.
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    best not to bracket include with extern "C"
    Updated license comments.
    added include of stdlib.h for size_t
    Changes for WIN32 build.
    changes for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added epicsStrnDup() and dbmfStrndup() routines
    
    The JSON parser passes string arguments with a length
    instead or nil-terminating them. These routines make it
    simple to copy such strings into either permanent or
    temporary storage.
    Remaining Revision-Id keywords in source
    Fix more MS idiocy
    
    Windows has signed characters, but if you pass a negative
    value (i.e. a character with value >= 0x80) into the debug
    version of its isprint() runtime library function it asserts.
    Fix epicsStrnEscapedFromRaw() and epicsStrnRawFromEscaped()
    
    Major rewrites; the original epicsStrnRawFromEscaped() could read
    beyond the end of the input buffer if the input count ended in the
    middle of an octal or hex escape sequence. Zero termination did not
    always match the return count, and hex escapes were always 2 digits,
    contrary to the C standard.
    
    New versions don't use epicsSnprintf() or sscanf() for hex and octal
    conversions, so should be slightly faster.
    
    Added 81 new tests to check the above issues.
    Fix buffer overflow in epicsStrnRawFromEscaped
    
    lp:1388313
    libCom: Clean up MS compiler warnings.
    
    This doesn't fix the Microsoft link failure though, that may
    need an upgrade of MS Visual Studio on our Hudson Windows VM.
    libCom: Fix epicsString.h comparison functions
    
    The string comparison functions epicsStrCaseCmp() and
    epicsStrnCaseCmp() were returning incorrect results
    when the strings did not match.
    
    These functions now match their BSD equivalents, and
    have working tests to confirm their operation.
    add epicsStrnLen()
    
    Base currently requires only POSIX 2001 while
    strnlen() is part of POSIX 2008.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added test code, fixed bug found in epicsStrnEscapedFromRawSize().
    Fix in calculating the needed buffer length for escaped strings.
    Added new functions to escape non-printable characters. (epicsString)
    Added epicsStrHash() and epicsMemHash(), after analyzing several hash
    functions found online and the two already in Base (which both perform
    a memory lookup per character and are not as good as this one).
    Fixed gcc warnings.
    fix win32 compiler warnings
    o and x format should have unsigned args
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    Added cast to int to remove gnu compiler warning messages.
    Cosmetic.
    Much improved version of epicsStrGlobMatch thanks to Jack Handy and the
    folks at the Cold Project.
    Provide epicsStrGlobMatch().
    Add globbing to iocsh help command.
    epicsStrSnPrintEscaped: prevent buffer overflow; use posix convention
    fixed DLL export
    Add epicsStrSnPrintEscaped.
    Remove unreachable code.
    Stupid vxWorks implementation of toupper/tolower expands macro argument more than once!
    dont print ? as escaped character
    Add epicsStrnCaseCmp().
    add epicsStrPrintEscaped
    fixed build errors
    Add epicsStrDup().
    added epicsStrCaseCmp; add epicsShare decoration
    Fixed compiler warnings connected to missing char->int casts
    Updated license comments.
    Changed author
    get rid of warning message
    Extra useful routines. First is dbTranslateEscape
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    testTodoEnd() needs to lock
    
    when NULLing
    epicsTimerTest testImpreciseTiming()
    WIN32: Add stack trace printing on assert/error
    msvc unittests disable dialog on error or assert() failure
    
    Showing a dialog is really unhelpful in headless CI environments.
    
    _CrtSetReportMode also set _CRT_WARN
    Not clear what the default is.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Add testHarnessDone
    errlog in tests
    
    Take eltc(0) out of testPlan() and explicitly add it to those tests
    that should suppress expected errlog output.
    libCom: Silence errlog when running tests
    
    Removes extraneous noise.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    allocations MustSucceed
    Flush result output, allows Test::Harness to display progress.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Missing epicsExportSharedSymbols
    Added Unit Test Harness to summarize results on vxWorks/RTEMS.
    Added taskwdTest to tests run.
    fix dll exports
    Lock around testDiag(), so multiple threads don't mix output.
    Changed many of the char* arguments to printf-style varargs.
    Fixed problem not resetting test count properly.
    Permit multiple test programs to be run sequentially in the same process
    (for RTEMS and vxWorks).
    Don't print results if no tests!
    Added Test Anything Protocol unit test library.
    See Perl documentation for Test::Harness and Test::More for format details.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: truncateFile size arg should be unsigned long
    
    It gets compared against LONG_MAX and cast to a long, so now
    we have architectures where int != long we must distinguish them
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    fixed temp file creation issues on win32
    Updated license comments.
    removed warnings
    added truncateFile.c
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Moved testMain.h into libCom/misc, since db/test is built before libCom/test.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move the string array declarations into alarm.h
    
    This also removes all internal use of alarmString.h which
    is now deprecated again (see 3.14.5, Jan 2004).
    Move alarm string arrays into libCom
    
    Using idea from Peter Heesterman:
     * Instanciate the alarm strings once in libCom
     * Remove the epicsAlarmGlobal macro
     * Make sure the decorations are right
    move alarm.h to libCom/misc
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Reduce duplication of alarm strings.
    Removed duplicate alarm strings.
    Cleaned up alarm status and severity string representation, alarmString.h is deprecated now.
    Updated license comments.
    add extern for C callable routines
    added const to string tables
    moved include files. .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move the string array declarations into alarm.h
    
    This also removes all internal use of alarmString.h which
    is now deprecated again (see 3.14.5, Jan 2004).
    Move alarm string arrays into libCom
    
    Using idea from Peter Heesterman:
     * Instanciate the alarm strings once in libCom
     * Remove the epicsAlarmGlobal macro
     * Make sure the decorations are right
    move alarm.h to libCom/misc
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Reduce duplication of alarm strings.
    Removed duplicate alarm strings.
    Cleaned up alarm status and severity string representation, alarmString.h is deprecated now.
    Updated license comments.
    add extern for C callable routines
    added const to string tables
    moved include files. .ascii=> .db; path changes
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix podToHtml build issue on Windows
    libCom: Cleaned up bldEnvData.pl and makeEpicsVersion.pl
    
    Added a -q flag, and cleaned up and simplified the code.
    Added -h (help) options, and make more use of other modules.
    libCom: epicsVersion.h changes
    
    Make version numbers easier to compare.
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    epicsTimerTest testImpreciseTiming()
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Add testHarnessDone
    Fixed build errors, remove dependency on std.
    
    Build errors: Include guard missing from epicsUnitTest.h;
        dbShutdownTest.c was calling the non-universal strcasecmp()
        instead of epicsStrCaseCmp().
    
    ioc/db/test no longer depends on std. I modified
        xRecord to make it a working record type, and simplified the
        other test programs so they all use the same new expanded
        dbd file rather than each making their own. I also added
        dbShutdownTest() to epicsRunDbTests().
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Added Unit Test Harness to summarize results on vxWorks/RTEMS.
    Added taskwdTest to tests run.
    Changed many of the char* arguments to printf-style varargs.
    Added Test Anything Protocol unit test library.
    See Perl documentation for Test::Harness and Test::More for format details.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up warnings from gcc 5.2
    Clean up warnings from gcc 5.2
    Add epicsScanLLong and epicsScanULLong macros and tests.
    Added 64bit and long long epicsParse* functions
    libCom: Add some missing #include guards.
    
    There are still quite a few missing in libCom/osi/os/*
    Change the epicsParse APIs to return a units pointer.
    
    This lets us use epicsParseDouble() for scan rate parsing.
    
    Ensure the scanOnce thread is a higher priority than the fastest
    periodic scan thread, irrespective of how many threads there are.
    libCom: Add routines for parsing strings into epicsTypes
    
    Adds new routines for converting numeric strings into the
    standard epicsInt8, epicsUInt8, epicsInt16, epicsUInt16,
    epicsInt32 and epicsUInt32 types, along with Long, ULong,
    Double and Float.  These all provide error checking and
    detection of extraneous characters.  The epicsScanDouble
    and epicsScanFloat routines originally in epicsStdlib.h
    are replaced by macros that call the epicsParse routine,
    and this also provides epicsScanLong and epicsScanULong
    to match.
    
    A test file is added to ensure conversions work properly
    and report appropriate errors.  This file also checks the
    native strtod() routine if not used to check whether the
    epicsStrtod() code is required on this platform.
    Better fix to the epicsStrtod problem: Don't compile our function if epicsStrtod
    is a macro; that way you can't set a breakpoint on it which would never fire.
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Clean up some headers.
    Add epicsScanReal.c.
    Add os-independent epicsStrtod() routine.
    epicsConvert is new. For now it just has epicsConvertDoubleToFloat
    Updated license comments.
    allow c++
    new way to build
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    use aToIPAddr and auto attach to winsock if its a static build
    moved inline destructor here
    connect proto changes
    new header file for ipAddrToA()
    API changes
    many improvements
    vxWorks port changes
    (char *) cast below is for brain dead wrs prototype
    SOLARIS port
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Simplify epicsConvertDoubleToFloat()
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Convert Inf and NaN values properly.
    fix win32 compiler warnings
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    epicsConvert is new. For now it just has epicsConvertDoubleToFloat
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Make the long-string buffer for link fields bigger
    
    When representing a link field as a long string (.INP$)
    we have to pick some size limit for the buffer.
    Previously this was the max length of a PV name + 12 chars,
    but with JSON links that's not big enough.
    
    This commit sets it to 1KB and defines a macro so it will be
    easier to change in the future if necessary.
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added CONTAINER macro, from Micheal Davidsaver (BNL).
    offsetof is required by C89 (M. Davidsaver)
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Removed definition of NULL.
    Updated license comments.
    remove definition for FLDNAME_SZ
    allow 60  character record names
    get rid of defs that should come from menus
    No min() and max() macros in c++
    removed coreRelease () function prototype
    removed rsrv_init() definition
    removed ERROR and OK definitions since they are nolonger used
    and vxWorks specific
    changes for iocCore port
    changes for 3.14 or moved to src/vxWorks/include
    moved postfix and calcPerform to postfix.h
    dll keyword adj
    added function prototypes that have no nice place to go
    moved files from /base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsStrtod() implementation to detect overflow
    
    The VxWorks version of strtod() that we use returns Inf
    instead of setting errno on overflow.
    libCom: Clean up MS compiler warnings.
    
    This doesn't fix the Microsoft link failure though, that may
    need an upgrade of MS Visual Studio on our Hudson Windows VM.
    Added 64bit and long long epicsParse* functions
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    libCom: Recognize hex literals in epicsStrtod()
    
    Allows Windows and VxWorks to accept hex integers as a double.
    libCom: Fix unsigned overflow limits in epicsParse*
    
    The strtoul() routine accepts negative numbers.  This fix
    ensures we handle them properly, and adds suitable tests.
    
    Also fix the test for 1e300, in case the compiler gives a
    slightly different literal constant than strtod() returns.
    Change the epicsParse APIs to return a units pointer.
    
    This lets us use epicsParseDouble() for scan rate parsing.
    
    Ensure the scanOnce thread is a higher priority than the fastest
    periodic scan thread, irrespective of how many threads there are.
    libCom: Add routines for parsing strings into epicsTypes
    
    Adds new routines for converting numeric strings into the
    standard epicsInt8, epicsUInt8, epicsInt16, epicsUInt16,
    epicsInt32 and epicsUInt32 types, along with Long, ULong,
    Double and Float.  These all provide error checking and
    detection of extraneous characters.  The epicsScanDouble
    and epicsScanFloat routines originally in epicsStdlib.h
    are replaced by macros that call the epicsParse routine,
    and this also provides epicsScanLong and epicsScanULong
    to match.
    
    A test file is added to ensure conversions work properly
    and report appropriate errors.  This file also checks the
    native strtod() routine if not used to check whether the
    epicsStrtod() code is required on this platform.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    A char with the top bit set doesn't cast properly when its signed.
    Make epicsStrtod() parse the full "Infinity" and not stop after "Inf".
    Better fix to the epicsStrtod problem: Don't compile our function if epicsStrtod
    is a macro; that way you can't set a breakpoint on it which would never fire.
    Avoid infinite recursion on systems with 'working' strtod() functions.
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    fixed win32 dll sym export
    Added cast to int to remove gnu compiler warning messages.
    Avoid duplicate strtod.
    Clean up some headers.
    Add epicsScanReal.c.
    Add os-independent epicsStrtod() routine.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move alarm string arrays into libCom
    
    Using idea from Peter Heesterman:
     * Instanciate the alarm strings once in libCom
     * Remove the epicsAlarmGlobal macro
     * Make sure the decorations are right
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Add some missing #include guards.
    
    There are still quite a few missing in libCom/osi/os/*
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    epicsConvert is new. For now it just has epicsConvertDoubleToFloat
    Updated license comments.
    allow c++
    new way to build
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    use aToIPAddr and auto attach to winsock if its a static build
    moved inline destructor here
    connect proto changes
    new header file for ipAddrToA()
    API changes
    many improvements
    vxWorks port changes
    (char *) cast below is for brain dead wrs prototype
    SOLARIS port
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added epicsStrnDup() and dbmfStrndup() routines
    
    The JSON parser passes string arguments with a length
    instead or nil-terminating them. These routines make it
    simple to copy such strings into either permanent or
    temporary storage.
    Remaining Revision-Id keywords in source
    add epicsStrnLen()
    
    Base currently requires only POSIX 2001 while
    strnlen() is part of POSIX 2008.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added test code, fixed bug found in epicsStrnEscapedFromRawSize().
    Added new functions to escape non-printable characters. (epicsString)
    Added epicsStrHash() and epicsMemHash(), after analyzing several hash
    functions found online and the two already in Base (which both perform
    a memory lookup per character and are not as good as this one).
    Fixed gcc warnings.
    Include stdio.h
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    Provide epicsStrGlobMatch().
    Add globbing to iocsh help command.
    Add epicsStrSnPrintEscaped.
    Add epicsStrnCaseCmp().
    add epicsStrPrintEscaped
    Add epicsStrDup().
    added epicsStrCaseCmp; add epicsShare decoration
    Updated license comments.
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/ellLib: make sort comparator args const pointers
    Remaining Revision-Id keywords in source
    ellSort
    =?UTF-8?q?Update=20copyright=20notices,=20refactor=20in=20dbEvent.c:=20make=20LOCK/UNLOCK=20macros=20require=20=C2=A8;=C2=A8?=
    MIME-Version: 1.0
    Content-Type: text/plain; charset=UTF-8
    Content-Transfer-Encoding: 8bit
    Add ellPop() function, removes and returns the last node on a list.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Make ellFree() a 1-argument macro, calls ellFree2() with free as freeFunc.
    Fixed ELL*_INIT macros.
    Added ELLNODE_INIT and ELLLIST_INIT macros.
    finished removal of epicsShareAPI (as I assume was intended)
    Removed function versions of macros, spacing cleanup.
    ellLib changes: ANSIfication patch; moved test code out of ellLib.c into
    its own unit test program in libCom/test; changed ellFree() to take a
    function pointer for the free() routine, so it can be used on Windows;
    modified epicsExit and dbBkpt to use it and pass in the free routine.
    Updated license comments.
    added comment
    add extern for C callable routines
    remove casts. The compiler will this generate valuable error messages
    forget old style c
    use WIN32 DLL krywords
    add ellVerify()
    updated dll keywords
    API changes and include with  not <>
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    ellSort: comments and redundant asserts
    fixup comments
    ellSort
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Add ellPop() function, removes and returns the last node on a list.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Make ellFree() a 1-argument macro, calls ellFree2() with free as freeFunc.
    Removed function versions of macros, spacing cleanup.
    ellLib changes: ANSIfication patch; moved test code out of ellLib.c into
    its own unit test program in libCom/test; changed ellFree() to take a
    function pointer for the free() routine, so it can be used on Windows;
    modified epicsExit and dbBkpt to use it and pass in the free routine.
    Updated license comments.
    changes for 3.14
    cleaned up the DLL symbol export
    add ellVerify()
    updated dll keywords
    API changes and include with  not <>
    fixed bug in test routine
    If on vxWorks add #include <vxWorks.h>
    bucketLib.c - added LOCAL as required
    ellLib.c - added missing stdio.h
    envSubr.c - use getenv/putenv under vxWorks
    errSymLib.c - call mprintf() and not printf or logMsg()
                    (eliminated errToLogMsg variable)
    genSubr.c - silenced DEC CC warning
    tsSubr.c - fixed ts min west out of range test & VMS changes
    no tiny buckets
    Channel Access changes from Jeff Hill.
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    test ellSortStable
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Applied all doxy-libcom changes to latest headers
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    libCom: Make yajl_alloc.h usable
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Clean up warnings on Darwin
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    yajl: Out-of-memory handling; another size_t
    Fix YAJL token names, brace <=> bracket
    
    This breaks future updates from upstream, but it looks like the
    original author has abandoned the project anyway.
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    yajl: Out-of-memory handling; another size_t
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    yajl: Out-of-memory handling; another size_t
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Move YAJL_API to front of declarations.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    yajl: Out-of-memory handling; another size_t
    Permit trailing commas in JSON maps & arrays
    
    Handled in both dbYacc and yajl parsers.
    Adds tests to linkInitTest.
    Fix YAJL token names, brace <=> bracket
    
    This breaks future updates from upstream, but it looks like the
    original author has abandoned the project anyway.
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Make yajl_alloc.h usable
    Clean up some warnings.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changes for GNU make -j option (multiple jobs).
    Updated license comments.
    Removed generic dir since it no longer contains a Makefile.
    for 3.14 only a single Makefile
    Moved config dir to base/config.
    fixed build
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    moved files from /base/include
    Changes for replacing default.dctsdr by all ascii files
    New file
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    yajl: Out-of-memory handling; another size_t
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Applied all doxy-libcom changes to latest headers
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Try out a representative sample of APIs from multiple libraries
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Upgrade yajl sources to 2.1.0
    Merged changes up to yajl 1.0.12
    Upgraded to yajl version 1.0.9.
    Move YAJL_API to front of declarations.
    Add Lloyd Hilaiel's Yet Another JSON Library v 1.05 to libCom.
     This is BSD licensed, modified only enough to build under EPICS.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Reduce number of gcc warnings from generated files.
    Updated license comments.
    Get rid of a lot of compiler warning messages
    *** empty log message ***
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup a couple of compiler warnings.
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Converted man to html.
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Forced antelope to compile under strict ANSI w/o any warnings.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    dont depend on TMP env var under WIN32
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up array subscript has type ‘char’ warnings.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Forced antelope to compile under strict ANSI w/o any warnings.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    fix epicsTempFile in antelope+e_flex
    Have antelope.c include epicsTempFile.c directly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Make antelope's error messages slightly nicer
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    use epicsTempFile in libCom to get around weaknesses in the win32 tmpfile
    Updated license comments.
    dont depend on TMP env var under WIN32
    Forced antelope to compile under strict ANSI w/o any warnings.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Make antelope's error messages slightly nicer
    Clean up array subscript has type ‘char’ warnings.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Forced antelope to compile under strict ANSI w/o any warnings.
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from yacc/antelope sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Turned on warnings, fixed all issues (adding prototypes etc.)
    Fixed memory leak in reader.c
    Ansification (Michael Davidsaver)
    Updated license comments.
    dont depend on TMP env var under WIN32
    Forced antelope to compile under strict ANSI w/o any warnings.
    *** empty log message ***
    Initial revision
    Have antelope.c include epicsTempFile.c directly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changes for GNU make -j option (multiple jobs).
    Updated license comments.
    Removed generic dir since it no longer contains a Makefile.
    for 3.14 only a single Makefile
    Moved config dir to base/config.
    fixed build
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    moved files from /base/include
    Changes for replacing default.dctsdr by all ascii files
    New file
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up array subscript has type ‘char’ warnings.
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    toolsComm: Remove #ifdef checks for old VMS systems (fixes lp:625034)
    Fixed some compiler warnings.
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    added assertion to misc.c for dealing with the '\a' character problem.
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    Remove ANSI-C OS prototypes from flexdef.h
    
    Use osiUnistd.h instead.
    Add io.h to osiUnistd.h on Windows
    
    # Conflicts:
    #       modules/libcom/src/flex/flexdef.h
    #       modules/libcom/src/osi/os/WIN32/osiUnistd.h
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    fix epicsTempFile in antelope+e_flex
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix implicit declaration of isspace()
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    ANSIfication of stuff (mostly missing argument types in declarations)
    fixed temp file creation issues on win32
    Updated license comments.
    eliminate DLL import/export warning
    Commented out prototype def for yyparse. Prototype def in parse.c.
    Removed declaration of yylval.  It caused problems for everyone and should
    be defined by the yacc used to build parse.y anyway.
    Clean up some inconsistencies which Alpha OSF/1 systems complained about
    (these changes have been fenced in by #ifdef __alpha, etc).
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Updated license comments.
    Comment out flexdef.h
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Replace bzero() calls with memset(), fix Win32 issue.
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Fixed problem with previously generated scan.c which was not case-independent.
    Regenerated scan.c, and added instructions for later maintainers.
    Added comment to show new location of flex.skel.static.
    *** empty log message ***
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Converted man to html.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More ANSIfication.
    Ansification (Michael Davidsaver)
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Updated license comments.
    Initial revision
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More ANSIfication.
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Fixed problem with previously generated scan.c which was not case-independent.
    Regenerated scan.c, and added instructions for later maintainers.
    Modified scan.l.DISTRIB to accept DOS line-endings. Used itself to convert
    this into the scan.c file.  The initscan.c file is not used at all.
    Updated license comments.
    Get rid of a lot of compiler warning messages
    Comment out flexdef.h
    changed quoted include to <> so make depend catches the right one
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Get rid of a lot of compiler warning messages
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More ANSIfication.
    Ansification (Michael Davidsaver)
    Cleanup gcc warnings.
    moved flex.skel.static from base/include
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Updated license comments.
    Converted man to html.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix Windows builds
    
    The windows shell doesn't like commands that start ../
    Those commands are all found using TOOLS, so by making that
    an absolute path we fix that problem.
    However GNUmake doesn't recognize targets with relative paths
    as being the same as their absolute path, so we have to fix up
    some places that were using TOOLS in dependencies.
    Various updates for building on Windows/Cygwin/MinGW
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    libCom: Ommitted to include the flex/RULES file.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changes for GNU make -j option (multiple jobs).
    Updated license comments.
    3.14 has only a single Makefile
    instlled
    drvSup no longer built. Individual *.o files installed.
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    Seperated drv files into ansi and old dirs. Added combine dir.
    New file
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    fix epicsTempFile in antelope+e_flex
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    toolsComm: Remove #ifdef checks for old VMS systems (fixes lp:625034)
    Fixed quoted string problem.
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    fixed temp file creation issues on win32
    Updated license comments.
    Comment out flexdef.h
    Initial revision
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    include scan.c yylex.c and main.c
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Fixed problem with previously generated scan.c which was not case-independent.
    Regenerated scan.c, and added instructions for later maintainers.
    Modified scan.l.DISTRIB to accept DOS line-endings. Used itself to convert
    this into the scan.c file.  The initscan.c file is not used at all.
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Initial revision
    fix epicsTempFile in antelope+e_flex
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/flex: Default skeleton should be filename only
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Removed EPICS license header and (c) from flex sources
    
    These should never have been added in the first place.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Ansification (Michael Davidsaver)
    Updated license comments.
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    Expand READONLY macro, deprecate.
    Updated license comments.
    removed change log
    added lookup and remove capability
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    updated dll keywords
    use free lists
    API changes and include with  not <>
    C++ support
    moved include files from base/include
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Improve casr() output
    Fixed various 64-bit windows build issues.
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    Deleted test code which was moved to libCom/test some time ago.
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Expand READONLY macro, deprecate.
    Updated license comments.
    fixed gnu warnings
    added lookup and remove capability
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    cosmetic
    updated dll keywords
    fixed warnings
    use free lists
    API changes and include with  not <>
    silenced gcc warnings
    now compilable by C++
    dont allow reallocation of the same res id
    use std EPICS status
    ssert => epicsAssert
    bucketLib.c - added LOCAL as required
    ellLib.c - added missing stdio.h
    envSubr.c - use getenv/putenv under vxWorks
    errSymLib.c - call mprintf() and not printf or logMsg()
                    (eliminated errToLogMsg variable)
    genSubr.c - silenced DEC CC warning
    tsSubr.c - fixed ts min west out of range test & VMS changes
    no change
    no tiny buckets
    Improved bucketLib.c & portability changes
    *** empty log message ***
    *** empty log message ***
    CA memory leak at ca_task_exit()
    fixed overzealous parameter check
    *** empty log message ***
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    o removed -O3 from mingw debug builds (so the issues below are reproduced on mingw)
    o gnu compiler for windows doesnt support well dll exporting individual functions from a class
    in debug builds so I switched to exporting the entire interface class in several places
    o fixed several places in ca lib where include of epicsTimer.h wasnt properly ifdef'd so
    that it is imported by ca header files
    --- these issues were already fixed on cvs main trunk ---
    Fixed C++ comments in header file used from C.
    added warning
    Fix nested comments in previous change.
    Get rid of gcc complaint about C++ comments.
    added misssing epicsShareFunc
    removed unnecessary includes
    added sleep quantum correction using epicsThreadSleepQuantum()
    cosmetic
    document ms compiler problems with placement delete
    use placement new
    avoid strange problems with ms compiler that appear to
    be influenced by using inline functions with the expireStatus
    class
    Updated license comments.
    removed redun epicsShareFunc
    improved dll interface
    fixed comment
    Changes for HP-UX 11 - first semi-stable version
    fixed comment
    fixed inconsistent signed vs unsigned for thread priority
    Fixed HPUX warnings.
    revert to using virtual destroy() to destroy timers
    improved internal class hierarchy
    make timer queue visible from epicsTimer
    fixed gnu warning
    delete timer via timer queue
    made compatible with timer library API changes
    timer queue name changes
    minimize use of epicsShareClass and epicsShareFunc
    dont use struct for C++ class defs
    fixed typedef order problem
    cosmetic
    fixed spelling
    cosmetic
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    added non-threaded timer queue and epicsTimer C interface
    changes during implementation
    changes after discussion with Jeff
    fixed minor compiler errors
    new headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: timerQueueActive atomic exitFlag
    
    quiet false positive data race
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Restore the use of DBL_MAX in timerQueue.cpp
    Use 1000 years as 'forever' in timers
    
    DBL_MAX causes problems...
    Remaining Revision-Id keywords in source
    Applied Ambroz Bizjak's timerQueueActive.patch
    timerQueueActive.patch from lp:1479316
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    added try/catch blocks so that we hopefully can bridge
    periods where the new general time provides (unexpectedly
    considering its advertised benfits) no time at all.
    fixed mantis 336 - timer queue should have try / catch block
    around call to user's expiration callback
    Fix needed for g++ 4.1.2.
    moved declaration using template down to below where its template
    parameter is declared in case inclass friend forward reference to the
    template parameter doesnt carry forward on all compilers
    fixed mantis 332
    fixed warnings
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    move sleep quantum cache to proper place in the fdManager class
    move sleep quantum cache to proper place in active timer queue
    added sleep quantum correction using epicsThreadSleepQuantum()
    removed exception specifications
    upgraded compiler specific macros
    upgraded compiler specific macros
    use epics_throws macro
    document ms compiler problems with placement delete
    fixed linux compiler errors
    use placement new
    removed privateCancel() function
    Updated license comments.
    cosmetic
    use singleton for epics timer queue manager
    epicsAutoMutex has a new name, fixed free lists, and allow timer to be deleted during expire
    auto mutex release now requires an auto mutex
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    fixed inconsistent signed vs unsigned for thread priority
    Fixed HPUX warnings.
    revert to using virtual destroy() to destroy timers
    improved internal class hierarchy
    make timer queue visible from epicsTimer
    fixed gnu warning
    delete timer via timer queue
    dont use free list for passive timer queue because of entaglements
    between the file scope free list destructor and any file scope
    file descriptor manager destructor's attempts to destroy a
    passive timer queue
    made compatible with timer library API changes
    timer queue name changes
    upgraded locking
    dont use struct for C++ class defs
    removed unused member function
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    added non-threaded timer queue and epicsTimer C interface
    dont nanny queues
    finished queue sharing
    fixed missplaced inline function
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Set file+line for epicsMutex
    
    Makes the output of epicsMutexShowAll more useful wrt. libca.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Only delete a timer queue when its ref count is 0.
    
    Fixes lp:786979
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed mantis 332
    cosmetic
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    fixed iterator was not incremented when allocating a timer queue
    epicsAutoMutex has a new name, fixed free lists, and allow timer to be deleted during expire
    make copy constructor and assignment oper private
    fixed inconsistent signed vs unsigned for thread priority
    delete timer via timer queue
    timer queue name changes
    dont use struct for C++ class defs
    added non-threaded timer queue and epicsTimer C interface
    dont nanny queues
    finished queue sharing
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    Set file+line for epicsMutex
    
    Makes the output of epicsMutexShowAll more useful wrt. libca.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Restore the use of DBL_MAX in timerQueue.cpp
    Use 1000 years as 'forever' in timers
    
    DBL_MAX causes problems...
    Remaining Revision-Id keywords in source
    Fixes to allow building on Solaris.  Its <cxxx> headers are evidently not
    quite drop-in C++ replacements for the <xxx.h> C versions.
    added try/catch blocks so that we hopefully can bridge
    periods where the new general time provides (unexpectedly
    considering its advertised benfits) no time at all.
    fixed mantis 336 - timer queue should have try / catch block
    around call to user's expiration callback
    new #include
    move sleep quantum cache to proper place in active timer queue
    added sleep quantum correction using epicsThreadSleepQuantum()
    dont take (and keep) the lock in the destructor because on POSIX its not allowed to own a mutex when it is destroyed
    use placement new
    fixed reference to freed memory
    This was defensive coding against deadlock occurring when they hold a lock
     in the expire callback that they also hold when starting the timer.  I dont know
    how to protect them against a situation where they hold a lock in the expire
    callback and also hold it when canceling the timer, but at least that is a less
    common situation.
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    clean up state transitions
    workaround so that fix for bogus HP warningn isnt causing a warning with sun pro
    epicsAutoMutex has a new name, fixed free lists, and allow timer to be deleted during expire
    Fixed HPUX warnings.
    revert to using virtual destroy() to destroy timers
    improved internal class hierarchy
    make timer queue visible from epicsTimer
    delete timer via timer queue
    made compatible with timer library API changes
    minor optimization in timer queue process
    timer queue name changes
    dont use struct for C++ class defs
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Applied Ambroz Bizjak's timerQueueActive.patch
    timerQueueActive.patch from lp:1479316
    Move epicsMath.h below epicsExportSharedSymbols
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    use osi epicsMath.h
    use C++ name make.h
    epicsTimer: check that delay time is finite
    added try/catch blocks so that we hopefully can bridge
    periods where the new general time provides (unexpectedly
    considering its advertised benfits) no time at all.
    fixed mantis 332
    Minor changes added for Borland's C++ compiler on Linux
    added sleep quantum correction using epicsThreadSleepQuantum()
    added mising C created  timer destroy functions
    removed exception specifications
    correct name for epicsTimerQueueRelease
    fix undefined symbols on Tornado II
    workaround visual c++ 6.0 bugs
    fixed gnu warnings
    upgraded compiler specific macros
    ifdef around placement delete
    use epics_throws macro
    fixed linux compiler errors
    use placement new
    added epicsShareFunc in several places
    fixed gnu detected problem
    fixed gnu detected problem
    avoid strange problems with ms compiler that appear to
    be influenced by using inline functions with the expireStatus
    class
    Updated license comments.
    avoid useless vc++ warning
    template instantiation
    use singleton for epics timer queue manager
    improved dll interface
    epicsAutoMutex has a new name and fixed free lists
    fixed borland build issue
    turn of ms already instantiated warning
    use explicit template instantiation
    revert to using virtual destroy() to destroy timers
    make timer queue visible from epicsTimer
    delete timer via timer queue
    made compatible with timer library API changes
    timer queue name changes
    upgraded locking
    epicsTimerQueueCreate=>epicsTimerQueueAllocate
    dont use struct for C++ class defs
    fixed spelling
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    added non-threaded timer queue and epicsTimer C interface
    added newline at eof
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    HPUX: Delete void * operator new(size_t) methods
    
    These were apparently needed by the HPUX compiler even though it
    never actually executed them.  They are never used.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    improved show diagnostic
    added try/catch blocks so that we hopefully can bridge
    periods where the new general time provides (unexpectedly
    considering its advertised benfits) no time at all.
    added missing include
    new #include
    fixed potential race on SMP systems
    fix unguard needs to be moved inside of sate test (that needs to be guarded)
    Minor changes added for Borland's C++ compiler on Linux
    move sleep quantum cache to proper place in active timer queue
    added sleep quantum correction using epicsThreadSleepQuantum()
    removed exception specifications
    workaround visual c++ 6.0 bugs
    Suppressed HPUX compiler warnings.
    fixed bogus undefined symbols with hpux compiler
    uncommented free list release
    upgraded compiler specific macros
    fixed borland warning
    use epics_throws macro
    document ms compiler problems with placement delete
    fixed linux compiler errors
    use placement new
    fixed reference to freed memory
    This was defensive coding against deadlock occurring when they hold a lock
     in the expire callback that they also hold when starting the timer.  I dont know
    how to protect them against a situation where they hold a lock in the expire
    callback and also hold it when canceling the timer, but at least that is a less
    common situation.
    changed tsDLIterBD to tsDLIter
    Updated license comments.
    clean up state transitions
    avoid useless vc++ warning
    template instantiation
    include typeinfo
    epicsAutoMutex has a new name, fixed free lists, and allow timer to be deleted during expire
    auto mutex release now requires an auto mutex
    turn of ms already instantiated warning
    use explicit template instantiation
    cosmetic
    moved lock to avoid recursive lock and potential deadlock
    Fixed HPUX warnings.
    revert to using virtual destroy() to destroy timers
    improved internal class hierarchy
    make timer queue visible from epicsTimer
    delete timer via timer queue
    made compatible with timer library API changes
    doc
    upgraded locking
    dont use struct for C++ class defs
    fixed missplaced inline function
    installed
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    new #include
    Updated license comments.
    epicsAutoMutex has a new name, fixed free lists, and allow timer to be deleted during expire
    revert to using virtual destroy() to destroy timers
    improved internal class hierarchy
    make timer queue visible from epicsTimer
    delete timer via timer queue
    dont use free list for passive timer queue because of entaglements
    between the file scope free list destructor and any file scope
    file descriptor manager destructor's attempts to destroy a
    passive timer queue
    made compatible with timer library API changes
    upgraded locking
    dont use struct for C++ class defs
    removed unused member function
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    added non-threaded timer queue and epicsTimer C interface
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    libCom: timerQueueActive atomic exitFlag
    
    quiet false positive data race
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Applied Ambroz Bizjak's timerQueueActive.patch
    timerQueueActive.patch from lp:1479316
    improved show diagnostic
    added try/catch blocks so that we hopefully can bridge
    periods where the new general time provides (unexpectedly
    considering its advertised benfits) no time at all.
    fixed mantis 332
    new #include
    dont check to see if timer thread is suspended when blocking for it to shut down
    move sleep quantum cache to proper place in active timer queue
    added sleep quantum correction using epicsThreadSleepQuantum()
    fixed gnu warnings
    now compatible with new epicsSingleton interface
    Updated license comments.
    avoid useless vc++ warning
    template instantiation
    use singleton for epics timer queue manager
    epicsAutoMutex has a new name, fixed free lists, and allow timer to be deleted during expire
    auto mutex release now requires an auto mutex
    fixed inconsistent signed vs unsigned for thread priority
    revert to using virtual destroy() to destroy timers
    improved internal class hierarchy
    make timer queue visible from epicsTimer
    delete timer via timer queue
    made compatible with timer library API changes
    timer queue name changes
    dont use struct for C++ class defs
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    added non-threaded timer queue and epicsTimer C interface
    fixed gnu warnings
    finished queue sharing
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Add some missing #include guards.
    
    There are still quite a few missing in libCom/osi/os/*
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    added newline at EOF for UNIX
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Use OS NAN and INFINITY macros where available.
    
    bug: 545385
    Disable divide by zero warnings on MSVC when generating NAN and INF.
    Use those values rather than calculating them independently.
    Add extern "C" wrapper, needed for WIN32.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Define epicsExportSharedSymbols
    Add epicsNAN and epicsINF to the osi section of libCom.
    get rid of epicsShareAPI; epicsStrtok_r is new; clean up epicsStdlib
    epicsConvert is new. For now it just has epicsConvertDoubleToFloat
    Updated license comments.
    allow c++
    new way to build
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    use aToIPAddr and auto attach to winsock if its a static build
    moved inline destructor here
    connect proto changes
    new header file for ipAddrToA()
    API changes
    many improvements
    vxWorks port changes
    (char *) cast below is for brain dead wrs prototype
    SOLARIS port
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Merged epicsStdioRedirect.h into epicsStdio.h
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Enhance generalTime subsystem with interrupt-context time & event requests.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    spinlocks update
    
    add epicsSpinMustCreate()
    
    Fix spinlock on RTEMS and vxWorks
    UP systems to disable task preemption.
    
    Don't use posix spinlocks when
    thread priorities are used.
    libCom/osi: add epicsSpin with default, posix, and vxWorks implementations
    - posix uses pthread_spin_ interface when supported, pthread_mutex_ otherwise
    - default uses epicsMutex
    - vxWorks (single core) uses intLock()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    document epicsThread.h
    epicsThreadJoin() -> epicsThreadMustJoin()
    class epicsThread is joinable
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    libCom: add epicsThreadCreateOpt()
    
    Variant of epicsThreadCreate() which accepts optional
    arguments via a structure to allow for compatible
    addition of new arguments.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean-up after lp:1558206 fix
    Changes from patch in lp:1539791
    Reverted changes to epicsTime.h and epicsThread.h
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    libCom/osi: add epicsThreadGetCPUs()
     * Implementation for posix and WIN32 tries to get the CPUs available for this process,
       rather than the complete number of CPUs in the system.
     * For the time being, vxWorks returns 1. (This will have to change for vxWorks SMP.)
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Don't decorate epicsThreadHook functions with epicsShareAPI
    libCom/osi: Add some copyrights for ITER
    libCom/osi: Add epicsThreadMap (calls user function for each thread)
    Cleanup of epicsThread hooks
    - move declarations to epicsThread.h, use epicsThreadId type
    - use static elllist initializer for static lists
    Rework epicsThreadOnce() using ideas from Michael Davidsaver.
    An epicsThreadOnceId is now an epicsThreadId.
    During initialization, it is set to the thread running the init routine
    which can now detect a recursive initialization attempt and suspend.
    EPICS_THREAD_ONCE_INIT is still zero, the implementations now define a
    new private value for EPICS_THREAD_ONCE_DONE.  This is deliberately not
    made public.
    improved thread creation failure exception diagnostics
    added shjow func to epicsThread class
    fixed no try catch block for exceptions occurring when fetching the time to print a diagnostic message in the last chance exception handler.
    Exception classes don't need to derive from std::exception,
    this can cause build faults on some architectures.
    Changed static consts to #defines, so C code can use in static initializers.
    Clear up gcc warnings.
    fixed throw spec
    o fixed "no exception thrown if epicsThreadCreate() return nill"
    o added epicsThreadMustCreate
    o cleaned up thread rundown blocking
    o header file need not include exception support
    o fixed so that a thread that has not began will terminate if another thread
    calls exit wait
    o use independent event semaphore assisting these two threads to block
    1) spawned thread
    2) thread waiting for spawned thread to exit
    exitWait ( double delay ) => exitWait (const double delay )
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    ShellContext=>OkToBlock
    implement ShellContext
    best not to bracket include with extern "C"
    get rid of lazt init for SMP safe
    removed virtual destructor when there are no virtual functions
    fixed race condition at thread exit
    added epicsThreadSleepQuantum()
    FIX sunpro WARNING
    add epicsThreadPriorityIocsh andepicsThreadPriorityBaseMax
    added getId mf
    Updated license comments.
    added exit and waitRelease capabilities to epicsThread class
    allow derived class destructor to wait for thread exit
    improved dll interface
    added exception
    define a priority range for the CA server
    Fixed HPUX warnings.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    added const to show () vf
    add show method
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    add decoration
    changes for osiThread=>epicsThread
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Enhance generalTime subsystem with interrupt-context time & event requests.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Fixes for Cygwin build.
    Added epicsShareFunc where necessary.
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - added EPICS_STACKTRACE_DYN_SYMBOL
     - consistent naming: 'StackTrace' everywhere.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Clean up build warnings from Darwin (clang).
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    [PATCH 04/12] move "virtual os" definition to a seperate file
    
    The virtual os table is not something ordinary devLib users
    should know or care about.
    [PATCH 02/12] add devInterruptInUseVME to function table
    
    Add test for interrupt handler function to the virtual os table.
    Adds a stub implementation to devLib.c
    Renames OS implementations functions for RTEMS and vxWorks to avoid symbol name conflicts
    [PATCH 01/12] add jumping VME interrupt routines to independent implementation
    
    Adds implementations which use the virtual os table to invoke the
    OS specific call.
    
    rename conflicting functions
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Clean up some warnings.
    Added CR/CSR support to devLib.
    export shared lib symbols
    fixed no address returned from devAllocAddress
    fixed func and func proto dont match warning
    Stop "warning: `id' defined but not used" messages from gcc -- use a char[]
    instead of a char* and they go away!
    Add 'VME' support for RTEMS-uC5282 target.
    errMessage must not get NULL argument
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    tabs to spaces
    restored locationProbe()
    improved the portability of devLib
    backed out changes accidently checked in
    fixed order problem npend-- vs callBackInProgress
    changed to use symFindByNameEPICS
    Fix include statements
    installedMakefile.Host
    fixed warning messages
    Added cvs Id keyword
    Added cvs Id keyword
    Changed printf to logMsg in the A24Malloc code and added a few more
    debug statements.
    First merge of db directory to get Build to work...
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    added devLibA24Malloc, devLibA24Calloc, and devLibA24Free
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: truncateFile size arg should be unsigned long
    
    It gets compared against LONG_MAX and cast to a long, so now
    we have architectures where int != long we must distinguish them
    Merged epicsStdioRedirect.h into epicsStdio.h
    Added redirection support for puts() and putchar().
    Cleanup obscure gcc warning.
    Removed epicsShareAPI where not needed.
    Work around problem with iocsh redirection from within vxWorks scripts.
    epicsExit and epicsStdioRedirect
    Fix typo.
    Simplify printf ==>> epicsStdoutPrintf redefinition.  Use __printf__ in
    GCC attribute specifier to avoid conflict.
    printf always becomes epicsStdoutPrintf
    more changes to make override of printf work
    override printf
    printf => epicsStdioPrintf
    added epicsGetStdin/epicsSetStdin and stdout and stderr
    split epicsStdio into common and osdStdio portions
    fixed temp file creation issues on win32
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    Move format-string checking conditional to cxxCompilerDependencies.
    Add gcc format-string checking.
    avoid bracketing includes with 'extern "C"' to avoid unanticipated side effects
    Ensure that va_list typedef is in scope.
    reorganized so that we maintain only one interface specification
    epicsStdio is new
    Updated license comments.
    made compatible with C++ test codes in mrkSoftTest
    changes for building win32 dlls
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 10/12] move general macros and error codes to devLib.h
    
    includes devLibVME.h for compatibility
    [PATCH 07/12] rename devLib to devLibVME
    [PATCH 06/12] use epics extern macro
    [PATCH 05/12] reorganize devLib.h
    
    Group functions by bus type with general functions at the top
    
    add macro to exclude deprecated api
    [PATCH 04/12] move "virtual os" definition to a seperate file
    
    The virtual os table is not something ordinary devLib users
    should know or care about.
    [PATCH 02/12] add devInterruptInUseVME to function table
    
    Add test for interrupt handler function to the virtual os table.
    Adds a stub implementation to devLib.c
    Renames OS implementations functions for RTEMS and vxWorks to avoid symbol name conflicts
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Add epicsShare decorators for visibility in a Cygwin DLL.
    Added CR/CSR support to devLib.
    fixed func and func proto dont match warning
    user correct function prototype
    Add some routines to make porting from vxWorks a little easier.
    I'm a little leery about my quick hack for rebootHookAdd() since the
    argument to the 'hooked' function is different.
    add ifdef __cplusplus
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    be backwards compatible
    fixed spelling
    restored locationProbe()
    improved the portability of devLib
    backed out changes accidently checked in
    fixed order problem npend-- vs callBackInProgress
    fixed doc
    installedMakefile.Host
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: STATIC_ASSERT use c++11 static_assert when possible
    Remaining Revision-Id keywords in source
    libCom: Added macro EPICS_UNUSED to compilerDependencies.h
    
    Stop unnecessary warnings.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added STATIC_ASSERT macro.
    Removed assert() definition for pre-ANSI C compilers.
    Tidy-up, deleted vxWorks-specific version (unnecessary),
    added the task name to the printed assert message.
    More ANSI C conversion
    best not to bracket include with extern "C"
    Updated license comments.
    format
    use ( (void ) 0 ) instead of just (void)
    go ahead and redefine assert in traditional C
    backed out epicsAssertPrintf() changes
    added epicsAssertPrintf
    updated dll keywords
    API changes and include with  not <>
    added missing #define for traditional C
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    epicsMutex automatically capture file+line with gcc >=4.8
    
    gcc >=4.8 allows __builtin_FILE() to expand at the call
    site when used given as the default for a c++ function
    argument.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Make epicsMutex intialization use epicsThreadOnceId
    
    Includes Michael's patch to replace calls to the epicsMutex API
    from inside the libCom/osi/os/RTEMS/osdThread.c code.
    
    Fixes lp:1542539
    libCom: all valgrind hooks to epicsMutex free-list
    epicsMutex C++ API: New constructor and newEpicsMutex macro
    
    The new constructor accepts source file & line number.
    The macro passes these in.
    Merged epicsStdioRedirect.h into epicsStdio.h
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    remove STATIC
    Make mutex exception classes derive from std::exception.
    epicsExit and epicsStdioRedirect
    fixed solaris warnings
    workaround for bug in RH 7.3 Linux
    evaluation version of deadlock detect mutex
    removed exception specifications
    fixed sun pro warning
    conditionally compile in mutex owner logging
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    upgraded compiler specific macros
    added typename
    fixed gnu compiler errors
    removed inline functions from dll interface class
    Replaced some C-style casts with their C++ variants
    added throw specifications
    Updated license comments.
    made lock/unlock entry points inline again
    moved epicsMutex.c to epicsMutex.cpp
    fixed gnu warning
    support osi features
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Introduce new header epicsEndian.h which allows C code to find out the
    platform's byte order (osiWireFormat.h is C++ only).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Merged epicsStdioRedirect.h into epicsStdio.h
    Added redirection support for puts() and putchar().
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    implement many more function calls
    add casr
    change RegisterInit to Register
    new
    add timerTest
    build changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed Till's report of non-thread-safe lazy-init.
    Updated license comments.
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    VCS version instead of __DATE__
    
    Use reproducable VCS version instead of date.
    Of course, this falls back to a date if not
    version controlled.
    monotonic adapt to regular time APIs
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed issues with previous epicsTime.cpp changes
    libCom/osi: add full epicsTime conversion from/to UTC struct tm (without timezone mechanism)
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    libCom: Fix epicsTime::strftime() roll-over bug
    
    Fractional seconds could round-up to .000 without
    incrementing the integer seconds.
    We can't actually do the latter, so we prevent the
    roll-over and clamp at all 9's instead.
    Idea from Eric Norum.
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    epicsTime::addNanoSec function size is large now so it shouldnt be inline
    fixed spelling in comment
    After qptimizing the epicsTime::addNanoSec function we now have a larger code which uses only unsigned integer arithmetic. This is for the benefit of embedded cpu's lacking a hardware floating point coprocessor at the expense of some additional code to maintain. I measered the cpu load improving from 40% free to 80% free after making this change, on a nios2 soft core processor.
    Merged epicsStdioRedirect.h into epicsStdio.h
    avoid c++ static initialization order issues
    avoid c++ static initialization order issues
    avoid c++ static initialization order issues
    Enhance generalTime subsystem with interrupt-context time & event requests.
    General Time, from Peter Denison, Eric Norum and many others...
    Give up trying to calculat epicsEpochOffset, which is a constant.
    Also fixed incorrect NTP timescale conversion constant.
    Replaced epoch offset calculation, fixes problem on vxWorks.
    Correct exception message.
    Fixed compiler warning.
    Make fracFormatFind static.
    Removed 'const' from epicsTime::strftime pointer args to match prototype,
    needed by Sun C++ complier which doesn't find the symbol otherwise.
    fixed throw specification
    fixed mantis 279 - epicsTimeToStrftime problem with %06f format
    added comment
    Stop "warning: `id' defined but not used" messages from gcc -- use a char[]
    instead of a char* and they go away!
    fixed mantis 266
    epicsTime <=> aitTimeStamp conversions dont work on 64 bit hosts
    fixed epicsTime <=> aitTimeStamp conversions dont work on 64 bit hosts
     I fixed the following issues:
    
    1) The epicsTime constructor does not throw an exception when an invalid epicsTimeStamp is passed to it.
    2) The "epicsTime::operator epicsTimeStamp ()" conversion operator should throw an exception instead of assert failing when it discovers that the internal state of the time stamp is invalid.
    3) William Lupton's epicsTime::strftime doesnt add .OVF if the nano-seconds field is invalid. Kay's original issue.
    4) William Lupton's epicsTime::strftime has a buffer overrun vulnerability.
    5) Certain C interfaces to epicsTime were not bracketed by try catch blocks.
    spelling in comment
    fixed warnings on 64 bit architectures
    fixed R3.14.7 wont build for  vxWorks 6.0
    epicsExit and epicsStdioRedirect
    throw srtandard exception
    Typo, s/NTP_FRACTION DENOMINATOR/NTP_FRACTION_DENOMINATOR/
    architecture independent manipulation of NTP stamps
    cleanup of questionable, but not incorrect code
    suppress gnu warning
    code simplification
    removed constants
    lage constant needs to be unsigned
    NTP time stamp conversion
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    workaround for SUNPRO bogosity
    fixed linux warning
    added conversion between epicsTime and win32 FILETIME
    added version string
    Updated license comments.
    improved optimization
    cosmetic
    cosmetic
    installed optimization for machines that dont have hardware floating point
    improved dll interface
    1) distinguish between struct tm in local timezone and a struct tm in UTC
    2) added new osd routines to replace gmtime_t and localtime_t because
    the vxWorks interface does not follow posix RT
    cosmetic
    fixed strftime formating
    eliminate option to turn off exceptions
    proper conversion from floating point offset to integer nsec
    fixed spelling
    convert tabs to spaces
    replacement for osiTime
    fixed gnu warnings
    cosmetic
    back out to previous version
    1) remove ntp support code
    2) replace ntpEpochOffset by posixEpochToEpicsEpoch
    renamed loadTimeInit class
    supported BSD timeval
    changed tsStrftime to tsStampToStrftime
    use location exception
    added tsStrftime() and corresponding osiTime support
    osiSem.cpp was not used
    removed use of ANSI "long double"
    fixed warning
    removed error checking of localtime_r() because wrs does not implement
    what is in the posix standard.
    removed gmtime_r prototype
    fixed timespec already defined on linux
    nSec => nsec (TS_STAMP fields)
    revised to use tsStamp.h
    added C callable API
    Files moved from src/osi directory.
    changed format in show routine in case the LOCALE isnt Y2K compliant
    removed inline keyword
    use epics assert
    solaris compiler does not like member w name of the struct
    removed inline from "osiTime::operator +"
    moved constants here
    general overhaul of the osiTime class
    fixed operator return type
    many improvements to osiTime
    added osiTime.cc
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: epicsReadline refactoring
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Updated license comments.
    Move readline support to src/libCom/osi/os/xxx/.
    The single source file is in src/libCom/osi/os/default/epicsReadline.c which
    uses the readline library routines or uses local code to read lines of input.
    Selection is made by src/libCom/osi/os/XXX/osdReadline.h.  The default
    version does not cause the readline library routines to be used.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Merged epicsStdioRedirect.h into epicsStdio.h
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    fixed compatibility problems with vxWorks 5.4 gnu compiler
    exception payload derives from std::exception
    epicsExit and epicsStdioRedirect
    Updated license comments.
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    devLib: add compatibility typedef for VME table type
    include compatibility definition of pdevLibVirtualOS
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 04/12] move "virtual os" definition to a seperate file
    
    The virtual os table is not something ordinary devLib users
    should know or care about.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added epicsLoadLibrary() and some implementations.
    Updated license comments.
    change name
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Add some missing #include guards.
    
    There are still quite a few missing in libCom/osi/os/*
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    added new parameter
    use ANSI function prototype
    include osdPoolStatus.h
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: NTP Time Provider adjusts to OS tick rate changes
    
    Allow the NTP Time provider (used on VxWorks and RTEMS only)
    to adapt to changes in the OS clock tick rate after the provider
    has been initialized.
    
    Changing the tick rate after iocInit() is not advisable,
    other software might still misbehave if initialized before
    an OS tick rate change.
    
    Back-ported from the 3.15 branch (commit 12468).
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    Fix typo in macro name
    
    Not that it really matters since only VxWorks and RTEMS actually
    compile this file and they don't have shared libraries...
    libCom: NTP Time Provider adjusts to OS tick rate changes
    
    Allow the NTP Time provider (used on VxWorks and RTEMS only)
    to adapt to changes in the OS clock tick rate after the provider
    has been initialized.
    
    Changing the tick rate after iocInit() is not advisable,
    other software might still misbehave if initialized before
    an OS tick rate change.
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    libCom/osi: More NTP time quality checking.
    
    Reject NTP timespec values before the EPICS epoch.
    libCom/osi: Warn if NTP time stops or decreases.
    
    Add warnings if the NTP time provider sees NTP time stopping or going
    backwards.  Should never happen, but...
    Use new provider registration function name.
    Modified the timeout and retry count: Allow 4 seconds for an NTP reply,
    and 4 retries, thus NTP sync must work at least once every 5 minutes.
    Restore a retry into the NTP synchronization thread.
    Eliminated an unnecessary local variable.
    Bug fix reported by Jens Eden.
    Change NTP Synq period to 1 minute.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    Cleanup, changed task names.
    Clean up some minor issues with differences between RTEMS/vxWorks/POSIX.
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom/osi: Resolve bcopyLongs() conflict on vxWorks 6.9
    [PATCH 11/12] remove unimplimented PCI api
    [PATCH 10/12] move general macros and error codes to devLib.h
    
    includes devLibVME.h for compatibility
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    [PATCH 06/12] use epics extern macro
    [PATCH 05/12] reorganize devLib.h
    
    Group functions by bus type with general functions at the top
    
    add macro to exclude deprecated api
    [PATCH 04/12] move "virtual os" definition to a seperate file
    
    The virtual os table is not something ordinary devLib users
    should know or care about.
    [PATCH 02/12] add devInterruptInUseVME to function table
    
    Add test for interrupt handler function to the virtual os table.
    Adds a stub implementation to devLib.c
    Renames OS implementations functions for RTEMS and vxWorks to avoid symbol name conflicts
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Add epicsShare decorators for visibility in a Cygwin DLL.
    Added CR/CSR support to devLib.
    fixed func and func proto dont match warning
    user correct function prototype
    Add some routines to make porting from vxWorks a little easier.
    I'm a little leery about my quick hack for rebootHookAdd() since the
    argument to the 'hooked' function is different.
    add ifdef __cplusplus
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    be backwards compatible
    fixed spelling
    restored locationProbe()
    improved the portability of devLib
    backed out changes accidently checked in
    fixed order problem npend-- vs callBackInProgress
    fixed doc
    installedMakefile.Host
    moved includes; .ascii=> .db; path changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Added dbcaStats() for Mantis #281.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fixed epicsEvent issues on Win32 and cygwin.
    
    * Removed all epicsShareAPI decorations
    * Return value from Win32 epicsEventTrigger() inverted
    * Return OK from posix epicsEventTrigger() omitted.
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    Don't do necessary stuff inside assert().
    fixed compatibility problems with vxWorks 5.4 gnu compiler
    exception payload derives from std::exception
    Updated license comments.
    improved dll interface
    moved epicsEvent implementation out of header file
    cosmetic
    Fixed HPUX warnings.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    cosmetic
    fixed syntax error in construtor
    fixed dissallowed operators
    get things to build again after Marty's osi => epics name changes
    replaces osiSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: RTEMS ISR safe impl. for epicsAtomicLock()
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    o fixed spelling in comments
    o fixed warnings during MSVC based build
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    fixed missing missing locked func and broken func proto
    fixed missing missing locked func and broken func proto
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    added epicsAtomicGetUIntT for completeness
    added epicsAtomicGetUIntT for completeness
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    remove unused locationException.h includes
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed C++ comments in header file used from C.
    Add 'size' argument to all epicsMessageQueue receive routines.
    Create os-dependent message queue routines.
    Change API in anticipation of conversion to os-specific implementation.
    Add epicsMessageQueue support.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Introduce new header epicsEndian.h which allows C code to find out the
    platform's byte order (osiWireFormat.h is C++ only).
    Mostly cosmetic changes.
    Added an ifdef test for FLOAT_WORD_ORDER in os/default/osdWireConfig.h
    define EPICS_ENDIAN_LITTLE and EPICS_ENDIAN_BIG
    fixed spelling in a comment
    use temporaries
    fixed warnings
    use function template specialization instead of function overloading
    hoping to workaround issues with gcc 4.0
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Add some missing #include guards.
    
    There are still quite a few missing in libCom/osi/os/*
    += epicsSignalInstallSigHupIgnore (libCom/osi)
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    better comments
    installed
    Updated license comments.
    add extern for C callable routines
    add const in may places
    fixed type of inclusion used
    Move private stuff to another fil;e
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Added aten2 function pre Nick Rees.
    Change so that 0 is INVALID_
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    sockAddrToDottedIP  needs to return the string size
    fixed recently commited problem in ipAddrToDottedIP
    return the number of elements copied from address to ascii conversion func
    removed epicsEnableInterruptedSystemCall and epicsInterruptSystemCall
    Name change to reflect routine's affects on all 'slow' system calls.
    interrupted system call interface
    Updated license comments.
    added sockAddrAreIdentical
    fixed type of inclusion used
    changed the name of sockAddrToDottedA
    added new dotted IP addr ascii conversions
    added new line at EOF
    cleaned out osdSockResource
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - simplified some code
     - epicsStackTrace.c provides generic epicsStackTraceGetFeatures() testing
       the 'epicsBackTrace()' functionality. Call out to epicsFindAddrGetFeatures()
       to inquire about symbol lookup support.
     - first stab at breaking stack trace facility into separate files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    osiClockTime Darwin doesn't use.
    
    Darwin/osdTime.cpp unconditionally provides osdTimeGetCurrent()
    and never calls ClockTime_Init().
    generalTime short circuit current time
    
    epicsTimeGetCurrent() is called frequently.
    Unless more than the default provider is registered,
    locking and going through the timeProvider list each
    time is a waste.
    
    Instead, short circuit to directly call the default
    time current time provider unless a another has
    been registered.
    fix mingw build
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    GeneralTime updates to improve time provider synchronization
    Make the NTPTime provider optional on VxWorks
    libCom: cross mingw imports posix time.h by default
    
    at least mingw 4.9.1 for Debian 8 i386 host.
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
    Use new provider registration function name.
    Missing epicsExportSharedSymbols
    Fix Darwin build, which doesn't have CLOCK_REALTIME.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Stop bogus error messages from CA Repeater on Windows
    
    Required adding a new API to osiSock.h and the 2
    implementations of epicsSocketConvertErrnoToString.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Removed the guts of the SigAlarm code, which was only needed for HPUX
    and on Linux breaks external libraries that use the Posix Timer API.
    return the number of elements copied from address to ascii conversion func
    eliminate esscimqi_shuechanismImplemenedHerein
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    added epicsSocketSystemCallInterruptMechanismQuery ()
    thread safe socket error to string function
    Name change to reflect routine's affects on all 'slow' system calls.
    added forward reference
    interrupted system call interface
    Updated license comments.
    added sockAddrAreIdentical
    removed knowledge of subnet mask from network interface query
    removed osi shutdown interface
    reliable solution for shutdown differences
    added netmask field to addr node
    changed the name of sockAddrToDottedA
    added new dotted IP addr ascii conversions
    changed the name of bsdSock{Attach,Release}
    added C++ support
    added routines needed by CA
    added forward ref for socket API structures
    cleaned out osdSockResource
    Initial version.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - removed obsolete rule (used during development)
     - consistent naming: 'StackTrace' everywhere.
    Tweak some dependency rules for correctness
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove epicsThrows() macro
    
    Exception specifications are deprecated: http://isocpp.github.io/
    CppCoreGuidelines/CppCoreGuidelines.html#e30-dont-use-exception-
    specifications . They will be removed from the C++ standard with
    C++20. Modern compilers are warning about them since years. Thus
    it's unlikely that anyone is still using the epicsThrows() macro.
    Even if that's the case the fix is trivial: Simply remove the macro.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add EPICS_FUNCTION
    
    Automatic macro which expands to the current function name.
    Useful in debug prints.
    libCom: Added macro EPICS_UNUSED to compilerDependencies.h
    
    Stop unnecessary warnings.
    Move default macros to compilerDependencies.h
    Added check in gcc-specific header to error if __clang__ defined
    Some versions of clang don't support __has_attribute()
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    epicsMutex automatically capture file+line with gcc >=4.8
    
    gcc >=4.8 allows __builtin_FILE() to expand at the call
    site when used given as the default for a c++ function
    argument.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    add guard/release typedefs for epicsMutex
    epicsMutex C++ API: New constructor and newEpicsMutex macro
    
    The new constructor accepts source file & line number.
    The macro passes these in.
    Don't do necessary stuff inside assert().
    Make mutex exception classes derive from std::exception.
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    evaluation version of deadlock detect mutex
    removed exception specifications
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    upgraded compiler specific macros
    fixed gnu compiler errors
    removed unused includes
    removed inline functions from dll interface class
    fixed compiler error on Linux
    added throw specifications
    Updated license comments.
    HPUX warning suppression
    made lock/unlock entry points inline again
    improved dll interface
    moved epicsMutex implementation out of header file
    auto mutex release now requires an auto mutex
    make copy constructor and assignment oper private
    Fixed HPUX warnings.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    epicsMutexMustCreate now osi; add support for epicsSemShowAll
    added epicsAutoMutexRelease
    pushed use of mutable out to application
    fixed syntax error in construtor
    get things to build again after Marty's osi => epics name changes
    change semMutexId to epicsMutexId
    replaces osiSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    !gtMoreThanDefault -> useOsdGetCurrent
    generalTime short circuit current time
    
    epicsTimeGetCurrent() is called frequently.
    Unless more than the default provider is registered,
    locking and going through the timeProvider list each
    time is a waste.
    
    Instead, short circuit to directly call the default
    time current time provider unless a another has
    been registered.
    monotonic adapt to regular time APIs
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve some cppcheck errors & warnings
    GeneralTime updates to improve time provider synchronization
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    Fixed iocsh stream redirection for several commands
    
    Eric provided the fixes to iocsh (empty commands would not reset
    redirected streams), I fixed various commands.
    Rename the time provider name routines, don't rely on the #define.
    Enhance generalTime subsystem with interrupt-context time & event requests.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Fixes for Cygwin build.
    Removed duplicate epicsShareAPI in line.
    Added epicsShareFunc where necessary.
    Make epicsTimeGetCurrent and epicsTimeGetEvent with epicsShareAPI
    for backwards-compatibility reasons (someone may need this).
    Fixed generalTime initialization issues (RTEMS incomplete).
    Fix up initialization.  Must allow recursive calls.
    Fix initialization races.
    Don't use exclamation mark for valid output.
    Another malloc() + bzero() => calloc()
    Expanded tabs, replaced malloc() + bzero() with calloc().
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsStdio.c allow stderr from inside epicsThreadInit()
    
    Circular initialization problem that Murali discovered when you
    try to fprintf(stderr) from the posix/osdThread.c once() routine.
    This change lets the stderr stream through in that case.
    Merged epicsStdioRedirect.h into epicsStdio.h
    Added redirection support for puts() and putchar().
    Work around problem with iocsh redirection from within vxWorks scripts.
    epicsExit and epicsStdioRedirect
    fixed DLL export
    more changes to make override of printf work
    override printf
    printf => epicsStdioPrintf
    added epicsGetStdin/epicsSetStdin and stdout and stderr
    split epicsStdio into common and osdStdio portions
    Updated license comments.
    remove def for pdbbase
    changes for osiThread=>epicsThread
    add threadInit()
    build changes
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Applied all doxy-libcom changes to latest headers
    monotonic adapt to regular time APIs
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/osi: add full epicsTime conversion from/to UTC struct tm (without timezone mechanism)
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    Reverted changes to epicsTime.h and epicsThread.h
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    Enhance generalTime subsystem with interrupt-context time & event requests.
    Fixed generalTime initialization issues (RTEMS incomplete).
    General Time, from Peter Denison, Eric Norum and many others...
    fixed mantis 266
    epicsTime <=> aitTimeStamp conversions dont work on 64 bit hosts
    fixed warnings on 64 bit architectures
    fix bad comments
    added dll export keywords
    removed unnecessary includes
    fixed gnu cpp c++ comment warnings
    fixed comments
    removed constants
    NTP time stamp conversion
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    add special values for eventNumber; time events are int
    improved dll interface
    1) distinguish between struct tm in local timezone and a struct tm in UTC
    2) added new osd routines to replace gmtime_t and localtime_t because
    the vxWorks interface does not follow posix RT
    Fixed HPUX warnings.
    osiTime=>epicsTime
    replacement for osiTime
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    libcom: win32 poison TLS value
    epicsThread avoid possible data race on joined
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    epicsThreadJoin() -> epicsThreadMustJoin()
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    epicsThread fix join
    class epicsThread is joinable
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    libCom: add epicsThreadCreateOpt()
    
    Variant of epicsThreadCreate() which accepts optional
    arguments via a structure to allow for compatible
    addition of new arguments.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Clean-up after lp:1558206 fix
    pWaitRelease in wrong place
    
    waitRelease==false indicates that pThread
    has not be delete'd
    libCom: exitWait() from thread exit handler corrupts stack
    
    The epicsThreadCallEntryPoint() function stores a pointer
    to a local variable in epicsThread::pWaitReleaseFlag.
    Calling epicsAtThreadExit::exitWait() from that thread's
    epicsAtThreadExit() handler writes to this pointer
    after epicsThreadCallEntryPoint() has returned.
    Thus corrupting the stack.
    
    Set pWaitReleaseFlag=NULL before return to prevent this.
    
    fixes lp:1558206
    when finished waiting for a thread to exit, signal the event in case other threads are waiting also
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    exp passed to assert must not change the state of the data structures
    Fix for solaris compiler complaint about ambiguity of 'exception'.
    accomodate archaic vxWorks gnu compiler
    improved thread creation failure exception diagnostics
    added shjow func to epicsThread class
    Fixes to allow building on Solaris.  Its <cxxx> headers are evidently not
    quite drop-in C++ replacements for the <xxx.h> C versions.
    fixed no try catch block for exceptions occurring when fetching the time to print a diagnostic message in the last chance exception handler.
    Removed the pthread_cancel() functionality from posix/osdThread.c,
    resolving the whole issue with catch(...) on NPTL.
    Fix segfault on linux - catch(...) must not call std::unexpected()
    Exception classes don't need to derive from std::exception,
    this can cause build faults on some architectures.
    Another fix, for the SunPro compiler this time.
    Fix for vxWorks 6.x - don't use std::min/max.
    fixed conditional
    added try / catch block to epicsThread :: exoitWait () so that exception
    specification isnt violated
    Oops.
    Ensure the main thread gets a unique ID.
    Moved testMain.h into libCom/misc, since db/test is built before libCom/test.
    standards unconformant C++ compilers (such as msvs 6.0) dont like
    a std:: in front of the cal to unexpected()
    Remove extraneous semicolon.  New versions of gcc complain about it.
    fixed throw spec
    o fixed "no exception thrown if epicsThreadCreate() return nill"
    o added epicsThreadMustCreate
    o cleaned up thread rundown blocking
    o header file need not include exception support
    o fixed so that a thread that has not began will terminate if another thread
    calls exit wait
    o use independent event semaphore assisting these two threads to block
    1) spawned thread
    2) thread waiting for spawned thread to exit
    fixed cast
    o print date when unexpected exception occurs
    o call std::unexpected() when unexpected exception occurs
    exitWait ( double delay ) => exitWait (const double delay )
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    ShellContext=>OkToBlock
    implement ShellContext
    fixed solaris warnings
    fixed race condition at thread exit
    workaround for visual c++ 6.0 not compatible with c++ standards
    better message when a C++ exception terminates a C++ thread
    fix sunpro and ms warning
    certain functions are nolonger inline
    Updated license comments.
    fixed no \n at end of message
    added exit and waitRelease capabilities to epicsThread class
    fixed sun pro warning
    reduced thread entry function scoppe to static
    allow derived class destructor to wait for thread exit
    improved dll interface
    added const to show () vf
    add show method
    fix for solaris
    extern "C" did not work for WIN32
    changes for osiThread=>epicsThread
    Convert epicsTempFile.cpp to .c
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Make the NTPTime provider optional on VxWorks
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - first stab at breaking stack trace facility into separate files
     - consistent naming: 'StackTrace' everywhere.
    Add strtoll() and strtoull() for VxWorks
    
    These are not yet provided even in VxWorks 6.9.
    switch to use sysInWord and friends
    mmio: vxWorks m68k use default, add weak symbols for old versions
    spinlocks update
    
    add epicsSpinMustCreate()
    
    Fix spinlock on RTEMS and vxWorks
    UP systems to disable task preemption.
    
    Don't use posix spinlocks when
    thread priorities are used.
    add MMIO API
    
    From devLib2
    adds calls to handle 8, 16, and 32 bit
    Memory Mapped I/O reads and writes.
    
    Adds X_iowriteY() and X_ioreadY().
    
    where X is nat (native), be, or le.
    Y is 16 or 32.
    
    Also adds ioread8() and iowrite8().
    libCom/osi: add epicsSpin with default, posix, and vxWorks implementations
    - posix uses pthread_spin_ interface when supported, pthread_mutex_ otherwise
    - default uses epicsMutex
    - vxWorks (single core) uses intLock()
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Merged epicsStdioRedirect.h into epicsStdio.h
    Remove epicsAtomicLocked.{h,cpp} from Makefile too.
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    o added CMPL_CLASD definition to CONFIG.gnuCommon, CONFIG.solarisCommon.solarisCommon, configure/os/CONFIG.win32-x86.win32-x86
    o added CMPLR_SRC_DIRS to ALL_SRC_DIRS, and added compiler/$CMPLR_CLASS) to INSTALL_INCLUDES in CONFIG_COMMON
    o added additional compiler specific rule deciding where things are installed to  in CONFIG_COMMON
    o added compiler specific include install to RULES_BUILD
    o changed configure/os/CONFIG.linux-x86.linux-x86 to specify minimum arch is 586 (pentium circa 1995)
    o changed configure/os/CONFIG.win32-x86-cygwin.win32-x86-cygwin to specify minimum arch is 586 (pentium circa 1995)
    o added epicsAtoimic facility to libCom/Makefile
    o added testing and performance measurement to  libCom/test/Makefile
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsReadline: ensure readline context is zero'd
    
    Otherwise ->osd != NULL for the default RTEMS readline impl
    libCom: epicsReadline refactoring
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix MinGW cross-build from Linux
     - simplified some code
     - epicsStackTrace.c provides generic epicsStackTraceGetFeatures() testing
       the 'epicsBackTrace()' functionality. Call out to epicsFindAddrGetFeatures()
       to inquire about symbol lookup support.
     - fixed illegal void* pointer arithmetic by casting to char*
     - removed more unused stuff
     - first stab at breaking stack trace facility into separate files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsAtomic headers when used from C code
    
    Several C++ and C99-isms crept in.
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    epicsExit and epicsStdioRedirect
    Add 'size' argument to all epicsMessageQueue receive routines.
    Create os-dependent message queue routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    probably fixed PPC build (its not easy to test this here)
    o fixed spelling in comments
    o fixed warnings during MSVC based build
    fix for mingw gcc V3 build
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    added epicsAtomicGetUIntT for completeness
    added epicsAtomicGetUIntT for completeness
    fixed test for earlier gcc supporting intel instrinsic atomic operations
    fixed test for earlier gcc supporting intel instrinsic atomic operations
    enable gcc atomic intrinsics on certain older gcc that does not advertize its atomics when targeting intel
    enable gcc atomic intrinsics on certain older gcc that does not advertize its atomics when targeting intel
    track name changes
    track name changes
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove epicsThrows() macro
    
    Exception specifications are deprecated: http://isocpp.github.io/
    CppCoreGuidelines/CppCoreGuidelines.html#e30-dont-use-exception-
    specifications . They will be removed from the C++ standard with
    C++20. Modern compilers are warning about them since years. Thus
    it's unlikely that anyone is still using the epicsThrows() macro.
    Even if that's the case the fix is trivial: Simply remove the macro.
    Simplify definition of compiler-specific macros
    
    Remove conditionals for older compiler versions that aren't
    supported by EPICS Base anymore.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add EPICS_FUNCTION
    
    Automatic macro which expands to the current function name.
    Useful in debug prints.
    add EPICS_ALWAYS_INLINE
    libCom: Added macro EPICS_UNUSED to compilerDependencies.h
    
    Stop unnecessary warnings.
    Move default macros to compilerDependencies.h
    Added check in gcc-specific header to error if __clang__ defined
    Some versions of clang don't support __has_attribute()
    merged andrews merge to R3.15
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    added epicsAtomicGetUIntT for completeness
    added epicsAtomicGetUIntT for completeness
    track name changes
    track name changes
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Simplify definition of compiler-specific macros
    
    Remove conditionals for older compiler versions that aren't
    supported by EPICS Base anymore.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add EPICS_FUNCTION
    
    Automatic macro which expands to the current function name.
    Useful in debug prints.
    add EPICS_ALWAYS_INLINE
    Move default macros to compilerDependencies.h
    Added check in gcc-specific header to error if __clang__ defined
    Some versions of clang don't support __has_attribute()
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    track name changes
    track name changes
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix for Solaris C++ compiler
    add EPICS_ALWAYS_INLINE
    Move default macros to compilerDependencies.h
    Added check in gcc-specific header to error if __clang__ defined
    Some versions of clang don't support __has_attribute()
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    track name changes
    track name changes
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    add EPICS_ALWAYS_INLINE
    Move default macros to compilerDependencies.h
    Added check in gcc-specific header to error if __clang__ defined
    Some versions of clang don't support __has_attribute()
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    track name changes
    track name changes
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove epicsThrows() macro
    
    Exception specifications are deprecated: http://isocpp.github.io/
    CppCoreGuidelines/CppCoreGuidelines.html#e30-dont-use-exception-
    specifications . They will be removed from the C++ standard with
    C++20. Modern compilers are warning about them since years. Thus
    it's unlikely that anyone is still using the epicsThrows() macro.
    Even if that's the case the fix is trivial: Simply remove the macro.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add EPICS_FUNCTION
    
    Automatic macro which expands to the current function name.
    Useful in debug prints.
    add EPICS_ALWAYS_INLINE
    libCom: Added macro EPICS_UNUSED to compilerDependencies.h
    
    Stop unnecessary warnings.
    Move default macros to compilerDependencies.h
    Added check in gcc-specific header to error if __clang__ defined
    Some versions of clang don't support __has_attribute()
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o changed the build system so that we can implement functionality which is compiler specific in a separate file for each compiler. This will avoid accumulating MxN ifdef's where M is the number of OS and N is the number of comilers (worst case). This will make it easier to find code that is compiler specific centralizing all of it under libCom/osi/compiler. That should make it mush easier to port EPICS to run on a new compiler.
    o refactored compilerDependencies.h into code that is compiler specific (one libCom/osi/compiler/xxx/compilerDependent.h for each comiler) and code that isnt  libCom/osi/compilerDependencies.h (this is a new location and is no longer in libCom/misc).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    pdevLibVirtualOS needs epicsShareDef and explicitly setting to NULL,
    but we can't do the latter in the os/default version.
    Fixed compiler warnings.
    Use new, simpler, RTEMS test harness.
    Use new configuration entries.
    More timing cleanups for RTEMS.
    Let epicsExitTest work on systems with strict priority scheduling.
    Exit properly.
    Add epicsExit test.
    Clean up some typos.
    Add test harness for RTEMS.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Updated license comments.
    Modified cygwin32 separator definitions.
    installed
    removed osi file name stuff
    added file name defs headers
    Fix Cygwin TCP_NODELAY issue from Paul Chu & Freddie
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    Fix for latest Cygwin
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    fixed up the cygwin build for R3.14
    Updated license comments.
    removed gethostname() proto (which should be in unistad.h)
    better config of ifconfig differences
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    added sock ioctl() typedef
    added errno macros
    check both sides of the fd range
    cygwin32 b18 changes.
    Modifications made for beta9.
    removed ipAddrToA () prototype
    Initial Version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fixing and/or investigating Cygwin issues
    cygwin: Fixed SocketSystemCallInterruptMechanism
    
    Cygwin changed it back again.
    Various updates for building on Windows/Cygwin/MinGW
    libCom: Cygwin socket unblocking again...
    
    It helps to include the cygwin header file that
    actually has the version number in it...
    libCom: Fix cygwin socket shutdown issue.
    
    Cygwin 1.7 changed the socket shutdown method from BothShutdown
    to Close. This fix looks at the cygwin version to work out what
    value to return from esscimqi().
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix socket shutdown mechanism on cygwin-x86
    Clean up system-call-interrupt mechanism.
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    installed
    Updated license comments.
    many, many changes
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Mark epicsStrtod() as extern "C"
    We took epicsShareAPI out of Win32 already, which was the only arch that
    might have needed it!
    Add os-independent epicsStrtod() routine.
    Updated license comments.
    Initial checkin of RTEMS operating-system-specific routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    Clean up threadOnceOsd.
    Start up interrupt message daemon from threadInit.
    backout INLINE; add level argument to semXXXShow
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fix for RTEMS NTP sync issue
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    RTEMS: Time registration when dynamically loading
    
    The old test for discriminating between statically and dynamically
    linked applications (os/RTEMS/osdTime.cpp:staticTimeRegister()) is
    wrong, it never detects a dynamically loaded app.
    
    fixes lp:831648
    -------------- This line and the following will be ignored
    --------------
    
    modified:
      src/libCom/osi/os/RTEMS/osdTime.cpp
    libcom/osd/rtems: Fix by M. Davidsaver to use an epheremal receiver port for the NTP synchronization.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix RTEMS build issue finding close()
    Arrange for compatability with compile-time and run-time linking.
    Reuse NTP socket.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    Use new general time registration.
    Allow use in both statically- and dynamically-loaded environment.
    Fixed generalTime initialization issues (RTEMS incomplete).
    Clean up.
    Clean up some minor issues with differences between RTEMS/vxWorks/POSIX.
    General Time, from Peter Denison, Eric Norum and many others...
    More timing cleanups for RTEMS.
    Drop some vxWorks-specific code.
    Add drvTs support.
    Use POSIX TZ environment variable now.
    Cosmetic.
    Updated license comments.
    add special values for eventNumber; time events are int
    Add epicsTime_gmtime and epicsTime_localtime routines.  Code is identical to
    that in posix/osdTime.cpp.
    osiTime=>epicsTime
    Rename file to match EPICS C++ convention.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Get isnan/isinf.
    Add prototype for strtok_r which is in the library but not in the headers
    with -ansi.
    Get things to build on RTEMS.
    Allow inclusion from C++ source files.
    Updated license comments.
    Add OS-specific version to supply some missing prototypes.
    improved performance
    added new line at EOF
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    removed warning message
    Return osiSpawnDetachedProcessNoSupport as required by src/iocinf.cpp.
    Add dummy implementation of osiSpawnDetachedProcess.
    added routines needed by CA
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Define pdevLibVME on non-VME RTEMS targets
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fix typo in rtems internal function names
    
    Not externally visible so no reason not to fix
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    [PATCH 03/12] mark all implimentation functions as static
    [PATCH 02/12] add devInterruptInUseVME to function table
    
    Add test for interrupt handler function to the virtual os table.
    Adds a stub implementation to devLib.c
    Renames OS implementations functions for RTEMS and vxWorks to avoid symbol name conflicts
    [PATCH 01/12] add jumping VME interrupt routines to independent implementation
    
    Adds implementations which use the virtual os table to invoke the
    OS specific call.
    
    rename conflicting functions
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Clean up some warnings.
    Added CR/CSR support to devLib.
    Add 'VME' support for RTEMS-uC5282 target.
    Add some routines to make porting from vxWorks a little easier.
    I'm a little leery about my quick hack for rebootHookAdd() since the
    argument to the 'hooked' function is different.
    This problem was reported by Kate Feng and Stephanie Allison.
    Quick hack to avoid compiling this for machines other than the one Till's
    now using.  Definitely needs to be fixed properly 'some day'.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    replacements for osdSem
    backout INLINE; add level argument to semXXXShow
    Numerous modifications to track changes to OSI/OSD API.
    RTEMS-specific modifications to osiSem.h declarations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    rtems_message_queue_receive expects size_t
    Use standard types -- new versions of RTEMS will be drop the rtems_xxx types.
    Updated license comments.
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    changes for osiThread=>epicsThread
    Clean up threadOnceOsd.
    Start up interrupt message daemon from threadInit.
    backout INLINE; add level argument to semXXXShow
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix up free space calculation.
    Use lower-overhead mechanism to determine free space.
    Get types.
    Allow a little more fragmentation of heap.
    Updated license comments.
    added new parameter
    RTEMS now provides a mechanism for interrogating the memory allocator.
    renamed files
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Add support for Windows FILETYPE time stamps.
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    Add newline at end of file to quiet compiler complaints.
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    more RTEMS join
    epicsThreadMustJoin() warn only on double self-join
    epicsThreadMustJoin() clear joinable flag
    
    Clear so that repeated calls will error correctly.
    Only well defined for self join.
    epicsThreadJoin() -> epicsThreadMustJoin()
    RTEMS thread join
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    libCom: add epicsThreadCreateOpt()
    
    Variant of epicsThreadCreate() which accepts optional
    arguments via a structure to allow for compatible
    addition of new arguments.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve some cppcheck errors & warnings
    libCom: Missing unlock in epicsThreadShow for RTEMS
    
    fixes lp:1628323
    Remaining Revision-Id keywords in source
    Make epicsMutex intialization use epicsThreadOnceId
    
    Includes Michael's patch to replace calls to the epicsMutex API
    from inside the libCom/osi/os/RTEMS/osdThread.c code.
    
    Fixes lp:1542539
    Changes from patch in lp:1539791
    libCom/osi: add epicsThreadGetCPUs()
     * Implementation for posix and WIN32 tries to get the CPUs available for this process,
       rather than the complete number of CPUs in the system.
     * For the time being, vxWorks returns 1. (This will have to change for vxWorks SMP.)
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    libCom/osi: Fix nesting for epicsThreadHooks, add WIN32 implementation, lock traversal
    - call (generic) exit hook after calling the (specific) epicsExitCallAtThreadExits()
    - for start hooks added as 1-2-3, run exit hooks in opposite order: 3-2-1
    - add calls to hooks module to WIN32 osdThread.c
    - add lock/unlock to hook list traversal
    libCom/osi: Add epicsThreadMap (calls user function for each thread)
    libCom/osi: Add RTEMS and vxWorks implementation for epicsThreadHooks
    libCom/osi: Fixed all epicsThreadSleep() implementations
    
    All are now robust against overflow, NAN or negative argument.
    Passing seconds=0 calls the OS scheduler, offering to yield.
    Passing seconds>0 delays at least the requested time, up to a
    limit which usually depends on the OS tick rate.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Optimize epicsThreadOnce() routines.
    
    Don't call epicsThreadGetIdSelf() unnecessarily, check for the value
    EPICS_THREAD_ONCE_DONE first, since that's the most common state.
    Define EPICS_THREAD_ONCE_DONE properly on RTEMS.
    Rework epicsThreadOnce() using ideas from Michael Davidsaver.
    An epicsThreadOnceId is now an epicsThreadId.
    During initialization, it is set to the thread running the init routine
    which can now detect a recursive initialization attempt and suspend.
    EPICS_THREAD_ONCE_INIT is still zero, the implementations now define a
    new private value for EPICS_THREAD_ONCE_DONE.  This is deliberately not
    made public.
    As reported by Michael Davidsaver.
    Apparently the GeSys dynamic linker doesn't maintain C semantics.
    I'm afraid that this behaviour is likely to cause lots of other problems,
    but for now I'll apply the patch since it's harmless.
    Reduce RTEMS stack sizes.
    Use new RTEMS 'unified memory pools'.
    Clean up some warnings.
    Increase stack sizes a little.
    Odd problems seemed to arise with smaller sizes, although the stack checker
    never reported any problems.
    epicsThreadOnceOsd() must unlock mutex before calling func().
    Required so callbackInit() can wait for its threads to start.
    Clean up stack size specification.
    Round off sleep times -- makes timed scan threads work better when
    high-quality time source (e.g. event receiver) is used.
    Use correct conditional.
    Allow use with pre-release version of RTEMS-4.9.
    Use _Objects_Get_name_as_string if available.
    Clean up some warnings.
    Use standard types.
    More timing cleanups for RTEMS.
    installed epics thread exit capabilities
    Fixed bug in posix implementation of osdThreadOnce and added assertion
    to the other implementations that will fire in the one case the Posix
    code can't cope with.
    Add support for RTEMS tasks with string names.
    Ensure that RTEMS-style names are properly terminated.
    Improved epicsThreadGetName() so that it works for all threads, not just those
    created by epicsThreadCreate().
    epicsExit and epicsStdioRedirect
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    fix OkToBlock
    ShellContext=>OkToBlock
    implement ShellContext
    Fix missing format.
    Clean up -- use epicsStrDup instead of ad-hoc allocation.
    Ensure that tasks get at least RTEMS_MINIMUM_STACK_SIZE.
    Add extern declaration.
    added epicsThreadSleepQuantum()
    Updated license comments.
    Clean up printout when RTEMS task has gone away.
    Treat a missing RTEMS task as suspended.  Do not print error message.
    Implement agreed-upon semantics for delay/timeout arguments.
    A delay/timeout <=0.0 results in a yield/poll.
    A delay/timeout >0.0 is rounded up to 1 tick.
    Ensure that epicsThreadSleep always yields processor.
    Clean up priority display.
    Move task name to end so that long task names look better.
    Make non-existent tasks look like they're suspended.  This keeps the task
    watchdog from reporting them over and over and over again.
    Check value returned by rtems_task_start().
    Must include osdInterrupt.h to get prototype for interrupt context message
    handler daemon.
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    fix epicsThreadBooleanStatusFail
    fix epicsThreadBooleanStatusSuccess
    changes for osiThread=>epicsThread
    Convert from semMutex to epicMutex.
    Plug memory leak -- free thread private variable information when task exits.
    Show both current and real priority when they differ.
    Show true priority, not the value clipped to the EPICS limits.
    Track Jeff's changes to vxWorks/osdThread.c priority calculations.
    Add call to clockInit.
    Clean up some threadInit calls.
    call threadInit where needed
    Add dummy threadExitMain routine.
    Minor cosmetic change on task information table header.
    Add implementation of threadGetPrioritySelf().
    Clean up task info display.
    Set task variable notepad entry properly.
    Ensure that a threadPrivateGet before a threadPrivateSet returns a NULL pointer.
    Give the initial thread a `taskVar' structure.
    Add functions to compute next higher and next lower priority level.
    Use mutex to prevent race in threadPrivateCreate.
    Use RTEMS task notepad instead of task variables to implement private
    thread variables.
    Don't call threadInit from threadCreate -- just print an error message and stop.
    This avoids problems with recursive failures should a function called by
    threadInit call errlogPrintf.
    Clean up threadOnceOsd.
    Start up interrupt message daemon from threadInit.
    Make RTEMS version of threadShow work like POSIX version when passed a
    thread ID of 0 (print a header).
    Reflect changes to osiThread.h.  New `show' functions.  Implement threadInit.
    Clean up in preparation for release of threadInit.
    Avoid recursive lockups in threadOnce while still ensuring that a
    preempting task does not incorrectly determine that the `init'
    function has completed.
    Simplified implementation of threadOnce.
    Add RTEMS implementations of threadGetId and threadOnceOsd.
    various, mostly posix, thread mods
    Add task name access routines.
    Add preliminary `show task' support.
    more changes for threadPrivate
    Change implementation of thread-private storage to one similar to the
    vxWorks implementation by Andrew Johnson APS/ASD.
    get rid of threadIsReady
    Make functions match prototypes.
    Finish conversion of task variable code from include file (INLINE) to functions.
    backout INLINE; add level argument to semXXXShow
    Numerous modifications to track changes to OSI/OSD API.
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    replacements for osdSem
    backout INLINE; add level argument to semXXXShow
    Numerous modifications to track changes to OSI/OSD API.
    RTEMS-specific modifications to osiSem.h declarations.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    Initial checkin of RTEMS operating-system-specific routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Add ieeefp.h to pick up isnan and friends.
    Latest version of newlib has math.h which has all that's needed.
    Need a few more functions declared.
    Need isnan() declaration now to track changes in other header files.
    Updated license comments.
    fix definition for isinf
    use finite to implement isinf
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    use proper form of include
    add trailing */
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    Remaining Revision-Id keywords in source
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ESHUTDOWN is not in FreeBSD and hence not in RTEMS.
    net bsd challenged os dont have INADDR_NONE
    Clean up osiSocklen_t typedef.
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    use posix sockets
    Updated license comments.
    Give the select prototype C linkage.
    better config of ifconfig differences
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    Add definition for SOCKADDR_HAS_LEN -- this ensures the the correct
    code in default/osdNetIntf.c is used.
    Add some definitions.
    added routines needed by CA
    Updated the ifndef at beginning of file.
    Initial checkin of RTEMS operating-system-specific routines.
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    added sock ioctl() typedef
    added errno macros
    check both sides of the fd range
    Added struct ifafilt line which eliminates dozens of warnings.
    removed ipAddrToA () prototype
    Don not include filio and sockio headers.
    Aplha support file from M. Rivers
    moved include of if.h here
    added unistd.h for close() and added gethostname() proto
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fixed issues with thread-hooks.
    Fix vxWorks build issues from thread-hooks merge.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Add some copyrights for ITER
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Updated license comments.
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More warnings removed.
    Clean up warnings.
    Improve error message.
    epicsExit and epicsStdioRedirect
    Fix up change to match new os-dependent mutex API.
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    Updated license comments.
    Return epicsMutexLockTimeout on failure to lock in epicsMutexTryLock since
    that's the return code checked by the test programs.
    Implement agreed-upon semantics for delay/timeout arguments.
    A delay/timeout <=0.0 results in a yield/poll.
    A delay/timeout >0.0 is rounded up to 1 tick.
    Clean up semaphore statistic gathering.
    epicsMutexMustCreate now osi; add support for epicsSemShowAll
    changes for osiThread=>epicsThread
    replacements for osdSem
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: fix noop OSDs
    
    Ensure that all are epicsAtomicOSD.cpp and use
    no-op to prevent RTEMS from using the posix
    implementation.
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved structure and thread safety
    installed beacon anomaly generator
    fixed binding to specified interface (broken by R3.14 beta changes)
    Updated license comments.
    fixed warnings
    revert to using virtual destroy() to destroy timers
    adapt to new timer API
    new timer creation API
    made compatible with timer library API changes
    fixed gnu warning
    osiTimer => epicsTimer
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    osiTimer constructor now requires delay of type double
    API changes
    installed
    vxWorks port changes
    installed
    space became tab
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: RTEMS ISR safe impl. for epicsAtomicLock()
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    Fix epicsAtomic headers when used from C code
    
    Several C++ and C99-isms crept in.
    o hoping that atomic_inc_ptr_nv and atomic_dec_ptr_nv interface definitions will be available if we use sys/atomic.h instead of atomic.h
    o fixed issue introduced by last revision where definition of lock functions and lock key were not present if its sunos 5.10 or greater
    (its time consuming to develop code if you can only run the (SUNPRO) compiler indirectly)
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom/osi: Resolve bcopyLongs() conflict on vxWorks 6.9
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    += Change for arm. == This should be BSP dependent, not CPU dependent! ==
    No devlib for M68k (yet).
    Add OS-dependent VME support.
    Add prototype for OSI->OSS priority mapper.
    Updated license comments.
    backout INLINE; add level argument to semXXXShow
    RTEMS-specific implementation of per-thread variable.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaner version of wait with timeout fix.
    Return TIMEOUT status even when delay time is 0.
    Clean up some warnings.
    Use standard types.
    Updated license comments.
    Implement agreed-upon semantics for delay/timeout arguments.
    A delay/timeout <=0.0 results in a yield/poll.
    A delay/timeout >0.0 is rounded up to 1 tick.
    Clean up semaphore statistic gathering.
    Remove RTEMS-specific semaphore show command.  The generic epicsMutexShowAll
    provides similar functionallity.
    Allow for longer task names in semaphore show messages.
    changes for osiThread=>epicsThread
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    += epicsSignalInstallSigHupIgnore (libCom/osi)
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    Add to provide signal-related stubs.
    comment out unused parameter
    changed name of osd signal file to allow c++ and enabled noop signals
    installed
    Updated license comments.
    added new parameter
    RTEMS now provides a mechanism for interrogating the memory allocator.
    renamed files
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    bswap16/32 as functions
    
    Turn bswap16() and bswap32() into functions
    to avoid evaluating the argument more than once.
    fix copyright header
    rtems: mmio for m68k
    add MMIO API
    
    From devLib2
    adds calls to handle 8, 16, and 32 bit
    Memory Mapped I/O reads and writes.
    
    Adds X_iowriteY() and X_ioreadY().
    
    where X is nat (native), be, or le.
    Y is 16 or 32.
    
    Also adds ioread8() and iowrite8().
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsSpin: try lock return non-blocking
    
    Avoid cantProceed() in try lock, even for undefined behavior.
    epicsSpin: better error messages when mis-use is detected
    spinlocks update
    
    add epicsSpinMustCreate()
    
    Fix spinlock on RTEMS and vxWorks
    UP systems to disable task preemption.
    
    Don't use posix spinlocks when
    thread priorities are used.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    RTEMS newlib version of strtod handles INF/NAN.
    We took epicsShareAPI out of Win32 already, which was the only arch that
    might have needed it!
    Add os-independent epicsStrtod() routine.
    Updated license comments.
    Initial checkin of RTEMS operating-system-specific routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Removed some Revision-Id keywords
    RTEMS: readline missing }
    libCom: epicsReadline refactoring
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    RTEMS thread join
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add prototype for OSI->OSS priority mapper.
    Updated license comments.
    backout INLINE; add level argument to semXXXShow
    RTEMS-specific implementation of per-thread variable.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    backout INLINE; add level argument to semXXXShow
    add epicsShareFunc
    still getting to work
    dont implement via header file
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Make the NTPTime provider optional on VxWorks
    libCom: Fix VxWorks localtime_r() and gmtime_r() wrappers
    
    Wind River changed the return value between VxWorks 6.8 and 6.9.
    Make NTP request timeout a macro.
    Modified the timeout and retry count: Allow 4 seconds for an NTP reply,
    and 4 retries, thus NTP sync must work at least once every 5 minutes.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    Included vxWorks.h, needed for vxWorks 6.6.
    General Time cleanup.
    Fixed generalTime initialization issues (RTEMS incomplete).
    General Time, from Peter Denison, Eric Norum and many others...
    Back out erroneous commit.
    Preliminary general time changes.
    Updated license comments.
    added new osd routines
    osiTime=>epicsTime
    added soft clock support
    changes so things build
    call the tsDrv routines
    o created tsStamp.h
    o include tsStamp.h into tsDefs.h
    o use assert() instead of C++ exceptions on certain os
    use posix RT
    moved to here from vxWorksMT
    use proper form of include
    cosmetic changes
    changed getCurrent to osdGetCurrent
    many improvements to osiTime
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    Updated license comments.
    dont return failure code when there is no OS support - return
    no support error code instead
    changes so things build
    added routines needed by CA
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    use dynamic binding of vxWorks BSP functions because some BSPs don't provide them
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom/devLib: Make unsolicitedHandlerEPICS() visible
    
    This symbol is required to be visible on non-PowerPC (68k) vxWorks
    systems for devInterruptInUseVME() to recognize interrupt vectors
    that the devDisconnectInterruptVME() routine has marked as not used.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    [PATCH 03/12] mark all implimentation functions as static
    [PATCH 02/12] add devInterruptInUseVME to function table
    
    Add test for interrupt handler function to the virtual os table.
    Adds a stub implementation to devLib.c
    Renames OS implementations functions for RTEMS and vxWorks to avoid symbol name conflicts
    [PATCH 01/12] add jumping VME interrupt routines to independent implementation
    
    Adds implementations which use the virtual os table to invoke the
    OS specific call.
    
    rename conflicting functions
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Added CR/CSR support to devLib.
    Cleaned up compiler warnings.
    Make vxDevWriteProbe() actually do a write - Mantis #280.
    Cleaning up warnings.
    fixed warnings
    wrong prototype fot devInit
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    changed tabs to spaces
    try to accomodate PPC
    try to accomodate PPC
    Tornado II does not allow intConnect with intel compiler
    improved the portability of devLib
    fixed order problem npend-- vs callBackInProgress
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    take blanks out of names
    Updated license comments.
    really cant git rid of module_types.h and task_params.h
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    General Time, from Peter Denison, Eric Norum and many others...
    drvTS has been unbundled from base
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    Updated license comments.
    replacements for osdSem
    semBinaryGive, semBinaryTake, semMutexGive, semMutexTake are now macros
    backout INLINE; add level argument to semXXXShow
    add epicsShareFunc
    still getting to work
    dont implement via header file
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    backout INLINE; add level argument to semXXXShow
    still getting to work
    dont implement via header file
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    suppress extra console message from logMsg
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    s/Destroy/Delete/ in name of vxWorks routine.
    Add 'size' argument to all epicsMessageQueue receive routines.
    Major modifications to ensure valid 'nBytes' argument to msgQReceive().
    vxWorks version of message queue.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Removed references to VxWorks 5.x
    libCom: Clear up warnings from VxWorks 6.9.
    Fix for when size=1.
    simplify code for free=1 case
    epicsSnprintf: prevent buffer overflow; use posix convention
    split epicsStdio into common and osdStdio portions
    Implemented epicsVsnprintf() properly using vxWorks' fioFormatV() function.
    epicsStdio is new
    Updated license comments.
    removed tabs
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    fixed no use arg warning
    fixed casChannelI undefined symbols on WIN32
    API changes
    moved down one level
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    fix for https://bugs.launchpad.net/epics-base/+bug/1090009
    Added libCom/test code for epicsThreadOnce() implementations.
    Also fixed subsystems that were not using epicsThreadOnce correctly.
    Updated license comments.
    spawn off an independent thread
    implemented vxWorks pool status
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    add sys/times.h
    still getting to work
    dont implement via header file
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    libCom: Back-ported aToIPAddr fix from 3.15 branch.
    
    Cherry-picked 3.15 revno 12398 with some changes.
    libCom: aToIPAddr() finds numeric hostnames
    
    Hostnames that begin with one or more digits were not being looked up
    by name, causing problems at BNL.
    This commit also changes the vxWorks implementation of hostToIPAddr()
    to use inet_aton() instead of inet_addr().
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    Add support for vxWorks 6.8.
    Fixed various compiler warnings.
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    Add support for host addresses in dotted-decimal form.
    Updated license comments.
    removed unused code
    fix compilation errors
    reliable solution for shutdown differences
    changed the name of bsdSock{Attach,Release}
    cleaned out osdSockResource
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    VxWorks::osdThread: Rename createFunction => epicsThreadEntry
    and make it visible (non-static) so it appears in back-traces.
    Fix VxWorks epicsThreadMustJoin() problems
    
    taskWait() actually returns OK on timeout, so drop the timeout warning
    (the other implementations don't have one).
    The taskWait() may return ERROR with S_objLib_OBJ_ID_ERROR if the target
    thread has higher priority; this indicates a successful join, because
    we already did a rendezvous using joinSem.
    Delete joinSem *after* calling taskSpareFieldSet(), in case it matters.
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    Working VxWorks implementation of epicsThreadMustJoin()
    epicsThreadJoin() -> epicsThreadMustJoin()
    Initial implementation for VxWorks 6.9 and later
    
    This almost seems too simple...
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    libCom: add epicsThreadCreateOpt()
    
    Variant of epicsThreadCreate() which accepts optional
    arguments via a structure to allow for compatible
    addition of new arguments.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Changes from patch in lp:1539791
    libCom: Fix sysAtReboot registration on vxWorks 6.8+
    
    Removed C++ static constructor, do it from epicsThreadInit()
    libCom/osi: add epicsThreadGetCPUs()
     * Implementation for posix and WIN32 tries to get the CPUs available for this process,
       rather than the complete number of CPUs in the system.
     * For the time being, vxWorks returns 1. (This will have to change for vxWorks SMP.)
    libCom: Fixed issues with thread-hooks.
    Fix vxWorks build issues from thread-hooks merge.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Don't decorate epicsThreadHook functions with epicsShareAPI
    libCom/osi: Make vxWorks implementation of epicsThreadMap() safe and dynamic
    libCom/osi: Fix nesting for epicsThreadHooks, add WIN32 implementation, lock traversal
    - call (generic) exit hook after calling the (specific) epicsExitCallAtThreadExits()
    - for start hooks added as 1-2-3, run exit hooks in opposite order: 3-2-1
    - add calls to hooks module to WIN32 osdThread.c
    - add lock/unlock to hook list traversal
    libCom/osi: Add some copyrights for ITER
    libCom/osi: Add epicsThreadMap (calls user function for each thread)
    libCom/osi: Add RTEMS and vxWorks implementation for epicsThreadHooks
    libCom/osi: Fixed all epicsThreadSleep() implementations
    
    All are now robust against overflow, NAN or negative argument.
    Passing seconds=0 calls the OS scheduler, offering to yield.
    Passing seconds>0 delays at least the requested time, up to a
    limit which usually depends on the OS tick rate.
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    Optimize epicsThreadOnce() routines.
    
    Don't call epicsThreadGetIdSelf() unnecessarily, check for the value
    EPICS_THREAD_ONCE_DONE first, since that's the most common state.
    Don't print anything from epicsThreadShow() when tid=0.
    Also don't pass level > 1 to vxWorks taskShow() routine.
    Rework epicsThreadOnce() using ideas from Michael Davidsaver.
    An epicsThreadOnceId is now an epicsThreadId.
    During initialization, it is set to the thread running the init routine
    which can now detect a recursive initialization attempt and suspend.
    EPICS_THREAD_ONCE_INIT is still zero, the implementations now define a
    new private value for EPICS_THREAD_ONCE_DONE.  This is deliberately not
    made public.
    Don't do necessary stuff inside assert().
    epicsThreadOnceOsd() must unlock mutex before calling func().
    Required so callbackInit() can wait for its threads to start.
    Round sleep time to nearest tick.   This is important when working with
    high-precision time sources, such as event receivers.
    Cleanup of epicsThreadPrivate stuff, remove unnecessary code.
    CPUs using Altivec need an additional flag to taskSpawn().
    Cleaned up compiler warnings.
    installed epics thread exit capabilities
    Fixed bug in posix implementation of osdThreadOnce and added assertion
    to the other implementations that will fire in the one case the Posix
    code can't cope with.
    check for ERROR not for 0
    Revive the canary, and add a test routine that checks whether the optimizer
    bug is still present.  Tornado 2.x compilers for 68K need -O0 to work.
    Workaround for Tornado 2.x compilers, fixes Mantis Bug #82.
    atReboot is new
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    ShellContext=>OkToBlock
    implement ShellContext
    bad arg to errlogPrintf
    added epicsThreadSleepQuantum()
    Updated license comments.
    call free for memory pointed to by task variable before task variable is deleted
    fixed memory leak in epicsThreadPrivateSet
    sysClkRateGet() _is_ defined in sysLib.h, but indirectly in the
    drv/timer/timerDev.h file that it includes.
    if delay>0 than taswkDelay at least 1 tick
    changes so that TSinit can successfully call iocClockRegister
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    changes for osiThread=>epicsThread
    added soft clock support
    add TSinit
    installed fix for range mapping integer overflow
    call threadInit where needed
    threadPrivateGet must return 0 before first call to threadPrivateSet
    nill out thread private storage pointer just after making it a task variable in
    the new thread so that it will not point at the other thread's task variable
    reveresed sense of if in previous change, but otherwise purpose was valid
    threadPrivateGet() now retuns undefined variables as NULL
    implement threadGetPrioritySelf
    allow papTSD to be created in Get
    added threadHighestPriorityLevelBelow,threadLowestPriorityLevelAbove
    changes so things build
    lock for ++nthreadPrivate
    threadPrivateMutex not necessary
    threadOnceMutex => threadPrivateMutex
    make threadPrivate mthread safe
    implement latest changes to osiThread.h
    Simplified implementation of threadOnce.
    new threadOnce implementation; added threadGetId
    added threadOnce() implementation for posix and vxworks
    various, mostly posix, thread mods
    more changes for threadPrivate
    more changes for osdThread.c
    added implementation for threadPrivate
    removed arg from threadSuspend
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    VxWorks: Measure CPU time-base frequency if necessary
    
    The BSP routine sysTimeBaseFreq() is optional. If not present or
    non-functional we measure the frequency of the CPU's time-base
    counter (against the OS system clock) once at initialization-time.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    Updated license comments.
    replacements for osdSem
    semBinaryGive, semBinaryTake, semMutexGive, semMutexTake are now macros
    backout INLINE; add level argument to semXXXShow
    add epicsShareFunc
    still getting to work
    dont implement via header file
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Updated license comments.
    Add newline at end of file.
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: fix epicsNAN generation on vxWorks.
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Ensure finite() is defined.
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    libCom/osi: Clean up compiler warnings on vxWorks
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    Add support for vxWorks 6.8.
    net bsd challenged os dont have INADDR_NONE
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    use posix sockets
    Updated license comments.
    better config of ifconfig differences
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    add definition for sysClkRateGet
    vxWorks does not have SD_BOTH ??
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added includes for vxWorks
    added EMFILE to osi_sock.h
    fixed Tornado II include file organization change
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    added sock ioctl() typedef and the loop back address
    added errno macros
    check both sides of the fd range
    removed ipAddrToA () prototype
    moved if.h include here
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fixed issues with thread-hooks.
    Fix vxWorks build issues from thread-hooks merge.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Add some copyrights for ITER
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Updated license comments.
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    fixed gnu warning
    added struct for C
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    Updated license comments.
    force at least a 1 tick delay if timeOut >0.0
    epicsMutexMustCreate now osi; add support for epicsSemShowAll
    fix names
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Removed references to VxWorks 5.x
    Must be able to include this file from C code, changed comment style.
    Mostly cosmetic changes.
    Added an ifdef test for FLOAT_WORD_ORDER in os/default/osdWireConfig.h
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    really cant git rid of module_types.h and task_params.h
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: fix noop OSDs
    
    Ensure that all are epicsAtomicOSD.cpp and use
    no-op to prevent RTEMS from using the posix
    implementation.
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved structure and thread safety
    installed beacon anomaly generator
    fixed binding to specified interface (broken by R3.14 beta changes)
    Updated license comments.
    fixed warnings
    revert to using virtual destroy() to destroy timers
    adapt to new timer API
    new timer creation API
    made compatible with timer library API changes
    fixed gnu warning
    osiTimer => epicsTimer
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    osiTimer constructor now requires delay of type double
    API changes
    installed
    vxWorks port changes
    installed
    space became tab
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    libCom/osi: Clean up compiler warnings on vxWorks
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    fixed names on redefinition protection macros for vxWorks
    fixed epics atomic read memory barrier name - old versions of vxWorks
    fixed word missing from vxWorks specific read and write memory barrier functions
    fixed wrong return type old vxWorks epicsAtomicUnlock
    fixed vxWorks jumbled ifdef
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    fixed issues in posix and vxWorks specific epicsAtomic found during testing
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    added epicsAtomicGetUIntT for completeness
    added epicsAtomicGetUIntT for completeness
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris to test)
    o fixed darwin compile errors (I dont have access to darwin)
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris to test)
    o fixed darwin compile errors (I dont have access to darwin)
    fixed modern vxWorks atomics
    fixed modern vxWorks atomics
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Removed usage messages from epicsEnvSet except for vxWorks but kept the check for NULL. For vxWorks removed the () from usage message.
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    epicsExit and epicsStdioRedirect
    use const for string arguments that are not modified
    Updated license comments.
    Fixed Tornado warnings.
    Make epicsEnvShow work when called from vxWorks shell or iocsh.
    Limits operation to a single argument.
    Create os-specific versions of routines to set and
    display environment variables.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add strtoll() and strtoull() for VxWorks
    
    These are not yet provided even in VxWorks 6.9.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add 'size' argument to all epicsMessageQueue receive routines.
    Major modifications to ensure valid 'nBytes' argument to msgQReceive().
    vxWorks version of message queue.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add OS-dependent VME support.
    Add prototype for OSI->OSS priority mapper.
    Updated license comments.
    backout INLINE; add level argument to semXXXShow
    RTEMS-specific implementation of per-thread variable.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Removed log history comments.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    moved files from /base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    Fixed epicsEventWaitWithTimeout(id, 0.0), added test.
    Fix for Mantis #254.
    Updated license comments.
    force at least a 1 tick delay if timeOut >0.0
    fix names
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Cleaned up VxWorks 6.9 symLib warnings
    
    VxWorks 6.9 deprecated several symFindBy...() routines, which
    result in warning messages at build-time. I rewrote the code
    that uses these to use the newer API on VxWorks 6.9.
    
    Also deprecated the two epicsDynLink.h symFindByNameEPICS()
    and symFindByNameAndTypeEPICS() routines; epicsFindSymbol() in
    epicsFindSymbol.h is now available on most platforms instead.
    Clean up warnings from vxWorks 6.8.
    Added back the -include vxWorks.h option for gcc with vxWorks 6,
    it resolves many warnings about OFFSET being redefined.
    Added epicsLoadLibrary() and some implementations.
    Updated license comments.
    change name
    osi replaced by epics
    renamed files
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add strtoll() and strtoull() for VxWorks
    
    These are not yet provided even in VxWorks 6.9.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    += epicsSignalInstallSigHupIgnore (libCom/osi)
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    comment out unused parameter
    changed name of osd signal file to allow c++ and enabled noop signals
    installed
    Updated license comments.
    added new parameter
    RTEMS now provides a mechanism for interrogating the memory allocator.
    renamed files
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    bswap16/32 as functions
    
    Turn bswap16() and bswap32() into functions
    to avoid evaluating the argument more than once.
    vxWorks: missing extern "C" around sysPci* prototypes
    Fix vxWorks again, passes the tests on all my CPUs now.
    Fixes for VxWorks implementation.
    switch to use sysInWord and friends
    mmio: vxWorks m68k use default, add weak symbols for old versions
    fix copyright header
    add MMIO API
    
    From devLib2
    adds calls to handle 8, 16, and 32 bit
    Memory Mapped I/O reads and writes.
    
    Adds X_iowriteY() and X_ioreadY().
    
    where X is nat (native), be, or le.
    Y is 16 or 32.
    
    Also adds ioread8() and iowrite8().
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Cleaned up VxWorks 6.9 symLib warnings
    
    VxWorks 6.9 deprecated several symFindBy...() routines, which
    result in warning messages at build-time. I rewrote the code
    that uses these to use the newer API on VxWorks 6.9.
    
    Also deprecated the two epicsDynLink.h symFindByNameEPICS()
    and symFindByNameAndTypeEPICS() routines; epicsFindSymbol() in
    epicsFindSymbol.h is now available on most platforms instead.
    add defs for C++
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    added header file & consolodated source
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsSpin: try lock return non-blocking
    
    Avoid cantProceed() in try lock, even for undefined behavior.
    epicsSpin: better error messages when mis-use is detected
    spinlocks update
    
    add epicsSpinMustCreate()
    
    Fix spinlock on RTEMS and vxWorks
    UP systems to disable task preemption.
    
    Don't use posix spinlocks when
    thread priorities are used.
    Fix vxWorks implementation.
    libCom/osi: add epicsSpin with default, posix, and vxWorks implementations
    - posix uses pthread_spin_ interface when supported, pthread_mutex_ otherwise
    - default uses epicsMutex
    - vxWorks (single core) uses intLock()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add strtoll() and strtoull() for VxWorks
    
    These are not yet provided even in VxWorks 6.9.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    libCom: Mark epicsStrtod() as extern "C"
    We took epicsShareAPI out of Win32 already, which was the only arch that
    might have needed it!
    Add os-independent epicsStrtod() routine.
    Updated license comments.
    Initial checkin of RTEMS operating-system-specific routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Removed some Revision-Id keywords
    libCom: epicsReadline refactoring
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Really remove warning...
    Cleaning up warnings.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Removed log history comments.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    avoided intHandlerCreate() for PPC
    include string.h
    fixed gcc warnings
    doc
    Compiler warnings fixed
    Added cvs Id keyword
      *    .01 010393 Applied fix for zero C ISR param causes incorrect
      *               identification as MACRO ISR problem.
    Removed LOCAL from _cISRTest because devLib calls it.
    took out V5 switches
    fixed up define for V5_vxWorks to work with vxWorks 5.1.
    Changed to work with vxWorks 5.1 and GCC 2.2.3.
    made V4 vxWorks the default
    *** empty log message ***
    made local functions static
    STD C changes
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Cleaned up VxWorks 6.9 symLib warnings
    
    VxWorks 6.9 deprecated several symFindBy...() routines, which
    result in warning messages at build-time. I rewrote the code
    that uses these to use the newer API on VxWorks 6.9.
    
    Also deprecated the two epicsDynLink.h symFindByNameEPICS()
    and symFindByNameAndTypeEPICS() routines; epicsFindSymbol() in
    epicsFindSymbol.h is now available on most platforms instead.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Updated license comments.
    get rid of dev/drv support; use OBJ library only
    optimized symbol lookup
    fixed case
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Cleaned up VxWorks 6.9 symLib warnings
    
    VxWorks 6.9 deprecated several symFindBy...() routines, which
    result in warning messages at build-time. I rewrote the code
    that uses these to use the newer API on VxWorks 6.9.
    
    Also deprecated the two epicsDynLink.h symFindByNameEPICS()
    and symFindByNameAndTypeEPICS() routines; epicsFindSymbol() in
    epicsFindSymbol.h is now available on most platforms instead.
    libCom: Fix sysAtReboot registration on vxWorks 6.8+
    
    Removed C++ static constructor, do it from epicsThreadInit()
    Removed the unnecessary "epicsExit will be called" message.
    Cleanup, added workaround text.
    atReboot calls epicsExitCallAtExits not epicsExit
    atReboot is new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    Initial implementation for VxWorks 6.9 and later
    
    This almost seems too simple...
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    new threadOnce implementation; added threadGetId
    added threadOnce() implementation for posix and vxworks
    installed
    file now ens in a new line
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Speed up osdTimeGetCurrent() on recent macOS
    
    Fixes https://github.com/epics-base/epics-base/issues/83
    libCom: actually use libComAPI.h in libCom
    generalTime short circuit current time
    
    epicsTimeGetCurrent() is called frequently.
    Unless more than the default provider is registered,
    locking and going through the timeProvider list each
    time is a waste.
    
    Instead, short circuit to directly call the default
    time current time provider unless a another has
    been registered.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Posix epicsEventWaitWithTimeout() max delay
    
    Limit timeouts on Posix to max-out at 10 years.
    Adds a test that will fail when that time-out hits Y2038 on
    systems where time_t is still a 32-bit integer.
    Fix tv_sec casts to use time_t, not long
    Remove artificial 60-minute timeout limit (Posix)
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    libCom: Add a High-Resolution Time Provider on MacOS
    
    Since Apple don't support clock_gettime(CLOCK_REALTIME) I added a
    new time provider that uses the Mach kernel Clock service to get
    nanosecond resolution time.
    Let posix version of osdTime work on systems without real-time capability.
    Jaguar provides gmtime_r and localtime_r so  the Posix versions can be used.
    Still no CLOCK_REALTIME in Jaguar, so we can't just get rid of the Darwin-
    specific version of this file.
    Updated license comments.
    add special values for eventNumber; time events are int
    Track changes in posix version.  Hopefully the next release of OS X will
    provide the reentrant routines and this source file can be removed.
    OS-dependent files for Mac OS X (Darwin).
    Changes for HP-UX 11 - first semi-stable version
    removed extra semi-colon
    added new osd routines
    Fixed HPUX warnings.
    osiTime=>epicsTime
    switch on _POSIX_TIMERS
    HP-UX defines things a bit different (HP aCC error fix)
    tsStampOK on success; att \n at end of file
    renamed files
    new way to build
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - renamed:
      src/libCom/osi/os/posix/osdBackTrace.c => src/libCom/osi/os/posix/osdExecinfoBackTrace.c
      src/libCom/osi/os/posix/osdFindAddr.c => src/libCom/osi/os/posix/osdElfFindAddr.c
    
      not all 'posix' platforms can use the above versions (since the used APIs are not really POSIX)
      but a subset can. The platforms which can use either version #include it from 'their'
      osdBackTrace.c/osdFindAddr.c.
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Add support for Windows FILETYPE time stamps.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    Add newline at end of file to quiet compiler complaints.
    fixed timespec already defined on linux
    Fix Darwin version of epicsMonotonicResolution()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - simplified code
     - provide epicsFindAddrGetFeatures() instead of epicsStackTraceGetFeatures()
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Add OS X specific version of epicsMath.h to allow for use of isfiniite().
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    use proper form of include
    add trailing */
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    Remaining Revision-Id keywords in source
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Use OS-supplied socklent_t.
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    use posix sockets
    Updated license comments.
    Fix definition of ifreq_size macro.  Darwin uses the modern variable-size
    structure layout.
    OS-dependent files for Mac OS X (Darwin).
    Fixed HPUX warnings.
    better config of ifconfig differences
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    removed ipAddrToA decl
    added sock ioctl() typedef
    added errno macros
    check both sides of the fd range
    added osiSock.h for hp port
    removed ipAddrToA () prototype
    moved include of if.h here
    added unistd.h for close() and added gethostname() proto
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Removed usage messages from epicsEnvSet except for vxWorks but kept the check for NULL. For vxWorks removed the () from usage message.
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Darwin's osdEnv.c was updated while I was working on this, changed my updated version to match.
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    libCom: Darwin has setenv(), use it.
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Stephen Norum indicates that the conditionals are unnecessary.
    Starting in Mac OS X 10.5 (Leopard) shared libraries and bundles
    don't have direct access to environ (man environ).
     CVS: ----------------------------------------------------------------------
    epicsExit and epicsStdioRedirect
    Include oisUnistd.h to pick up some missing prototypes.
    include errno.h
    use const for string arguments that are not modified
    Updated license comments.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    Make epicsEnvShow work when called from vxWorks shell or iocsh.
    Limits operation to a single argument.
    Create os-specific versions of routines to set and
    display environment variables.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Add support for Windows FILETYPE time stamps.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    Add newline at end of file to quiet compiler complaints.
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Copy Darwin version of osdMonitonic.c to iOS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Add OS X specific version of epicsMath.h to allow for use of isfiniite().
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    use proper form of include
    add trailing */
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    Remaining Revision-Id keywords in source
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Use OS-supplied socklent_t.
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    use posix sockets
    Updated license comments.
    Fix definition of ifreq_size macro.  Darwin uses the modern variable-size
    structure layout.
    OS-dependent files for Mac OS X (Darwin).
    Fixed HPUX warnings.
    better config of ifconfig differences
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    removed ipAddrToA decl
    added sock ioctl() typedef
    added errno macros
    check both sides of the fd range
    added osiSock.h for hp port
    removed ipAddrToA () prototype
    moved include of if.h here
    added unistd.h for close() and added gethostname() proto
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Removed usage messages from epicsEnvSet except for vxWorks but kept the check for NULL. For vxWorks removed the () from usage message.
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    epicsExit and epicsStdioRedirect
    Include oisUnistd.h to pick up some missing prototypes.
    include errno.h
    use const for string arguments that are not modified
    Updated license comments.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    Make epicsEnvShow work when called from vxWorks shell or iocsh.
    Limits operation to a single argument.
    Create os-specific versions of routines to set and
    display environment variables.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - fixed c++ warnings
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - solaris implementation of epicsBackTrace() via walkcontext()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - renamed:
      src/libCom/osi/os/posix/osdBackTrace.c => src/libCom/osi/os/posix/osdExecinfoBackTrace.c
      src/libCom/osi/os/posix/osdFindAddr.c => src/libCom/osi/os/posix/osdElfFindAddr.c
    
      not all 'posix' platforms can use the above versions (since the used APIs are not really POSIX)
      but a subset can. The platforms which can use either version #include it from 'their'
      osdBackTrace.c/osdFindAddr.c.
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Support for Solaris 11 on x86 and SPARC.
    
    Thanks to Bob Soliday for the necessary changes.
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Some versions of Solaris define isinf() macro.
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    net bsd challenged os dont have INADDR_NONE
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    use posix sockets
    attempt to fix GNU builds correctly for all versions of solaris
    Updated license comments.
    switch on new solaris version macro
    made osiSocklen_t switch types with  the solaris os version
    removed gethostname() proto (which should be in unistad.h)
    better config of ifconfig differences
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    added SD_BOTH definition
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added zero length UDP flag
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    removed out of date comment
    added sock ioctl() typedef
    added errno macros
    check both sides of the fd range
    fixed warning
    removed ipAddrToA () prototype
    moved include of if.h here
    added unistd.h for close() and added gethostname() proto
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Must be able to include this file from C code, changed comment style.
    Mostly cosmetic changes.
    Added an ifdef test for FLOAT_WORD_ORDER in os/default/osdWireConfig.h
    installed
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    Added dummy for solaris build.
    Fix epicsAtomic headers when used from C code
    
    Several C++ and C99-isms crept in.
    fixed sunos compiler issue (I dont have sunos 5.10 here)
    o hopefully fixed missing functions with sunos 5.10 or higher
    o removed unused trash files which somehow reappeared after rebase
    o hoping that atomic_inc_ptr_nv and atomic_dec_ptr_nv interface definitions will be available if we use sys/atomic.h instead of atomic.h
    o fixed issue introduced by last revision where definition of lock functions and lock key were not present if its sunos 5.10 or greater
    (its time consuming to develop code if you can only run the (SUNPRO) compiler indirectly)
    must ... not .. use the improved c++ casts in c code
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    added epicsAtomicGetUIntT for completeness
    added epicsAtomicGetUIntT for completeness
    fixed solaris 64 compiler error (I dont have that version of solaris here)
    fixed solaris 64 compiler error (I dont have that version of solaris here)
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    o moved -march=i586 from CONFIG.arch.arch to CONFIG.Common.arch {cygwin-x86,win32-x86-cygwin,win32-x86-mingw
    o removed -march=i586 from CONFIG.linux-x86.linux-x86
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris for initial testing here)
    fixed epicsAtomicTestAndSetUIntT for solaris
    fixed epicsAtomicTestAndSetUIntT for solaris
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Mark epicsStrtod() as extern "C"
    We took epicsShareAPI out of Win32 already, which was the only arch that
    might have needed it!
    Add os-independent epicsStrtod() routine.
    Updated license comments.
    Initial checkin of RTEMS operating-system-specific routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    fixed no newline at eof
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    WIN32: fix epicsSocketEnableAddressReuseDuringTimeWaitState()
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    win32 epicsSocketEnableAddressUseForDatagramFanout call spec
    
    apparently epicsShareAPI is required on both declaration and definition.
    use one osdSockAddrReuse impl for all targets
    
    drop win32 specialization of osdSockAddrReuse
    try both  to set both SO_REUSEPORT and SO_REUSEADDR
    
    It seems that on Linux, SO_REUSEPORT shares with SO_REUSEPORT
    and SO_REUSEADDR with SO_REUSEADDR, but not each other.
    
    Setting both allows full sharing
    posix epicsSocketEnableAddressUseForDatagramFanout() prefer SO_REUSEPORT
    
    prefer SO_REUSEPORT on targets which define it.
    
    Linux defines both, and seems to treat
    SO_REUSEPORT and SO_REUSEADDR as equivalent.
    BSD derivatives need SO_REUSEPORT.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Fix routine name in error message
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fixed various 64-bit windows build issues.
    Various updates for building on Windows/Cygwin/MinGW
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    copyright boilerplate for devLibVME
    [PATCH 09/12] rename vme pointer table
    [PATCH 08/12] fix includes
    [PATCH 07/12] rename devLib to devLibVME
    Make devLib available from other OSs iff they provide the right table in an
    external support application.
    Add OS-dependent VME support.
    Updated license comments.
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
     - removed message about a stack trace going to be printed
     - consistent naming: 'StackTrace' everywhere.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Tidy-up, deleted vxWorks-specific version (unnecessary),
    added the task name to the printed assert message.
    doc
    Updated license comments.
    better message
    changes for osiThread=>epicsThread
    epicsPrintf=>errlogPrintf; threadSuspendSelf replaces abort
    abort() is probably a better default than cantProceed on most os
    renamed files
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed Till's report of non-thread-safe lazy-init.
    Updated license comments.
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    replace osiSem by epicsMutex/epiceEvent
    latest version of semBinary
    renamed files
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    bswap16/32 as functions
    
    Turn bswap16() and bswap32() into functions
    to avoid evaluating the argument more than once.
    epicsMMIODef.h use static inline
    
    'static inline' is necessary for consistent behavior with C and C++.
    Plain 'inline' in C can result in multiply defined symbol
    errors when linking.
    Fix Windows build issue in epicsMMIODef.h
    fix copyright header
    add MMIO API
    
    From devLib2
    adds calls to handle 8, 16, and 32 bit
    Memory Mapped I/O reads and writes.
    
    Adds X_iowriteY() and X_ioreadY().
    
    where X is nat (native), be, or le.
    Y is 16 or 32.
    
    Also adds ioread8() and iowrite8().
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add support for 0-length message queues.
    Create os-dependent message queue routines.
    improved structure and thread safety
    installed beacon anomaly generator
    fixed binding to specified interface (broken by R3.14 beta changes)
    Updated license comments.
    fixed warnings
    revert to using virtual destroy() to destroy timers
    adapt to new timer API
    new timer creation API
    made compatible with timer library API changes
    fixed gnu warning
    osiTimer => epicsTimer
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    osiTimer constructor now requires delay of type double
    API changes
    installed
    vxWorks port changes
    installed
    space became tab
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Removed some Revision-Id keywords
    Build fixes for Solaris
    libCom: epicsReadline refactoring
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    added new parameter
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Introduce new header epicsEndian.h which allows C code to find out the
    platform's byte order (osiWireFormat.h is C++ only).
    Mostly cosmetic changes.
    Added an ifdef test for FLOAT_WORD_ORDER in os/default/osdWireConfig.h
    changed to use osdWireConfig.h def of EPICS_BYTE_ORDER and EPICS_FLOAT_WORD_ORDER
    fixed spelling in a comment
    workaround for T202 issue
    workaround for problems in visual C++ 8.0
    fix for dec c++ compiler detected issue
    use function template specialization instead of function overloading
    hoping to workaround issues with gcc 4.0
    hack for non-standard sun pro cstring
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Stop bogus error messages from CA Repeater on Windows
    
    Required adding a new API to osiSock.h and the 2
    implementations of epicsSocketConvertErrnoToString.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    added missing include
    installed
    Updated license comments.
    added new parameter
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - let epicsFindAddr clear out returned symbol info
     - provide epicsFindAddrGetFeatures instead of epicsStackTraceGetFeatures
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Apply fix for lp:1581505
    Remaining Revision-Id keywords in source
    osdNetIntf: ignore 0.0.0.0 as a broadcast address
    
    It seems in some situations Linux (at least)
    sets IFF_BROADCAST bug leaves the bcast address
    set to 0.0.0.0.
    
    Fixes lp:1581505
    Revert "libCom/osi: osiSockDiscoverBroadcastAddresses() finds 127.255.255.255"
    
    This reverts commit e805abe971bb864f3f95c341babb6ec4fff1b464.
    Debug print value of IF flags in default/osdNetIntf.c
    libCom: fix debug print formats in osiSockDiscoverBroadcastAddresses()
    libCom/osi: osiSockDiscoverBroadcastAddresses() finds 127.255.255.255
    
    For the default implementation of osiSockDiscoverBroadcastAddresses()
    allow the loopback interface to have IFF_BROADCAST set (usually isn't)
    and on Linux assume that the loopback broadcast address is usable
    even if IFF_BROADCAST isn't set.
    libCom/osi: osiLocalAddr() avoid race on initialization
    patched this  code to force alignment of the if request structure, which appears to be required to avoid exceptions on RTEMS with cpu architectures that detect use of misaligned addresses
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    byte swap port number (even if it is zero)
    Fix for skipping over the first ifreq list element, += ifreqSize wrapper function.
    Problem fixed that was found on ARM: ifreq buffer must always be word-aligned when passed to kernel functions.
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    loopback address address matching
    Updated license comments.
    removed knowledge of subnet mask from network interface query
    fixed diagnostic message
    improved warning messages
    better config of ifconfig differences
    work correctly on systems that dont know about point to point IF (CYGWIN32)
    added additional debug stmnts
    fix net mask fetch for Solaris
    initialize net mask entry
    added newline at EOF
    fixed BSD version test
    fixed message format
    Group os-dependent code into a single location.
    Add SOCKADDR_HAS_LEN conditional.
    fixed missing #define in Solaris build
    added osdNetIntf.c
    Protect calls to gethostbyname and gethostbyaddr with a mutex.
    On Solaris and RTEMS (and perhaps others) these routines are not thread-safe.
    move back to solaris
    transfer back to windows
    added routines needed by CA
    cleaned out osdSockResource
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    file now ends in a new line
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fixed issues with thread-hooks.
    Fix vxWorks build issues from thread-hooks merge.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Add some copyrights for ITER
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Updated license comments.
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    This is included from epicsEndian.h, so it must be usable from C and C++.
    Mostly cosmetic changes.
    Added an ifdef test for FLOAT_WORD_ORDER in os/default/osdWireConfig.h
    added newline to eof
    installed
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: fix noop OSDs
    
    Ensure that all are epicsAtomicOSD.cpp and use
    no-op to prevent RTEMS from using the posix
    implementation.
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    improved structure and thread safety
    installed beacon anomaly generator
    fixed binding to specified interface (broken by R3.14 beta changes)
    Updated license comments.
    fixed warnings
    revert to using virtual destroy() to destroy timers
    adapt to new timer API
    new timer creation API
    made compatible with timer library API changes
    fixed gnu warning
    osiTimer => epicsTimer
    o changed UDP to non-blocking IO
    o cleaned up (consolodated) UDP interface class structure
    osiTimer constructor now requires delay of type double
    API changes
    installed
    vxWorks port changes
    installed
    space became tab
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Removed usage messages from epicsEnvSet except for vxWorks but kept the check for NULL. For vxWorks removed the () from usage message.
    Fix command line functions: print error if required arguments are missing
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    removing some extra whitespace to cleanup the diff
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    epicsExit and epicsStdioRedirect
    Include oisUnistd.h to pick up some missing prototypes.
    include errno.h
    use const for string arguments that are not modified
    Updated license comments.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    Make epicsEnvShow work when called from vxWorks shell or iocsh.
    Limits operation to a single argument.
    Create os-specific versions of routines to set and
    display environment variables.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    remove unused locationException.h includes
    default MQ report event wait errors
    simplify
    Only ignore errors when there is an error reporting path
    
    can't report from thread free mutex unlock or implicit thread creation
    default osdMessageQueue avoid cantProceed
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Include standard headers before defining epicsExportSharedSymbols
    Add 'size' argument to all epicsMessageQueue receive routines.
    Fixed/suppressed HP-UX native (aCC) warnings
    Remove support for 0-length queues.  vxWorks doesn't support them nor
    does RTEMS so why go to the effort to support them on other systems.
    Cosmetic.
    Add support for 0-length message queues.
    Create os-dependent message queue routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Add OS-dependent VME support.
    Updated license comments.
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added epicsLoadLibrary() and some implementations.
    Updated license comments.
    change name
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    += epicsSignalInstallSigHupIgnore (libCom/osi)
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    Add to provide signal-related stubs.
    comment out unused parameter
    changed name of osd signal file to allow c++ and enabled noop signals
    installed
    Updated license comments.
    added new parameter
    RTEMS now provides a mechanism for interrogating the memory allocator.
    renamed files
    renamed files
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    add MMIO API
    
    From devLib2
    adds calls to handle 8, 16, and 32 bit
    Memory Mapped I/O reads and writes.
    
    Adds X_iowriteY() and X_ioreadY().
    
    where X is nat (native), be, or le.
    Y is 16 or 32.
    
    Also adds ioread8() and iowrite8().
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    += epicsGetopt to declare (default) or implement (WIN) getopt()
    Updated license comments.
    installed into cvs
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    default/osdSpin.c add missing #include "cantProceed.h"
    
    Also adjusted some error messages for common style.
    spinlocks update
    
    add epicsSpinMustCreate()
    
    Fix spinlock on RTEMS and vxWorks
    UP systems to disable task preemption.
    
    Don't use posix spinlocks when
    thread priorities are used.
    Fix for win32 builds.
    libCom/osi: add epicsSpin with default, posix, and vxWorks implementations
    - posix uses pthread_spin_ interface when supported, pthread_mutex_ otherwise
    - default uses epicsMutex
    - vxWorks (single core) uses intLock()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Don't decorate epicsThreadHook functions with epicsShareAPI
    libCom/osi: Fix nesting for epicsThreadHooks, add WIN32 implementation, lock traversal
    - call (generic) exit hook after calling the (specific) epicsExitCallAtThreadExits()
    - for start hooks added as 1-2-3, run exit hooks in opposite order: 3-2-1
    - add calls to hooks module to WIN32 osdThread.c
    - add lock/unlock to hook list traversal
    libCom/osi: Add some copyrights for ITER
    libCom/osi: Add RTEMS and vxWorks implementation for epicsThreadHooks
    Add decorations to epicsThreadHooks.c
    Cleanup of epicsThread hooks
    - move declarations to epicsThread.h, use epicsThreadId type
    - use static elllist initializer for static lists
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Properly convert epicsTempFile to old-style C
    MSVC <= 11.0 doesn't like 'const int' in C code
    Convert epicsTempFile.cpp to .c
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Delete remnants of Aix and Borland.
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix slash.
    Removed TD options in call to  _fdopen for VISUAL C++ 2005.
    fixed temp file creation issues on win32
    made compatible with borlan bcc
    added wrapper around tmpfile so that we can have a windows specific
    implementation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    generalTime short circuit current time
    
    epicsTimeGetCurrent() is called frequently.
    Unless more than the default provider is registered,
    locking and going through the timeProvider list each
    time is a waste.
    
    Instead, short circuit to directly call the default
    time current time provider unless a another has
    been registered.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    osdTime: win32 use C89 localtime/gmtime
    
    as recommended by Freddie Akeroyd
    Fix Windows time discontinuity report
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    Delete remnants of Aix and Borland.
    libCom/win32: Conditionally define MINLONGLONG
    
    Some version of Visual Studio define MAXLONGLONG but not
    MINLONGLONG, so they need separate checks.
    fixed launchpad bug 697509, Thread synchronization issue in libCom/osi/os/WIN32/osdTime.cpp
    fixed LP Bug #697517, WIN32 osdtime should handle the system time change properly
    fixed LP bug 697516, PLL time adjustments fail if user sets system time before EPICS epoch
    fixed launchpad bug 697519 (rollover time diff calc off by two ticks)
    fixed last time compare in PLL drift factor update loop
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix possible race condition on SMP systems.
    The pointer is volatile, not the object itself...
    Fixed problem with time provider registration on dual-CPU systems.
    Fix generalTime initialization issue.
    Include generalTimeSup.h.
    Fixed generalTime initialization issues (RTEMS incomplete).
    General Time, from Peter Denison, Eric Norum and many others...
    fixed infinite recursion introduced by change in generic epicsThreadOnce code
    GNU compile rrequires LL suffix on constants, borland requires no suffix
    support mingw
    added dll export keywords
    fixed epicsTime_localtime
    use STRICT
    removed double test lock optimization
    cosmetic
    removed infinite loop when regression test runs prior to init
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    fixed file time to epicsTime conversion
    fixed msvisc++ warning
    Updated license comments.
    add special values for eventNumber; time events are int
    check for overflow condition when adjusting time estimate
    now uses a phase locked loop to synchronize the performance counter ticks
    with file time
    fixed bug in osdThreadOnce
    added new osd routines
    use critical section for improved performance
    osiTime=>epicsTime
    fixed borland warning
    include assert.h
    fixed issues discovered by the Borland compiler
    close the handle
    improved initialization
    dont use CreateThread()
    use WIN32 lean and mean
    fixed exception condition logic
    nSec => nsec (TS_STAMP fields)
    o created tsStamp.h
    o include tsStamp.h into tsDefs.h
    o use assert() instead of C++ exceptions on certain os
    throw exception instead of assert()
    throe exception on failure
    added localtime_r and gmtime_r
    many improvements to osiTime
    use high precision timers
    added lazy init for static build
    removed potential race condition
    use winsock II
    fixed warnings
    installed WIN32/Makefile.Host
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove ANSI-C OS prototypes from flexdef.h
    
    Use osiUnistd.h instead.
    Add io.h to osiUnistd.h on Windows
    
    # Conflicts:
    #       modules/libcom/src/flex/flexdef.h
    #       modules/libcom/src/osi/os/WIN32/osiUnistd.h
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    added new line at EOF
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix: Replaced C++ style comments in C code with standard C comments.
    use STRICT
    fixed problems with borland include files
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Updated license comments.
    format
    fixed issues discovered by the Borland compiler
    cosmetic
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Changed (DWORD*) to (const ULONG_PTR*) to avoid windows-x64 debug build
    error.
    Added trailing newlines (MinGW warning).
    fixed to work with non-ms compiler
    moved setThreadName() out so that it could use C++ exceptions instead of
    windows structured exceptions (which are not compiler portable)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    replacements for osdSem
    under construction
    use new semId typedefs
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fix epicsSnprintf() under MinGW
    
    Use the Microsoft _vscprintf() function which was just missing
    a prototype in earlier versions of MinGW's stdio.h header.
    Fix for MinGW, although not complete -- doesn't have _vscprintf().
    Fixed off-by-one error in my previous fix.
    Fix epicsVsnprintf() return value on WIN32.
    fix possible memory leak
    split epicsStdio into common and osdStdio portions
    moved extern "C" down so that it does not have unanticipated side effects on
    the included header files
    fixed build errors
    epicsStdio is new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Build issues for MinWG
    Fix MinGW cross-build from Linux
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - added windows versions of osdBackTrace.c, osdFindAddr.c; the latter
       does not implement addr->symbol conversion yet.
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    added new parameter
    renamed files
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    MinGW provides getopt(), don't build our own
    Fixed DLL definitions for epicsGetopt (on WIN)
    += epicsGetopt to declare (default) or implement (WIN) getopt()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/osi: fix timespec definition for MinGW
      (cherry-picked from 3.15)
    Remaining Revision-Id keywords in source
    libCom/osi: fix timespec definition for MinGW
    libCom: Use MSVC's struct timespec when available
    Modified test for _MINGW and _TIMESPEC_DEFINED.
    Added ifdef around timespec definition for MinGW build.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added linefeed at the end of osdTime.h.
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    removed func proto for gmtime_r and localtime_r
    added gmtime_r
    fixed timespec already defined on linux
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Stop bogus error messages from CA Repeater on Windows
    
    Required adding a new API to osiSock.h and the 2
    implementations of epicsSocketConvertErrnoToString.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed borland build
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    fixed vxWorks jumbled ifdef
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    Redo d3d40689 that was lost in upmerging
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    moved sock err str converting func
    use epicsVsnprintf
    thread safe socket error to string function
    use STRICT
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    use EPICS_ version string
    supress debug messages telling us what dll version is in use
    Updated license comments.
    removed osi shutdown interface
    reliable solution for shutdown differences
    fixed borland warning
    changed the name of bsdSock{Attach,Release}
    added osdNetIntf.c
    doc
    added routines needed by CA
    cleaned out osdSockResource
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Com: (WIN32) fix handling of thread joinable flag and refcnt
    
    Analogous changes for windows
    
    cf. 02a24a144d0c062311212c769926c1e2df5a1a52
    Added a null check in epicsWin32ThreadEntry to prevent dereferencing a null pointer in case fetchWin32ThreadGlobal fails.
    
    LP: #1863118
    libcom: win32 poison TLS value
    WIN32 must clean TLS from correct thread
    
    epicsParmCleanupWIN32() may be called from
    threads other than the one being cleaned up.
    WIN32 remove atexit cleanup of TLS
    
    Force cleanup of resource for threads which may
    still be running opens the possibility of strange
    race conditions.  Like threads be erroneously
    detected as non-epics.
    
    Doing this cleanup at process exit serves no real
    purpose.  This code might be valid to re-add
    in a DLL exit handler.
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    epicsThreadMustJoin() warn only on double self-join
    epicsThreadMustJoin() clear joinable flag
    
    Clear so that repeated calls will error correctly.
    Only well defined for self join.
    epicsThreadJoin() -> epicsThreadMustJoin()
    libCom "join" win32 threads
    
    Wait for completion
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    libCom: add epicsThreadCreateOpt()
    
    Variant of epicsThreadCreate() which accepts optional
    arguments via a structure to allow for compatible
    addition of new arguments.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve some cppcheck errors & warnings
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    Remaining Revision-Id keywords in source
    Changes from patch in lp:1539791
    libCom/osi: Fix for MinGW32 builds on Windows
    libCom/osi: use epicsThreadGetCPUs implementation from thread-pool branch (posix, WIN32)
    Fixed various 64-bit windows build issues.
    libCom: Fix win32 handle leak
    
    Closing an epicsThread would leak one Win32 handle.
    Reported by Giles Knap, Diamond.
    libCom/osi: add epicsThreadGetCPUs()
     * Implementation for posix and WIN32 tries to get the CPUs available for this process,
       rather than the complete number of CPUs in the system.
     * For the time being, vxWorks returns 1. (This will have to change for vxWorks SMP.)
    Reworking of DLL build rules.
    
    Allows static libraries and DLLs to be built without having
    to do a 'make clean' in between on Cygwin and MinGW targets.
    The Cygwin build still crashes when SHARED_LIBRARIES = YES
    though, loading Com.dll seems to cause the problem.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    libCom/osi: Fix nesting for epicsThreadHooks, add WIN32 implementation, lock traversal
    - call (generic) exit hook after calling the (specific) epicsExitCallAtThreadExits()
    - for start hooks added as 1-2-3, run exit hooks in opposite order: 3-2-1
    - add calls to hooks module to WIN32 osdThread.c
    - add lock/unlock to hook list traversal
    libCom/osi: Add epicsThreadMap (calls user function for each thread)
    libCom/osi: Fixed all epicsThreadSleep() implementations
    
    All are now robust against overflow, NAN or negative argument.
    Passing seconds=0 calls the OS scheduler, offering to yield.
    Passing seconds>0 delays at least the requested time, up to a
    limit which usually depends on the OS tick rate.
    libCom: Increase stack sizes for Windows and Posix
    
    Windows stack sizes were the same as vxWorks - tiny.
    The stack sizes are now multiples of sizeof(void*).
    On 32-bit systems they give 256KB, 512KB and 1MB;
    64-bit systems get twice those numbers.
    
    Fixes lp:903448
    Win32: Fix for lp:861214
    libCom/WIN32: Merged Jeff's fix for bug 717252
    
    o Fixed race condition where win32 thread parm was not pushed onto the
      list before the thread was started, and so if the thread exits very
      quickly it can try to remove a non-existent thread parameter from
      the list.
    o This impacts only win32.
    o committing merge of r3.14 trunk change
    o fixed spelling and other cosmetic changes
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed bug where win32 version of epicsThreadHighestPriorityLevelBelow didnt map to a lower priority successfully if the epics priority was mapping into the 2nd win32 priority bucket
    Fix build on Windows.
    Optimize epicsThreadOnce() routines.
    
    Don't call epicsThreadGetIdSelf() unnecessarily, check for the value
    EPICS_THREAD_ONCE_DONE first, since that's the most common state.
    Don't call errlogPrintf() in epicsThreadGetOsiPriorityValue()
    
    This is a partial fix of a WIN32-only problem Mark Rivers reported.
    A WIN32 thread created by a manufacturer's library is used to call one
    of his callback routines, which tries to use an epics facility that has
    an epicsThreadOnce().  The new version of epicsThreadOnce() uses
    epicsThreadGetIdSelf() to detect recursive initialization; the thread
    doesn't have an epicsThreadId yet, so epicsThreadImplicitCreate() is
    asked to make one.  It calls epicsThreadGetOsiPriorityValue(), but
    osdPriority is 15 which is not known by that code, so it reports an
    error by calling errlogPrintf().  That checks epicsThreadIsOkToBlock()
    which calls epicsThreadOnce() but that needs our epicsThreadId...
    
    This doesn't solve the issue of the unknown osdPriority value 15
    (priorityClass = 32), but it allows the IOC to continue working with
    just a warning message at init time.
    
    It also points out that calling epicsThreadGetIdSelf() every time we
    check an epicsThreadOnce() is probably not good for performance.
    Rework epicsThreadOnce() using ideas from Michael Davidsaver.
    An epicsThreadOnceId is now an epicsThreadId.
    During initialization, it is set to the thread running the init routine
    which can now detect a recursive initialization attempt and suspend.
    EPICS_THREAD_ONCE_INIT is still zero, the implementations now define a
    new private value for EPICS_THREAD_ONCE_DONE.  This is deliberately not
    made public.
    extended comment
    Comment.
    epicsThreadOnceOsd() must unlock mutex before calling func().
    Required so callbackInit() can wait for its threads to start.
    installed epics thread exit capabilities
    fixed warnings
    Fixed bug in posix implementation of osdThreadOnce and added assertion
    to the other implementations that will fire in the one case the Posix
    code can't cope with.
    support mingw
    make certain that com.dll remains resident for its daemon threads even if the
    user explicitly uloads it (from a labView DLL)
    added def of STACK_SIZE_PARAM_IS_A_RESERVATION for compilers that dont provide it
    use STACK_SIZE_PARAM_IS_A_RESERVATION thread creation
    option - this should allow more threads to run on XP
    epicsExit and epicsStdioRedirect
    fixed holding lock while suspended in epicsThreadSuspendSelf()
    moved setThreadName() out so that it could use C++ exceptions instead of
    windows structured exceptions (which are not compiler portable)
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    ShellContext=>OkToBlock
    implement ShellContext
    cleanned up win32 thread entry
    fixed potential race during init
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    cosmetic
    improved formatting for thread list
    improved epicsThreadShow[All]
    possible workaround for unreproducable race during borland dll rundown
    added commented out debug message
    support W95 except if its a 64 bit build
    workaround for earlier versions of the wiondows SDK
    fixed comment
    fixed borland warnings
    removed previous change that allowed w95, but introduced a bug
    avoid problems when the osd thread priority isnt mapable to the epics
    priority range
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Updated license comments.
    take advantage off additional priority levels when running
    with a real time priority class
    added commented out attempt at additional priority range, and removed time critical as parto of the normal range
    set the thread name (for visual c++ 7)
    reversed previous change
    moved once call out of mutex guard
    fixed bug in osdThreadOnce
    ADDED IMPLICIT THREAD INIT
    implemented threadExitMain()
    assert fail before allowing invalid thread id into use
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    used unsigned not double constant
    round hibernation delays greater than zero but less than 1mS to 1 mS
    formatting
    detect overrange in sleep
    proper rounding improves delay accuracy
    fixed borland warning
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    fix epicsThreadBooleanStatusFail
    fix epicsThreadBooleanStatusSuccess
    changes for osiThread=>epicsThread
    fixed issues discovered by the Borland compiler
    cosmetic
    fixed null func returns a value warning
    use thread once during initialization
    added stub for thread id from name
    added threadExitMain()
    added new priority manipulating routines
    updated threadShow() and threadInit to match new interface from William
    added thread once
    dummy implementation of threadOnce for win32
    dummy threadShow
    various, mostly posix, thread mods
    work around WIN32 shutdown issues
    more changes for threadPrivate
    get rid of threadIsReady
    under construction
    added thread var support
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    replacements for osdSem
    under construction
    use new semId typedefs
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    WIN32: Add symbol lookup
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Added trailing newlines (MinGW warning).
    Updated license comments.
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Allow up to 100 network interfaces on Windows.
    
    Fixes lp:1606848
    Remaining Revision-Id keywords in source
    libCom/osi: osiLocalAddr() missing free()
    osdnetIntf.c cleanup indentation
    libCom/osi: osiLocalAddr() avoid race on initialization
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    byte swap port number (even if it is zero)
    use STRICT
    cosmetic
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    loopback address address matching
    Updated license comments.
    removed knowledge of subnet mask from network interface query
    fixed diagnostic
    fixed borland warning
    initialize net mask entry
    cosmetic
    added osdNetIntf.c
    doc
    added routines needed by CA
    cleaned out osdSockResource
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    MinGW defines some of these macros.
    Ensure finite() is defined.
    Updated license comments.
    improved isinf()
    use !finite() for isinf()
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    use proper form of include
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    win32: include ws2tcpip.h from osdSock.h
    
    Needed to get some additional definitions
    including IP_ADD_MEMBERSHIP
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    installed
    thread safe socket error to string function
    use posix sockets
    define WIN32 if it isnt defined to avoid winsock2's messing with structure
    member alignment
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    cosmetic
    doc
    fixed SO_REUSEADDR WIN32 strangeness
    configure that WINSOCK is very different about SO_REUSEADDR
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    added osdNetIntf.c
    added SOCK_SHUTDOWN
    reduce WIN32 header file overhead
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    removed pragma
    attempted to solve err to str problems
    added sock ioctl() typedef
    use winsock II
    added errno macros
    cosmetic changes
    removed ipAddrToA () prototype
    added additional error codes
    winsock II changes
    moved include of time.h and errno.h here
    installed WIN32/Makefile.Host
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added trailing newlines (MinGW warning).
    Updated license comments.
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Fixed issues with thread-hooks.
    Fix vxWorks build issues from thread-hooks merge.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Add some copyrights for ITER
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Various cleanup and de-warning (although HOST_WARN is still NO).
    Updated license comments.
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fixed various 64-bit windows build issues.
    Various updates for building on Windows/Cygwin/MinGW
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    fixed warnings
    epicsExit and epicsStdioRedirect
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    simplified now that epicsMutexLockWithTimeout() is gone
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    use STRICT
    removed double test lock optimization
    simplified includes to avoid portability problems with different versions of windows
    fixed visual c++ 6.0 build issues
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    remove testing override
    its ugly, but its the only way to accomodate 95/98/me
    Updated license comments.
    use %d to diplay thread id
    cosmetic
    fixed missing return value
    cleaned this up.
    o removed multiple implementations
    o made efficent robust version using win32 critical section
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    Create => OsdCreate
    epicsMutexCreate=>epicsMutexOsdCreate
    epicsMutexMustCreate now osi; add support for epicsSemShowAll
    fixed compile time problem introduced when name was changed to EPICS
    replacements for osdSem
    installed compromise mutex solution which implements a timeout, but
    still uses the more efficent WIN32 critical section primitive
    under construction
    use new semId typedefs
    renamed files
    removed cvs log
    API changes
    code around gnu g++ inline bug when -O isnt used
    installed hostBuild branch
    use destroyInProgress flag now functional nativeCount()
    ca server installation
    Seperated drv files into ansi and old dirs. Added combine dir.
    LANL merge into ANL for R3.12
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    installed
    Updated license comments.
    added new parameter
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Must be able to include this file from C code, changed comment style.
    Mostly cosmetic changes.
    Added an ifdef test for FLOAT_WORD_ORDER in os/default/osdWireConfig.h
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    Build issues for MinWG
    o fixed spelling in comments
    o fixed warnings during MSVC based build
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    added epicsAtomicGetUIntT for completeness
    added epicsAtomicGetUIntT for completeness
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    corrected MS VC++ version range where new does not throw an exception
    Updated license comments.
    added ifdef to avoid this starting with visual c++ 7
    cosmetic
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    libCom: Fixed epicsEvent issues on Win32 and cygwin.
    
    * Removed all epicsShareAPI decorations
    * Return value from Win32 epicsEventTrigger() inverted
    * Return OK from posix epicsEventTrigger() omitted.
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    use STRICT
    simplified includes to avoid portability problems with different versions of windows
    fixed visual c++ 6.0 build issues
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    Updated license comments.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    use unsigned , not double, constant
    round hibernation delays greater than zero but less than 1mS to 1mS
    use conatant INFINITE
    proper rounding improves delay accuracy
    fixed time calculation overflow
    fixed link time problem introduced when name was changed to epics
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    WIN32: osdFindSymbol.c use PSAPI_VERSION
    
    Prefer the more specific PSAPI_VERSION to NTDDI_VERSION.
    WIN32: epicsFindSymbol() clear error on success
    WIN32: epicsFindSymbol() fix use of EnumProcessModules()
    fix epicsLoadError()
    
    FORMAT_MESSAGE_IGNORE_INSERTS as no va_list is provided.
    
    Handle possibility of n=0 if unable to lookup error.
    WIN32: GetLastError() returns DWORD
    WIN32: osdFindSymbol() use psapi
    WIN32: epicsLoadError() strip trailing newlines
    WIN32 fix epicsFindSymbol()
    
    Passing zero as to GetProcAddress is undocumented,
    but seems to be equivalent to passing GetModuleHandle(NULL)
    which searches only the address space of the executable file.
    
    Emulate the effect of dlsym(0, ...) by searching all
    loaded modules.  Probably not so efficient...
    WIN32 fix epicsFindSymbol() error propagation
    
    And use thread local to hold error code/message.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Added osi/os/WIN32/osdFindSymbol.c
    
    Implemented by Dirk Zimoch.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    += epicsSignalInstallSigHupIgnore (libCom/osi)
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    comment out unused parameter
    changed name of osd signal file to allow c++ and enabled noop signals
    cosmetic
    installed
    Updated license comments.
    added new parameter
    RTEMS now provides a mechanism for interrogating the memory allocator.
    renamed files
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Back-ported 64-bit MinGW cross-build stuff from 3.15
    MinGW provides getopt(), don't build our own
    Fixed DLL definitions for epicsGetopt (on WIN)
    += epicsGetopt to declare (default) or implement (WIN) getopt()
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    osdSockUnsentCount.c check for existance of SIO_TCP_INFO
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Use MS' strto[u]ll() if present
    Build issues for MinWG
    Various fixes
    
    * VxWorks 5.5.2 doesn't like C++-style variable declarations in C code
    * Older MS compiler doesn't have strto[u]ll
    * Wrote release note entry for iocshLoad command.
    libCom: Mark epicsStrtod() as extern "C"
    Removed epicsShareAPI from epicsStrtod.
    Add os-independent epicsStrtod() routine.
    Updated license comments.
    Initial checkin of RTEMS operating-system-specific routines.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    libCom "join" win32 threads
    
    Wait for completion
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    added thread once
    add OSITHREAD_ONCE_INIT
    dummy implementation of threadOnce for win32
    under construction
    added thread var support
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Convert epicsTempFile.cpp to .c
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Merged epicsStdioRedirect.h into epicsStdio.h
    Added epicsShareFunc and epicsExportSharedSymbols info.
    added missing #include
    fixed temp file creation issues on win32
    added wrapper around tmpfile so that we can have a windows specific
    implementation
    HP warning fix: missing newline at EOF.
    Updated license comments.
    test ansi / iso exception behavior
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    generalTime short circuit current time
    
    epicsTimeGetCurrent() is called frequently.
    Unless more than the default provider is registered,
    locking and going through the timeProvider list each
    time is a waste.
    
    Instead, short circuit to directly call the default
    time current time provider unless a another has
    been registered.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Posix epicsEventWaitWithTimeout() max delay
    
    Limit timeouts on Posix to max-out at 10 years.
    Adds a test that will fail when that time-out hits Y2038 on
    systems where time_t is still a 32-bit integer.
    Fix tv_sec casts to use time_t, not long
    Remove artificial 60-minute timeout limit (Posix)
    Use OS __CYGWIN__ macro, deprecate our CYGWIN32
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    libCom: Add a High-Resolution Time Provider on MacOS
    
    Since Apple don't support clock_gettime(CLOCK_REALTIME) I added a
    new time provider that uses the Mach kernel Clock service to get
    nanosecond resolution time.
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    Cygwin doesn't actually provide a clock_settime symbol, although the
    prototype is present in time.h so we supply our own that returns error.
    Fix Darwin build, which doesn't have CLOCK_REALTIME.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Added epicsShareFunc and epicsExportSharedSymbols info.
    Fixed warning on Solaris.
    Fixed generalTime initialization issues (RTEMS incomplete).
    General Time, from Peter Denison, Eric Norum and many others...
    make sure tv_nsec < 1000000000L
    Let posix version of osdTime work on systems without real-time capability.
    HPUX warning fix
    Updated license comments.
    add special values for eventNumber; time events are int
    Fix error report to reflect the fact that clock_gettime returns 0 or -1 with error code in errno.
    fix bug
    Put convertDoubleToWakeTime in osdTime.cpp so that it is not duplicated.
    Use clock_gettime in convertDoubleToWakeTime.
    Always use clock_gettime get current time
    Changes for HP-UX 11 - first semi-stable version
    removed extra semi-colon
    added new osd routines
    Fixed HPUX warnings.
    osiTime=>epicsTime
    switch on _POSIX_TIMERS
    HP-UX defines things a bit different (HP aCC error fix)
    tsStampOK on success; att \n at end of file
    renamed files
    new way to build
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
     - use time() instead of clock_gettime();
     - when comparing modification to program start time use >= instead of >
     - fixed c++ warnings
     - implemented suggestion by Michael Davidsaver: when reading ELF files
       check modifification time against program start time and warn if the
       file was modified more recently since it could be out of date.
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - cleanup
     - reduced epicsStackTraceGetFeatures to epicsFindAddrGetFeatures
     - renamed:
      src/libCom/osi/os/posix/osdBackTrace.c => src/libCom/osi/os/posix/osdExecinfoBackTrace.c
      src/libCom/osi/os/posix/osdFindAddr.c => src/libCom/osi/os/posix/osdElfFindAddr.c
    
      not all 'posix' platforms can use the above versions (since the used APIs are not really POSIX)
      but a subset can. The platforms which can use either version #include it from 'their'
      osdBackTrace.c/osdFindAddr.c.
     - fixed illegal void* pointer arithmetic by casting to char*
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - use unistd's _POSIX_MAPPED_FILES to determine if a system has mmap.
     - forget about backtrace_symbols() -- always use 'dladdr'. (The former
       is non-standard either and AFAIK always based on the latter.) Always
       using dladdr allows us to precisely control the printout formatting
       and keep it consistent.
     - canonicalized printout formatting
     - added EPICS_STACKTRACE_DYN_SYMBOL
     - added USE_DLADDR branch (which is a 'super' of USE_ELF, i.e., the latter
       depends on the former)
     - replaced TABs by four blanks
     - print header message
     - paranoia test; errlogFlush; fixed debug messages
    
       1) Added a paranoia test to make sure an ill-formatted
          ELF string table is not overrun if there is no NULL
          char found.
    
       2) Added errlogFlush() before and after stack dump (suggestion
          by Michael Davidsaver, thanks).
    
       3) Fixed (out of sync) debug messages.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    Changes to create vxWorks archive libraries and prods.
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Posix: Fix how we check POSIX features
    
    Darwin defines some macros as -1, which means unsupported.
    libCom/posix: Drop SCHED_FIFO before exec() in child process
    
    osiSpawnDetachedProcess() switches to SCHED_OTHER after fork() so
    the new program will not be real-time unless is requests it itself.
    Only happens when USE_POSIX_THREAD_PRIORITY_SCHEDULING = YES
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix compiler warning about missing sentinel in execlp() call.
    Don't run parent's atexit() handlers if child's exec() fails.
    restore code closing most open files between fork and exec
    use close on exec option for sock
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    Fixed HP-GNU warning (unused variable)
    Updated license comments.
    Include stdio.h to get declaration for stderr.
    Ensure that all execution paths through osiGetUserName actually return a value.
    Fix missing apostrophe in couldn't.
    Fixed use of errlogPrintf () in spawned process ulting in a hang.
    Removed use of assert() when the executable couldnt be located
    which aslo caused a hang.
    fixed user name exits test logic
    additional header files
    added maxPosixFD()
    included additional header files
    added routines needed by CA
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    split epicsStdio into common and osdStdio portions
    Change include quotes from "" to <>.
    When "" are used the posix osiUnistd.h is included rather than the
    os-specific osiUnistd.h.
    fixed temp file creation issues on win32
    epicsSnprintf did not work. It is fixed.
    Get things to build on RTEMS.
    fixed func name
    reorganized so that we maintain only one interface specification - this
    makes the posix implementation slightly slower, but these arealready
    very slow routines so there shouldnt be any noticable impact.
    epicsStdio is new
    Updated license comments.
    made compatible with C++ test codes in mrkSoftTest
    changes for building win32 dlls
    created for 64 bit architecture support
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Posix: Fix how we check POSIX features
    
    Darwin defines some macros as -1, which means unsupported.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    cosmetic
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    fix bug
    Put convertDoubleToWakeTime in osdTime.cpp so that it is not duplicated.
    Use clock_gettime in convertDoubleToWakeTime.
    Always use clock_gettime get current time
    switch on _POSIX_TIMERS
    HP-UX defines things a bit different (HP aCC error fix)
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    turn on close on exec option
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed include
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    moved sock err str converting func
    thread safe socket error to string function
    use const to avoid warnings in the future
    Updated license comments.
    removed unused code
    *** empty log message ***
    reliable solution for shutdown differences
    changes for osiThread=>epicsThread
    accomodate aps osi => epics name change
    osi => epics name change  to accomodate aps
    changed the name of bsdSock{Attach,Release}
    Decouple aToIPAddr from bsdSockAttach by using threadOnce to create the mutex.
    added osdNetIntf.c
    Protect calls to gethostbyname and gethostbyaddr with a mutex.
    On Solaris and RTEMS (and perhaps others) these routines are not thread-safe.
    move back to solaris
    transfer back to windows
    added routines needed by CA
    cleaned out osdSockResource
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Com: fix handling of thread joinable flag and refcnt
    
    The second increment of refcnt must occur before pthread_create
    or a subtle possibility of a double free() occurs if the thread
    runs immediately and self-joins before the second inc.
    
    Also use atomic ops for joinable flag to ensure that
    concurrent joins will error properly.
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    sysconf /0 paranoia
    
    Seems unlikely, but avoid any possibility to divide by zero.
    epicsThreadMustJoin() warn only on double self-join
    epicsThreadMustJoin() clear joinable flag
    
    Clear so that repeated calls will error correctly.
    Only well defined for self join.
    epicsThreadJoin() -> epicsThreadMustJoin()
    stripped-down fix for 1816841 only
    epicsThreadRealtimeLock: clarify errors
    
    give some more descriptive, linux specific, error messages
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    libCom: add epicsThreadCreateOpt()
    
    Variant of epicsThreadCreate() which accepts optional
    arguments via a structure to allow for compatible
    addition of new arguments.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Changes from patch in lp:1539791
    libCom/posix: Remove pthread_setcanceltype()
    Fix Darwin build
    Applied linux-runtime-disable-RT-priorities-if-not-supported.patch
    Posix: Fix how we check POSIX features
    
    Darwin defines some macros as -1, which means unsupported.
    Linux builds: Define _GNU_SOURCE and _DEFAULT_SOURCE
    
    These replace the mixture of macros used to pick the features
    presented by the standard system header files on Linux.
    
    Updated the section of the CA reference manual that showed some
    example compile lines to correct for 3.15 build changes.
    
    Removed unused code & out-of-date comments.
    On POSIX systems, an IOC application's ability to meet timing deadlines is often
    dependent on its ability to lock  part  or  all  of  the process's virtual
    address space into RAM, preventing that memory from being paged to the swap
    area.  This patch will attempt to lock the process's virtual address space into
    RAM if the process has the ability to run threads with different priorities. If
    unsuccessful, it prints an message to stderr.
    
    In Linux, one can grant a process the ability to run threads with different
    priorities by using a command like ulimit -r unlimited. To use the FIFO
    scheduler, use a command like so - chrt -f 1 softIoc -d test.db
    
    In Linux, one can grant a process the ability to lock memory by using a command
    like ulimit -l unlimited. Alternatively, these limits can be configured on a per
    user/per group basis by using /etc/security/limits.conf or its equivalent.
    
    In Linux, a child process created via fork inherits its parent's resource
    limits.  Thus, it is probably a good idea to start the caRepeater before
    starting the IOC.
    libCom/osi: use epicsThreadGetCPUs implementation from thread-pool branch (posix, WIN32)
    libCom/osi: add epicsThreadGetCPUs()
     * Implementation for posix and WIN32 tries to get the CPUs available for this process,
       rather than the complete number of CPUs in the system.
     * For the time being, vxWorks returns 1. (This will have to change for vxWorks SMP.)
    libCom/osi: (posix) make getOssPriorityValue() public as epicsThreadGetPosixPriority()
    libCom/osi: (posix) keep scheduling policy by thread, to support SCHED_RR
    libCom/osi: Rename osd thread sched policy flag (Fifo -> RealTime)
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Don't decorate epicsThreadHook functions with epicsShareAPI
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    libCom/osi: Fix nesting for epicsThreadHooks, add WIN32 implementation, lock traversal
    - call (generic) exit hook after calling the (specific) epicsExitCallAtThreadExits()
    - for start hooks added as 1-2-3, run exit hooks in opposite order: 3-2-1
    - add calls to hooks module to WIN32 osdThread.c
    - add lock/unlock to hook list traversal
    libCom/osi: Add some copyrights for ITER
    libCom/osi: Add epicsThreadMap (calls user function for each thread)
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    libCom/osi: Fixed all epicsThreadSleep() implementations
    
    All are now robust against overflow, NAN or negative argument.
    Passing seconds=0 calls the OS scheduler, offering to yield.
    Passing seconds>0 delays at least the requested time, up to a
    limit which usually depends on the OS tick rate.
    minor
    simplify
    Only ignore errors when there is an error reporting path
    
    can't report from thread free mutex unlock or implicit thread creation
    libCom: Increase stack sizes for Windows and Posix
    
    Windows stack sizes were the same as vxWorks - tiny.
    The stack sizes are now multiples of sizeof(void*).
    On 32-bit systems they give 256KB, 512KB and 1MB;
    64-bit systems get twice those numbers.
    
    Fixes lp:903448
    libCom: Second fix for RT thread priority
    
    The previous fix prevented epicsThreads from working properly when
    the RT scheduler is *not* used.
    
    fixes lp:835138
    libCom: Clean up warning from Darwin.
    libCom: Fix OS priority mapping on Posix
    
    Fixes lp:835138
    osdThread avoid cantProceed
    Optimize epicsThreadOnce() routines.
    
    Don't call epicsThreadGetIdSelf() unnecessarily, check for the value
    EPICS_THREAD_ONCE_DONE first, since that's the most common state.
    Rework epicsThreadOnce() using ideas from Michael Davidsaver.
    An epicsThreadOnceId is now an epicsThreadId.
    During initialization, it is set to the thread running the init routine
    which can now detect a recursive initialization attempt and suspend.
    EPICS_THREAD_ONCE_INIT is still zero, the implementations now define a
    new private value for EPICS_THREAD_ONCE_DONE.  This is deliberately not
    made public.
    (M. Davidsaver): Use ELLLIST init macros.
    Restart nanosleep() on EINTR.
    Removed the pthread_cancel() functionality from posix/osdThread.c,
    resolving the whole issue with catch(...) on NPTL.
    Added epicsShareFunc and epicsExportSharedSymbols info.
    Cleanup, improve error message.
    installed epics thread exit capabilities
    Clear up gcc warnings.
    Fixed bug in posix implementation of osdThreadOnce and added assertion
    to the other implementations that will fire in the one case the Posix
    code can't cope with.
    better checking for pthread_create
    Fix memory leak for priority scheduling
    Set pthreadInfo->isEpicsThread in the epicsThreadCreate() retry.
    
    This code still has a memory leak if pthread_create() returns EPERM,
    which only happens on SMP Linux systems.
    illegal to change priority for non-epics thread
    optimize priority scheduling code
    change way to handle EPERM error
    add priority scheduling
    Added test for DONT_USE_POSIX_THREAD_PRIORITY_SCHEDULING
    cancel threads in inverse order of creation
    check for EINTR
    pthread_mutex_lock and pthread_cond_timedwait ignore EINTR
    set stacksize
    dont try to cancel _main_
    call epicsThreadInit instead of assert if epicsThreadId is not an argument
    removed atexit handler that calls epicsThreadExit because:
    o recursive exit call is bad
    o this causes shutdown problems with DLL codes on windows
    => the workaround is an atexit handler that calls epicsExitCallAtExits in
    the poosix osdThreads atexit handler
    epicsExit and epicsStdioRedirect
    Block signals in all but the main thread.
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    ShellContext=>OkToBlock
    implement ShellContext
    added epicsGetStdin/epicsSetStdin and stdout and stderr
    Fix int/pointer conversion warnings.
    Add missing include.
    Clean up -- use epicsStrDup instead of ad-hoc allocation.
    fix memory leak in epicsThreadPrivateDelete
    get rid of lazt init for SMP safe
    Fixed HP-GNU warning (unused variable)
    Remove debugging dreck.
    Don't try to clean up non-EPICS threads.
    Create dummy context for threads not created by epicsThreadCreate().
    This is needed by jca.
     CVS: ----------------------------------------------------------------------
    Permit threads other than main() to call exit() and have the process stop.
    
    If a subsidiary thread calls exit(), its context is used (on Solaris at
    least) for calling the atexit routines.  If one of those routines cancels
    the thread that called exit(), the exit itself gets cancelled and any
    remaining threads are left running, possibly including the main() thread.
    Thus the check in myAtExit() should have been to not cancel the current
    thread; when this was tested, presumably only calls to exit() from the
    main() thread were checked.
    Fixed HPUX problem: HZ is '#define'd in system header file
    added epicsThreadSleepQuantum()
    Print error message when confronted with invalid thread ID.  Allow
    thread show by EPICS thread ID or by POSIX thread ID.
    Cosmetic: Remove tab characters.
    Show pthread ID as well as EPICS thread ID since the pthread ID is
    what's needed with gdb.
    avoid recursive locking in once only function
    fixed missing status
    avoid chiken an egg problems during init by not using osi routines at osd level
    fixed function name
    added direct access to thread specific ds
    changed function name
    fixed gnu compiler error
    fixed symbol spelling
    fixed compiler error on linux
    added epicsThreadGetPthreadIdSelf()
    Updated license comments.
    Two small changes to allow operation on Darwin (Mac OS X):
      1) Third argument to pthread_setcanceltype can't be NULL.
      2) First argument to pthread_getschedparam must be valid thread id.
    Cosmetic changes to output of show command.
    make sure epicsThreadInit called
    assert fail before allowing invalid thread id into use
    more changes for type safe thread id
    more changes for type safe thread id
    clean up resulting from type safe thread id
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    changes for osiThread=>epicsThread
    replace osiSem by epicsMutex/epiceEvent
    undef _POSIX options; minor changes
    PTHREAD_CANCEL_ASYNCHRONOUS so myAtExit cancels immediately
    fix myAtExit
    dont cancel main thread
    atexit cancels threads
    fix priority bug; better Show
    call threadInit where needed
    implement threadGetPrioritySelf
    Add implementation of threadGetPrioritySelf().
    changed to printf in threadShow
    removed threadSleep from threadShow
    added more info (and short sleep) to threadShow
    added threadHighestPriorityLevelBelow,threadLowestPriorityLevelAbove
    made threadPrivate error messages (some) dependent on errVerbose
    changes for initialization errors
    more changes for threadInit
    prevent problems when threadInit not called
    added threadInit call to threadCreate (it _is_ safe!)
    added threadInit, threadExitMain and modified threadShow family
    restored setting of id to 1 after func call in threadOnce (added comments)
    in threadOnceOsd get rid of *id = 1 after call to func
    threadOnce fix (fixes use of macro)
    threadOnceOsd fix for recursive invocations
    Simplified implementation of threadOnce.
    new threadOnce implementation; added threadGetId
    added threadOnce() implementation for posix and vxworks
    dont call set_stacksize if USE_DEFAULT_STACK
    various, mostly posix, thread mods
    more changes for threadPrivate
    get rid of threadIsReady
    provide better error behavior for main host thread
    logic wromg in threadIsReady
    new implementation of semBinary
    use errVerbose for posix osiSem osiThread messages
    another attemp at implementing priorities
    another attemp to use priorities
    latest version of osiSem and osiThread
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    libCom: drop CLOCK_MONOTONIC_RAW
    
    Turns out this is ~10x slower to query than CLOCK_MONOTONIC
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Parentheses in macro
    BSD's finite expects a double; make glibc 2.23 happy
    libCom/posix: Define finite() for uClibc
    
    The finite() function is provided in glibc but not in uClibc.
    C99 requires isfinite() to be a macro, so we can test for it
    and define our own finite() macro in osi/os/posix/epicsMath.h
    Even variables have to be marked as extern "C"...
    Added epicsNAN and epicsINF to libCom/osi
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    use proper form of include
    add trailing */
    a fix for use of posix isnan() function
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/osi: Make EPICS ID in epicsThreadShow 2 characters wider (for 64bit)
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    posix show mapping of epicsMutexId and uaddr passed to futex()
    
    On Linux w/ GLIBC+NTPL useful to establish mapping between
    args to futux syscall and epicsMutexId (and file+line of creation).
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Posix: Fix how we check POSIX features
    
    Darwin defines some macros as -1, which means unsupported.
    libCom: Adjust the Posix epicsMutexOSD structure
    
    Make pthread_mutex_t lock the first member of the
    parent structure, so it's easy to convert between them.
    Fixes for build issues found on Darwin.
    Only ignore errors when there is an error reporting path
    
    can't report from thread free mutex unlock or implicit thread creation
    posix osdMutex recursive type is not optional
    
    epicsMutexId is expected to be recursive so
    fail if this is not possible.
    posix osdMutex don't use cantProceed
    Return epicsMutexLockError rather than calling cantProceed() if the
    pthread_mutex_ functions return EINVAL.
    Added epicsShareFunc and epicsExportSharedSymbols info.
    Moved condWait() into conditional compilation area where it's used.
    better error message
    check for EINTR
    pthread_mutex_lock and pthread_cond_timedwait ignore EINTR
    remove spin lock version
    doc
    more spinlock tests
    test version of posix spin locks
    fixed missing parm for old version of posix
    fixed missing status
    added capability to record the last owner of the mutex, but perhaps
    this should be active only with debug builds
    get rid of unnecessary pthread_self
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    Updated license comments.
    fix bug
    Put convertDoubleToWakeTime in osdTime.cpp so that it is not duplicated.
    Use clock_gettime in convertDoubleToWakeTime.
    Always use clock_gettime get current time
    fixed incorrect status returned from tryLock()
    fixed gnu warning
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    epicsMutexMustCreate now osi; add support for epicsSemShowAll
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replacements for osdSem
    undef _POSIX options; minor changes
    correct option should be PTHREAD_PROCESS_PRIVATE
    add _POSIX_THREAD_PROCESS_SHARED
    prevent problems when threadInit not called
    added threadOnce() implementation for posix and vxworks
    various, mostly posix, thread mods
    cosmetic changes
    latest version of semBinary
    new implementation of semBinary
    sem*Show level is now unsigned
    use errVerbose for posix osiSem osiThread messages
    backout INLINE; add level argument to semXXXShow
    another attemp at implementing priorities
    latest version of osiSem and osiThread
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix socket shutdown mechanism on cygwin-x86
    Clean up system-call-interrupt mechanism.
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    installed
    Updated license comments.
    many, many changes
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    o fixed spelling in comments
    o fixed warnings during MSVC based build
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    fixed issues in posix and vxWorks specific epicsAtomic found during testing
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsAtomic: fix function def. order
    
    epicsAtomicMemoryBarrierFallback used before definition
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    epicsAtomic: fix C linkage
    
    With gcc -std=gnu99 (present default) functions qualified
    with plain 'inline' emit strong public symbols (nm says 'T')
    in every compilation unit the definition appears.
    This causes linking to fail in all cases where executable
    are statically linked, and many where dynamic linking is used.
    Fix epicsAtomic headers when used from C code
    
    Several C++ and C99-isms crept in.
    o hoping that atomic_inc_ptr_nv and atomic_dec_ptr_nv interface definitions will be available if we use sys/atomic.h instead of atomic.h
    o fixed issue introduced by last revision where definition of lock functions and lock key were not present if its sunos 5.10 or greater
    (its time consuming to develop code if you can only run the (SUNPRO) compiler indirectly)
    o improved comments
    o dont include epicsAtomicOSD.h from any of the implementations of epicsAtomicCD.h unless the compiler has support for an inline keyword
    o removed superfluous ifdef on EPICS_ATOMIC_INLINE all versions of epicsAtomicDefault.h and epicsAtomicOSD.h
    o In the implementations of epicsAtomicOSD.cpp if EPICS_ATOMIC_INLINE isnt defined define it to be empty and then include epicsAtomicOSD.h
    o fixing some compile time issues for solaris version of epicsAtomicOSD.h (so that Janet can run another compile on that os)
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o merged in changes from the "compiler specific build" branch
    o changed implementation of default mutex locked version to be POSIX specific
    so we can use a static pthread mutex which is more efficent
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o fixed include guard to match file names
    o fixed legacy vxWorks support
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Cleanup of NTP time provider code.
    General Time, from Peter Denison, Eric Norum and many others...
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    added
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Posix: Fix how we check POSIX features
    
    Darwin defines some macros as -1, which means unsupported.
    libCom: Fixed epicsEvent issues on Win32 and cygwin.
    
    * Removed all epicsShareAPI decorations
    * Return value from Win32 epicsEventTrigger() inverted
    * Return OK from posix epicsEventTrigger() omitted.
    libCom: Reworked the epicsEvent APIs
    
    * Renamed the enum epicsEventWaitStatus to epicsEventStatus
    * Defined epicsEventWaitStatus as a macro for epicsEventStatus
    * Renamed epicsEventWaitOk to epicsEventOk
    * Renamed epicsEventWaitError to epicsEventError
    * Defined epicsEventWaitOK and epicsEventWaitError as macros
    * Added epicsEventTrigger(id) which triggers an event and returns OK or an
        error status if the underlying OS primitives report an error
    * Added epicsEventMustTrigger(id) which halts on error
    * Defined epicsEventSignal(id) as a macro for epicsEventMustTrigger(id)
    * Added a new C++ method epicsEvent::trigger() which throws an
        epicsEvent::invalidSemaphore in the event of an error
    * epicsEvent::signal() makes an inline call to epicsEvent::trigger()
    * epicsEventWait() and epicsEventWaitWithTimeout() now return an error
        status if the underlying OS primitives report an error
    * All the epicsEventMust...() routines are now implemented in the common
        libCom/osi/epicsEvent.cpp source file, and call cantProceed() instead of
        mis-using assert()
    * Implemented epicsEventShow() on Posix
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Added epicsShareFunc and epicsExportSharedSymbols info.
    better error message
    check for EINTR
    pthread_mutex_lock and pthread_cond_timedwait ignore EINTR
    Fix warning.
    Fix convertDoubleToWakeTime warning.
    Updated license comments.
    fix bug
    Put convertDoubleToWakeTime in osdTime.cpp so that it is not duplicated.
    Use clock_gettime in convertDoubleToWakeTime.
    Always use clock_gettime get current time
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    replacements for osdSem
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    libcom: detect uclibc support for backtrace()
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - renamed:
      src/libCom/osi/os/posix/osdBackTrace.c => src/libCom/osi/os/posix/osdExecinfoBackTrace.c
      src/libCom/osi/os/posix/osdFindAddr.c => src/libCom/osi/os/posix/osdElfFindAddr.c
    
      not all 'posix' platforms can use the above versions (since the used APIs are not really POSIX)
      but a subset can. The platforms which can use either version #include it from 'their'
      osdBackTrace.c/osdFindAddr.c.
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    OSX fix osdFindSymbol
    
    RTLD_DEFAULT isn't zero on OSX
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Moved dlopen version of osdFindSymbol.c into posix
    
    It was identical in solaris, Darwin and Linux, and had
    not been included for cygwin so this reduces duplication.
    Added epicsLoadLibrary() and some implementations.
    Updated license comments.
    change name
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Use SIG_IGN to ignore signals.
    
    Simplified the code in osdSignal, also solves problems if a handler is
    already installed that uses the 3-argument callback.
    Removed the guts of the SigAlarm code, which was only needed for HPUX
    and on Linux breaks external libraries that use the Posix Timer API.
    += epicsSignalInstallSigHupIgnore (libCom/osi)
    Install correct handler.
    Avoid infinitely-recursive handler calls.
    SIGURG => SIGALRM
    use SIGALRM instead of SIGURG to wakeup blocking socket calls
    get rid of warning messages
    improved message
    fix arguments are reversed on pthread_kill()
    declare status when it is used
    changed name of osd signal file to allow c++ and enabled noop signals
    removed unused var
    use sigaction instead of signal
    fixed function name
    replaced tabs with spaces
    better diagnostic
    use correct signal
    improved diagnostic
    added missing include
    added missing include
    changed function name
    fixed compiler error on linux
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Posix: Fix how we check POSIX features
    
    Darwin defines some macros as -1, which means unsupported.
    default/osdSpin.c add missing #include "cantProceed.h"
    
    Also adjusted some error messages for common style.
    epicsSpin: remove redundant cantProceed() messages
    spinlocks update
    
    add epicsSpinMustCreate()
    
    Fix spinlock on RTEMS and vxWorks
    UP systems to disable task preemption.
    
    Don't use posix spinlocks when
    thread priorities are used.
    libCom/osi: Fix for cygwin
    
    Needed shareLib stuff.
    libCom/osi: add epicsSpin with default, posix, and vxWorks implementations
    - posix uses pthread_spin_ interface when supported, pthread_mutex_ otherwise
    - default uses epicsMutex
    - vxWorks (single core) uses intLock()
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add os-independent epicsStrtod() routine.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/osi: (posix) make getOssPriorityValue() public as epicsThreadGetPosixPriority()
    libCom/osi: (posix) keep scheduling policy by thread, to support SCHED_RR
    libCom/osi: Rename osd thread sched policy flag (Fifo -> RealTime)
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    Cleanup of epicsThread hooks
    - move declarations to epicsThread.h, use epicsThreadId type
    - use static elllist initializer for static lists
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Added epicsShareFunc and epicsExportSharedSymbols info.
    added extern C
    fixed function name
    changed parameter type
    changed function name
    added epicsThreadGetPthreadIdSelf()
    Updated license comments.
    new threadOnce implementation; added threadGetId
    added threadOnce() implementation for posix and vxworks
    file now ens in a new line
    renamed files
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    provide default for PATH_MAX
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Linux now seems to have putenv.
    Updated license comments.
    Add OS-specific version to supply some missing prototypes.
    added newline at EOF
    upgraded use DNS asynchronously in order to avoid lock ups
    fixed inline virtual destructor
    added newline at EOF
    many, many changes
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - renamed:
      src/libCom/osi/os/posix/osdBackTrace.c => src/libCom/osi/os/posix/osdExecinfoBackTrace.c
      src/libCom/osi/os/posix/osdFindAddr.c => src/libCom/osi/os/posix/osdElfFindAddr.c
    
      not all 'posix' platforms can use the above versions (since the used APIs are not really POSIX)
      but a subset can. The platforms which can use either version #include it from 'their'
      osdBackTrace.c/osdFindAddr.c.
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix warning.
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    Linux needs its own version of this file.  The default (POSIX) version
    results in multiple definitions of `struct timespec'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixes for building on Solaris
    
    The SunPro C++ compiler doesn't like osdElfFindAddr, so I converted
    it back to C, but then I had to make the osdFindAddr files C to match.
    Now elfRead() can't use a static initializer to get the program start
    time, so I added a public routine to osiClockTime.c to return that.
    Also fixed various indentations in Till's code.
     - made osdBackTrace/osdFindAddr c++ sources to be more flexible for
       implementations. Fixed compiler warnings (c++ more picky than cc).
     - updated copyright info
     - renamed:
      src/libCom/osi/os/posix/osdBackTrace.c => src/libCom/osi/os/posix/osdExecinfoBackTrace.c
      src/libCom/osi/os/posix/osdFindAddr.c => src/libCom/osi/os/posix/osdElfFindAddr.c
    
      not all 'posix' platforms can use the above versions (since the used APIs are not really POSIX)
      but a subset can. The platforms which can use either version #include it from 'their'
      osdBackTrace.c/osdFindAddr.c.
     - (hopefully) correct usage of sharedLib.h...
     - first stab at breaking stack trace facility into separate files
     - removed message; if there is no support remain silent
     - let default (no-op) version of stack trace print informative message
       that stack traces are not supported.
     - consistent naming: 'StackTrace' everywhere.
     - added copyright and author info.
     - compute and print stack trace (on select architectures) from cantProceed and epicsAssert
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Updated license comments.
    Add newline at end of file.
    installed
    compat IPPORT_USERRESERVED
    
    musl libc doesn't define IPPORT_USERRESERVED
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    Linux builds: Define _GNU_SOURCE and _DEFAULT_SOURCE
    
    These replace the mixture of macros used to pick the features
    presented by the standard system header files on Linux.
    
    Updated the section of the CA reference manual that showed some
    example compile lines to correct for 3.15 build changes.
    
    Removed unused code & out-of-date comments.
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    use posix sockets
    Updated license comments.
    better config of ifconfig differences
    Linux apparantely does accept zero length UDP
    linux apparently does not accept zero length UDP messages
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    Add definition for SD_BOTH.
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    Added #define  for SOCKERRSTR
    added sock ioctl() typedef
    added changes from Steve Hunt
    Linux specific changes to solaris file.
    Initial version copied from os/Solaris.
    check both sides of the fd range
    fixed warning
    removed ipAddrToA () prototype
    moved include of if.h here
    added unistd.h for close() and added gethostname() proto
    installed
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/osi: fix - do not set the main thread's Linux name to _main_ (linux)
    libCom/osi: Make EPICS ID in epicsThreadShow 2 characters wider (for 64bit)
    libCom: Fixed issues with thread-hooks.
    libCom/osi: Add default start hook for _main_ thread
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    libCom/osi: Add some copyrights for ITER
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added target support for Apple's iOS devices.
    
    Tom Pelaia II and Mark Engbretson contributed the build configuration
    and OS-dependent files, I modified the build config to bring it up to
    R3.14.12 standards and added the Release Notes.
    Updated license comments.
    OS-dependent files for Mac OS X (Darwin).
    installed
    removed osi file name stuff
    added file name defs headers
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Rework EPICS_THREAD_CAN_JOIN
    
    RTEMS osdThread.h was missing an extern "C" wrapper.
    libCom: joinable threads (posix only)
    
    Add epicsThreadJoin() and epicsThreadOpts::joinable.
    For compatibility, default threads aren't joinable
    by default.
    
    Currently only POSIX can join.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/osi: (posix) make getOssPriorityValue() public as epicsThreadGetPosixPriority()
    libCom/osi: (posix) keep scheduling policy by thread, to support SCHED_RR
    libCom/osi: Rename osd thread sched policy flag (Fifo -> RealTime)
    libCom: Linux osdThread.h needs sys/types.h for pid_t
    libCom/osi: Streamline epicsThreadShowInfo functions between implementations
    - epicsThreadShowInfo: private function to print headers or task line,
      not in header file, using internal pointer type
    Cleanup of epicsThread hooks
    - move declarations to epicsThread.h, use epicsThreadId type
    - use static elllist initializer for static lists
    Add thread hooks to epicsThread that are called when a thread starts or exits
    - add Linux implementation that
      + sets the system command name to the EPICS thread name
      + retrieves the Linux LWP ID and prints it instead of the posix thread ID
        in show commands
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    epicsGetExecDir() paths relative to executable
    
    For linux, enable softIoc to find .dbd relative to the executable
    location.
    
    The same could be done for other targets
    
    *bsd
      may have symlink /proc/curproc/file
      fallback to sysctl() with KERN_PROC_PATHNAME
    
    solaris
      getexecname()
    
    mac
      _NSGetExecutablePath()
    
    WIN32
      GetModuleFileName(NULL)
    
    others
      out of luck...
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Linux now seems to have putenv.
    Updated license comments.
    Add OS-specific version to supply some missing prototypes.
    added newline at EOF
    upgraded use DNS asynchronously in order to avoid lock ups
    fixed inline virtual destructor
    added newline at EOF
    many, many changes
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Fix warning.
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    added conversion between epicsTime and win32 FILETIME
    Updated license comments.
    Linux needs its own version of this file.  The default (POSIX) version
    results in multiple definitions of `struct timespec'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    Updated license comments.
    Add newline at end of file.
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    Fix CA server bind issue from Freddie Akeroyd
    rsrv: redo initialization to support bind multiple interfaces.
    
    consolidate most setup tasks in rsrv_init(),
    which now spawns threads directly.
    For each interface create 3-4 sockets,
    
    * TCP listener
    * UDP receiver (unicast)
    * UDP receiver (broadcast optional)
    * UDP beacon sender
    libCom: Remove extern "C" { #include <...> } from osdSock.h
    
    Our joint conclusion was that wrapping system includes with
    extern "C" used to be necessary on some OS builds when C++
    was much less common, but is now wrong.
    FreeBSD update to osdSock.h from Gerrit Kuehn.
    Configuration files for FreeBSD, from Artem Kazakov <kazakov@gmail.com>
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    added definition for read and write shutdown
    thread safe socket error to string function
    fixed up the cygwin build for R3.14
    Updated license comments.
    removed gethostname() proto (which should be in unistad.h)
    better config of ifconfig differences
    fixed Linux uses unsigned where int is used on other OS
    fixed solaris cleanup hang by using close instead of shutdown
    defined a new error constant
    added routines needed by CA
    Updated the ifndef at beginning of file.
    added EMFILE to osi_sock.h
    improved the way that socket error numbers are converted to strings
    and cleaned up the osiMutex class
    added sock ioctl() typedef
    added errno macros
    check both sides of the fd range
    cygwin32 b18 changes.
    Modifications made for beta9.
    removed ipAddrToA () prototype
    Initial Version
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fix Windows problems from Valgrind merge.
    freeListLib: instrument with valgrind
    freeListLib: cleanup indent
    
    all whitespace
    Applied Ambroz Bizjak's freeListItemsAvail.patch
    freeListItemsAvail.patch from lp:1479316
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    use EPICS_FREELIST_DEBUG for debug builds
    revert to mamloc/free if EPICS_DEBUG is defined
    replace osiSem by epicsMutex/epiceEvent
    free mutex
    semId => semMutexId and semBinaryId
    changes for osiSem changes
    Changes for WIN32 build.
    changes for 3.14
    More robust when calloc fails
    Changes for 64 bit architectures
    updated dll keywords
    API changes and include with  not <>
    Changes for replacing default.dctsdr by all ascii files
    If on vxWorks add #include <vxWorks.h>
    Channel Access changes from Jeff Hill.
    still original version
    Initial revision
    Still version 0
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Updated license comments.
    getting size_t from stddef.h is more portable
    Need to include sys/types.h to get size_t declaration.
    added C++ support
    updated dll keywords
    API changes and include with  not <>
    moved include files from base/include
    Added so that individual files dont have to have long notice
    Still version 0
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remove old libCom HTML files
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    ANSIfication of stuff (mostly missing argument types in declarations)
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    removed use of stdio due to win32 portability problems
    Let iocLofDisable be dynamically changed
    Updated license comments.
    add extern for C callable routines
    added missing win32 keywords
    log client is now portable
    removed cvs log
    API changes
    code around gnu g++ inline bug when -O isnt used
    installed hostBuild branch
    use destroyInProgress flag now functional nativeCount()
    ca server installation
    Seperated drv files into ansi and old dirs. Added combine dir.
    LANL merge into ANL for R3.12
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    logClient windows needs SOCK_E*
    use EPICS_PRIVATE_API macro and fix bug with darwin/ios
    renamed epicsSocketCountUnsentBytes to epicsSocketUnsentCount and moved it to osi/os/
    fix bug from commit f85454. Apparently epicsExportSharedSymbols is needed even though epicsExport.h is included
    epicsSocketCountUnsentBytes returns -1 on failure
    bugfix: memmove'ed to much
    epicsSockCountUnsentBytes renamed to epicsSocketCountUnsentBytes
    moved logClientSendMessage and made it static
    sending 0 bytes helps to detect broken connections on some systems (but is undefined behavior on Linux, fails on vxWorks and is a documented no-op on Windows)
    cannot print sockets with %d in Windows, they are not small ints but maybe pointers.
    ask logClient socket how many bytes are still in the send queue and don't discard them in case the connection turns out broken.
    use dynamic debug flag for logClient
    increase error message buffer size for long (Windows) error messges
    improve logClientShow to show unsent bytes on level 2 (and fix level 1)
    removed unneeded include
    no need to delay startup only because log server is currently not available
    send pending log messages directly after connecting
    avoid needless memmove calls
    elimitate duplicate code in logClient
    do not discard unsent messages when log server has closed connection, instead try to send them after reconnect
    speed up logRestart thread termination at exit
    don't send errlog on all logClients
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/log: make iocLog client unregister its listener from errlog on shutdown
    Clean up build warnings from Darwin (clang).
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    fixed missing shutdown for log client thread
    Don't use C++ comments in C code.
    fix for mantis 269
    made win32 stdcall consistent
    From Benjamin Franksen
    posix mutex does not allow mutex to be destroyed that is owned
    fix stacksize
    epicsExit and epicsStdioRedirect
    removed logFdAdd
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed problems occurring when message size exceeds the buffer size
    removed use of stdio due to win32 portability problems
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    Let iocLofDisable be dynamically changed
    Updated license comments.
    cosmetic
    changed tabs to spaces
    fixed borland  warning
    fixed wrong destroy method called
    fixed gnu warnings
    fixed borland warning
    changes for osiThread=>epicsThread
    osi => epics name change  to accomodate aps
    took out DNS calls to avoid possible lock up if DNS isnt working
    fixed Linux uses unsigned where int is used on other OS
    first cut at multi-threading version
    made two routines static
    cleaned out osdSockResource
    fixed bug in error handling
    osdSocketResource => osiSockResource
    semId => semMutexId and semBinaryId
    new organization
    changes for osiSem changes
    compare to INVALID_SOCKET not ERROR
    fixed compiler warnings
    made this code portable and moved it to libCom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    moved logClientSendMessage and made it static
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    made win32 stdcall consistent
    From Benjamin Franksen
    removed use of stdio due to win32 portability problems
    Let iocLofDisable be dynamically changed
    Updated license comments.
    add extern for C callable routines
    added missing win32 keywords
    log client is now portable
    removed cvs log
    API changes
    code around gnu g++ inline bug when -O isnt used
    installed hostBuild branch
    use destroyInProgress flag now functional nativeCount()
    ca server installation
    Seperated drv files into ansi and old dirs. Added combine dir.
    LANL merge into ANL for R3.12
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    moved logClientSendMessage and made it static
    fix wrong function name in comment
    don't send errlog on all logClients
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/log: make iocLog client unregister its listener from errlog on shutdown
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    ANSIfication of stuff (mostly missing argument types in declarations)
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    WIN32: Add symbol lookup
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Split up src/util
    
    Move log server into libCom with the log client.
    Move caRepeater init script and ca_test into ca/client/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Remove redundant macro definitions already defined in dbDefs.h
    (M. Davidsaver)
    ANSIfication of stuff (mostly missing argument types in declarations)
    SOCKET_SHUTDOWN_WRITE_SIDE #define no longer required
    fixed temp file creation issues on win32
    restructured osi socket interface to support address reuse variations
    on darwin and win32
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed base to use close on exec options whenever creating a socket
    on posix compliant systems
    fixed problem occurring when a message w/o a CR arrives and a CR from an old
    message is found.
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    the EPICS build system isnow defining _EXTENSIONS_ on Solaris
    Updated license comments.
    formatting
    fixed warning and cleaned up the source a bit
    Added include for time.h.
    fixed SO_REUSEADDR WIN32 strangeness
    configure that WINSOCK is very different about SO_REUSEADDR
    fixed Linux uses unsigned where int is used on other OS
    dont include osiSockResource.h
    bsdSocketResource=>osiSockResource
    fixed string overwrite bug
    dont print too many messages if the host runs out of fd slots
    improved the way that socket error numbers are converted to strings
    move to proper date in file if open old log
    dont increment file pos on error
    use ip addr conversion in libCom - and cosmetic changes
    use new sock ioctl() typedef
    fixed truncate return status logic error
    now uses macros from osiSock.h
    fixed warning
    ported log server to win32
    api changes
    doc
    fixed GNU compile under solaris
    use osiSock.h
    use sigemptyset() and cc -Xc changes
    SIGHUP changes added by KECK
    dont print benign message about client disconnect
    included <arpa/inet.h>
    Added filio.h include for solaris build.
    improvents for better client reconnect
    func proto added
    ANSI C changes
    Fixed call to inet_ntoa and added ifdef for free on HP
    ansi C
    ansi C
    Added (void *) cast for memset. Changed type for sec to time_t in logTime
    LANL's merge with ANL for R3.12
    improved message
    added SCCS ID and socket options
    Print routine messages only when in debug mode
    disconnect if sent a zero length message
    use changed names in envSubr
    comment out comment which aborts compile
    added epics env config
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    update doc comments
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Correct epicsMin/epicsMax behaviour for floating-point NaN arguments.
    Updated license comments.
    Added epicsAlgorithm.h header containing epicsMin, epicsMax & epicsSwap.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    drop epicsMemory.h
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix Windows problems from Valgrind merge.
    include valgrind.h
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Added gphFindParse(), which takes a string length parameter.
     This is useful for hash lookups while parsing a const string, to avoid
     having to copy and nil-terminate it.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Reworked various hash tables, using the faster epicsStrHash() routines;
    added per-bucket locks to the PV Directory, needed for run-time alias creation;
    speed up gpHash lookups; improved the output of both Dump routines.
    Added a version of gphDump that writes to an arbitrary file pointer
    rather than stdout.
    Updated license comments.
    added #ifdef __cplusplus extern C definition
    changes for 3.14
    updated dll keywords
    API changes and include with  not <>
    moved include files from base/include
    Moved include files from base/include
    Added so that individual files dont have to have long notice
    Still version 0
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remove old libCom HTML files
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fixed iocsh stream redirection for several commands
    
    Eric provided the fixes to iocsh (empty commands would not reset
    redirected streams), I fixed various commands.
    Added gphFindParse(), which takes a string length parameter.
     This is useful for hash lookups while parsing a const string, to avoid
     having to copy and nil-terminate it.
    gpHashList avoid cantProceed
    
    handle allocation failures in gphAdd()
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Reworked various hash tables, using the faster epicsStrHash() routines;
    added per-bucket locks to the PV Directory, needed for run-time alias creation;
    speed up gpHash lookups; improved the output of both Dump routines.
    Cleanup.
    Replace local myCalloc() calls with callocMustSucceed().
    The maximum size was initialized to 65636 instead of 65536
    gphFreeMem did not destroy mutex
    Added a version of gphDump that writes to an arbitrary file pointer
    rather than stdout.
    Updated license comments.
    replace osiSem by epicsMutex/epiceEvent
    semId => semMutexId and semBinaryId
    changes for osiSem changes
    Changes for WIN32 build.
    changes for 3.14
    get rid of some warning messages
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    updated dll keywords
    API changes and include with  not <>
    Did not properly implement support for multiple clients
    Changes for replacing default.dctsdr by all ascii files
    ms windows changes
    If on vxWorks add #include <vxWorks.h>
    Channel Access changes from Jeff Hill.
    still original version
    changed printf lstCount to ellCount
    changed calls to lst* to ell*
    added #include <lstLib.h>
    bug fix
    added fdef __STDC__
    Original version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    error: errlog/errsym registration updates by Andrew
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/errlog: Don't store stderr in pvtData.console
    
    Some VxWorks BSPs close the stderr stream that the shell running
    the startup script created and open a new one for the interactive
    shell. This change makes pvtData.console==NULL mean use stderr
    instead of storing the stderr value in pvtData.console at init.
    errlog: Don't free globals.
    
    Since the pvtData.atExit flag doesn't prevent all
    concurrent use of the pvtData struct we can't safely
    free it.
    Suppress errlog output of expected warning messages.
    errlog: nicer exit handler name
    libCom: Replaced errlogRemoveListener()
    
    New version errlogRemoveListeners() is safer.
    libCom: Added errlogSetConsole() functionality.
    Clean up build warnings from clang.
    libCom: Avoid race in errlog shutdown.
    
    A rare race during shutdown.  The contenders are the log thread
    coming out of its loop and calling errlogCleanup(), and the
    exitHandler signaling waitForWork.
    
    This solution is to move cleanup completely into exitHandler,
    which already waits for the log thread to exit.
    errlog: Flush messages before exit
    
    When an exit is requested process all messages before exiting.
    
    The atExit flag is set, so no new messages can be added to the buffer.
    libCom: Fix msgbufGetNode() in errlog.c
    
    Systems that generate large numbers of errlog messages or have a slow
    message listener could overwrite older messages in the message buffer
    after the buffer wraps.  This also corrects and annotates the test
    code to describe what's being checked.
    libCom: Fix errlogPrintf() assert fail at shutdown
    
    If errlogPrintf() gets called during shutdown, it can cause a
    recursive assert failure.
    
    Fixes lp:693534
    libCom/errlog: Clean up possible problem at shutdown.
    
    Don't use epicsMutexMustLock() in msgbufGetFree().
    When we're shutting down, the pvtData.msgQueueLock gets destroyed.
    This makes msgbufGetFree() return NULL if the lock is dead.
    The epicsMutexMustLock() routine asserts(), which recurses...
    libCom/errlog: Rewrote msgbufGetNode() to use buffer better.
    
    Michael Davidsaver pointed out that the original algorithm used is
    dumb, it can't reuse empty space at the beginning until all messages
    have been drained.  This new version can, and is more efficient.
    errPrintf() newline fix.
    
    errPrintf() was adding a newline when writing to the err log buffer,
    but not when printing to the screen.  This results in the error
    message running together with the next line.  Added a newline to the
    stderr output.
    Added libCom/test code for epicsThreadOnce() implementations.
    Also fixed subsystems that were not using epicsThreadOnce correctly.
    Initialize the errSym table as part of errlogInit rather than doing it
    later in an error path, when we might have already run out of memory!
    ANSIfication of stuff (mostly missing argument types in declarations)
    Don't forget to flush!
    Fix errlogPrint and errlogVprintf so the latter outputs to the console.
    Cleanup.  Handle re-initialization during shutdown gracefully.
    Send errlog output to stderr rather than stdout, from J Lewis Muir.
    Added an errlogInit2() routine to allow an enlarged maximum message size to be
    specified at initialization time.
    no longer an owner of this code
    errlog crashes if called from interruot context
    do not call vfprintf twice in same routine. powerPC crashes
    call epicsAtExit from errlogThread
    epicsExit and epicsStdioRedirect
    implement atexit to cleanup
    More changes for OkToBlock
    dont printf unless pvtData.toConsole
    wrong logic on msgbufGetFree(isOkToBlock)
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    ShellContext=>OkToBlock
    if shellContext call printf from initial thread
    Clean up 'truncated' message.
    Ensure that truncated errrlogMessage output is reported as such.
    Use epicsVsnprintf to eliminate possibility of buffer overflows.
    Move format-string checking conditional to cxxCompilerDependencies.
    suppress extra console message from logMsg
    set BUFFER_EXTRA_BYTES = MAX_MESSAGE_SIZE
    removed epicsShareAPIV
    use epicsVsnprintf instead of vsprint; allow more extra bytes because vxWorks subject to buffer overflow
    1) depricated errSymFind function because errSymLookup below provides a
    better interface
    2) added errSymLookup function with these improvements
    o  receive a buffer length from user and therefore never overwrite the users buffer
    o return void and always copy a string into the users buffer. If the error code cant
    be found then copy in a message with the error code's raw numbers in it.
    3) removed prototypes for nonexistent fuinctions from header file
    Updated license comments.
    errlogFlush must call errlogInit
    call errlogFlush before terminating
    call atexit only if successful
    add atexit to flush messages
    change errlogStop to errlogFlush
    add errlogStop; remove old sytle C function prototypes
    osiInterrupt=>epicsInterrupt; epicsThreadInit now static
    changes for osiThread=>epicsThread
    replace osiSem by epicsMutex/epiceEvent
    dont base priority on the server's priority
    changes in thread priorities
    prevent recursive calls if errlogInit fails
    used new threadOnce() routine
    various, mostly posix, thread mods
    added missing argument to threadSuspend() and made errVerbose
    visible outside of WIN32 DLL
    latest version of semBinary
    latest version of osiThread
    use errVerbose for posix osiSem osiThread messages
    semId => semMutexId and semBinaryId
    changes for osiSem changes
    fixed compiler warnings
    fixed DLL symbol export
    include dbDefs.h for TRUE and FALSE
    added private parm to errLogAddListner
    changes for 3.14
    minor changes
    make sure iocLog is started
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    New errlog facility. Replaces old epicsPrintf stuff
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    add extern for C callable routines
    New errlog facility. Replaces old epicsPrintf stuff
    dont include stdarg.h in traditional C code
    added iocLogPrintf()
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    quiet some warnings
    Remove EPICS Base submodules
    Move all under modules/libcom
    error: errlog/errsym registration updates by Andrew
    error: remove fake dependency to dbDefs.h
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add errSymMsg() error message lookup
    
    Like errSymLookup() but always returns a static string.
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    (M. Davidsaver): errnumlist was never initialized.
    Removed long-deprecated errSymFind routine.
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Send errlog output to stderr rather than stdout, from J Lewis Muir.
    1) depricated errSymFind function because errSymLookup below provides a
    better interface
    2) added errSymLookup function with these improvements
    o  receive a buffer length from user and therefore never overwrite the users buffer
    o return void and always copy a string into the users buffer. If the error code cant
    be found then copy in a message with the error code's raw numbers in it.
    3) removed prototypes for nonexistent fuinctions from header file
    Updated license comments.
    make sure value has value
    use errVerbose for posix osiSem osiThread messages
    Changes for WIN32 build.
    changes for 3.14
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Make it get initialized the first time any routine is called
    updated dll keywords
     move errhash defs. Add modules to Makefiles
    API changes and include with  not <>
    use strerror() to get err string since it is portable
    Fixed some casts
    MS Visual C defines sys_errlist in stdlib.h
    Made changes so that it doesnt call dbCalloc
    dont return (and leak memory)
    Ansi c changes
    Forgot to remove mprintf.h
    Clean up errPrintf stuff
    bucketLib.c - added LOCAL as required
    ellLib.c - added missing stdio.h
    envSubr.c - use getenv/putenv under vxWorks
    errSymLib.c - call mprintf() and not printf or logMsg()
                    (eliminated errToLogMsg variable)
    genSubr.c - silenced DEC CC warning
    tsSubr.c - fixed ts min west out of range test & VMS changes
    Channel Access changes from Jeff Hill.
    Added various Casts to stop compiler warnings.
    Fixed bug that caused message to be suppressed if status=0 and errno=0
    errors to log msg by default
    Call errSymBld if not initialized
    moved some files into new errSymLib.c
    put away working version
    added errSymTestPrint
    initial version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    error: errlog/errsym registration updates by Andrew
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: Replaced errlogRemoveListener()
    
    New version errlogRemoveListeners() is safer.
    libCom: Added errlogSetConsole() functionality.
    Fix gcc warnings.
    Cleanup.  Handle re-initialization during shutdown gracefully.
    Added an errlogInit2() routine to allow an enlarged maximum message size to be
    specified at initialization time.
    changed the name of cxxCompilerDependencies.h to compilerDependencies.h
    Move format-string checking conditional to cxxCompilerDependencies.
    Add gcc format-string checking.
    suppress extra console message from logMsg
    removed epicsShareAPIV
    Updated license comments.
    change errlogStop to errlogFlush
    add errlogStop; remove old sytle C function prototypes
    added missing argument to threadSuspend() and made errVerbose
    visible outside of WIN32 DLL
    use errVerbose for posix osiSem osiThread messages
    added private parm to errLogAddListner
    Put __STDC__ guard around errlogListener.
    minor changes
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    New errlog facility. Replaces old epicsPrintf stuff
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    perl 5.8 compatibility fix
    
    Many of our host machines are running perl 5.8.8 and throw an error for the possesive quantifiers in this regex.
    Support for the ++ and *+ possesive quantifiers wasn't added till perl 5.10 and the epics docs still say perl 5.8.1 is the requirement.
    They don't appear to be needed in this regex and removing them generated the same errSymTbl.c in my tests.
    Perl scripts use perl module for RELEASE dependencies
    error: errlog/errsym registration updates by Andrew
    Structural changes to create libcom module
    Structural changes to create core module
    dbUnitTest: Improve output slightly
    (M. Davidsaver): errnumlist was never initialized.
    Removed long-deprecated errSymFind routine.
    (M. Davidsaver): static keyword is part of C89,
    remove all uses and internal definitions of LOCAL macro
    Change #! line, perl is rarely in /usr/local nowadays.
    Updated license comments.
    more changes for iocCore port
    Added conditional #include "vxWorks.h" to the output file,
    needed for Tornado 2.0 building.
    added the capability to define subsystem code in
    the subsystem header file
    make first line #!/usr/bin/perl
    kay's perl branch
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    error: errlog/errsym registration updates by Andrew
    Structural changes to create libcom module
    Structural changes to create core module
    Updated license comments.
    fixed alignment problem when building share lib on VMS
     move errhash defs. Add modules to Makefiles
    moved static errhash to here
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    error: errlog/errsym registration updates by Andrew
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add errSymMsg() error message lookup
    
    Like errSymLookup() but always returns a static string.
    Remaining Revision-Id keywords in source
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    threadPool: Replaced errno.h status values with S_pool_* ones
    
    ETIMEDOUT is not provided on MinGW.
    libCom: Add routines for parsing strings into epicsTypes
    
    Adds new routines for converting numeric strings into the
    standard epicsInt8, epicsUInt8, epicsInt16, epicsUInt16,
    epicsInt32 and epicsUInt32 types, along with Long, ULong,
    Double and Float.  These all provide error checking and
    detection of extraneous characters.  The epicsScanDouble
    and epicsScanFloat routines originally in epicsStdlib.h
    are replaced by macros that call the epicsParse routine,
    and this also provides epicsScanLong and epicsScanULong
    to match.
    
    A test file is added to ensure conversions work properly
    and report appropriate errors.  This file also checks the
    native strtod() routine if not used to check whether the
    epicsStrtod() code is required on this platform.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    (M. Davidsaver): errnumlist was never initialized.
    Removed long-deprecated errSymFind routine.
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    More ANSI C conversion
    1) depricated errSymFind function because errSymLookup below provides a
    better interface
    2) added errSymLookup function with these improvements
    o  receive a buffer length from user and therefore never overwrite the users buffer
    o return void and always copy a string into the users buffer. If the error code cant
    be found then copy in a message with the error code's raw numbers in it.
    3) removed prototypes for nonexistent fuinctions from header file
    Updated license comments.
    use ANSI function prototype
    use errVerbose for posix osiSem osiThread messages
    New errlog facility. Replaces old epicsPrintf stuff
    updated dll keywords
    C++ compatibility
    API changes and include with  not <>
    removed M_dbCa
    add gddFfuncTable
    moved include files from base/include
    Added for old
    Remove EPICS Base submodules
    Move all under modules/libcom
    error: errlog/errsym registration updates by Andrew
    error: reduce error symbol table scope to local sources
    Structural changes to create libcom module
    Structural changes to create core module
    Replace epicsTimeERROR with specific error status values
    
    Introduced error status values for epicsTime routines.
    The epicsTimeERROR identifier no longer exists, so code that uses it will
    no longer compile (deliberately). Replace all uses of it with a specific
    error status value.
    threadPool: Replaced errno.h status values with S_pool_* ones
    
    ETIMEDOUT is not provided on MinGW.
    libCom: Add routines for parsing strings into epicsTypes
    
    Adds new routines for converting numeric strings into the
    standard epicsInt8, epicsUInt8, epicsInt16, epicsUInt16,
    epicsInt32 and epicsUInt32 types, along with Long, ULong,
    Double and Float.  These all provide error checking and
    detection of extraneous characters.  The epicsScanDouble
    and epicsScanFloat routines originally in epicsStdlib.h
    are replaced by macros that call the epicsParse routine,
    and this also provides epicsScanLong and epicsScanULong
    to match.
    
    A test file is added to ensure conversions work properly
    and report appropriate errors.  This file also checks the
    native strtod() routine if not used to check whether the
    epicsStrtod() code is required on this platform.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    iocshRegisterVariable() avoid spurious redefinition warning
    
    Compare the contents, not the container.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    iocsh: add usage messages
    Set argBuff->sval to NULL if arg is NULL
    Error case for NULL arg causing segfault in iocshPersistentString
    iocshFindVariable() safety
    iocshCmd() imply "on error break"
    iocsh more error handling
    
    sooo many ways to fail...
    iocsh handle redirect and similar early errors
    iocsh trap arg. parsing errors
    iocsh further on error
    
    Split Scope into iocshContext and iocshScope
    to separate per-thread and per-call state.
    Error handling is per-call.
    Fixed logic errors and added some prompts.
    iocsh allow setting of error code
    iocsh control error behavior
    iocsh catch exceptions
    libCom: iocshRegisterVariable() only warn on actual redefinition
    
    Avoid noise if simply called twice.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    rename iocshFind -> iocshFindCommand
    Added patch
    Changed function outputs to remove pointer to next function.
    more whitespace
    whitespace
    Added functions to allow access to what functions and variables the ioc shell has registered.
    Resolve additional cppcheck issues; fix iOS build
    Whitespace
    Eliminated @-sign echo disabling, replaced with ability to disable comment echoing with '#-'
    Updated iocsh to allow user to select that lines from included scripts not be echoed.
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    MAC_HANDLE's in iocshBody weren't being created with environment variables.
    Updated iocshBody to keep track of macro context to allow scoping of macro variables from iocshRun/Load
    iocshLoad now works as iocsh with no parameters
    Changed iocshLoadFile to iocshLoad and added iocshRun as the macro version of iocshCmd
    Reverted calls that didn't need to use macDefExpand to single parameter
    Returned iocshCmd to it's original function signature, added iocshLoadFile instead
    Whitespace changes snuck in due to editor
    Changing iocshCmd to idealized syntax
    cleanup iocsh
    Low-memory behaviour fixes.
    
    Fix unchecked buffer allocation in dbChannel.c
    Replace calls to epicsStrDup() with checked malloc() for
    things that happen often after iocInit.
    
    Michael Davidsaver pointed out this issue.
    Fixed iocsh stream redirection for several commands
    
    Eric provided the fixes to iocsh (empty commands would not reset
    redirected streams), I fixed various commands.
    libCom/iocsh: Ignore comment lines after macro expansion
    
    The handling of comment lines is only performed before macro
    expansion, thus lines with macros that expand to comment lines will
    not be correctly handled as comment lines.
    
    By chance this kind of worked sometimes because a "#" command that
    does nothing is internally added to the command registry to make it
    show up in the help output.  Relying on this is broken.  Furthermore,
    if the line starts with '#' followed by a non-separator character
    (e.g. "##", "#whatever", etc.) it will not work (i.e. it will produce
    a command-not-found error).
    
    This fix checks to see if the first character of the line after macro
    expansion is '#'.  If it is, it considers the line to be a comment.
    libCom/iocsh: Oops, allow NULL pathname.
    libCom/iocsh: Set IOCSH_STARTUP_SCRIPT env var.
    Don't use back-tick chars as open quotes, they aren't any more.
    Changes for shared library build using MinGW compiler on win32.
    Move static command structures to file scope, needed for vxWorks-x86 targets.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed warning.
    Fixed warnings for HP-UX.
    Clean up after failed redirect.
    Work around problem with iocsh redirection from within vxWorks scripts.
    Allow 'unsigned' integers.
    Don't require pdbbase if not linking iocshRegisterCommon commands.
    Moved static constructor call of iocshRegisterCommon() from iocsh.cpp into
    the output from the registerRecordDeviceDriver.pl script, so standalone
    sequencer programs don't import all of iocCore unnecessarily.
    Add os-independent epicsStrtod() routine.
    new #include
    Provide epicsStrGlobMatch().
    Add globbing to iocsh help command.
    Detect memory exhaustion.
    Treat \r as a separator -- should allow DOS-format scripts to work.
    Typo.
    Redirect special case.
    Handle
        <foo >bar
    properly.
    extern C except for registerObj
    Add iocshCmd command.
    General cleanup.
    Split help code into separate function.
    epicsThreadIsOkToBlock epicsThreadSetOkToBlock only for calling thread
    Ensure that redirection is off before attempting to read next line.
    Add 'ok-to-block' flag.
    Allow redirection from recursive iocsh invocations.
    Add I/O redirection.
    Echo comments read from a script.
    Added two new envParams and converted iocsh to use these instead of getenv()
    Clean up handling of redefinitions.
    Add *all* iocsh variables, not just the first.
    A tip of the hat to Mark Rivers for fixing this.
    fixed visual c++ 6.0 build
    Echo lines read from scripts after macro expansion has completed.
    Expand line *before* breaking into arguments.
        a) Much more efficient
        b) Allows expansion to multiple arguments.
    Fixed locking problem in new iocshRegisterVariable routine.
    Touch up previous fix.
    Declare proper linkage for varCallFunc().
    Add support for environment variable macro expansion.
    Add support for simple variable set/show.
    Add iocshArgPersistentString type.
    Allow run-time modification of prompt.
    must use fprintf(stdout not printf so that help works on vxWorks
    Change command-line input to allow CONFIG_SITE selection of libtecla,
    GNU readline, or built-in EPICS routines.
    Added command-line echoing when executing a script.
    Updated license comments.
    call errlogFlush before terminating
    make commandTableOnce a c program
    Fix for bitching HPUX 11 compiler
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    Clean up handling of `argv' style arguments.
    Clean up the help message for # comments.
    Add ioccrfArgArgv argument type to support functions which take an
    arbitrary number of arguments (e.g. show).  Clean up help display
    of argument desciptors containing spaces.
    Don't pass a truncated argument buffer array to a handler function.
    Provide help message about comment lines.
    changes for osiThread=>epicsThread
    Move readline support to src/libCom/osi/os/xxx/.
    The single source file is in src/libCom/osi/os/default/epicsReadline.c which
    uses the readline library routines or uses local code to read lines of input.
    Selection is made by src/libCom/osi/os/XXX/osdReadline.h.  The default
    version does not cause the readline library routines to be used.
    dont override description of putenv
    C++ STL does not work on Solaris or Windows so replace the calls to it with
    calls to the EPICS registry routines.
    Maintain a local linked list of commands for use by the help command.
    Make ioccrf argument lists constant.
    Add std namespace to ioccrf.cpp.
    Use an unnamed namespace instead of a static to provide a file-local scope.
    Change the registerRecordDeviceDriver.pl script to create
    registerRecordDeviceDriver.c as a C++ file (.cpp) so that it can
    use a static constructor to register the registerRecordDeviceDriver()
    command with the IOC shell
    Remove the old registerRecordDeviceDriverRegister.[ch] source files.
    Register more commands automatically from within ioccrf.cpp.
    Register common IOC shell commands automatically as part of ioccrf constructors.
    Big changes to ioccrf routines.
    1) Switched from using the registry to using a C++ map.  This provides
       an easy way to add...
    2) A help command.  With no arguments, this command prints a table of
       commands.  With arguments it prints a synopsis of the specified
       command(s).
    3) ioccrf() is now thread-safe with plans to add multiple remote
       access via telnet.  The value pointers have been removed from the
       argument structures and a pointer to an array of argument unions is
       passed to the registered callback routines.
    4) All command/argument configuration structures are now const.
    changed name
    fixed Tornado II build
    Convert iocccrf to take a single pathname argument.
    If the pathname is NULL, emit prompts and read from stdin.
    Use the last component of the pathname as the `filename' argument to showError.
    Get the prompt from the IOCSH_PS1 environment variable or use default "iocsh> ".
    Return 0 on success.  Print message and return -1 on failure (e.g. can't open file).
    If using readline, get history size from IOCSH_HISTSIZE environment variable.
    Add support for input redirection.
    Add some utility commands.
    if not all args given assume null or 0
    new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    iocshRegisterVariable() takes an array
    as-hostname address review comments
    use iocshSetError()
    iocsh epicsMutexShowAll accepts 2 arguments
    as,rsrv: use real client IP instead of untrusted host name
    add macro IOCSH_STATIC_FUNC to avoid '#ifdef vxWorks' in code
    add missing command line functions to vxWorks shell
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    iocsh: Protect echo and cd from NULL arguments
    libCom: Added echo command to iocsh
    Fixed iocsh stream redirection for several commands
    
    Eric provided the fixes to iocsh (empty commands would not reset
    redirected streams), I fixed various commands.
    Added support for iocLogPrefix
    
    Refactored logClientSend in libCom/logClient/logClient.c; took the code between the mutex operations and
    moved it to a private method - sendLogMessageinChunks. Call this method once for the prefix (if it exists) and once
    for the actual message.
    Added ioCsh registration code into src/libCom/iocsh/libComRegister.c registering a command called
    "iocLogPrefix" that sets this prefix.
    
    Unit tested with and without prefixes.
    Performance tested with and without prefixes - without prefix is approx the same. With prefix is about
    twice the time (reflecting the two calls to sendLogMessageinChunks I think)
    Rename 'thread' iocsh command to 'epicsThreadShow'.
    Added "errlog" command.
    Added registryDump command.
    General Time updates: Internal cleanup of framework code and providers,
    replaced the osdSysTime provider with a new osiClockTime provider,
    stringin device support puts record into alarm if no working provider,
    added osdTimeRegister() to RTEMS/osdTime.h.
    Major reworking of the task watchdog implementation:
    * Added new monitoring API with insert and remove callbacks; the old API is
      still supported though.
    * Added report routine, callable from iocsh.
    * taskwdInsert() can take a NULL tid, meaning the calling thread.
    General Time, from Peter Denison, Eric Norum and many others...
    Make date() command available to all architectures.
    Allow the user to specify the date/time format string.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    move initHooks to libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsExportSharedSymbols for MinGW build
    
    Include files now in sorted order within each block.
    cleanup initHook
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    (M. Davidsaver): Use ELLLIST init macros.
    Added new initHook states for iocPause and iocRun commands.
    Added a mutex to protect the initHook.c routines.
    Added initHookName() function.
    Use epicsThreadOnce() for lazy init.
    Fixed/suppressed HP-UX (GNU) warnings
    Updated license comments.
    changes for building win32 dlls
    changes for creating DLLs
    changes for iocCore port
    changes for 3.14
    This is version described in 3.13beta11 App Dev Guide
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    Removed INITHOOKafterSetEnvParams
    First merge of db directory to get Build to work...
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    bug - moved call to setMasterTimeToSelf later
    changed completely
    changed return from void to long
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Fixed problems with #ifndef guards and include order.
    Updated license comments.
    create proper defs for dbcar
    add decorated names
    Changed author
    Extra useful routines. First is dbTranslateEscape
    Added so that individual files dont have to have long notice
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    ANSIfication of stuff (mostly missing argument types in declarations)
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Add registryChange function.
    Updated license comments.
    add decorated names for stupid win32
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add and document the macro IOCSHFUNCDEF_HAS_USAGE
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    iocsh: add usage messages
    doc
    deprecate iocshFindCommand()
    
    This function, and struct iocshFuncDef, expose
    internal details.  Specifically iocshCmdDef::func .
    Which prevents changing/extending the iocsh function
    signature.
    
    Deprecate in favor of iocshCmd() and iocshRun().
    iocsh allow setting of error code
    add macro IOCSH_STATIC_FUNC to avoid '#ifdef vxWorks' in code
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    rename iocshFind -> iocshFindCommand
    Changed function outputs to remove pointer to next function.
    whitespace
    Added functions to allow access to what functions and variables the ioc shell has registered.
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    Changed iocshLoadFile to iocshLoad and added iocshRun as the macro version of iocshCmd
    Returned iocshCmd to it's original function signature, added iocshLoadFile instead
    Whitespace changes snuck in due to editor
    Changing macEnvExpand to accomodate macro definitions
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Add function prototype with Windows decorations.
    Don't require pdbbase if not linking iocshRegisterCommon commands.
    remove vardefs; use variable definition instead
    for variable type is void * const
    Added iocshRegisterVariable
    Add support for simple variable set/show.
    Add iocshArgPersistentString type.
    Updated license comments.
    Change all instances of `ioccrf' to `iocsh' to reflect the added
    capabilities of the IOC shell routines.
    move initHooks to libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    db cleanup
    
    cleanup to allow database re-load
    ANSIfication of stuff (mostly missing argument types in declarations)
    Fix type of gphPvt pointer.
    Changes for shared library build using MinGW compiler on win32.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Add registryChange function.
    removed printf.
    Removed epicsShareAPI
    Updated license comments.
    osiFindGlobalSymbol change to epicsFindSymbol
    remove redundent def
    add decorated names for stupid win32
    new for 3.14
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    de-init hooks
    move initHooks to libCom
    Remove EPICS Base submodules
    Move all under modules/database
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    cleanup initHook
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added new initHook states for iocPause and iocRun commands.
    Added a mutex to protect the initHook.c routines.
    Added initHookName() function.
    Use epicsThreadOnce() for lazy init.
    Updated license comments.
    changes for PINI
    changes for creating DLLs
    replace osiClock calls with tsStamp calls
    changes for osiSem changes
    changes for 3.14
    This is version described in 3.13beta11 App Dev Guide
    Still working on 3.13.0.alpha3
    Changes for dynamic link modification
    moved includes; .ascii=> .db; path changes
    Channel Access changes from Jeff Hill.
    moved some files into new errSymLib.c
    put away working version
    cleanup
    initial version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    More Windows build fixes.
    Add some missing epicsShareClass decorations.
    
    Also set the gcc-4 visibility attribute in shareLib.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added virtual destructors (in most cases protected) to remove g++ warnings:
        'class ...' has virtual functions but non-virtual destructor
    changed fd_set array to a pointer so that application is
    independent of FD_SETSIZE
    move sleep quantum cache to proper place in the fdManager class
    move sleep quantum cache to proper place in the fdManager class
    added sleep quantum correction using epicsThreadSleepQuantum()
    optimized
    Updated license comments.
    reduced scope of constants
    make copy constructor and assignment oper private
    revert to using virtual destroy() to destroy timers
    delete timer via timer queue
    work around problems in the Tornado compiler
    non need to specify hash table size
    changed the api for creating timers to match new timer API
    fixed gnu warning
    fix file modified while installed in include
    osiTimer => epicsTimer
    osiTime=>epicsTime
    convert tabs to spaces
    avoid default template arguments
    added missing include file
    Shuffled things around a bit (HP aCC error fix)
    added fix for old versions of gnu
    converted const static data member to static member func for old gnu compilers
    o created tsStamp.h
    o include tsStamp.h into tsDefs.h
    o use assert() instead of C++ exceptions on certain os
    allow the timer queue to be specified
    made node interface public in fdReg
    index bit width functions in fd id were changed to cinst data members
    updated to reflect resource table API changes
    removed inline keyword
    fixed inline is too big warning
    fixed spelling
    removed questionable inline
    removed warnings
    cleaned up pc port
    fixed WIN32 DLL symbol exports
    API changes and include with  not <>
    fixed several subtle bugs
    added hashed fd to fdi convert
    dfMgr =>fdManager
    fixed delete this confusion
    add fdMgr.h fdMgr.cc
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    More ANSI C conversion
    Updated license comments.
    changes for osiThread=>epicsThread
    remove include for osiSem.h
    tip toe around sun pro compiler bug
    removed def of fdctx as a stuct (now a void)
    more changes for iocCore port
    cosmetic
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    removed warnings
    cleaned up pc port
    API changes and include with  not <>
    moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    HPUX: Remove all // X aCC comments
    
    These were added to suppress warnings from the HPUX compiler.
    new #include
    changed to call new idAssignAdd func
    added constants
    add template definition for resTable
    Updated license comments.
    avoid useless vc++ warning
    template instantiation
    removed template instantiations
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    turn of ms already instantiated warning
    use explicit template instantiation
    dont specify the default fd manager
    removed extraneous else
    Fixed HPUX warnings.
    revert to using virtual destroy() to destroy timers
    delete timer via timer queue
    non need to specify hash table size
    changed the api for creating timers to match new timer API
    and dont allow exceptions to be dissabled
    made compatible with timer library API changes
    fixed gnu warning
    osiTimer => epicsTimer
    osiTime=>epicsTime
    removed cast related warning
    use location exception
    include stdef.h
    still working gnuu warning
    fixed gnu warning
    fixed gnu warnings
    fixed gnu warnings
    tip toe around sun pro compiler bug
    GNU does not like "extern" in friend
    o created tsStamp.h
    o include tsStamp.h into tsDefs.h
    o use assert() instead of C++ exceptions on certain os
    first cut
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    quiet some warnings
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tv_sec casts to use time_t, not long
    Remaining Revision-Id keywords in source
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    More Windows build fixes.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleanup a couple of compiler warnings.
    o no need to allocate or initialize one more fd_set than is used
    (not a bug but messy)
    o added optimization where we only check as many registered fd's
    on the list as select tells us are active in its status
    o added code to clear all of the  fd_set if select returns an error
    (in practice this would not cause a bug other than some extra activity
    that would immediately self terminate when it clear the flag in the fd_set,
    and also we dont see the error message printed when select returns an error)
    fixed gnu warning
    changed fd_set array to a pointer so that application is
    independent of FD_SETSIZE
    moved the maximum number of file descriptors up to 4096
    convertSocketErrorToString => epicsSocketConvertErrnoToString
    thread safe socket error to string function
    move sleep quantum cache to proper place in the fdManager class
    added sleep quantum correction using epicsThreadSleepQuantum()
    optimized
    added constants
    changed tsDLIterBD to tsDLIter
    add template definition for resTable
    Updated license comments.
    removed template instantiations
    make copy constructor and assignment oper private
    Changes for HP-UX 11 - first semi-stable version
    turn of ms already instantiated warning
    use explicit template instantiation
    removed explicit template mechanism
    non need to specify hash table size
    made compatible with timer library API changes
    no need to check for nill
    osiTimer => epicsTimer
    fixed gnu warnings
    changed list interface
    osiTime=>epicsTime
    changes for osiThread=>epicsThread
    tabs converted to spaces
    cosmetic
    use different method for finding eol
    changed the name of bsdSock{Attach,Release}
    use location exception
    converted const static data member to static member func for old gnu compilers
    cleaned out osdSockResource
    osdSocketResource => osiSockResource
    new organization
    o created tsStamp.h
    o include tsStamp.h into tsDefs.h
    o use assert() instead of C++ exceptions on certain os
    allow the timer queue to be specified
    added comment
    improved the way that socket error numbers are converted to strings
    use epicsAssert.h
    bail out if select returns errors besides EINTR
    back out stringIdentifier class
    index bit width functions in fd id were changed to cinst data members
    updated to reflect resource table API changes
    fixed inline is too big warning
    lazy init sock lib when its a static build & recoverfrom select differences in winsock
    made hashing routine portable
    removed questionable inline
    removed warnings
    cleaned up pc port
    fixed warnings
    add ifdef for select call to support HP-UX
    fd_set cast in select for both Hp and Sun
    added int * cast in select for HP port compatibility
    fixed WIN32 DLL symbol exports
    API changes and include with  not <>
    fixed several subtle bugs
    added hashed fd to fdi convert
    dfMgr =>fdManager
    fixed delete this confusion
    use iter.remove()
    mark fd entry in limbo during delete
    add fdMgr.h fdMgr.cc
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Add extern C for all c headers
    
    This allow that these files could be imported to c++ correctly
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    thread pool: switch thread counts to unsigned int
    
    size_t is considered overly optimistic
    thread pool: handle failure to create worker
    
    epicsJobQueue() returns EAGAIN when the first worker
    can't be lazily created.
    
    Failure to create workers beyond the first is
    silently ignored.
    thread pool implementation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    threadPool: Replaced errno.h status values with S_pool_* ones
    
    ETIMEDOUT is not provided on MinGW.
    thread pool: don't use reserved names
    
    Avoid global symbols with leading underscore
    don't include errCommon.h
    
    doesn't exist anymore
    thread pool: mark epicsJobCreate() as safe for job functions
    
    Also, use epicsJobMove() to avoid some redundant code
    thread pool: fix return of epicsJobUnqueue()
    
    Return 0 on success (was queued, now is not),
    1 if not queued initially, and EINVAL
    if orphaned.
    thread pool: handle failure to create worker
    
    epicsJobQueue() returns EAGAIN when the first worker
    can't be lazily created.
    
    Failure to create workers beyond the first is
    silently ignored.
    thread pool: epicsJobQueue return EPERM
    
    When pool control prevents operation
    thread pool implementation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    threadPool: Replaced errno.h status values with S_pool_* ones
    
    ETIMEDOUT is not provided on MinGW.
    thread pool: don't use reserved names
    
    Avoid global symbols with leading underscore
    thread pool: switch thread counts to unsigned int
    
    size_t is considered overly optimistic
    don't include errCommon.h
    
    doesn't exist anymore
    thread pool: epicsThreadPoolWait return ETIMEOUT
    thread pool: handle failure to create worker
    
    epicsJobQueue() returns EAGAIN when the first worker
    can't be lazily created.
    
    Failure to create workers beyond the first is
    silently ignored.
    thread pool: epicsThreadPoolGetShared accepts NULL as defaults
    thread pool implementation
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    thread pool implementation
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    threadPool: Replaced errno.h status values with S_pool_* ones
    
    ETIMEDOUT is not provided on MinGW.
    thread pool: don't use reserved names
    
    Avoid global symbols with leading underscore
    thread pool: switch thread counts to unsigned int
    
    size_t is considered overly optimistic
    thread pool: mark epicsJobCreate() as safe for job functions
    
    Also, use epicsJobMove() to avoid some redundant code
    thread pool: epicsThreadPoolWait return ETIMEOUT
    thread pool: fix return of epicsJobUnqueue()
    
    Return 0 on success (was queued, now is not),
    1 if not queued initially, and EINVAL
    if orphaned.
    Thread pool API
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: valgrind track taskwd freelist
    Fixed iocsh stream redirection for several commands
    
    Eric provided the fixes to iocsh (empty commands would not reset
    redirected streams), I fixed various commands.
    Add an Init stat to all thread control variables
    
    This makes the uninitilized value not the Run state.
    (M. Davidsaver): Use ELLLIST init macros.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Fixed warnings on MinGW.
    Call cantProceed() if taskwd task fails to start.
    Major reworking of the task watchdog implementation:
    * Added new monitoring API with insert and remove callbacks; the old API is
      still supported though.
    * Added report routine, callable from iocsh.
    * taskwdInsert() can take a NULL tid, meaning the calling thread.
    Print thread names when reporting suspensions.
    add test for null tid
    Updated license comments.
    fix problems related to removing casts fro ellLib.h
    fixed gnu warning
    changes for osiThread=>epicsThread
    replace osiSem by epicsMutex/epiceEvent
    dont base priority on the server's priority
    changes in thread priorities
    add decoration to names
    use threadOnce; add lazy init
    dont import libCom symbols
    moved taskwd.c  taskwd.h from src/db to src/libCom/taskwd
    get rid of threadGetName
    semId => semBinaryId and semMutexId
    changes for osiSem changes
    changes for iocCore port
    changes for 3.14
    Fix include statements
    Made changes for ansi c
    ansi changes
    First merge of db directory to get Build to work...
    Changes in db for R3.12 LANL / ANL merge (except dbAccess.c)
    Now allows callback to call taskwdRemove
    changed from dll to ell
    replace lstLib with dllEpicsLib
    changes from mrk node
     Pre R3.4 changes
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Major reworking of the task watchdog implementation:
    * Added new monitoring API with insert and remove callbacks; the old API is
      still supported though.
    * Added report routine, callable from iocsh.
    * taskwdInsert() can take a NULL tid, meaning the calling thread.
    Updated license comments.
    changes for osiThread=>epicsThread
    add decoration to names
    use threadOnce; add lazy init
    fixed for C++
    define WIN32 DLL entry points
    taskwdInit() needs ANSI style func proto that specifies no args
    not any num of args
    moved taskwd.c  taskwd.h from src/db to src/libCom/taskwd
    changes for iocCore port
    changes for 3.14
    Fixed compiler warning messages
    moved includes; .ascii=> .db; path changes
    Channel Access changes from Jeff Hill.
    moved some files into new errSymLib.c
    put away working version
    cleanup
    initial version
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/calc: Added integer literals, which use less space in Postfix.
    
    Renamed LITERAL to LITERAL_DOUBLE and added LITERAL_INT.
    postfix() only uses LITERAL_INT if the results are identical.
    Adjusted INFIX_TO_POSTFIX_SIZE() macro to match.
    Cleaned up some other internal issues.
    Added VAL keyword to CALC parser and evaluator; evaluates to previous result.
    Major update, code reorganization and enhancement.
    Updated license comments.
    fixed type of inclusion used
    Move private definitions to postfixPvt.h
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Added aten2 function pre Nick Rees.
    Change so that 0 is INVALID_
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Use fabs() in calcPerform
    Remaining Revision-Id keywords in source
    Fix MSVC (de)-optimizer issue
    Fixed conversion overflows in tests
    
    Minor tidying-up, added comments about casting for bitwise operations.
    libCom/calc: fix bit31 bit manipulations
    libCom/calc: Use epics(U)Int32 for all integer calculations
       Adapted backport of 3.15 revision 12308
    libCom/calc: Support 0x literals as epicsUInt32
    
    Also use epicsInt32 for all integer calculations.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    libCom/calc: Added integer literals, which use less space in Postfix.
    
    Renamed LITERAL to LITERAL_DOUBLE and added LITERAL_INT.
    postfix() only uses LITERAL_INT if the results are identical.
    Adjusted INFIX_TO_POSTFIX_SIZE() macro to match.
    Cleaned up some other internal issues.
    Disable divide by zero warnings on MSVC when generating NAN and INF.
    Use those values rather than calculating them independently.
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Don't use fmod(), broken on vxWorks.
    Use long rather than int for integer calculations.
    Added variable argument functions, mostly by Benjamin Fransken.
    MIN, MAX, FINITE and ISINF can now take any number of arguments.
    Added VAL keyword to CALC parser and evaluator; evaluates to previous result.
    fixed win32 dll exports
    Fix up calc and calcout record and associated code to use the new features
    of postfix() and calcPerform().
    Major update, code reorganization and enhancement.
    Pick up OS-specific declarations.
    fixed DLL export
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    return -1 if result is nan
    MODULO bug (range was limited to short int) fixed.
    use ANSI function prototype
    changes for 3.14
    Move private definitions to postfixPvt.h
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Added aten2 function pre Nick Rees.
    Change so that 0 is INVALID_
    DLL keyword adjustments
    removed conflict >>>>>
    updated dll keywords
    Fix compiler warning messages
    API changes and include with  not <>
    Fixed END_STACK definition and fixed printf stmnt.
    Added LN and SQRT as synonyms for LOGE and SQR, respectively.
    Added NINT, nearest integer function.
    Modified handling of "-"  so operator can be either unary or binary.
    Change the locally defined and used random() function to local_random() to
    avoid collision with the standard math library's random() function.
    Must skip over constant when looking for COND_END,COND_ELS
    Cast on memcpy arg to get rid of warning message
    Channel Access changes from Jeff Hill.
    Added various Casts to stop compiler warnings.
    Added support for CONST_PI, CONST_D2R, and CONST_R2D
     Removed V5/V4 and EPICS_V2 conditionals.
    removed varargs.h
    made ANSI C compatible
    ANSI c changes
    flt pt constant string replaced with double in postfix expression
    jba     allowed floating pt constants in expression
    added MAX and MIN and multiple cond expressions
    added CEIL and FLOOR
     added ifdef vxWorks
    don't use FETCH_G ... for V2
    added headers and some fixes
    jba 3/21/91
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix postfix.h macro arg, document
    Fix postfix.h macro arg and document
    libCom/calc: Added integer literals, which use less space in Postfix.
    
    Renamed LITERAL to LITERAL_DOUBLE and added LITERAL_INT.
    postfix() only uses LITERAL_INT if the results are identical.
    Adjusted INFIX_TO_POSTFIX_SIZE() macro to match.
    Cleaned up some other internal issues.
    Fix up calc and calcout record and associated code to use the new features
    of postfix() and calcPerform().
    Major update, code reorganization and enhancement.
    Updated license comments.
    add extern for C callable routines
    add const in may places
    fixed type of inclusion used
    Move private stuff to another fil;e
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Added aten2 function pre Nick Rees.
    Change so that 0 is INVALID_
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fixed conversion overflows in tests
    
    Minor tidying-up, added comments about casting for bitwise operations.
    libCom/calc: Use epics(U)Int32 for all integer calculations
       Adapted backport of 3.15 revision 12308
    libCom: Clean up build warnings from Visual Studio.
    libCom: Accept hex literals in CALC expressions
    
    Code back-ported from the 3.15 branch.
    libCom/calc: Support 0x literals as epicsUInt32
    
    Also use epicsInt32 for all integer calculations.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    libCom/calc: Added integer literals, which use less space in Postfix.
    
    Renamed LITERAL to LITERAL_DOUBLE and added LITERAL_INT.
    postfix() only uses LITERAL_INT if the results are identical.
    Adjusted INFIX_TO_POSTFIX_SIZE() macro to match.
    Cleaned up some other internal issues.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Fix access to uninitialized memory.
    Added variable argument functions, mostly by Benjamin Fransken.
    MIN, MAX, FINITE and ISINF can now take any number of arguments.
    Fix issues when char is signed.
    Added VAL keyword to CALC parser and evaluator; evaluates to previous result.
    fixed win32 dll exports
    Major update, code reorganization and enhancement.
    Lower-case operands a thru l are never used, the infix buffer was already
    converted to upper-case.
    Fixed gcc warnings (NULL is a pointer, '\0' is a zero character).
    fixed DLL symbol export for windows
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    Fixed compiler warnings connected to missing char->int casts
    Updated license comments.
    add const in may places
    Fixed test stmnt errors in previous commit.
    Changed test order in while stmnts to prevent UMR problem. - Evans
    changes for 3.14
    Added == binary operator.
    get rid of some warning messages
    Move private definitions to postfixPvt.h
    cleaned up the DLL symbol export
    Made a large number of changes to epicsShareThings in libCom routines
    to get imports and exports straight on WIN32.  Not everything is fixed
    at this time.
    Added aten2 function pre Nick Rees.
    Change so that 0 is INVALID_
    DLL keyword adjustments
    fixed conflict >>>>>
    updated dll keywords
    Fix compiler warning messages
    API changes and include with  not <>
    Removed unused END_ELEMENTS definition.
    Added LN and SQRT as synonyms for LOGE and SQR, respectively.
    Added NINT, nearest integer function.
    Modified handling of "-"  so operator can be either unary or binary.
    Cast of memcpy arg to suppress warning message.
    Channel Access changes from Jeff Hill.
    Added support for CONST_PI, CONST_R2D, and CONST_D2R and conversion of infix exp to upper
    Changed seperator test to catch invalid commas
    Added test for extra close paren at end of expression
    removed varargs.h
    made ANSI C compatible
    bug fix
    initialized *ppostfix: needed when calc expr not defined
    flt pt constant string replaced with double in postfix expression
    allowed floating pt constants in expression
    added MAX and MIN and multiple cond expressions
    added CEIL and FLOOR
    added ifdef vxWorks
    added headers and some fixes
    jba 3/21/91
    m postfix.c
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/ring: add thread safe versions of ring buffers (using spinlocks)
    Fix epicsRingPointerGetSize()
    
    Definition name didn't match declaration.
    
    Fixes lp:1109785 reported by Martin Konrad.
    Fix race condition exposed by compilers with more agressive optimization.
    Add test procedure for epicsRingBytes.
    C style comments for C compilers
    Updated license comments.
    Added a private default constructor (to stop compiler-generated one)
    A bit of reformatting too.
    replace osiRing with epicsRingPointer
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/ring: add thread safe versions of ring buffers (using spinlocks)
    Fix epicsRingPointerGetSize()
    
    Definition name didn't match declaration.
    
    Fixes lp:1109785 reported by Martin Konrad.
    Updated license comments.
    Fixed HPUX warnings.
    replace osiRing with epicsRingPointer
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/ring: add thread safe versions of ring buffers (using spinlocks)
    simplify
    epicsRingBytes avoid cantProceed
    Block attempts to put more bytes than will fit.
    Prevent warnings -- test show that this still generates correct code.
    Fix race condition exposed by compilers with more agressive optimization.
    Add test procedure for epicsRingBytes.
    Updated license comments.
    epicsRingBytes replaces osiRing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/ring: add thread safe versions of ring buffers (using spinlocks)
    Updated license comments.
    epicsRingBytes replaces osiRing
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Move asHost to libCom/as
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    epicsStdioRedirect
    use const char
    Updated license comments.
    replace osiSem with epicsMutex and/or epicsEvent
    Added define for epicsExportSharedSymbols.
    implement asTrapWrite
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move asHost to libCom/as
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    use const char
    Updated license comments.
    implement asTrapWrite
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    asLib more string size...
    as-hostname address review comments
    as,rsrv: use real client IP instead of untrusted host name
    asLib add asInitMem()
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    asShutdown
    Move asHost to libCom/as
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    Reworked various hash tables, using the faster epicsStrHash() routines;
    added per-bucket locks to the PV Directory, needed for run-time alias creation;
    speed up gpHash lookups; improved the output of both Dump routines.
    Cleanup some of the more obscure gcc warnings.
    Improve error checking and messages from AS file parser.
    Added an asStrdup() routine.
    char => const char
    more changes for allowing FILE *fp for diagnostics
    Added versions of the dump routines that write to an arbitrary file
    pointer instead of stdout.
    use const char
    Updated license comments.
    add extern for C callable routines
    implement asTrapWrite
    better separation on code
    changes for building win32 dlls
    changes so that db doesnt depend on as; as on rec
    Moved asDbLib.h and asLib.h to src/include.
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    Moved include files from base/include
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    asLib minor
    asLib: osiSockAttach() for asCheckClientIP
    
    WIN32 needs osiSockAttach() prior to aToIPAddr()
    which can now happen during ACF parsing.
    asLib more string size...
    asLib one short
    asLib: asUseIP name lookup soft-fail
    as-hostname address review comments
    as,rsrv: use real client IP instead of untrusted host name
    asLib add asInitMem()
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    asShutdown
    Clean up build warnings from clang.
    Clean up some compiler warnings from gcc 4.6
    Merged epicsStdioRedirect.h into epicsStdio.h
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Move asHost to libCom/as
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    as: No need to limit CALC expression lengths.
    
    We allocate a new postfix buffer for each expression, so there is no
    need to limit the expression length, just allocate a buffer big enough
    for the expression given.
    Fix the macLib buffer overflow issue, Bug 551909.
    This is mostly Eric's patches, without the valend name change.
    Reworked various hash tables, using the faster epicsStrHash() routines;
    added per-bucket locks to the PV Directory, needed for run-time alias creation;
    speed up gpHash lookups; improved the output of both Dump routines.
    Unlocking issue pointed out by Richard Dickson.
    Clean up quadratic string processing behaviour.
    Lowercase the new hostname in asChangeClient()
    Ensure result of previous rule calc evaluation is available for VAL.
    Cleanup some of the more obscure gcc warnings.
    Fixed problem saving hostnames in HAG.
    Use the same TRUE/FALSE test in the dump routines as in the actual rule
    evaluation, in case the results are different.
    Cosmetic changes.
    Oops, currected *Strdup routines.
    Added an asStrdup() routine.
    epicsStdioRedirect
    args were in wrong order
    char => const char
    more changes for allowing FILE *fp for diagnostics
    Added versions of the dump routines that write to an arbitrary file
    pointer instead of stdout.
    fixed errMessage fmt string
    convert hostnames to lower case
    convert host name to lower case
    Updated license comments.
    changes for osiThread=>epicsThread
    replace osiSem with epicsMutex and/or epicsEvent
    implement asTrapWrite
    use threadOnce
    changes for building win32 dlls
    more changes for creating dlls
    change errMdef to errlog
    semId => semBinaryId and semMutexId
    changes for osiSem changes
    added keywords from shareLib.h
    changes for 3.14
    introduced a bug with last bug fixes
    asLib_lex.l changed to allow more characters(like dbLoadxxx)
    Fixed bug that could cause deadlock when an ASG field is changed at run time.
    Added compiler specific key words to set up shareable library (DLL) for WIN32
    Get rid of warnimg messaage
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    included postfix.h
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    removed redundant prototypes
    Changes for replacing default.dctsdr bu all ascii files
    add include vxWorks.h
    Still Original version
    still original
    Still initil version
    Still original version
    make asActive extern
    Still version 0
    Still on initial implementation
    First working version
    So I dont loose everything I have done
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move asHost to libCom/as
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup some of the more obscure gcc warnings.
    Cosmetic changes.
    Improve error checking and messages from AS file parser.
    add copyright notice
    Remove tokenNAME, everything uses tokenSTRING instead.
    implement asTrapWrite
    changes for 3.14
    asLib_lex.l changed to allow more characters(like dbLoadxxx)
    Fixed bug that could cause deadlock when an ASG field is changed at run time.
    Fix problems that could cause crash when asInit called after iocInit
    Add macro substitution capability
    Still initil version
    Still original version
    Still version 0
    First working version
    So I dont loose everything I have done
    Initial revision
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix Windows builds
    
    The windows shell doesn't like commands that start ../
    Those commands are all found using TOOLS, so by making that
    an absolute path we fix that problem.
    However GNUmake doesn't recognize targets with relative paths
    as being the same as their absolute path, so we have to fix up
    some places that were using TOOLS in dependencies.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    libCom: One more essential dependency
    Parallel build rule fixes
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Replaced .o with $(OBJ).
    Fix dependencies.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    use const char
    asTrapWrite aslo belongs to LIB_SRCS
    fix for old config rules
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to automatically generate header file dependancies
    Changes to create vxWorks archive libraries and prods.
    Depends change.
    Modified depends rules
    Added dependancy for asLib.h.
    needs dependency
    implement asTrapWrite
    Added win32 resource files.
    fixed DLL keyword related problems
    link with the db library
    Updated dll libs.
    changes for building win32 dlls
    changes so that db doesnt depend on as; as on rec
    latest build rules
    Removed comment.
    changes for build
    Changes for dll build.
    ascheck_LIBS => PROD_LIBS
    Converted to new build method.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    Move asHost to libCom/as
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    RCS files now used for all cygwin and mingw builds.
    Reorganized iocsh command registration to untangle the build order.
    The iocsh core is now part of libCom, and commands are registered locally
    with a Register routine for each IOC library.
    Replaced .o with $(OBJ).
    Fix dependencies.
    Added COMPAT_313 macro for building/installing R3.13 compatability files.
    use const char
    asTrapWrite aslo belongs to LIB_SRCS
    fix for old config rules
    Changes for shared libraries and os consistancy.
    Updated license comments.
    Changes to automatically generate header file dependancies
    Changes to create vxWorks archive libraries and prods.
    Depends change.
    Modified depends rules
    Added dependancy for asLib.h.
    needs dependency
    implement asTrapWrite
    Added win32 resource files.
    fixed DLL keyword related problems
    link with the db library
    Updated dll libs.
    changes for building win32 dlls
    changes so that db doesnt depend on as; as on rec
    latest build rules
    Removed comment.
    changes for build
    Changes for dll build.
    ascheck_LIBS => PROD_LIBS
    Converted to new build method.
    new way to build
    new way to build
    More Makefile changes for R3.14.
    changes for 3.14
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Move asHost to libCom/as
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Cleanup some of the more obscure gcc warnings.
    Improve error checking and messages from AS file parser.
    Use new xxStrdup() functions.
    Cleanup compiler warnings due to our using 8-bit lexers.
    add copyright notice
    Remove tokenNAME, everything uses tokenSTRING instead.
    asLib_lex.l changed to allow more characters(like dbLoadxxx)
    Fixed bug that could cause deadlock when an ASG field is changed at run time.
    1) Fixed bug that caused asRegisterClientCallback to fail on UNIX
    2) asLib_lex.l changed to allow more characters(like dbLoadxxx)
    fix compiler warning messages
    If asSetFilename is given NULL argument then next call to asInit turns off access security.
    Allow character '-' in pvnames.
    Allow pvnames to contain ;
    Still initil version
    Still version 0
    First working version
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    envDefs: add envGetBoolConfigParam
    Merged epicsStdioRedirect.h into epicsStdio.h
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Cleaned up dbDefs.h and errMdef.h
    Added various #include lines needed in other sources.
    ANSIfication of stuff (mostly missing argument types in declarations)
    fix dll exports
    Use epicsScanFloat/epicsScanDouble rather than sscanf.
    This allows proper handling of Nan/Inf on all architectures.
    allow epicsStdioRedirect
    fixed DLL export
    dont include osiSock.h from the envDefs.h header file
    Updated license comments.
    fuixed warning messages
    remove EPICS_TS_MIN_WEST add EPICS_TIMEZONE
    Create os-specific versions of routines to set and
    display environment variables.
    remove def for putenv; failed on solaris 8
    add epicsPrtEnvParams
    added port config fetch
    fixed gnu warnings
    cleaned out osdSockResource
    osdSocketResource => osiSockResource
    more changes for iocCore port
    changes for 3.14
    use aToIPAddr
    cleaned up the DLL symbol export
    fixed WIN32 DLL symbol exports
    API changes and include with  not <>
    installed WIN32/Makefile.Host
    added envParamIsEmpty()
    added epicsShareAPI
    FIxed strlen test.
    fixed bug occuring when diagnostic is printed and the env var cant be found
    ms windows changes
    Removed epicsSetEnvParams
    added return to print func
    Added CONFIG_SITE_ENV, changed envData to .c file
    Moved environment parameter defaults to config/CONFIG_ENV
    NT changes
    bucketLib.c - added LOCAL as required
    ellLib.c - added missing stdio.h
    envSubr.c - use getenv/putenv under vxWorks
    errSymLib.c - call mprintf() and not printf or logMsg()
                    (eliminated errToLogMsg variable)
    genSubr.c - silenced DEC CC warning
    tsSubr.c - fixed ts min west out of range test & VMS changes
    Moved code for src/misc/epicsEnvParams to envSubr
    change Integer to Long, Real to Double
    config get for long, double, and inet addr types added
    Initial revision
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    libCom: actually use libComAPI.h in libCom
    Unify doxygen keywords to use '\' not '@'
    Applied all doxy-libcom changes to latest headers
    Remove two long-unused environment parameters
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add EPICS_IOC_IGNORE_SERVERS environment variable
    
    dbServers cannot be registered when their names appear in this
    variable, so they should remain inactive. This feature is mainly
    intended for debugging, so the crude name search should be OK.
    EPICS_CA_AUTO_MAX_ARRAY_BYTES -> EPICS_CA_AUTO_ARRAY_BYTES
    add EPICS_CA_MCAST_TTL
    
    may be necessary/helpful for mcast search/beacon usage
    across sub-nets.
    replace caLimitArray with EPICS_CA_AUTO_MAX_ARRAY_BYTES
    Remaining Revision-Id keywords in source
    More build parameters.
    
    Renamed EPICS_TARGET_ARCH to EPICS_BUILD_TARGET_ARCH
    Added EPICS_BUILD_OS_CLASS and EPICS_BUILD_COMPILER_CLASS
    Add EPICS_TARGET_ARCH parameter
    
    Set its default value automatically in the generated envData.c
    envDefs: add envGetBoolConfigParam
    libCom: epicsReadline refactoring
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Merged Codeathon 2008 changes (10292..10293 on cvs-trunk branch).
     * Fixed conflicts until base compiles
     * COMPLETELY UNTESTED
    Expand READONLY macro, deprecate.
    o added config via EPICS_CA_MAX_SEARCH_PERIOD
    Added two new envParams and converted iocsh to use these instead of getenv()
    Tidy up, fixed problem in Bug #76.
    dont include osiSock.h from the envDefs.h header file
    added EPICS_CAS_IGNORE_ADDR_LIST
    use const for string arguments that are not modified
    updated to support independent configuration of certain server parameters
    Updated license comments.
    remove EPICS_TS_MIN_WEST add EPICS_TIMEZONE
    added new env var
    Make epicsEnvShow work when called from vxWorks shell or iocsh.
    Limits operation to a single argument.
    remove old style c function prototypes
    Create os-specific versions of routines to set and
    display environment variables.
    add epicsPrtEnvParams
    added port config fetch
    more changes for iocCore port
    use READONLY for const so that pre-ANSI C extensions will compile
    updated dll keywords
    fixed WIN32 DLL symbol exports
    API changes and include with  not <>
    added cas env var
    added epicsShareAPI
    added IOC_LOG_FILE_COMMAND
    moved include files from base/include
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/libcom
    Fix envData.c rule for separate module configurations
    Add missing dependency
    Install bldEnvData.pl and libcomModuleDirs.pm
    
    Fixes last night's breakage.
    
    Installation is needed so bldEnvData.pl can find libcomModuleDirs.pm
    and hence the EPICS::Path and EPICS::Release modules while doing
    cross-builds. We'll need it to be installed eventually anyway so
    support modules can add their own environment parameters.
    Don't install libcomModuleDirs.pm
    
    It's only needed by bldEnvData.pl which is never installed.
    Make it a dependency so it gets built, and use it from O.<host>
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create libcom module
    Structural changes to create core module
    More build parameters.
    
    Renamed EPICS_TARGET_ARCH to EPICS_BUILD_TARGET_ARCH
    Added EPICS_BUILD_OS_CLASS and EPICS_BUILD_COMPILER_CLASS
    Add EPICS_TARGET_ARCH parameter
    
    Set its default value automatically in the generated envData.c
    Fix podToHtml build issue on Windows
    libCom: Cleaned up bldEnvData.pl and makeEpicsVersion.pl
    
    Added a -q flag, and cleaned up and simplified the code.
    Added -h (help) options, and make more use of other modules.
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: actually use libComAPI.h in libCom
    further no need to search for perl modules under bin
    no need to search for perl modules under bin/
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/libcom
    Install bldEnvData.pl and libcomModuleDirs.pm
    
    Fixes last night's breakage.
    
    Installation is needed so bldEnvData.pl can find libcomModuleDirs.pm
    and hence the EPICS::Path and EPICS::Release modules while doing
    cross-builds. We'll need it to be installed eventually anyway so
    support modules can add their own environment parameters.
    Don't install libcomModuleDirs.pm
    
    It's only needed by bldEnvData.pl which is never installed.
    Make it a dependency so it gets built, and use it from O.<host>
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create libcom module
    Structural changes to create core module
    Perl script clean-up
    More build parameters.
    
    Renamed EPICS_TARGET_ARCH to EPICS_BUILD_TARGET_ARCH
    Added EPICS_BUILD_OS_CLASS and EPICS_BUILD_COMPILER_CLASS
    Add EPICS_TARGET_ARCH parameter
    
    Set its default value automatically in the generated envData.c
    Perl style fixes, document more Perl programs
    Fix bldEnvData.pl library search path
    
    It wasn't working when INSTALL_LOCATION is used.
    libCom: Cleaned up bldEnvData.pl and makeEpicsVersion.pl
    
    Added a -q flag, and cleaned up and simplified the code.
    Added -h (help) options, and make more use of other modules.
    Expand READONLY macro, deprecate.
    Fix problem introduced by Win32 fix, do it properly.
    Added chomp for win32 builds.
    Fix for Win32
    Tidy up, fixed problem in Bug #76.
    Updated license comments.
    Added code to remove trailing whitespace and carriage return.
    new organization
    more changes for iocCore port
    Changes for WIN32 build.
    use READONLY for const so that pre-ANSI C extensions will compile
    make first line #!/usr/bin/perl
    include shareLib.h
    updated dll keywords
    kay's perl branch
    drop unnecessary *ModuleDirs
    Remove EPICS Base submodules
    Move all under modules/libcom
    Install bldEnvData.pl and libcomModuleDirs.pm
    
    Fixes last night's breakage.
    
    Installation is needed so bldEnvData.pl can find libcomModuleDirs.pm
    and hence the EPICS::Path and EPICS::Release modules while doing
    cross-builds. We'll need it to be installed eventually anyway so
    support modules can add their own environment parameters.
    Perl scripts use perl module for RELEASE dependencies
    Structural changes to create libcom module
    Structural changes to create core module
    Made all clean rules single colon rules. Added CLEANS macro to list
    created files to be removed by "make clean" in O.<arch> directory.
    Replaced clean rule in Makefiles with a CLEANS definition.
    Fold antelope/flex and asHost into libCom
    
    Build lexer and parser from libCom/Makefile.
    Since libCom now includes asLib.c and asLib_lex.c we must build
    antelope and flex without linking them to Com.  This works because
    they only need epicsTempFile anyway.  However make doesn't like a
    subdirectory with the same name as a target object, so the antelope
    source directory is now called yacc.  The two main.c files were also
    renamed to avoid other build problems.
    
    Merge asHost into Com and remove mentions in CONFIG_BASE
    
    Lots of noise since SRCS must be renamed to Com_SRCS
    libCom: Simplify libCom/Makefile by splitting into parts
    
    Each SRC_DIR gets its own Makefile fragment, and where it needs
    private build rules a RULES files.
    
    If this pattern gets used elsewhere we could automate the include
    lines (search $(SRC_DIRS) for Makefiles and RULES files?).
    Remove 3.13 compatibility build vars
    Updated license comments.
    changes for 3.14
    restructure; new Symb support
    Moved config dir to base/config.
    Makefile includes now from base/src/config, removed all soft links
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: ipAddrToAsciiTest skip cleanup unless valgrind is possible
    libCom/test: add ipAddrToAsciiTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fixes for Win32.
    Moved timing measurement of epicsThreadPrivateGet() to epicsThreadPerform.cpp
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    new #include
    Allow calls from RTEMS test harness.
    fixed sun pro warning
    Updated license comments.
    fixed extern C mismatch
    use a longer polling interval
    fixed test duration for slower machines
    fixed stack size bug
    use C++ API
    fixed gnu warning
    added new tests
    added thread private test
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Posix epicsEventWaitWithTimeout() max delay
    
    Limit timeouts on Posix to max-out at 10 years.
    Adds a test that will fail when that time-out hits Y2038 on
    systems where time_t is still a 32-bit integer.
    libCom/test: add roundtrip test for epicsTime from/to UTC struct tm conversion
    libCom: Fix epicsTime::strftime() roll-over bug
    
    Fractional seconds could round-up to .000 without
    incrementing the integer seconds.
    We can't actually do the latter, so we prevent the
    roll-over and clamp at all 9's instead.
    Idea from Eric Norum.
    oops, variable used to be unsigned; changed to signed constant
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    libCom: Fix VxWorks localtime_r() and gmtime_r() wrappers
    
    Wind River changed the return value between VxWorks 6.8 and 6.9.
    libCom/test: epicsTimeTest reworked a bit
    
    Report throw from first call to epicsTime::getCurrent().
    Reorganized test order so a bad time provider doesn't stop
    all tests from being run.  Also cleaned up a few extraneous
    variables.
    fixed various archaic sun pro build failures repoted by Dirk
    Make sure the EPICS epoch is 1990-01-01T00:00:00 UTC
    Fixed testPlan, added test for %% in strtfime format strings.
    fixed mantis 279 - epicsTimeToStrftime problem with %06f format
    Make it <cstddef> so it builds everywhere else.
    Fix for Borland build.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Cleanup.
    Converted some of the test routines to use the new epicsUnitTest facility.
    upgraded tests for mantis 245
    Also restored old wasteTime value
    restored "waste time" loop
    fixed gnu warning
    architecture independent manipulation of NTP stamps
    print test complete message
    added authors
    test epicsTime::show()
    added constants
    NTP timestamp test
    perform FILETIME conversions only on windows because
    monolithic win32 header files are incompatible with other
    things in EPICS and we cant include windows.h in osdTime.h
    added win32 filetime test
    Updated license comments.
    improved test
    added some strftime tests
    fixed to use const for begin and end
    made diff computations const
    made diff computations identical
    added parens
    osiTime=>epicsTime
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    WIN32: Add symbol lookup
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: remove test_debug from epicsStackTraceTest
    
    No one will look at this output unless the test fails,
    then more output is better.
     - renamed symbol that clashed on solaris
     - fixed illegal void* pointer arithmetic (by casting to char*)
     - call first epicsStackTraceRecurseGbl() through function pointer -- clang
       (darwin) had optimized it away.
     - added test case for library symbols
     - replaced TABs by spaces
     - replaced TABs by four blanks
     - indentation
     - added unit test for epicsStackTrace
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Make epicsExit subsystem reusable.
    
    Calling epicsAtExit() after epicsExitCallAtExits() now
    recreates the per-process list and registers the routine.
    Thread name may not be available during termination.
    installed epics thread exit capabilities
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Let epicsExitTest work on systems with strict priority scheduling.
    This commit was manufactured by cvs2svn to create branch 'B3.14'.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Converted some of the test routines to use the new epicsUnitTest facility.
    Treat RTEMS like vxWorks.
    Added a success message (Bug#30).
    Updated license comments.
    Added epicsAlgorithmTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    workaround apparent MSVC mis-optimization
    
    MSVC appears to misapply the identity
    "A + -A == 0" which is not true for
    non-finite floating point values.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Mark windows-x64 Math failures as TODO
    Improve code readablity, add more numeric tests.
    Added epicsNAN and epicsINF to libCom/osi
    Added more tests on inf and nan (MS compiler fails these).
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Converted some of the test routines to use the new epicsUnitTest facility.
    let test return int so vxWorks doesnt report error
    Updated license comments.
    support isinf; epicsIsNAN=>isnan; add test for epicsMath
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    ANSIfication of stuff (mostly missing argument types in declarations)
    Oops, missed a few tests I'd added.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: Add epicsInlineTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/ellLib: make sort comparator args const pointers
    fixup comments
    test ellSortStable
    Make ellFree() a 1-argument macro, calls ellFree2() with free as freeFunc.
    Added ELLNODE_INIT and ELLLIST_INIT macros.
    ellLib changes: ANSIfication patch; moved test code out of ellLib.c into
    its own unit test program in libCom/test; changed ellFree() to take a
    function pointer for the free() routine, so it can be used on Windows;
    modified epicsExit and dbBkpt to use it and pass in the free routine.
    iocshTest start
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clean up some compiler warnings from gcc 4.6
    Moved timing measurement of epicsThreadPrivateGet() to epicsThreadPerform.cpp
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    add test for epicsThreadSetPriority
    better sleep quantum estimate
    fixed spelling
    Typo on displayed percentage.
    better sleep quantum estimator
    better sleep quantum estimator
    better sleep quantum estimator
    added sleep quantum correction using epicsThreadSleepQuantum()
    added epicsThreadIdGetSelf() performance test
    Updated license comments.
    fixed c++ loop index scope problem
    print error and error summary
    measure delay of zero
    fixed improper use of unsigned type
    added timeout and sleep delay tests
    changes for osiThread=>epicsThread
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: Add epicsInlineTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: fixup RTEMS tests to run clean
    Fix build warnings
    Add epicsScanLLong and epicsScanULLong macros and tests.
    libCom: Fix unsigned overflow limits in epicsParse*
    
    The strtoul() routine accepts negative numbers.  This fix
    ensures we handle them properly, and adds suitable tests.
    
    Also fix the test for 1e300, in case the compiler gives a
    slightly different literal constant than strtod() returns.
    Change the epicsParse APIs to return a units pointer.
    
    This lets us use epicsParseDouble() for scan rate parsing.
    
    Ensure the scanOnce thread is a higher priority than the fastest
    periodic scan thread, irrespective of how many threads there are.
    libCom: Add routines for parsing strings into epicsTypes
    
    Adds new routines for converting numeric strings into the
    standard epicsInt8, epicsUInt8, epicsInt16, epicsUInt16,
    epicsInt32 and epicsUInt32 types, along with Long, ULong,
    Double and Float.  These all provide error checking and
    detection of extraneous characters.  The epicsScanDouble
    and epicsScanFloat routines originally in epicsStdlib.h
    are replaced by macros that call the epicsParse routine,
    and this also provides epicsScanLong and epicsScanULong
    to match.
    
    A test file is added to ensure conversions work properly
    and report appropriate errors.  This file also checks the
    native strtod() routine if not used to check whether the
    epicsStrtod() code is required on this platform.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    test: fix include path for private header under src
    Structural changes to create libcom module
    Structural changes to create core module
    threadPool: Replaced errno.h status values with S_pool_* ones
    
    ETIMEDOUT is not provided on MinGW.
    thread pool: fix return of epicsJobUnqueue()
    
    Return 0 on success (was queued, now is not),
    1 if not queued initially, and EINVAL
    if orphaned.
    thread pool test
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: Add epicsInlineTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: epicsAtomic tests
    
    Added C++ template instances, so this code loads on
    a vxWorks 5.5.2 system.
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    o no longer need to define OSD_ATOMIC_GCC
    o removed function
    epicsAtomicTestAndSetUIntT
    o added new functions
    epicsAtomicSetPtrT
    epicsAtomicGetPtrT
    epicsAtomicCmpAndSwapUIntT
    epicsAtomicCmpAndSwapPtrT
    o changed msvc intrinsics to define memory fence
    o fixed mutex synchronized version so that its slow, but correct if the c++ compiler doesnt synchronized local scope static initialization
    o changed most of the set/get methods to use memory barriers instead of some other primitive
    o added additional tests
    redo change reversed by merge
    redo change reversed by merge
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris to test)
    o fixed darwin compile errors (I dont have access to darwin)
    o fixed compile errors in epicsAtomicOSD.h (I didnt have the proper version of solaris to test)
    o fixed darwin compile errors (I dont have access to darwin)
    fixed test names
    fixed test names
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    o added epicsAtomic implementation including compiler and os specific files
    o added functionality and performance testing
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Converted buckTest.c to use epicsTime.h instead of time.h
    
    This should finally resolve the build conflict between RTEMS-uc5282
    and Windows, and remove the build warning on vxWorks.
    unistd.h isnt available on windows, and doesnt appear to be required by this code?
    Add RTEMS R4.10 support
    use verify instead of assert (in tests)
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Converted some of the test routines to use the new epicsUnitTest facility.
    Updated license comments.
    use epicsAssert.h and proper form of include
    installed
    ca server installation
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve additional cppcheck issues; fix iOS build
    Reflect ring bytes changes.
    Fix race condition exposed by compilers with more agressive optimization.
    Add test procedure for epicsRingBytes.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Simplify epicsMessageQueueTest using joinable threads
    
    Fixes issues with thread shutdown
    Switch RTEMS to the default osdMessageQueue
    Move RTEMS test-skip to just the failing test
    Excuse RTEMS for failing tests...
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Check sender threads are starting
    Chasing Jenkins instability on Windows
    Attempt to fix Windows test failures
    
    epicsMessageQueue test wasn't printing the last test result.
    Reduce the duration of epicsMessageQueueTest to 60 seconds.
    More fixes for Cygwin builds.
    Clean up some warnings.
    Clean up some compiler warnings from gcc 4.6
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix for hang from Ron Sluiter.
    Ensure the last test actually completes and reports...
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Improve message.
    run test as thread
    Clarified output message for one of the tests.
    Don't let receiver printing mess up priority-based send checks.
    Improve priority-based send check messages.
    Add 'size' argument to all epicsMessageQueue receive routines.
    fixed sun pro warning
    Use C linkage.
    Get rid of 0-length queues.
    Clean up some messages.
    Add support for 0-length message queues.
    Create os-dependent message queue routines.
    changed random() to ANSI C's rand() for win32 portability
    Use modified API.
    Add epicsMessageQueue support.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix ringPointerTest thread priority issue on VxWorks
    
    Picked a priority somewhere in the middle and switch to
    that for the two test subroutines that care.
    libCom/test: fix ringPointerTest compile issues on vxWorks and MSVC
    
    Remove C GNU-isms
    1) mixing code/variable defs
    2) arithmetic on void*
    libCom/test: re-write ringPointerTest
    libCom/test: add test for thread safe (spinlocked) ringPointer buffer
    Resource allocation checks missing
    Fix race condition exposed by compilers with more agressive optimization.
    Add test procedure for epicsRingBytes.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Updated license comments.
    changes for osiThread=>epicsThread
    replace osiSem by epicsMutex/epiceEvent
    osi => epics name change  to accomodate aps
    remove include for osiSem.h
    replace osiRing with epicsRingPointer
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: add test for HST time zone
    
    Test US/Hawaii zone which does not observe daylight saving time.
    add epicsTimeZoneTest
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Improve epicsSockResolveTest tests.
    Fix epicsSockResolveTest, host is now a real TLD
    Windows: Fix static builds on MinGW
    
    Xiaoqiang Wang proposed some fixes that allow static builds on
    the MinGW targets to succeed. Some additional changes made to
    blockingSockTest.cpp also clean that up.
    libCom: Back-ported aToIPAddr fix from 3.15 branch.
    
    Cherry-picked 3.15 revno 12398 with some changes.
    libCom: aToIPAddr() finds numeric hostnames
    
    Hostnames that begin with one or more digits were not being looked up
    by name, causing problems at BNL.
    This commit also changes the vxWorks implementation of hostToIPAddr()
    to use inet_aton() instead of inet_addr().
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Don't leave dandling tasks.
    simplify output
    new test
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Run epicsThreadTest::testJoining with different priorities
    
    A problem in the VxWorks epicsThreadMustJoin() only occurs when
    the joining thread runs at a higher priority than its supervisor.
    Test that a join actually delays the parent
    Replace epicsThreadOptsDefaults() with EPICS_THREAD_OPTS_INIT
    
    The epicsThreadCreate() routines now interpose calls to
    epicsThreadGetStackSize() if an enum value is passed.
    More basic tests of epicsThreadMustJoin()
    more RTEMS join
    epicsThreadMustJoin() warn only on double self-join
    epicsThreadTest check explicit join
    
    Also remove all the sleeps to improve chances
    of catching some kind of race.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: epicsThreadTest cleanup
    libCom/osi: use epicsThreadGetCPUs implementation from thread-pool branch (posix, WIN32)
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    add test for epicsThreadSetPriority
    better sleep quantum estimate
    fixed spelling
    Typo on displayed percentage.
    better sleep quantum estimator
    better sleep quantum estimator
    better sleep quantum estimator
    added sleep quantum correction using epicsThreadSleepQuantum()
    added epicsThreadIdGetSelf() performance test
    Updated license comments.
    fixed c++ loop index scope problem
    print error and error summary
    measure delay of zero
    fixed improper use of unsigned type
    added timeout and sleep delay tests
    changes for osiThread=>epicsThread
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: Add epicsInlineTest
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    errlog in tests
    
    Take eltc(0) out of testPlan() and explicitly add it to those tests
    that should suppress expected errlog output.
    libCom/test: Various improvements.
    
    Made epicsThreadOnceTest more deterministic, replacing an
    epicsThreadSleep() with epicsEventMustWait(), and added a diagnostic
    message before running the thread recurse test.
    
    Eric added a series of checks to epicsEventTest.cpp which ensure that
    epicsEventSignal() only wakes one waiting thread.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Added libCom/test code for epicsThreadOnce() implementations.
    Also fixed subsystems that were not using epicsThreadOnce correctly.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    epicsEventTest: quiet WIN32 noise
    
    timeout for WaitForSingleObject() is known to be
    shorter than expected.
    Improve epicsEventTest delay checks
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve additional cppcheck issues; fix iOS build
    libCom/test: Various improvements.
    
    Made epicsThreadOnceTest more deterministic, replacing an
    epicsThreadSleep() with epicsEventMustWait(), and added a diagnostic
    message before running the thread recurse test.
    
    Eric added a series of checks to epicsEventTest.cpp which ensure that
    epicsEventSignal() only wakes one waiting thread.
    Fixed buffer overflow in thread name.
    Fixed epicsEventWaitWithTimeout(id, 0.0), added test.
    Added test using timeout = DBL_MAX.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Updated license comments.
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    fixed c++ loop index scope problem
    print error and error summary
    measure delay of zero
    fixed improper use of unsigned type
    added timeout and sleep delay tests
    Made producer and consumer routines extern "C" to stop SUNWspro warning.
    extern did not work
    changes for osiThread=>epicsThread
    replacements for osdSem
    replace osiRing with epicsRingPointer
    Add call to threadInit before starting tests.
    Change threadShow to threadShowAll.
    latest version of semBinary
    latest version of osiThread
    use errVerbose for posix osiSem osiThread messages
    semId => semMutexId and semBinaryId
    add tests; build new way
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    epicsErrlogTest.c improvements
    
    Instrument testEqInt() macro with caller's source line-number.
    Added another epicsEvent to wait for the listeners to run.
    Not guaranteed to fix all issues, but should be more reliable.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: errlog test more verbose
    epicsErrlogTest: Shorten output lines
    
    Shorten test output from long messages.
    libCom: Replaced errlogRemoveListener()
    
    New version errlogRemoveListeners() is safer.
    Clean up some compiler warnings reported by J. Lewis Muir.
    Fix source reorg issues from Windows
    
    * fix libCom exports for things which used to be built differently
    * logserver needs winsock
    * errlog prefix: fix warnings on win32
    * fix dll imports in ioc/db
    Added a couple of units tests for iocLogPrefix
    libCom: Fix msgbufGetNode() in errlog.c
    
    Systems that generate large numbers of errlog messages or have a slow
    message listener could overwrite older messages in the message buffer
    after the buffer wraps.  This also corrects and annotates the test
    code to describe what's being checked.
    libCom/test: Added Michael Davidsaver's unit tests for errlog
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: Make epicsUnitTestTest.plt more Perlish
    
    Use Perl's __DATA__ stream for the expected data string.
    Perl's Test::Simple library is not installed by default, use Test instead.
    Possible fix for Win32, CR+LF in lines output by unitTest code.
    Fixes for  make test  if '.' is not in $PATH.
    Oops, missed a few tests I'd added.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Various fixes
    
    * VxWorks 5.5.2 doesn't like C++-style variable declarations in C code
    * Older MS compiler doesn't have strto[u]ll
    * Wrote release note entry for iocshLoad command.
    tests all pass now.
    Adding scoping test, combining some aspects of macEnvTest to allow removal of that test.
    Updated macDefExpandTest to keep from dereferencing NULL
    epicsEnvSet clears macros before setting environment variable to ensure intuitive use of the function in nested iocsh calls. While adding this functionality, fixed a latent bug in macPutValue where if you tried to NULL a macro with the same name as an environment variable, you would go into an infinite loop.
    Tests changed to accomodate macDefExpand's different args
    macDefExpand test file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Resolve additional cppcheck issues; fix iOS build
    libCom/test: run epicsMutexTest loops a fixed number of times.
    
    Windows sometimes managed to run an extra loop before this change.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    fixed sun pro warning
    Change to a single unsigned i definition.
    implement fast mutex for posix; remove epicsMutexLockWithTimeout
    test recursive mutex delays
    Updated license comments.
    Changes for HP-UX 11 - first semi-stable version
    added try lock test
    use struct ptr for ID types because:
    o this is more type safe
    o this works better with source level debuggers
    fixed doc
    added performance test
    changes for osiThread=>epicsThread
    replacements for osdSem
    Add call to threadInit before starting tests.
    Change threadShow to threadShowAll.
    new implementation of semBinary
    use errVerbose for posix osiSem osiThread messages
    backout INLINE; add level argument to semXXXShow
    semId => semMutexId and semBinaryId
    add tests; build new way
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Revert "replace most internal getCurrent() -> getMonotonic()"
    
    This reverts commit 4f2228fb1d7527fb5ebc8b2d747c309f1dd7698d
    except for some test code.
    epicsTimerTest testImpreciseTiming()
    minor epicsTimerTest
    epicsTimerTest loosen test threshold
    debug epicsTimerTest
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Applied test-epicsTimerQueue-reference-counter.patch
    libCom/test: Losen the timer error threshold.
    
    Windows was consistently failing the fastest timer tests.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    use verify instead of assert (in tests)
    removed some epicsSingleton related code that isnt in use
    Fixes for Win32.
    Fixes for vxWorks: permit multiple runs, don't use assert().
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    less cpu intensive for soft float cpus
    less cpu intensive for soft float cpus
    new #include
    Guard against overzealous optimizers.
    Allow calls from RTEMS test harness.
    Relative (percent) error -> absolute; units -> SI
    fixed missing init
    added sleep quantum correction using epicsThreadSleepQuantum()
    better message
    removed free lists
    Updated license comments.
    avoid useless vc++ warning
    template instantiation
    use singleton class
    turn of ms already instantiated warning
    use explicit template instantiation
    revert to using virtual destroy() to destroy timers
    no need to save pointer to timer queue now
    delete timer via timer queue
    made compatible with timer library API changes
    fixed timer delay test
    new timer queue name
    upgraded locking
    changed class names
    changed interface for non-threaded timer queue and rearranged
    suffix order in names
    adjusted for name changes
    better units
    fixed bug in percent error calc
    fixed warning
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsTypes: Added epicsInt64 and epicsUInt64
    
    With size checks for them in epicsTypesTest.
    Also added static checks of type sizes there, since we can.
    libCom/test: Added epicsTypesTest, checks type sizes.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Missing include
    Fix MSC 2-digit-exponent in cvtFastTest.c
    libCom/test: cvtFastTest improve output
    Fix cvtFast and tests
    
    We might still want to change the actual behaviour though,
    see the FIXME comments.
    Implement 64-bit database field types.
    
    Incorporates major reworking of the dbConvert.c file.
    if the 64-bit stuff gets rejected most of that should
    get pulled in anyway.
    iocshTest start
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    iocshTest start
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Add progress marker.
    epicsMaxThreads is new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    errlog in tests
    
    Take eltc(0) out of testPlan() and explicitly add it to those tests
    that should suppress expected errlog output.
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix build issues on vxWorks.
    Major reworking of the task watchdog implementation:
    * Added new monitoring API with insert and remove callbacks; the old API is
      still supported though.
    * Added report routine, callable from iocsh.
    * taskwdInsert() can take a NULL tid, meaning the calling thread.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    libCom: test osdSockAddrReuse
    
    Ensure that epicsSocketEnableAddressReuseDuringTimeWaitState()
    and epicsSocketEnableAddressUseForDatagramFanout()
    have the desired effects.
    Fix osiSockTest on VxWorks
    osiSockTest test epicsSocketEnableAddressUseForDatagramFanout()
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Pull blockingSockTest.cpp from 3.15
    blockingSockTest: Undo member renames using m_ prefix
    
    Using the m_ prefix to denote class data members is dangerous in
    code that has to compile on VxWorks 5.5 (which 3.15 does) because
    the net/mbuf.h header contains the following macro definitions:
    
    #define m_next          mBlkHdr.mNext
    #define m_len           mBlkHdr.mLen
    #define m_data          mBlkHdr.mData
    #define m_type          mBlkHdr.mType
    #define m_flags         mBlkHdr.mFlags
    #define m_nextpkt       mBlkHdr.mNextPkt
    #define m_act           m_nextpkt
    #define m_pkthdr        mBlkPktHdr
    #define m_ext           pClBlk
    #define m_extBuf        m_ext->clNode.pClBuf
    #define m_extFreeRtn    m_ext->pClFreeRtn
    #define m_extSize       m_ext->clSize
    #define m_extRefCnt     m_ext->clRefCnt
    #define m_extArg1       m_ext->clFreeArg1
    #define m_extArg2       m_ext->clFreeArg2
    #define m_extArg3       m_ext->clFreeArg3
    #define  m_copy(m, o, l)        m_copym((m), (o), (l), M_DONTWAIT)
    #define  m_copym(m, o, l, w)    netMblkChainDup(_pNetDpool, (m), (o), (l), (w))
    #define  m_freem(m)             netMblkClChainFree(m)
    #define  m_free(m)              netMblkClFree(m)
    #define m_mbufs         mNum
    #define m_drops         mDrops
    #define m_wait          mWait
    #define m_drain         mDrain
    #define m_mtypes        mTypes
    
    While the names in the original change all appear to be safe, I
    don't want us to start using this convention because we will then
    have to police commits more closely or risk build failures in the
    future when someone who doesn't know about or remember the issue
    can't or doesn't try building their code against VxWorks 5.5.
    
    I don't particularly like the this-> convention to mark member
    names either, but until the VxWorks 5.5 support requirement goes
    away the m_ convention is worse. Another common convention of
    using a leading underscore is not safe either, those names are
    reserved for the C/C++ implementation.
    Windows: Fix static builds on MinGW
    
    Xiaoqiang Wang proposed some fixes that allow static builds on
    the MinGW targets to succeed. Some additional changes made to
    blockingSockTest.cpp also clean that up.
    libCom/test: Finish converting blockingSockTest to epicsUnitTest
    
    Don't call assert() from a test program,
    it stops the tests from running if the assert fails.
    o fixed compile errors in, and proper diagnostic from, casPVI.cc
    o suprressed some compile time warnings in bucketLib.c
    o cleaned up cxx templates README
    o removed use of tsMinMax from libCom in favor of the standard library
         (calls to  tsMinMax still exist in other components in base, but they are being removed)
    o removed sharable library export of certain private member functions from class fdManager
    o fixed aToIPAddr to correctly lookup all of the different IP addresses string types on all OS types
        independent of the OS interfae variations
    o removed use of inet_aton from vxWorks implementation of hostToIPAddr
       o this function is for converting a host name to an ip address _only_
       o the aToIPAddr wrapper is supposed to do the dotted ip ascii string to ip address structure
       conversion independent of OS spoecific interface variations, when it works correctly
    o fixed some spelling issues in comments
    o added additional optimizations for processors w/o floating point ALU to addNanoSec in epicsTime
    o removed tabs and junk comments from win32 osdProcess.c
    o moved PLL update in win32 osdTime.c from timer to a dedicated thread
    o added missing epicsExportShared symbols define to osiNTPTime.c
    o fixed server ctor should not modify arguments of its caller in blockingSockTest
    o removed sunpro specific ifdef nolomger needed from epicsTimeTest.cpp
    Make blockingSockTest use a free port number
    
    Instead of using the CA server port 5064 which is often
    in use, have the listening socket pick a free port.
    use verify instead of assert (in tests)
    =/== bug; not sure how this got through.
    Added virtual destructors (in most cases protected) to remove g++ warnings:
        'class ...' has virtual functions but non-virtual destructor
    Make test bail out if socket bind fails; usually there's a CAS running.
    socket related data structures should use socket byte swap
    Converted to use epicsUntiTest.h.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Allow calls from C test harnesses.
    instantiate server
    fixed gnu warnings
    new #include
    fixed sunpro warnings
    Fix some warnings on solaris-sparc.
    Patch from Jeff Hill, fixes a Tornado 2.2 build problem.
    fixed gnu compiler detected issues
    fixed missing ansi header
    use TCP circuits
    added socket unblock mechanism test
    added socket unblock mechanism test
    rearranged test order
    added socket unblock mechanism test
    added socket unblock mechanism test
    added socket unblock mechanism test
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Move macLib.pm and macLib.plt here
    
    Use @TOP@ in macLib.plt library path
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    workaround apparent MSVC mis-optimization
    
    MSVC appears to misapply the identity
    "A + -A == 0" which is not true for
    non-finite floating point values.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: epicsCalcTest use exact postifx buffers
    
    exposes INFIX_TO_POSTFIX_SIZE() bug
    Clean up unused code warnings from Clang
    Remaining Revision-Id keywords in source
    Test each bitwise cast individually for overflow
    Fixed conversion overflows in tests
    
    Minor tidying-up, added comments about casting for bitwise operations.
    libCom/test: add calc tests for bit31 operators (lp:1514520)
    More MS Windows-x64 test fixes
    Clean up build warnings from Darwin (clang).
    libCom/test: isinf() and isnan() want doubles
    
    This apparently becomes important in a newer GCC version.
    libCom: Accept hex literals in CALC expressions
    
    Code back-ported from the 3.15 branch.
    libCom/calc: Support 0x literals as epicsUInt32
    
    Also use epicsInt32 for all integer calculations.
    libCom/test: Add more tests of the CALC engine
    
    Some of the isnan(Inf) tests were failing on mingw.
    This change doesn't fix them, it adds related examples.
    libCom/test: Suppress g++ build warnings from epicsCalcTest
    
    Newer versions of gcc support #pragma GCC diagnostic
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    libCom/test: Enhanced epicsCalcTest.
    
    Added testArgs() function and tests, and more bad expression tests.
    Adjust test 66 so it doesn't fail if the gcc optimizer result gives -1 but
    glibc returns +1.  Both are correct, gcc is following a newer standard.
    Use epicsNAN and epicsINF.
    Don't use fmod(), broken on vxWorks.
    Use long rather than int for integer calculations.
    Added variable argument functions, mostly by Benjamin Fransken.
    MIN, MAX, FINITE and ISINF can now take any number of arguments.
    Fixed printing calc expressions with % chars in them.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Fix errors from MS compiler, which overloads pow() in C++.
    Oops, missed a few tests I'd added.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    replace most internal getCurrent() -> getMonotonic()
    
    every place where a time delta is computed, and then some.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    cvtFastPerform: Rename reserved member names, fix for vxWorks
    More cvtFastPerform changes
    
    Added a converter using std::streambuf (slow!)
    Pass buffer size to converters
    Added verbose flag and # numbers to measure
    Do the small number tests first
    Collate and report by precision
    Restructure cvtFastPerform, fix VxWorks build
    Fix cvtFast and tests
    
    We might still want to change the actual behaviour though,
    see the FIXME comments.
    Fix compiler warnings on linux-x86
    Clean up warnings from gcc 4.6.3
    cvtFastPerform measures performance, it doesn't do functional testing.
    * Cleaned up some warning messages in it on darwin
    * Removed it from the epicsRunLibComTests function.
    added "using namespace std"
    Add cvtFastPerform to test harness.
    test also numbers in -5 to 5 range
    added cvtFastPerfotm test
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    epicsLoadTest: avoid stdcall name mangling on WIN32
    epicsLoadTest: test expected failure
    add epicsLoadTest
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Remaining Revision-Id keywords in source
    Fix epicsStrnEscapedFromRaw() and epicsStrnRawFromEscaped()
    
    Major rewrites; the original epicsStrnRawFromEscaped() could read
    beyond the end of the input buffer if the input count ended in the
    middle of an octal or hex escape sequence. Zero termination did not
    always match the return count, and hex escapes were always 2 digits,
    contrary to the C standard.
    
    New versions don't use epicsSnprintf() or sscanf() for hex and octal
    conversions, so should be slightly faster.
    
    Added 81 new tests to check the above issues.
    Fix buffer overflow in epicsStrnRawFromEscaped
    
    lp:1388313
    libCom: Fix epicsString.h comparison functions
    
    The string comparison functions epicsStrCaseCmp() and
    epicsStrnCaseCmp() were returning incorrect results
    when the strings did not match.
    
    These functions now match their BSD equivalents, and
    have working tests to confirm their operation.
    add epicsStrnLen()
    
    Base currently requires only POSIX 2001 while
    strnlen() is part of POSIX 2008.
    libCom/test: epicsStrGlobMatch() tests
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    libCom/test/epicsStringTest: %Zd isn't portable.
    Added test code, fixed bug found in epicsStrnEscapedFromRawSize().
    ANSIfication of stuff (mostly missing argument types in declarations)
    Fixed gcc '0 flag' warnings.
    Added round-trip testing of char escapes.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Converted some of the test routines to use the new epicsUnitTest facility.
    += "done" - message (all tests should print something).
    Add epicsStrnCaseCmp().
    epicsStringTest is new
    Remove EPICS Base submodules
    Move all under modules/libcom
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix and test for macLib losing error status
    
    Problem found & diagnosed by Mark Rivers.
    Remaining Revision-Id keywords in source
    RCS keyword updates for Bazaar
    
    Replaced $Id$ and $Header$ keywords with $Revision-Id$
    Deleted $Log$ keywords and any log messages
    Fix the macLib buffer overflow issue, Bug 551909.
    This is mostly Eric's patches, without the valend name change.
    macLib cleanup, added support for scoped macros.
    New test program for regular macros as well as the environment variable tests.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: epicsMMIOTest missing test spec
    test epicsMMIO.h
    
    Check byte order swapping.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix tv_sec casts to use time_t, not long
    use verify instead of assert (in tests)
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    print test complete message
    Updated license comments.
    made compatible with time library API changes
    osiTime=>epicsTime
    remove include for cadef.h
    use  double not long double
    upgrade
    installed
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    add aslibtest
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add osiSockOptMcastLoop_t and osiSockTest
    libCom/test: add ipAddrToAsciiTest to testHarness
    Fix RTEMS build
    libCom/test: don't include epicsTimeZoneTest for vxWorks
    add epicsTimeZoneTest to libCom test harness
    Add epicsAtomicTest to epicsRunLibComTests
    Add testHarnessDone
    libCom/test: Add epicsInlineTest
    remove unneeded forward declaration
    remove macEnvExpandTest from epicsRunLibComTests.c
    Added macDefExpand tests to libCom Test Harness
    epicsSpinTest: add to libCom test harness
    libCom/test: Added epicsEnvTest.c
    
    VxWorks 6.x can make environment variables private to each
    thread, which doesn't work too well.
    A test failure on VxWorks explains how to change the image
    configuration to fix this.
    test epicsMMIO.h
    
    Check byte order swapping.
    libCom: Back-ported aToIPAddr fix from 3.15 branch.
    
    Cherry-picked 3.15 revno 12398 with some changes.
    libCom: aToIPAddr() finds numeric hostnames
    
    Hostnames that begin with one or more digits were not being looked up
    by name, causing problems at BNL.
    This commit also changes the vxWorks implementation of hostToIPAddr()
    to use inet_aton() instead of inet_addr().
    libCom: Add routines for parsing strings into epicsTypes
    
    Adds new routines for converting numeric strings into the
    standard epicsInt8, epicsUInt8, epicsInt16, epicsUInt16,
    epicsInt32 and epicsUInt32 types, along with Long, ULong,
    Double and Float.  These all provide error checking and
    detection of extraneous characters.  The epicsScanDouble
    and epicsScanFloat routines originally in epicsStdlib.h
    are replaced by macros that call the epicsParse routine,
    and this also provides epicsScanLong and epicsScanULong
    to match.
    
    A test file is added to ensure conversions work properly
    and report appropriate errors.  This file also checks the
    native strtod() routine if not used to check whether the
    epicsStrtod() code is required on this platform.
    libCom/test: Added epicsTypesTest, checks type sizes.
    libCom/test: Added Michael Davidsaver's unit tests for errlog
    cvtFastPerform measures performance, it doesn't do functional testing.
    * Cleaned up some warning messages in it on darwin
    * Removed it from the epicsRunLibComTests function.
    Added libCom/test code for epicsThreadOnce() implementations.
    Also fixed subsystems that were not using epicsThreadOnce correctly.
    Add cvtFastPerform to test harness.
    Declare epicsEllTest before calling...
    ellLib changes: ANSIfication patch; moved test code out of ellLib.c into
    its own unit test program in libCom/test; changed ellFree() to take a
    function pointer for the free() routine, so it can be used on Windows;
    modified epicsExit and dbBkpt to use it and pass in the free routine.
    Fix race condition exposed by compilers with more agressive optimization.
    Add test procedure for epicsRingBytes.
    Added Unit Test Harness to summarize results on vxWorks/RTEMS.
    Added taskwdTest to tests run.
    macLib cleanup, added support for scoped macros.
    New test program for regular macros as well as the environment variable tests.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Exit properly.
    Add epicsExit test.
    Clean up some typos.
    Add test harness for RTEMS.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    epicsSpinTest: plug some leaks
    Fix epicsSpinTest.c spinThread tests
    
    Runs many more rounds, without blocking with the lock held.
    epicsSpinTest: fix verifyTryLock()
    
    avoid sleeping with a spinlock held.
    Now test only works on SMP systems.
    Final spinlock tidying-up
    
    * Abort epicsSpinTest() if epicsSpinCreate() returns NULL
    * Adjust RELEASE_NOTES that describe the implementations.
    Solaris & vxWorks 5.5.x fixes
    
    Remove C++-isms.
    Make internal routines static when duplicate names appear
    in the epicsMutexTest.cpp code; on vxWorks and RTEMS all
    test programs get linked into a single binary.
    libCom/osi: add tests for epicsSpin (based on epicsMutex tests)
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    stripped-down fix for 1816841 only
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Fix epicsStdioTest for MS 2015 compiler
    libCom/test: fixup RTEMS tests to run clean
    Merged epicsStdioRedirect.h into epicsStdio.h
    libCom/test: Add diagnostic to epicsStdioTest on vxWorks
    
    This test fails if the cwd is not writable, but on vxWorks the
    fault appears at the fclose() not the fopen() line. The code
    now detects this and tells the user what's probably wrong.
    Fixed 64 bit compiler warnings from Tom Palaia/MacOS.
    ANSIfication of stuff (mostly missing argument types in declarations)
    Don't fail if epicsSnprintf returns less than the buffer size needed.
    Fixed compiler warning.
    Windows runs more tests because it outputs 3 digit exponents.
    Fix tests and test plan to accommodate this.
    Major reorganization:
    Removed all Main.cpp files, use the macro in testMain.h instead and
    defaulted all argc/argv parameters.
    Converted all real test programs to use epicsUnitTest.h.
    Moved performance measurements from epicsThreadTest to epicsThreadPerform.
    Moved epicsOkToBlockTest tests into epicsThreadTest.
    On a host arch,  make test  inside the O.arch directory runs all tests.
    Don't test 0-length buffer case -- semantics differ for C99/Single-Unix.
    Add checks that redirection worked -- handy for systems like RTEMS
    where the file exists only in a in-memory filesystem.
    Converted some of the test routines to use the new epicsUnitTest facility.
    Work around problem with iocsh redirection from within vxWorks scripts.
    printf now overridden
    add test of epicsGetStdout/epicsPutStdout
    epicsStdio is new
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Clear RTEMS build warning
    
    shutdown is also a system identifier.
    Many tweaks to build on Windows.
    
    There might be some more to come since I'm not committing
    this from my Win32 system.
    libCom: Fixed issues with thread-hooks.
    Fix vxWorks build issues from thread-hooks merge.
    libCom/osi: Clean up epicsThreadHooks API
    - remove exit hooks completely
    - remove non-public functions fom header files
    - add test for epicsThreadMap
    - fix bugs in RTEMS and vxWorks implementation of epicsThreadMap
    libCom/test: Add test for epicsThreadHooks
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    as-hostname address review comments
    asLib: test asUseIP
    add aslibtest
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    Add cvtFastPerform to test harness.
    Fixed compiler warnings.
    Use new, simpler, RTEMS test harness.
    Use new configuration entries.
    More timing cleanups for RTEMS.
    Let epicsExitTest work on systems with strict priority scheduling.
    Exit properly.
    Add epicsExit test.
    Clean up some typos.
    Add test harness for RTEMS.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    iocshTest start
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    add epicsLoadTest
    WIN32: Add symbol lookup
    iocshTest start
    CROSS_COMPILER_RUNTEST_ARCHS for non-RTEMS
    nonEpicsThreadPriorityTest is Linux only
    Another hack to deal with RTEMS which is POSIX but still different
    stripped-down fix for 1816841 only
    avoided embedded TOP for non sub-modules
    epicsGetExecName WIN32, Darwin, solaris, freebsd
    add aslibtest
    Remove EPICS Base submodules
    Move all under modules/libcom
    Move macLib.pm and macLib.plt here
    
    Use @TOP@ in macLib.plt library path
    Structural changes to create database module
    Structural changes to create ca module
    Structural changes to create libcom module
    Structural changes to create core module
    Fixup Makefiles
    
    Adjust TOP and paths
    Stage 1 reorganization
    
    Directory moves.
    
      src/RTEMS/ => src/libCom/RTEMS/
      src/as/ => src/ioc/as/
      src/bpt/ => src/ioc/bpt/
      src/ca/ => src/ca/client/
      src/cap5/ => src/ca/client/perl/
      src/cas/ => src/ca/legacy/pcas/
      src/catools/ => src/ca/client/tools/
      src/db/ => src/ioc/db/
      src/dbStatic/ => src/ioc/dbStatic/
      src/dbtools/ => src/ioc/dbtemplate/
      src/dev/softDev/ => src/std/dev/
      src/dev/testDev/ => src/std/test/
      src/excas/ => src/ca/legacy/pcas/ex/
      src/gdd/ => src/ca/legacy/gdd/
      src/makeBaseApp/ => src/template/base/
      src/makeBaseExt/ => src/template/ext/
      src/misc/ => src/ioc/misc/
      src/rec/ => src/std/rec/
      src/registry/ => src/ioc/registry/
      src/rsrv/ => src/ioc/rsrv/
      src/softIoc/ => src/std/softIoc/
      src/toolsComm/ => src/libCom/tools/
    Remove 3.13 compatibility build vars
    Changes for GNU make -j option (multiple jobs).
    Updated license comments.
    Removed generic dir since it no longer contains a Makefile.
    for 3.14 only a single Makefile
    Moved config dir to base/config.
    fixed build
    Makefile includes now from base/src/config, removed all soft links
    ca server installation
    moved files from /base/include
    Changes for replacing default.dctsdr by all ascii files
    New file
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom/test: Added epicsEnvTest.c
    
    VxWorks 6.x can make environment variables private to each
    thread, which doesn't work too well.
    A test failure on VxWorks explains how to change the image
    configuration to fix this.
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    iocshTest start
    Remove EPICS Base submodules
    Update modules merged with 3.16
    Update all submodules to tagged versions
    Another libcom fix, for separate module builds.
    libcom dependency fix
    Update libcom with cross-build fix
    Fixes for sharing a build tree between Windows + Unix
    
    Rename modules/RELEASE.local to RELEASE.<host>.local
    Modify all submodule configure/RELEASE files to include that, and
    update the template configure/RELEASE file to match.
    
    Install Perl *ModuleDirs.pm files into bin/<host> since they contain
    absolute paths which may be different on different host arch's.
    Scripts that need a ModuleDirs module have been adjusted to look in
    their bin/<host> directory for it.
    
    Some additional submodule updates were also incorporated.
    Merged PR for libcom from Bruce Hill
    Submodule updates.
    Move tool configs into module cfg/CONFIG* files
    Update modules
    Update modules
    Update modules
    Update modules to latest
    
    This combination builds for Linux, RTEMS 4.10 and VxWorks 6.9
    Update submodules
    Update submodules
    Add submodules libcom ca database
    Added SPDX License ID to all EPICS-original source files
    
    In some cases the license-identification header was missing,
    so I added that as well. Replaced the remaining headers that
    specifically identified "Versions 3.13.7 and higher".
    
    Makefiles and the build system were deliberately excluded.
    CleanupWhitespace
    
    removed spaces at end of line
    
    replaced tabs with spaces
    Remove EPICS Base submodules
    Move all under modules/libcom
    Structural changes to create libcom module
    Structural changes to create core module
    libCom: add EPICS_FUNCTION
    
    Automatic macro which expands to the current function name.
    Useful in debug prints.
    libCom/test: fixup epicsAtomicTest
    
    Add testBasic to check basic op symantics.
    Add anon namespace to hide symbols other than MAIN(epicsAtomicTest).
    Replace using namespace with using for individual functions.
    For RTEMS skip the tests using threads as the use of
    RTEMS_NO_TIMESLICE prevents them from being meaningful
    Fix typo in epicsAtomicTest.cpp testClassify()
    epicsAtomicTest: include some information about build conditions
    
    Give some idea which implementations are being used
    libCom/test: epicsAtomic tests
    
    Added C++ template instances, so this code loads on
    a vxWorks 5.5.2 system.
    fixed 64 bit compiler warnings
    fixed vxWorks name for epicsAtomicTest
    o changed to more generic implementation to reduce the code size
    o changed name, OSD_ATOMIC_INLINE to EPICS_ATOMIC_INLINE
    o changed supported data types, unsigned removed and int added (per reveiw at codeathon)
    o added add/subtract functions (per reveiw at codeathon)
    o now presuming that __sync_synchronize available all gcc 4  mingw does not provide windows mem barrier)
    o consolodated on one implemention for Microsoft invarient of cmplr intrinisic or win32 by using macros to config a shared header file
    o improved doc in epicsAtomic.h
    o added overloaded c++ interface in namespace epics :: atomic to epicsAtomic.h
    o added epicsAtomicReadMemoryBarrier and epicsAtomicWriteMemoryBarrier interface to epicsAtomic.h
    o changed the implementation so that each of the functions can be individually specified for a particular compiler, os, or in the generic implementation (this is accomplished with macros)
    o modified the functional and performance test so that they are based on templates so we can easily support new data types
    o modified performance tests to repeat function calls and measure performance using a template
    Update version numbers for release
    make-tar add -v and -d arguments
    
    Add -d developer mode to permit export of
    branches and raw revisions.
    
    Switch to bash for builtin getopts
    Update the things to skip in make-tar.sh
    Fix make-tar.sh to work on MacOS too
    
    The BSD version of tar doesn't support -a, and
    requires -T instead of --files-from.
    make-tar.sh allow HEAD for testing
    rename .ci/make-tar.sh -> .tools/make-tar.sh
    Added tag checking to make-tar.sh
    
    Modified the default values for filename and tar prefix.
    Also allows omitting the leading 'R' from a tag-name, so it will not
    be included in the generated default filename and prefix values.
    The combination of these changes is that it is now possible to make a
    standard release tarfile just by running 'make-tar.sh 7.0.1.1'.
    Housekeeping in .ci
    
    Cleanup of make-tar.sh script
    Added new checkout-modules.sh script
    update make-tar.sh
    add make-tar.sh
    Set next development version
