    Update CHANGELOG.md
    Update CHANGELOG.md
    Update CHANGELOG.md
    Update CHANGELOG.md
    Updates changelog and Renderer start message for Bombshell development.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update CHANGELOG.md
    
    #1368 Adds snippet for debug visualizer.
    Update CHANGELOG.md
    
    Adds section for RajawaliSurfaceView and RajawaliTextureView
    Update CHANGELOG.md
    
    #1368 Adds information about the debug renderer.
    Update CHANGELOG.md
    Update CHANGELOG.md
    Update CHANGELOG.md
    
    #1368 Adds ETC2 and OpenGL ES 3 to changelog.
    Update CHANGELOG.md
    Update CHANGELOG.md
    Update CHANGELOG.md
    
    #1368 Adds changes for async loading.
    Update CHANGELOG.md
    
    #1368 Adds changes for new post processing framework.
    Update CHANGELOG.md
    
    #1368 Adds changes for lazy VBO creation.
    Update CHANGELOG.md
    
    #1368 Adds information about android studio, gradle, Travis CI and maven.
    Update CHANGELOG.md
    
    #1368 Adds changes for scene frame callbacks.
    Update CHANGELOG.md
    
    Adds new spirals.
    Updated change log
    Update CHANGELOG.md
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored FPSUpdateListener to OnFPSUpdateListener.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update the change log.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Typographical fixes to the change log.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update CHANGELOG.md
    
    Fixed a typo in the changelog and moved the Vector3 section up to go with related sections.
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated CHANGELOG.md to reflect the changes that were made to the curves classes.
    Updated README.md with some new links.
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Update CHANGELOG.md
    
    Added details for multiple cameras, scenes and added section for task queue.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    Slight wording change for the issue section title
    Added clause for 10-day limit for stale issues
    
    As per our discussion in the e-mail, I added the 10 day stale clause since this is the duration we all agreed on.
    Update CONTRIBUTING.md
    
    Fixed a minor grammar mistake and changed "will be closed" regarding posting in English to be slightly more friendly.
    Added guidelines for clear Markdown formatting and language requirements
    Fixed a grammatical typo
    Added guidelines for posting issues
    docs: Change verb tense of CONTRIBUTING guidelines
    docs: Add license info to CONTRIBUTING.md
    Create CONTRIBUTING.md
    Update README.md
    Fixed typos in README.md
    Update README.md
    
    Changed `compile` to `implementation` in instructions
    Update README.md
    
    Updated the badges
    fixed link to plugin tutorial
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md to include trending badge.
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    #628 Readme update.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    
    Updating for release.
    Update README.md
    Fixed typo in compile string
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Update README.md
    Changes name of build status badges.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Configures rajawali to use a development branch.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1385 Adds build status shield for master branch.
    Added AndroidLibs Shield
    Bug fixes.
    Added a link to a Vietnamese article about Rajawali
    Added a pledgie code. Lets see if this works.
    Update README.md
    
    Added Open GL ES 3.0
    Updated CHANGELOG.md to reflect the changes that were made to the curves classes.
    Updated README.md with some new links.
    Update README.md
    
    Line break for Vuforia links.
    Update README.md
    
    Added descriptive link names.
    Update README.md
    
    Minor formatting fix for hyperlinks on Vuforia section.
    Added a link to the Rajawali + Vuforia repository.
    Added methods to allow for integration with augmented reality fameworks. A Rajawali-Vuforia template will be pushed to Github soon.
    Added a link to the Rajawali Community on Google+ to README.md
    Update README.md
    
    Added a blurb about supporting 4.0+ now.
    Updated the tutorial list
    README: Linkified v0.9 tag reference
    Update README.md
    
    Added a note about our release changes until the website is available.
    Updated readme.md removed outdated screenshots
    Added a new tutorial to the list.
    Added new tutorial links
    Moved tutorials over from my blog to Github
    Added cleanup for plugins for onDestroy()
    Move "Made With" to Wiki
    Remove duplicate text in README
    Use library reference, not outdated download
    Shameless self-promotion
    Normalize line endings with .gitattributes
    Lots of bug fixes #114 #120
    
    Fixes a lot of issues that occurred when rebuilding the scene after the
    OpenGL context was lost.
    added video material tutorial to readme.md
    Updated example apps in readme.md
    Updated Documentation
    Added a new Rajawali app to readme.md: Het Journaal by Johan Cloetens
    Added a new tutorial to readme.md
    Texture bug on reload fix. (issues #39 #37 #34)
    Added a new tutorial to README.md: Rajawali Tutorial 23: Custom Vertex Shader
    The DirectionalLight is now a real DirectionalLight. Also added a PointLight. Fixed some shaders as well.
    Added new optimisation tutorial
    Added new tutorial to README.md
    Added MaskedMaterial.java - thanks to Joel Styles
    Added Batch rendering optimisation.
    Added new tutorials
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Added 3 new tutorials
    Added javadoc to ObjParser
    Added collision detection tutorial to readme.md
    Updated the zip file containing the binaries.
    Added new images and apps to readme.md
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Added link to the compiled files to readme.md
    Added MD2 animation tutorial to readme.md
    Added bum mapping tutorial link
    Added object picking tutorial to readme.md
    Added rotation to the camera
    Added a liquid cloud live wallpaper to the made with rajawali list
    Added a new tutorial to readme.md
    Added a link to the example app on the Android market.
    Updated the particle material. It now uses camera distance to determine size.
    Added Rajawali Tutorial 9: 2D Renderer to readme
    Shader changes
    Added new tutorial to readme.md, Rajawali Tutorial 7: Creating a Custom Material / GLSL Shader
    Added a new image to readme.md (screenshot of a game in progress)
    Testing commit
    Added tutorial 6: adding user interface elements
    Added Skybox, cube.
    Moved fov, near and far planes from renderer to camera class.
    Added a serializeToSDCard() method to Object3D
    Added tutorial 4 link
    Added license and readme files
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added license and readme files
    build wear-example
    Android Studio 3.2.1; api28
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Update ISSUE_TEMPLATE.md
    Update ISSUE_TEMPLATE.md
    
    Added more commentary for each issue item and removed banner message to simplify editing.
    Update ISSUE_TEMPLATE.md
    Create ISSUE_TEMPLATE.md
    Android Studio 3.6.2
    build setup wrapper
    
    To make gradle github action verify work
    Android Studio 3.5.0
    Android Studio 3.2.1; api28
    Updates build tools.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates gitignore and build tools.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    build setup wrapper
    
    To make gradle github action verify work
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    Completely reverts version number bump.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Artifact version number changes which were previously forgotten.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Re-adds build properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to get travis to build vuforia with local.properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates .travis.yml and gradle.properties for Rajawali Organization.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    added an unknown NDK location error message.
    #1637 Consolidated all build related versions to single gradle script
    #1625 Updated NDK path determination to use the android plugin.
    Adding changes to debug new ndk build process.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to get travis to build vuforia with local.properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates maven push script to repository root to allow for use by other modules.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Changes lint config to not abort on error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update Gradle plugin to 1.3.1.
    Update target and compile sdk to 23.
    Fix Travis config.
    Revert accidental build.gradle mucking commit
    Variable name cleanup, use doubles when appropriate and fix calculation
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1406 Cleaned up the gradle scripts and simplified the complexity for building local releases.
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects isTag method in gradle script.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master or tag.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Should be properly configured for maven now.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes version name parsing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates gradle build to handle all deployment activities.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Trying to get Travis CI to download support libraries.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes support library reference to v21.0.3.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1363 Updated build tools and sdk
    #1363 Updated build tools and sdk
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes example app package name and adds PIC flag to ndk build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    cleanup code
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    Completely reverts version number bump.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Artifact version number changes which were previously forgotten.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Re-adds build properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to get travis to build vuforia with local.properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates .travis.yml and gradle.properties for Rajawali Organization.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    update libraries
    fix tests
    Android X
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    #1637 Consolidated all build related versions to single gradle script
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates maven push script to repository root to allow for use by other modules.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Changes lint config to not abort on error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update Gradle plugin to 1.3.1.
    Update target and compile sdk to 23.
    Fix Travis config.
    Revert accidental build.gradle mucking commit
    Variable name cleanup, use doubles when appropriate and fix calculation
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1406 Cleaned up the gradle scripts and simplified the complexity for building local releases.
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects isTag method in gradle script.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master or tag.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Should be properly configured for maven now.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes version name parsing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates gradle build to handle all deployment activities.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Trying to get Travis CI to download support libraries.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes support library reference to v21.0.3.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1363 Updated build tools and sdk
    #1363 Updated build tools and sdk
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Real fix for #1620. The only place where thread safety of the renderer delegate matters is in the onSurfaceDestroyed method in which case we don't care about it anymore anyway. Rather than trying to synchronize calls, we simply ignore the exception.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1620 Adds a null check to onSurfaceDestroyed in SurfaceView and VRSurfaceView to deal with life cycle issues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for #1502
    Bug fixes in Object3D, RajawaliSurfaceView and LoaderAWD (z axis was inverted)
    Make sure we pick a suitable config (888) when background is transparent.
    - bugfix: TypedArray.get for custom styles takes attribute index, not
    array index
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds more configuration methods to IRajawaliSurface.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Bug fixes for view lifecycle.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - Adds XML attributes for frame rate and render mode to RajawaliSurfaceView and RajawaliTextureView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Refactors SurfaceView implementation slightly to allow for matching with TextureView needs.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Cleanup and documentation for step 1
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Step 1, fixes a few missing overrides/bad method names.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    update libraries
    Android X
    Converted to CircleCI for builds
    build wear-example
    Android Studio 3.2.1; api28
    #1637 Consolidated all build related versions to single gradle script
    #1636 Added wear examples to main examples
    Disabling predexing for wear examples during travis builds.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Temporarily removes link failure until lint issues are resolved.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes example app package name and adds PIC flag to ndk build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Attempting to disable pre dexing on travis builds for the examples, hoping this might help fix things based on https://github.com/travis-ci/travis-ci/issues/3695
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Updates build script for examples to declare java 7
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Changes lint config to not abort on error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Updates build tools in examples project.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1636 Added wear examples to main examples
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    build wear-example
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed the watchface service to actually rotate
    - This skips the actual bug that get and set for rot stopped working.
    #1636 Added wear examples to main examples
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Github CI actions
    Github CI actions
    Github CI actions
    solve action for Espresso, when they fail
    Github CI actions
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update basic_scene.md
    
    ```java
    private Sphere mEarthSphere;
    private DirectionalLight mDirectionalLight;
    
    public CustomRenderer(Context context) {
        super(context);
        this.context = context;  // superfluous and incorrect (snapshot 1.1.346) variable is now mContext and is set by the super class constructor
        setFrameRate(60);
    }
    ```
    Update basic_scene.md
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update home.md
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    actualize install readme
    Android Studio 3.2.1; api28
    Update installation_guide.md
    Update installation_guide.md
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial addition of documentation folder.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fix CircleCI
    attempt to fix CircleCI
    Update config.yml
    
    Trying again to just ignore git add output
    Update config.yml
    
    Ignore git add output
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    Changed to a Rajawali maintained docker image
    Update config.yml
    
    Re-enable builds for branches
    Add back basic code coverage
    Fix publishing
    Fix gh-pages config (for reals)
    Fix gh-pages config
    Converted to CircleCI for builds
    fix Java 8 bytcode
    
    The dependency contains Java 8 bytecode. Please enable desugaring
    update libraries
    Android X
    Converted to CircleCI for builds
    build wear-example
    Android Studio 3.2.1; api28
    #1637 Consolidated all build related versions to single gradle script
    #1636 Added wear examples to main examples
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes example app package name and adds PIC flag to ndk build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Attempting to disable pre dexing on travis builds for the examples, hoping this might help fix things based on https://github.com/travis-ci/travis-ci/issues/3695
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Updates build script for examples to declare java 7
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Changes lint config to not abort on error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Updates build tools in examples project.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1636 Added wear examples to main examples
    #1638 Split vuforia activity to variant manifest
    - Moved the vuforia specific activity to the variant manifest letting the plugin perform merge
    - Updated the activity names so they can be differentiated.
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Use Accelerometer Example
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1638 Split vuforia activity to variant manifest
    - Moved the vuforia specific activity to the variant manifest letting the plugin perform merge
    - Updated the activity names so they can be differentiated.
    #1627 Implemented a simple search
    - Search is based on String.contains() and lower case input and names.
    - Category name matches include all tests in the category
    - Zero length search results in all items returned
    - Single example result is opened when action done is selected
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Adds scene example which demonstrates adding and removing objects.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves color picking example appearance.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves color picking example appearance.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1570 Adds an example of using the Rajawali TextureView in a ScrollView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds scene example which demonstrates adding and removing objects.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    #1627 Implemented a simple search
    - Search is based on String.contains() and lower case input and names.
    - Category name matches include all tests in the category
    - Zero length search results in all items returned
    - Single example result is opened when action done is selected
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Implemented a simple search
    - Search is based on String.contains() and lower case input and names.
    - Category name matches include all tests in the category
    - Zero length search results in all items returned
    - Single example result is opened when action done is selected
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1579 Fixed post processing url
    - Fixed post processing, scenes, and vr_ar examples urls
    - Updated classes in application to use getters
    - Added package name override to categories as resolution to post processing name space
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Updates examples app to request permissions properly on M+ devices.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    cleanup code
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    fix lint warnings; code format
    #1627 Implemented a simple search
    - Search is based on String.contains() and lower case input and names.
    - Category name matches include all tests in the category
    - Zero length search results in all items returned
    - Single example result is opened when action done is selected
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Fixes unchecked cast.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1579 Fixed post processing url
    - Fixed post processing, scenes, and vr_ar examples urls
    - Updated classes in application to use getters
    - Added package name override to categories as resolution to post processing name space
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Corrects a crash for transparent surface view example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes #1640 Adds a method to OnObjectPickedListener which is called when no object was detected.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adding light to Touch & Drag to avoid looking like 2D circles
    Improving picking reliability in Touch & Drag
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1534 Ensures proper units between euler angles and quaternion relationships. Did not change the discrepancy between quaternion and Euler transform coordinate systems. This was a known issue and it has not been decided if this is intentional.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes #1640 Adds a method to OnObjectPickedListener which is called when no object was detected.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for color-picking of nested child objects
    
    - Object3D: corrected recursive call in renderColorPicking()!
    - Enhanced ObjectPicking example with a couple of simple containers to better detect regressions of child picking
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves color picking example appearance.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    shader cleanup
    functional point sprite example, could be simplified with the addition of
    a few point sprite related features in main library.
    
    addresses issue #2172
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Optimizes new buffer tracking to avoid per frame iteration.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes #1513. Task #1436. Adds coordinate axis trident. It can be scaled/positioned like any other object.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes #1561
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fix typo
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1718 Updates Add/Remove example to destroy children on removal.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds scene example which demonstrates adding and removing objects.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Corrects a crash for transparent surface view example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1570 Adds an example of using the Rajawali TextureView in a ScrollView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes #1561
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes #1813 - Video screen plane was facing the wrong direction after coordinate system fixes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    fix lint warnings; code format
    Modifies post processing manager and render passes to allow for automatic super sampling.
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixing a lifecycle crash as well as a memory leak in RenderToTextureFragment.java
    Android X
    fix typo
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix typo
    Improves wallpaper examples. Due to the preference I chose to demonstrate, the preview will not show changes. Changes in the settings within the examples app itself will update the wallpaper though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes live wallpaper example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    fix lint warnings; code format
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Android X
    Use Accelerometer Example
    fix lint warnings; code format
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1638 Removes launch intent filter from vuforia example
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1638 Split vuforia activity to variant manifest
    - Moved the vuforia specific activity to the variant manifest letting the plugin perform merge
    - Updated the activity names so they can be differentiated.
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    Fixes #1589. Corrects inlined API lint issues and reduces click accessibility issue to informational only
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1359 Cleared lint warnings
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    Revert "Changes version number to 1.2.0 to reflect API change."
    
    This reverts commit dd6e8881092cbf8187e6e75ed7692b0fd3428869.
    Changes version number to 1.2.0 to reflect API change.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Re-adds build properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates .travis.yml and gradle.properties for Rajawali Organization.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    fix tests
    update some more libs
    Android X
    TextureView Kotlin
    Add back basic code coverage
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    first pass of a ScreenQuad unit test fixture
    allowed junit to be compiled for local unit tests
    as well as for unit tests run on connected devices
    Attempting to fix signing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1637 Consolidated all build related versions to single gradle script
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates maven push script to repository root to allow for use by other modules.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Changes lint config to not abort on error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update Gradle plugin to 1.3.1.
    Update target and compile sdk to 23.
    Fix Travis config.
    Revert accidental build.gradle mucking commit
    Variable name cleanup, use doubles when appropriate and fix calculation
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1406 Cleaned up the gradle scripts and simplified the complexity for building local releases.
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects isTag method in gradle script.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master or tag.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Should be properly configured for maven now.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes version name parsing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates gradle build to handle all deployment activities.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Trying to get Travis CI to download support libraries.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes support library reference to v21.0.3.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1363 Updated build tools and sdk
    #1363 Updated build tools and sdk
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    fix lint warnings; code format
    make tests build
    getRotX(), getRotY(), and getRotZ() now return angles in Degrees,
    addresses the explicit issues raised in #2003
    but not the crossover issues with getRotX() and getRotZ()
    added getOrientation/setOrientation tests
    added Rotate and RotateAround tests
    added getScale/setScale and getLookAt/setLookAt tests
    first pass unit tests for ATransformable3D,
    which exhibits unexpected setRotX/getRotX and setRotZ/getRotZ behaviors.
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    fix lint warnings; code format
    make tests build
    added unit tests for Geometry3D and BoundingSphere
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    added unit tests for Geometry3D and BoundingSphere
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    verifies that given an invertable matrix:
      - a matrix times it's inverse equals the identity matrix
      - an inverse times it's matrix equals the identity matrix
    Corrects matrix multiplication error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Completes Vector3 and Matrix4 testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    testRotateBy() is now testing Vector3.rotateBy(),
    was previously testing Quaternion.multiply(Vector3)
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    first pass Frustum unit tests
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    make tests build
    added unit test for hexidecimal assignment
    added more assignment methods
    added string assignment checks
    x
    adding more assignment unit tests
    added unit tests for RVec2, RVec3, RVec4
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    added QuadraticBezierCurve tangent unit test
    unit test and fix for uninitialized tmp variables
    
    fixes issue #1926 Unexpected NullPointerException in QuadraticBezierCurve3D
    made the LinearBezier tests more obvious
    unit tests are more independent from Vector3
    unit tests for linear bezier curves
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    fix lint warnings; code format
    make tests build
    implements cubic bezier fix in a manner similar to quadratic curve fix
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    fix lint warnings; code format
    make tests build
    made the LinearBezier tests more obvious
    unit tests are more independent from Vector3
    unit tests for linear bezier curves
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    fix lint warnings; code format
    make tests build
    fixed package name
    added unit tests for ArrayUtils
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    fix lint warnings; code format
    make tests build
    corrected package name
    now correctly setting and scaling hitPoint
    
    addresses Unexpected Intersector.intersectRaySphere() behavior #1932
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for the new post processing framework. Not working yet.
    Playing with realtime non-photorealisting rendering (NPR) in Rajawali.
    Implemented a Sobel postprocessing filter, added a subtract mode to BlendPass,
    combined it all to create a simple OutlineEffect.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Finally found time to work on post processing! Depth buffer isn't enabled yet though. Also about to commit 4 examples to the examples app.
    This commit is sponsored by Aberlour Scottish Single Malt, 12 Years Old, Sherry Cask Matured. Slàinte mhath!
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Added ScanlinePass postprocessing effect.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Fix for issue #1796 unexpected behaviour from Vignette Pass
    Inner and Outer radii are now correctly derived from uRadius and uSmoothness
    Added VignettePass postprocessing effect.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - Adds XML attributes for frame rate and render mode to RajawaliSurfaceView and RajawaliTextureView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    cleanup code
    FIxes #1810
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Object3D now creates a bounding box if it has children
    fix for issue #1766 unexpected behaviour when repeatedly calling Geometry3D.addFromGeometry3D()
    
    setVertices() already had a boolean override, change adds a similar aility to
            setNormals()
            setTextureCoords()
            setColors()
            setIndices()
    #1761 Corrects compilation error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Augmented getFloatArrayFromBuffer() and getIntArrayFromBuffer() to
    return null when the input buffer is null.
    
    Augmented addFromGeometry3D() to test for null array values.
    Fixes #1718. Following the logic of #1610, this removes the automatic material removal when calling Object3D#destroy(). Additionally, prevents Geometry3D#destroy() from destroying any parent geometry which may still be in use by other objects.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Optimizes new buffer tracking to avoid per frame iteration.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added missing method to geometry3d
    Big fixes
    More Geometry3D updates and other bug fixes.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fix: when cloning object the boolean flag that indicates that only short index buffers are supported wasn't set. This causes issues on Samsung devices.
    Finished implementing most of the methods and reorganizing. Have some
    creation methods and multiplication methods to finish.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Fixed some code format issues in helper methods of Geometry3D.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cleanup and documentation of the method `Geometry3D#addFromGeometry(Number3D offset, Geometry3D geometry)`
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Removes overloaded `getArrayFromBuffer()` methods in Geometry3D in favor
    of more specific names to prevent confusion.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes a minor formatting issue for pull request #726.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Some minor cleanup.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #658.
    You can now add geometry to an existing geometry. It will be treated as
    contiguous to the existing geometry. When adding you can specify and
    offset.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for UnsuportedOperationException. Not sure if it is working though.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    First attempt at a solution for #658
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes issue #644.
    
    Needed to call buffer.rewind() prior to binding.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Revert "Revert "Also removes buffer util fix.""
    
    This reverts commit a1d746c00529ab67aab04f7e336a77b29e60dd24.
    Revert "Also removes buffer util fix."
    
    This reverts commit e3352a1637b9b288287c8bbff0b4a8a3582711d8.
    Also removes buffer util fix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Normalize line endings with .gitattributes
    Concurrency fixes
    Fix for issue #131
    Fixes #142 changeBufferData is now overloaded to be more robust in updating buffer data on the GPU. Change should be backwards compatiable with existing projects.
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Fix for issue #106 Very large optimisation: JNI floatbuffer put
    Fix for issue #105
    
    enable touch events in Wallpaper.java
    Geometry3D bug fix & replaced Matrix.invertM with a newer version
    Issue #68 cleaning up resources
    Issue #72 getNumTriangles()
    Documentation update
    MD2 fixes. Fixes issue #43
    Updated Documentation
    Issue #31 3DS parser.
    
    Still a work in progress, doesn't parse materials yet.
    Fixes for issue #34
    
    Cloned objects that used short buffers instead of int buffers threw an
    error when the opengl context was restored.
    Texture out of memory errors are also fixed. Added an extra check in
    AMaterial that prevents identical textureinfo objects being added.
    Fix for issue #33 serializer didn't take short buffers into account.
    orient to spline fix
    Added sphere map material
    Added touch ripple post processing filter
    Memory optimisation for materials. Removed the default material on all objects because this is an unnecessary step most of the time.
    Fix for Samsung Galaxy S2. This phone doesn't support integer index buffer, only short buffers.
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added 3 new tutorials
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Object picking sluggishness fix (issue #17)
    cloning BaseObject3D bug fix. See issue #14
    Added comments and changed visibility modifiers.
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Big update, performance optimisation using vertex buffers. Also re-worked the animation structure. Calculations have been moved to a vertex shader.
    Finished MD2 animation.
    MD2 parser almost complete.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    A few minor cleanup tweaks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Optimizes new buffer tracking to avoid per frame iteration.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Normalize line endings with .gitattributes
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Updated Documentation
    Updates documentation for WorldParameters.setWorldAxes to properly reflect that the vectors must be normalized.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1420 - Adds WorldParameters class with global axes and method to modify them.
    Object3D.getChildByName() now ignores children with no name
    Fix for issue #2139
    Android X
    Store original UV map when first calling Object.setAtlasTile()
    This allow the UV map to be restored on subsequent calls.
    
    adresses #2107
    Prevents call to parent.ensureModelMatrix in Object3D#ensureModelMatrix to avoid stack overflow explosion.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Revert "Corrects lifecycle bug with bounding box transformation."
    
    This reverts commit 63602d6ac52ebc478c29dcb0c9a1ff781e0e9f4a.
    Revert "Take 2 of corrects lifecycle bug with bounding box transformation."
    
    This reverts commit 42c061a205919542c70b777162799018438544e7.
    Take 2 of corrects lifecycle bug with bounding box transformation.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Corrects lifecycle bug with bounding box transformation.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Revision of bounding box position.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    fixed camera Z axis rotation issue
    Fixes #1014 #1596. Related #1618. Ensures that `Object3D.getWorldPosition()` works as expected, even before a first render.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    a minor object allocation efficiency change,
    instead of cloning, calling mInverseViewMatrix.setAll(vMatrix).inverse()
    made the InverseViewMatrix available to the Environmental Mapping Shader,
    and updated the shader to update the mapping with the camera position.
    Move depth test for color picking to per-object
    Addressing issue #1784 (part 2):
    - Adding debug log notice to Material.setModleMatrix() for IllegalStateException
    - Adding ATransformable3D.isZeroScale()
    - Adding isZeroScale() check at beginning of Object3D.render(), and skipping render if true
    - Adding both isDestroyed() and isZeroScale() checks to Object3D.renderColorPicking() to match render()
    Fixed BoundingBox construction when Object3D has vertices as well as children
    Object3D now creates a bounding box if it has children
    Fixes #1596. Fixes #1204. Note that this is a temporary fix that does not necessarily handle frame to frame changes properly. This will be addressed in the future.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1718. Following the logic of #1610, this removes the automatic material removal when calling Object3D#destroy(). Additionally, prevents Geometry3D#destroy() from destroying any parent geometry which may still be in use by other objects.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a destroyed flag to Object3D and includes it in the check for whether or not to skip rendering of an object.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Optimizes new buffer tracking to avoid per frame iteration.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Misc fixes/improvements to color-picking (due to investigating #1615)
    
    * Scene.java:
      * moving glClearDepth() prior to glClear()!
    * Object3D.java:
      * eliminating unused parameters from renderColorPicking() signature
      * Comment clean-ups
    * ObjectColorPicker.java:
      * Improving thread safety of mObjectLookup list
      * Filtering out requests when there is no listener
      * Skipping picking if there is no listener, and avoiding conflicts with setOnObjectPickedListener()...
      * Guarding against holes in the index due to unregistered objects and so returning null in onObjectPicked()
    Fix for color-picking of nested child objects
    
    - Object3D: corrected recursive call in renderColorPicking()!
    - Enhanced ObjectPicking example with a couple of simple containers to better detect regressions of child picking
    Implementing issue 1607 - combining object color picking and post-porcessing
    
    Scene.java
    - added doColorPicking() to isolate color-picking render from normal render() control flow
    - renamed requestColorPickingTexture() to requestColorPicking()
    Object3D.java
    - introduced UNPICKABLE color/index, made it a default value
    - updated setPickingColor(), removed getPickingColor()
    - eliminated mIsPickingEnabled, now check for UNPICKABLE
    - added renderColorPicking() for optimized/independent color-picking rendering of the Object3D and its children (per #1387)
    Fixing #1550 - Object3D.setScreenCoordinates() anomaly?
    
    Documentation only
    Fixing #1550 - Object3D.setScreenCoordinates() anomaly?
    
    Documentation only
    Fixes #1207 Updates parent of child Object3D when added to another Object3D.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Bug fixes in Object3D, RajawaliSurfaceView and LoaderAWD (z axis was inverted)
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added arcball camera zooming
    Fixes #1374 - In Object3d the material was having its parameters set prior to the color, so each object was getting the color of the object before it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1433 - Object3D will now update its bounding volumes if present when rendering.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Bugfix: an object3d was never notified when the parent's model matrix was dirty and recalculated.
    #1410 Removes SerializedObject3D. AWD files build via Away Builder should be used instead.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds methods to Object3D to allow better control over override color.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cloned Object3Ds now get names from their origin Object3D fixes #1399
    Adds an option to materials for deferred checking of device capabilities (used for determining maximum texture count). If it is deferred and you add too many textures, an error message will be printed but the maximum possible number of textures will be used, going in list order. Along with this, an option has been added to allow a RajawaliRenderer implementation to register with the resource managers in its constructor rather than waiting until onSurfaceCreated(). If you register in the constructor, registration will not occur in the onSurfaceCreated callback.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    undo previous change
    
    the bug is fixed elsewhere in ATransformable3D
    fixed clone rotation and scale cloning
    
    When cloning an Object3D the rotation and scale became pointers to the
    original object, causing scaling or rotating an object to influence the
    source and all other clones of that source object
    Object3D cloning to include children
    
    While cloning Object3Ds created by LoaderOBJ I found that models often contained children which also need to be cloned to achieve the expected result.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Fixes #1208.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Fixed bug in renderer causing object picking to only select the first picked object.
    - Fixed bug in RenderTargetTexture causing NPE.
    - Optimized the renderer code for picking such that the color picking material is only referenced once now and the render has one less else clause now.
    - Cleaned up ObjectColorPicker quite a bit and changed the circular calls to a static call for readability:
    pickerInfo.getPicker().createColorPickingTexture(pickerInfo);
    Is now:
    ObjectColorPicker.createColorPickingTexture(pickerInfo);
    Fixes issues #1042 and #1041. Material.setColorInfluence() must now be set to 0 manually after a texture has been added to a material.
    I've also added a flag in Object3D that indicates whether the material's color should be overridden or not.
    place null testing before first use
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Fixes issue #909 "Doublesided property bug in Rajawali wallpaper v0.10". Thanks @alenko for the fix!
    Fixes issue #985 default object color
    Added comments.
    A few more shader/material system bug fixes.
    Bug fixes & additions for the new material system.
    Added lights management to RajawaliScene
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added support for cube sky textures.
    Calculating the ModelView matrix and passing it to Material instead of the ViewMatrix. Also removed the camera position parameter which is not needed anymore.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes some code issues presented in pull request review by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Began converting to using Matrix4.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Fix setAtlasTile method to properly update UVs
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes issue #707 "ObjParser does not like my OBJs". OBJ Groups weren't handled appropriately. This resulted in an OpenGL out of memory error.
    Added a method on BaseObject3D that returns the world space coordinates.
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes a bug in the fix for #99 where child meshes were being rendered
    with the wrong view-project matrix. Thanks @MasDennis!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changed the drawing mode to GL_TRIANGLES for colour picking. It shouldn't be anything else.
    Added default blend state.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    General cleanup.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Slightly optimized depth test calls
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #99 by providing a pre-multiplied view-projection matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added initial code for default gl state.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    removed BaseObject3D from parameter
    Added texture packing and retrieval
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    getNumTriangles and getNumObjects in BaseObject3D
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    Also removed GLES20 from default package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed a bug with backsided objects.
    
    Front face vertex winding for backsided objects were incorrectly set to clockwise winding.
    Added the option to hide the root object when doing a batch rendering
    Issue #552 Added rotation and scale to cloned objects in BaseObject3D and VertexAnimationObject3D.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Fix for issue #503 "toSerializedObject3D crash and possible fix"
    Added default identity state to matrices
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Extended concurrency protection
    
    Extended to include mLights and mChildren of BaseObject3D. Note that
    this changes the method signature of addLights() in BaseObject3D,
    AMaterial and AAdvancedMaterial.
    Fixed facet bug when front-face culling is used
    
    When front-face culling is used, front-facing polygons were incorrectly
    assumed to be counter clockwise.
    Added support for "backsided" objects.
    
    This essentially adds support for front-face culling as opposed to the
    usual back-face culling. This will result in all front-facing polygons
    to be culled and reveal the polygons on the "backside".
    Continuation of issue #335, fixed the remaining for-each instances and turned them into regular for loops.
    fixes #335
    Removed use of For-Each loops in methods called each from from most common base classes. Likely still more cases that NEED to be cleaned up. Code not called each frame is not as important for optimization but should likely be updated eventually for consistency.
    Disabled blending during color-picking render pass
    Added mManageMaterial to specify whether a BaseObject3D will reload its
    materials automatically or not. If many objects share the same material
    then having each reload their material will cause lengthy and
    unnecessary shader compiles. With this, one can avoid the redundant
    compiles and simple re-assign the material to each affected object in
    onSurfaceCreated().
    Rework vertex animations
    
    * Decoupled animation FPS from renderer FPS. The animation FPS can now
    exceed the renderer FPS (an unlikely scenario).
    * Fixed #122 (jitter with multiple animation objects). The shader
    animation parameters are now set every frame and in the correct spot
    (after glUseProgram).
    Use vertex color in shader when obj.setColor()
    
    See #238
    Add missing @Deprecation annotations
    Auto-format BaseObject3D
    Don't destroy BaseObject3D.mChildren reference
    
    mChildren will never be recreated, leaving the possiblity of a
    NullPointerException should it somehow be referenced again.
    Copy additional properties when cloning an object
    Normalize line endings with .gitattributes
    Add BaseObject3D.cloneTo() helper method
    
    Intended to ease subclassing:
    
    ``` Java
    public MyClass extends BaseObject3D {
            public MyClass() {
                    super();
                    // ... subclass-specific code ...
            }
            public MyClass clone() {
                    MyClass clone = new MyClass();
                    super.cloneTo(clone, true);
                    // ... subclass-specific code ...
                    return clone;
            }
    }
    ```
    Add BaseObject3D.setData(SerializedObject3D)
    Concurrency fixes
    Lots of bug fixes #114 #120
    
    Fixes a lot of issues that occurred when rebuilding the scene after the
    OpenGL context was lost.
    Support for multiple diffuse textures
    
    Found out that this wasn't actually supported yet. Shocker!
    Uniform name for texture one is still "uDiffuseTexture". If another
    diffuse texture is added the second uniform will be called
    "uDiffuseTexture1", the third "uDiffuseTexture2", etc.
    Will write up a tutorial for this.
    Return boolean for BaseObject3D.removeChild()
    
    This makes it consistent with RajawaliRenderer.removeChild().
    Replace mNumChildren with mChildren.size()
    
    Use enhanced loop syntax recommended by Android Best Practices:
    http://developer.android.com/guide/practices/performance.html#foreach
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Fix for issue #98 NullPointerException when LWP reloads
    
    Added a null check to the bounding box's visual
    Fix for issue #118 multiple files in .3ds files weren't supported
    
    Doesn't support materials -yet-. Feel free to add support for that ;-)
    New VideoMaterial. Thanks to Lubomir Panak (@drakh)
    Fix for issue #110
    
    MD2 serialization failed because of null objects
    Issue #68 cleaning up resources
    Issue #72 getNumTriangles()
    OpenGL error fixes for issue #45
    Updated Documentation
    Ability to change blend mode (fixes issue #44)
    
    Added new methods that give full control over this:
    setBlendingEnabled(boolean)
    setBlendFunc(sFactor, dFactor)
    setDepthTestEnabled(boolean)
    setDepthMaskEnabled(boolean)
    Issue #31 3DS parser.
    
    Still a work in progress, doesn't parse materials yet.
    Fix for issue #33 serializer didn't take short buffers into account.
    Parsers now also take a String that specifies the path to the file on the SD Card. Fixes issue #30
    Added sphere map material
    Memory optimisation for materials. Removed the default material on all objects because this is an unnecessary step most of the time.
    Fix for Samsung Galaxy S2. This phone doesn't support integer index buffer, only short buffers.
    Shader optimisation. 10fps win :)
    More fbx parser code. Made good progress, but not there yet.
    Added an FBX parser. Still a work in progress though.
    Batching part 2: textures
    Added new tutorial to README.md
    Added MaskedMaterial.java - thanks to Joel Styles
    Added Batch rendering optimisation.
    Ray picking, work in progress
    Removed post processing code from RajawaliRenderer to PostProcessingRenderer
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added quaternion rotation, animated sprites
    Removed clone.setScale when cloning, I think this is a better behaviour.
    There appears to be a bug with setRotation so I changed it
    Resource management & mipmapping bug fix see issue #14
    Also fixed a bug in the phong materials.
    BaseObject3D RajLog fix
    Added a catmull-rom spline class.
    Added logging class with option to disable debugging messages. This is most useful when using lots of materials as the debugging in AMaterial can get a bit excessive.
    Added support for multiple lights.
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Added missing method to check if a BaseObject3D.java is visible.
    Updated collision detection. Fully functional now :-)
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Creating an int every frame is wasteful and unnecessary.
    Added Additive option to BaseObject3D. When set to true, it will override transparent settings by forcing it to true. This may need a better method of implementation.
    Vertex buffer objects support for 2.2 / api level 8,
    added isLibrary option to the project.
    added build folder with zip.
    Big update, performance optimisation using vertex buffers. Also re-worked the animation structure. Calculations have been moved to a vertex shader.
    reverted BaseObject3D.java
    fixed clone constructor
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    copy constructor
    Material classes clean up. Also added BumpmapPhongMaterial.
    Updated the obj parser. Supports material files now.
    Added animation classes
    added object picking
    Added object picking (color picking, sampled from a framebuffer). Not finished yet.
    test
    Updated the particle material. It now uses camera distance to determine size.
    Shader changes
    Added support for 2d rendering by moving the
    projection matrix calculation to the camera.
    Added a new camera (Camera2D) so that ortho
    rendering can be done. To render with 2d instead
    of with 3d simply use setCamera(new Camera2D())
    function in the constructor of your subclassed
    RajawaliRenderer.
    
    Also added a new direction paramater to the Plane
    class so that it can be created standing up on the y
    axiss, this makes creating a 2d plane that is visible
    by the 2d Camera by default easier.
    
    By default the 2d camera renders the scene without
    taking the aspect ratio into consideration, this is done
    so that it is as easy as possible to get a plane
    that covers the entire view (for live shader based wallpapers).
    Performance optimisation. Removed unnecessary allocations.
    Incomplete bounding box, added support for layouts.
    Added Skybox, cube.
    Moved fov, near and far planes from renderer to camera class.
    Added a serializeToSDCard() method to Object3D
    fixed a bug in the children's matrix transform
    fixed a bug in the rotateM() method and removed a per frame float array allocation to optimise things further.
    Changed Matrix.rotateM to a local implementation without array allocation
    Bug fixes in the shaders.
    The light position is now correctly calculated in the shaders.
    Added default colors to the sphere and plane primitives and added some convenience methods.
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    getRotX(), getRotY(), and getRotZ() now return angles in Degrees,
    addresses the explicit issues raised in #2003
    but not the crossover issues with getRotX() and getRotZ()
    Addressing issue #1784 (part 2):
    - Adding debug log notice to Material.setModleMatrix() for IllegalStateException
    - Adding ATransformable3D.isZeroScale()
    - Adding isZeroScale() check at beginning of Object3D.render(), and skipping render if true
    - Adding both isDestroyed() and isZeroScale() checks to Object3D.renderColorPicking() to match render()
    Fixes #1596. Fixes #1204. Note that this is a temporary fix that does not necessarily handle frame to frame changes properly. This will be addressed in the future.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1534 Ensures proper units between euler angles and quaternion relationships. Did not change the discrepancy between quaternion and Euler transform coordinate systems. This was a known issue and it has not been decided if this is intentional.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - setRotation() methods in ATransformable should set absolute rotation.
    Currently they apply the specified rotation to the existing orientation
    and are functionally indistinguisable from the rotate() methods.
    #1449 Adds methods to ATransformable3D to allow moving along local axes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1424
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376  Fixes bug with degenerate quaternion look at for anti-parallel case. Rotation was between wrong vectors.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376 All Quaternion.lookAt fixes are implemented. Committing to begin work on correcting lighting orientation and to merge in changes with master.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Bugfix: an object3d was never notified when the parent's model matrix was dirty and recalculated.
    Corrects issue where ATransformable3D getRotX/getRotZ methods using the wrong euler angles. Also resolves an error in the Quaternion fromAngleAxis method using double the angle value.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1420 - Adds WorldParameters class with global axes and method to modify them.
    #1419 #1376 Fixes calculation of look at vectors to use proper direction, and attempts degenerate case of look and up vectors being in the same direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376 Makes Directional and Spot lights use orientation and look at system for direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    fixed setScale(Vector3 scale)
    
    old code caused it to set a pointer to the Vector provided, but it needs
    to take its values instead
    LookAt bug fix. Changed multiplication order.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates ATransformable3D to more efficienty use Vector3.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    TranslateAnimation orient to path fix. Cleaned up the calculations and started using Quaternion.setFromAngleBetween(). This takes the current object's orientation and the current tangent vector. This fixes issue #863.
    Fixes an old issue #226 "DirectionalLight should use underlying ATransformable3D for direction". Cleaned up DirectionalLight and SpotLight while at it.
    Added methods to allow for integration with augmented reality fameworks. A Rajawali-Vuforia template will be pushed to Github soon.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Introducing RajawaliScene!
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Added getLookAt() method
    
    Added a getLookAt() method which can be useful if one is trying to
    determine where the object is looking at. Currently used to calculate
    the camera direction vector in LensFlarePlugin.
    Recalculate orientation in getOrientation()
    
    getOrientation() didn't return the correct value if rotation values
    were marked as dirty.
    Fix for issue #69
    
    Changed euler to quaternion conversion order
    Fix for issue #51
    Fixes for issue #34
    
    Cloned objects that used short buffers instead of int buffers threw an
    error when the opengl context was restored.
    Texture out of memory errors are also fixed. Added an extra check in
    AMaterial that prevents identical textureinfo objects being added.
    orient to spline fix
    Fix for issue #25 camera rotation
    More fbx parser code. Made good progress, but not there yet.
    - removeAllViews() is not supported in AdapterView bug fix
    - added the option to append rotateAround()
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added quaternion rotation, animated sprites
    cleanup code
    Updates BoundingBox to provided a centroid location.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Introducing RajawaliScene!
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Updated collision detection. Fully functional now :-)
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Updates BoundingBox to provided a centroid location.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Worked on the lights shader a bit more.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added default blend state.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Updated collision detection. Fully functional now :-)
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Revision of bounding box position.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Updates BoundingBox to provided a centroid location.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Object3D now creates a bounding box if it has children
    Refactor bounding box creation for re-usability and readability
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping. Intermediate commit. First pass is mostly finished.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Worked on the lights shader a bit more.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added default blend state.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Normalize line endings with .gitattributes
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Ray picking, work in progress
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Updated collision detection. Fully functional now :-)
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Android X
    Quaternion.pow now works for non-unit quaternions
    fix for Quaternion.pow works only for unit Quaternions #1899
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    allow RotateAnimation3D to take the long path for obtuse angles
    removed awkward slerpAndCreate() conveniance function
    Fixes #1624. Uses scratch members to prevent per-frame allocations for camera orientation and elliptical animation updates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1616.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376  Fixes bug with degenerate quaternion look at for anti-parallel case. Rotation was between wrong vectors.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376 All Quaternion.lookAt fixes are implemented. Committing to begin work on correcting lighting orientation and to merge in changes with master.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects issue where ATransformable3D getRotX/getRotZ methods using the wrong euler angles. Also resolves an error in the Quaternion fromAngleAxis method using double the angle value.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1419 #1376 Fixes calculation of look at vectors to use proper direction, and attempts degenerate case of look and up vectors being in the same direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376 Makes Directional and Spot lights use orientation and look at system for direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added getAxis(Axis axis) that returns the Axis of the Quaternion specified
    
    Specify an axis and based on it getXAxis, getYAxis or getZAxis is
    returned
    added Quaternion.lookAt(Vector3 lookat, Vector3 upDirection)
    
    sets the Quaternion to look at a specific coordinate in world space
    Converted project to Gradle and added automatic local maven deployment for snapshots
    angleBetween from -1 to 1
    
    -fixed angleBetween to have fCos go from -1 to 1, instead of 0 to 1
    - corrected some typo's in the java doc
    added angleBetween function
    
    added function:
    public double angleBetween(final Quaternion other)
    which returns the angle between the Quaternion and another.
    Fixed a bug in the equals function
    
    Fixed a bug in the equals function that caused it to return always false
    if dot(other) returned > 1.0
    Thanks to Jared Woolston for providing the fix.
    Working on calculating rotation. Individual rotations seem fine but rotation combined with scales is problematic.
    Update Quaternion.java
    
    The Gram-Schmidt orthonormalized lookAt method is a significant contribution to Rajawali. This contributor inspired and enabled the complete rewrite of Rajawali to a purely Quaternion implementation.
    Made some corrections to Matrix4 and Quaternion.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes some outstanind float literals. Also made some improvements to
    methods of MathUtil class based on @ToxicBakery's suggestions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted math classes to use double precision.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update Quaternion.java
    
    Fixed some documentation errors.
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored some methods from Quaternion into Vector3. Fixed a perceived
    error in the vector to vector projection method.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Began rewrite of Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made UP/RIGHT/FORWARD static member vectors of Vector3 public instead of
    private and modified library code accordingly.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made SLERP methods of `Quaternion` return a normalized result.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Provided a static lookAt method for Quaternion (Unity already does this)
    
    The following implementation of lookAt returns a Quaternion that is oriented with a forward and up vector!
    
    Implemented to workaround problems with the existing BaseObject3D lookAt() method which disables it's own orientation quaternion and rotational matrix.
    
    This uses Gram-Schmidt orthonormalization to form the required axes.
    
    Tested and working beautifully (no gimbal lock, very smooth predictable behaviour).
    Pretty sure this is how Unity does it, too.
    
    To set a camera's orientation with this, make sure isCamera is true.
    To set an object's orientation with this, make sure isCamera is false.
    
    for example, to keep a player always oriented "up" just do this:
    player.setOrientation(Quaternion.lookAt(forward, new Vector(0,1,0), false));
    
    These can be placed directly into the Quaternion class as statics.
    TranslateAnimation orient to path fix. Cleaned up the calculations and started using Quaternion.setFromAngleBetween(). This takes the current object's orientation and the current tangent vector. This fixes issue #863.
    Added animation transition blending and blending for complete animation sequences.
    Reduced the creation of Quaternions and Vector3s on every frame as well. #774
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    fix erroneous conversion to radians
    Update instance variables in Quaternion.fromEuler
    
    Fixes #214
    Auto-format Quaternion.fromEuler()
    Fix angle conversion in Quaternion.fromEuler()
    
    Fixes #208
    Normalize line endings with .gitattributes
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Fix for issue #69
    
    Changed euler to quaternion conversion order
    Fixes for issue #34
    
    Cloned objects that used short buffers instead of int buffers threw an
    error when the opengl context was restored.
    Texture out of memory errors are also fixed. Added an extra check in
    AMaterial that prevents identical textureinfo objects being added.
    orient to spline fix
    Fix for Samsung Galaxy S2. This phone doesn't support integer index buffer, only short buffers.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added quaternion rotation, animated sprites
    Added a catmull-rom spline class.
    Added Quaternion class (ported from Ogre) and refactored the Number3D class.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Converted math classes to use double precision.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes some outstanind float literals. Also made some improvements to
    methods of MathUtil class based on @ToxicBakery's suggestions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted math classes to use double precision.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Post processing bug fix. NPOT texture caused a black screen on Samsung Galaxy Nexus.
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added Quaternion class (ported from Ogre) and refactored the Number3D class.
    Android X
    Addressing issue #1784:
    - adding throws IllegalStateException to Matrix4.setToNormal() as it depends on Matrix4.inverse()
    - putting call to setToNormal() in Material.setModelMatrix() in try/catch block, thus enabling continued rendering of degenerate/zero-scale Object3Ds (which have singular model matrices)
    Corrects matrix multiplication error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Completes Vector3 and Matrix4 testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fixed inconsistency in obtaining 1/w
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Fixed Matrix4.setAll method to set axis vectors to columns instead of rows
    Updated the loader classes. When a texture is applied the color influence is set to 0.
    Working on calculating rotation. Individual rotations seem fine but rotation combined with scales is problematic.
    cube map and sphere map environment shader fully working.
    Fixes some code issues presented in pull request review by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Began converting to using Matrix4.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made some corrections to Matrix4 and Quaternion.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Finished implementation of the Matrix4 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Finished implementing most of the methods and reorganizing. Have some
    creation methods and multiplication methods to finish.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    MasDennis/Rajawali#968 Matrix4. Organized identity, transpose,
    determinate, translation and scale methods. Added toString method and
    began working on multiplication methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Began rewrite of Matrix4 class. Modified constructors and set methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted math classes to use double precision.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #967. There was a bug in the Matrix4#transpose() method which used
    the wrong indices. Thanks @kostik1337 for reporting this.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Added quaternion rotation, animated sprites
    Android X
    fix lint warnings; code format
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1616.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed equals(Vector3 obj, double error)...
    - fix Vector3.normalize method to return original magnitude of vector,
    as per its spec. Also adds convenience methods to obtain an array
    representation of the Vector3.
    #1419 #1376 Fixes calculation of look at vectors to use proper direction, and attempts degenerate case of look and up vectors being in the same direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Improves efficiency of ortho-normalization process.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Logarithmic and Archimedean spirals.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Update Vector3.java
    
    The Gram-Schmidt orthonormalized lookAt method is a significant contribution to Rajawali. This contributor inspired and enabled the complete rewrite of Rajawali to a purely Quaternion implementation.
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Finished implementation of the Matrix4 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes some outstanind float literals. Also made some improvements to
    methods of MathUtil class based on @ToxicBakery's suggestions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted math classes to use double precision.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed issue with orientation. The ImmutableVector3 implimentation was
    not behaving as expected. Returned to a mutable Vector3 for the X,Y,Z
    axis vectors and warned developers to not modify. This is a tradeoff of
    safety for speed and since no one should ever mess with those vectors,
    this has been deemed acceptable by myself and @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated rajawali.animation package to more efficiently use the new
    Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates ATransformable3D to more efficienty use Vector3.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored some methods from Quaternion into Vector3. Fixed a perceived
    error in the vector to vector projection method.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrected documentation of ImmutableVector3 and made
    Vector3#getAxisVector(Axis) throw an IllegalArgumentException rather
    than return null on invalid input.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added documentation to about half of the existing class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Finished synchronizing usage of scratch member Vector.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Began rewrite of Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made UP/RIGHT/FORWARD static member vectors of Vector3 public instead of
    private and modified library code accordingly.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    TranslateAnimation orient to path fix. Cleaned up the calculations and started using Quaternion.setFromAngleBetween(). This takes the current object's orientation and the current tangent vector. This fixes issue #863.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Update Number3D.java
    
    Number3D with ona value like in vec3(1.0) in the shaders
    Introducing RajawaliScene!
    Switch from FloatMath to Math
    Normalize line endings with .gitattributes
    Make Number3D.lerp() a static method
    Remove "final" keyword from Number3D class
    
    Now it can be extended by a subclass.
    Add equals() method to Number3D
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Issue #31 3DS parser.
    
    Still a work in progress, doesn't parse materials yet.
    Fixes for issue #34
    
    Cloned objects that used short buffers instead of int buffers threw an
    error when the opengl context was restored.
    Texture out of memory errors are also fixed. Added an extra check in
    AMaterial that prevents identical textureinfo objects being added.
    orient to spline fix
    Added an FBX parser. Still a work in progress though.
    Ray picking changes
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added quaternion rotation, animated sprites
    Added a catmull-rom spline class.
    Added Line3D
    Added Quaternion class (ported from Ogre) and refactored the Number3D class.
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    MD2 parser almost complete.
    Added animation classes
    Updated the particle material. It now uses camera distance to determine size.
    Incomplete bounding box, added support for layouts.
    commited Number3D from min3d
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Converted math classes to use double precision.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    #578 Added ColorAnimation3D
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated rajawali.animation package to more efficiently use the new
    Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Update ScaleAnimation3D.java
    
    ScaleAnimation 3D with floats
    Introducing RajawaliScene!
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    #578 Added ScaleAnimation3D
    #578 Started a rewrite of the animation framework.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Added quaternion rotation, animated sprites
    Added animation classes
    allow RotateAnimation3D to take the long path for obtuse angles
    removed awkward slerpAndCreate() conveniance function
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    Placed all the field variables on their own lines for consistency
    Removed deprecated constructor
    RotateAnimation3D added
    #578 Started a rewrite of the animation framework.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Ignore #comments and empty lines while parsing .obj and .mtl files.
    
    There is no point in creating a StringTokenizer for a comment or an empty line.
    I noticed that SketchUp adds lots of comments to its .obj and .mtl files.
    This update should slightly speed up parsing by ignoring comments and empty
    lines at the very first opportunity.
    Fixed a bug in Animation3D which caused interpolatedTime to decrease just
    before reaching its target.
    
    interpolatedTime should increase from 0 -> INF. Using the % operator in
    rajawali.animation.Animation3D (see below) caused a knock on effect which
    decreased interpolatedTime just before it reached its target.
    
    76: millis %= mDuration;
    .
    .
    .
    84: diff = (float) (millis - mStart);
    85: interpolatedTime = mInterpolator.getInterpolation(diff / (float) mLength);
    
    I have also edited line 83.
    if (millis > mStart && millis < (mStart + mLength)) {
    if (millis > mStart && millis <= (mStart + mLength)) {
    
    This has the desired effect of stopping (for example) a RotationAnimation
    exactly at the desired target angle... instead of very close to the target
    angle which is what currently happens.
    Add missing @Deprecation annotations
    Added append rotation when no rotatefrom is specified in RotateAnimation3D
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added quaternion rotation, animated sprites
    Added animation classes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    - Minor cleanup to TranslateAnimation3D.java so that it is easier to extend.
    Fix for issue #1008 TranslateAnimation3D orient to path. This was broken after the quaternion update. I fixed this by replacing my over-complicated code with a simple lookAt. Simples.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated rajawali.animation package to more efficiently use the new
    Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    TranslateAnimation orient to path fix. Cleaned up the calculations and started using Quaternion.setFromAngleBetween(). This takes the current object's orientation and the current tangent vector. This fixes issue #863.
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    Bug fix: issue #830 the orient to path calculation wasn't correct.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Resolved bug in TranslateAnimation3D that caused unexpected translations when reusing animation.
    Fix for issue #654 TranslateAnimation3D setOrientToPath() not working in new Animation Framework
    In the original version of this class a delta value was used for the lookAt function. This was accidentally replaced by elapsed time.
    I guess this was caused by confusion over delta time and lookat delta.
    I've created a new variable called mLookatDelta to avoid future confusion.
    Introducing RajawaliScene!
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    #578 Marking off some check marks.
    #578 Started a rewrite of the animation framework.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Added one-liner constructors
    orient to spline fix
    Added quaternion rotation, animated sprites
    Added a catmull-rom spline class.
    Added Bezier animation classes
    Added animation classes
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Rewrote AnimationQueue and added AnimationGroup
    - AnimationGroup provides simple method of controlling one or more animations. Animations in a group will be played and paused at the same time. Animations in a group should not be registered to the scene, only the group itself.
    - AnimationQueue provides similar functionality to original queue in that animations are played sequentially. As AnimationQueue extends AnimationGroup, only the queue should be registered with the scene.
    Fixes #1624. Uses scratch members to prevent per-frame allocations for camera orientation and elliptical animation updates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated rajawali.animation package to more efficiently use the new
    Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    rotate on custom axis
    Made some more fixes to #704. Brought back the original constructors.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modified #704 EllipticalOrbitAnimation3D.
    
    Changed angle from int to double to allow for arbitrary degree rotation. This is particularly important if the periapsis is large or the eccentricity is near 1. Also cleaned up some formatting issues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Rotate with degrees
    
    Now you can rotate with degrees.
    
    code:
    
                    final EllipticalOrbitAnimation3D anim = new EllipticalOrbitAnimation3D(
                                    mCenterPoint,
                                    getCurrentCamera().getPosition(),
                                    0, 60);
                    anim.setTransformable3D(getCurrentCamera());
                    anim.setDuration(8000);
                    anim.setInterpolator(new DecelerateInterpolator());
    
          registerAnimation(anim);
            anim.play();
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    EllipticalOrbitAnimation3D added
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes a few tweaks to the spiral paths, adds CoalesceAnimation3D.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated rajawali.animation package to more efficiently use the new
    Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Reintroducing RotateAroundAnimation3D. Back by popular demand because of its simplicity of use.
    #578 Started a rewrite of the animation framework.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Fix RotateAroundAnimation3D for the X axis.
    Fix negative direction in RotateAroundAnimation3D
    
    Animation3D already takes a negative direction into account. Applying
    it again in RotateAroundAnimation3D effectively cancels it out.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added quaternion rotation, animated sprites
    Added a catmull-rom spline class.
    Added animation classes
    cleanup code
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Rewrote AnimationQueue and added AnimationGroup
    - AnimationGroup provides simple method of controlling one or more animations. Animations in a group will be played and paused at the same time. Animations in a group should not be registered to the scene, only the group itself.
    - AnimationQueue provides similar functionality to original queue in that animations are played sequentially. As AnimationQueue extends AnimationGroup, only the queue should be registered with the scene.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Moved bulk of Animation3D to Animation and nearly finished bulk animations handling.
    - AnimationGroup is almost done but does not handle RepeatMode properly in testing.
    - AnimationQueue appears to work as intended in testing for all RepeatMode options.
    #1219 Rewrote AnimationQueue and added AnimationGroup
    - AnimationGroup provides simple method of controlling one or more animations. Animations in a group will be played and paused at the same time. Animations in a group should not be registered to the scene, only the group itself.
    - AnimationQueue provides similar functionality to original queue in that animations are played sequentially. As AnimationQueue extends AnimationGroup, only the queue should be registered with the scene.
    resolves NullPointerException in SlerpAnimation3D
    
    bug fix and unit test for issue  #2032
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated rajawali.animation package to more efficiently use the new
    Vector3 class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a new class that performs Spherical Linear Interpolation (SLERP) between to Vector3s.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Corrected bugs in AnimationGroup for repeat counts and modes.
    #1219 Moved bulk of Animation3D to Animation and nearly finished bulk animations handling.
    - AnimationGroup is almost done but does not handle RepeatMode properly in testing.
    - AnimationQueue appears to work as intended in testing for all RepeatMode options.
    #1219 Rewrote AnimationQueue and added AnimationGroup
    - AnimationGroup provides simple method of controlling one or more animations. Animations in a group will be played and paused at the same time. Animations in a group should not be registered to the scene, only the group itself.
    - AnimationQueue provides similar functionality to original queue in that animations are played sequentially. As AnimationQueue extends AnimationGroup, only the queue should be registered with the scene.
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    #578 Marking off some check marks.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Moved bulk of Animation3D to Animation and nearly finished bulk animations handling.
    - AnimationGroup is almost done but does not handle RepeatMode properly in testing.
    - AnimationQueue appears to work as intended in testing for all RepeatMode options.
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Introducing RajawaliScene!
    Animations were not finishing. They would stop just short of an interpolation time of 1.0.
    Fixed eventUpdate bug
    
    Delta time was being passed in instead of interpolated time.
    Bug fixes in Animation3D
    
    The registerListener method now checks whether the same listener was
    already added.
    Added a check in the update method to prevent multiple end events from
    firing.
    Fixed an inverted interpolation bug.
    Fixed the animation end event.
    - Small bug was causing animations to be processed when they had not been started. This was incorrectly causing the end event to be fired continuously which inadvertently broken animation queues.
    Animations could potentially crash due to removing or adding listeners during playback. Instead of a complex queue system I opted to just throw exceptions if changes are made during playback.
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    #578 Marking off some check marks.
    #578 Translate Animation is now working.
    #578 Started a rewrite of the animation framework.
    Fix for issue #453 "Bug when using Animation3D together with setDelay() ?"
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Update Animation3D.java
    
    Minor change to avoid a flashing effect when using Animation3D.REVERSE + Animation3D.INFINITE
    Continuation of issue #335, fixed the remaining for-each instances and turned them into regular for loops.
    fixes #335
    Removed use of For-Each loops in methods called each from from most common base classes. Likely still more cases that NEED to be cleaned up. Code not called each frame is not as important for optimization but should likely be updated eventually for consistency.
    Added onAnimationUpdate to Animation3DListener
    
    I have added a new function to the interface Animation3DListener.
    I think it is very useful to be able to see the progress of an animation.
    Fixed a bug in Animation3D which caused interpolatedTime to decrease just
    before reaching its target.
    
    interpolatedTime should increase from 0 -> INF. Using the % operator in
    rajawali.animation.Animation3D (see below) caused a knock on effect which
    decreased interpolatedTime just before it reached its target.
    
    76: millis %= mDuration;
    .
    .
    .
    84: diff = (float) (millis - mStart);
    85: interpolatedTime = mInterpolator.getInterpolation(diff / (float) mLength);
    
    I have also edited line 83.
    if (millis > mStart && millis < (mStart + mLength)) {
    if (millis > mStart && millis <= (mStart + mLength)) {
    
    This has the desired effect of stopping (for example) a RotationAnimation
    exactly at the desired target angle... instead of very close to the target
    angle which is what currently happens.
    Removed white spaces
    Added length and start in order to support chained animation, i.e. under the whole duration start and stop different animations with different spans
    Implement Animation3D pause
    Auto-format Animation3D to clean mixed whitespace
    Use a monotonic clock for timing purposes
    
    According to the Android Developer documentation, currentTimeMillis()
    is not suitable for keeping time. It is wall clock time and can
    potentially move backwards or forwards. uptimeMillis() is recommended
    for timing purposes, and does not include device sleep time.
    
    https://developer.android.com/reference/android/os/SystemClock.html
    Added quaternion rotation, animated sprites
    Added comments and changed visibility modifiers.
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Animation3D.java was not flagging the start and stop of animations. Also moved variable creation to the class level to prevent unnecessary GC
    getTransformable3D allows for animations to identify what they are attached to. This enables the option of using one listener for multiple animations for multiple objects.
    added multiple listeners for animations
    Added Bezier animation classes
    Moved animationlistener from animation3d into its own file
    Added animation classes
    adresses issue #1184
    
    in Animation.update(), mElapsedtime could be set larger than mDuration,
    causing a value greater than one to be sent to the Interpolator.
    cleanup code
    Added support for compressed textures in cube maps.
    Delay count wasn't set to 0 when reset() was called.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    mIsFirstStart initialization
    
    Animation.mIsFirstStart should be initialized as true
    to fixed bugs like
    
    public boolean isFirstStart() {
    return mIsFirstStart;
    }  always return false.
    
    scale animation always scaled from 0.
    #1225 Modified durations to use more detailed method names for get and set to prevent confusion.
    #1219 Moved bulk of Animation3D to Animation and nearly finished bulk animations handling.
    - AnimationGroup is almost done but does not handle RepeatMode properly in testing.
    - AnimationQueue appears to work as intended in testing for all RepeatMode options.
    #1219 Rewrote AnimationQueue and added AnimationGroup
    - AnimationGroup provides simple method of controlling one or more animations. Animations in a group will be played and paused at the same time. Animations in a group should not be registered to the scene, only the group itself.
    - AnimationQueue provides similar functionality to original queue in that animations are played sequentially. As AnimationQueue extends AnimationGroup, only the queue should be registered with the scene.
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    #578 More updates
    - Normalized the formatting of all animation classes.
    - Updated ColorAnimation3D setTransformable3D as I did not like what I previously had using setBaseObject3D. I feel the new implementation is more sensible.
    #578 Marking off some check marks.
    added optional Look At target for spline translation animations.
    Addresses issue #2067
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1225 Modified durations to use more detailed method names for get and set to prevent confusion.
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added animation transition blending and blending for complete animation sequences.
    Reduced the creation of Quaternions and Vector3s on every frame as well. #774
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Normalize line endings
    
    I am not sure why .gitattributes didn't handle this on the other end.
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Normalize line endings
    
    I am not sure why .gitattributes didn't handle this on the other end.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added animation transition blending and blending for complete animation sequences.
    Reduced the creation of Quaternions and Vector3s on every frame as well. #774
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    cleanup code
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    More Geometry3D updates and other bug fixes.
    #1410 Removes SerializedObject3D. AWD files build via Away Builder should be used instead.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Issue #552 Added rotation and scale to cloned objects in BaseObject3D and VertexAnimationObject3D.
    Fixes issue #538 "Solution for clone() problem with
    VertexAnimationObject3D()". Thanks to @LilaQ for the fix.
    Rework vertex animations
    
    * Decoupled animation FPS from renderer FPS. The animation FPS can now
    exceed the renderer FPS (an unlikely scenario).
    * Fixed #122 (jitter with multiple animation objects). The shader
    animation parameters are now set every frame and in the correct spot
    (after glUseProgram).
    Remove mCurrentTime from animation classes
    
    Since it will always be refreshed when needed, there is no point in
    saving it.
    Remove unused variable from animation objects
    Auto-format animation object classes
    Normalize line endings with .gitattributes
    Use a monotonic clock for timing purposes
    
    According to the Android Developer documentation, currentTimeMillis()
    is not suitable for keeping time. It is wall clock time and can
    potentially move backwards or forwards. uptimeMillis() is recommended
    for timing purposes, and does not include device sleep time.
    
    https://developer.android.com/reference/android/os/SystemClock.html
    Fix for issue #92 md2 frame names weren't serialized
    MD2 fixes. Fixes issue #43
    Fix for issue #55
    Updated Documentation
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Object picking sluggishness fix (issue #17)
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Big update, performance optimisation using vertex buffers. Also re-worked the animation structure. Calculations have been moved to a vertex shader.
    Finished MD2 animation.
    MD2 parser almost complete.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    More Geometry3D updates and other bug fixes.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Fix for issue #35: undefined material in md2 file
    
    The parser crashed when there was not material defined in the md2 file.
    Now it reports a RajLog message but continues without throwing an
    exception.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Big update, performance optimisation using vertex buffers. Also re-worked the animation structure. Calculations have been moved to a vertex shader.
    MD2 parser almost complete.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    Optimizes new buffer tracking to avoid per frame iteration.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Fixed an issue in SkeletalAnimationChildObject3D where a null matrix was passed.
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixes issue #1005: Feature Request: Skeletal animation clone
    fixes issue #894 Imported Md5 has wrong axis orientation
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added exceptions to skeletal animation classes and parsers.
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Revert "Revert "Also removes buffer util fix.""
    
    This reverts commit a1d746c00529ab67aab04f7e336a77b29e60dd24.
    Revert "Also removes buffer util fix."
    
    This reverts commit e3352a1637b9b288287c8bbff0b4a8a3582711d8.
    Also removes buffer util fix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Skeletal animation on resume bug fix. The buffers weren't recreated when resuming.
    Skeletal Animation code clean up. Also merged GPUSkinningMaterial into DiffuseMaterial and PhongMaterial. Changed the default to a non-glossy material.
    While doing this I've come to the conclusion that materials need a bit of an overhaul.
    Skeleton animation bug fix. Shouldn't call super.setShaderParams() because it is a container only.
    Continuation of issue #335, fixed the remaining for-each instances and turned them into regular for loops.
    Update src/rajawali/animation/mesh/BoneAnimationObject3D.java
    
    If GPUSkinningMaterial is used no calculations need to be performed.
    MD5 GPU vertex skinning
    
    Added AnimationSkeleton class to serve as skeleton container for
    BoneAnimationObject3D objects.
    
    GPUSkinningMaterial extends PhongMaterial with vertex shader source
    which calculates vertex positions
    Rework vertex animations
    
    * Decoupled animation FPS from renderer FPS. The animation FPS can now
    exceed the renderer FPS (an unlikely scenario).
    * Fixed #122 (jitter with multiple animation objects). The shader
    animation parameters are now set every frame and in the correct spot
    (after glUseProgram).
    Remove mCurrentTime from animation classes
    
    Since it will always be refreshed when needed, there is no point in
    saving it.
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Normalize line endings with .gitattributes
    Use a monotonic clock for timing purposes
    
    According to the Android Developer documentation, currentTimeMillis()
    is not suitable for keeping time. It is wall clock time and can
    potentially move backwards or forwards. uptimeMillis() is recommended
    for timing purposes, and does not include device sleep time.
    
    https://developer.android.com/reference/android/os/SystemClock.html
    Support for multiple diffuse textures
    
    Found out that this wasn't actually supported yet. Shocker!
    Uniform name for texture one is still "uDiffuseTexture". If another
    diffuse texture is added the second uniform will be called
    "uDiffuseTexture1", the third "uDiffuseTexture2", etc.
    Will write up a tutorial for this.
    MD5 intermediate commit. Not working yet!
    
    Just securing my work ;-) Need to solve a few unrelated issues before
    completing this.
    Replace mNumChildren with mChildren.size()
    
    Use enhanced loop syntax recommended by Android Best Practices:
    http://developer.android.com/guide/practices/performance.html#foreach
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    MD5 Parser. Not fully working yet. Committing so I don't lose anything.
    
    It parses the md5mesh file but not the md5anim file. Work in progress.
    #1410 Removes SerializedObject3D. AWD files build via Away Builder should be used instead.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixes issue #1005: Feature Request: Skeletal animation clone
    Fixes issue #885 "MD5 abrupt flash glitch on loading". Fixed this by updating the start time when the opengl context was re-created. Before this fix the interpolation went berzerk for just one frame. This caused the glitch.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Rework vertex animations
    
    * Decoupled animation FPS from renderer FPS. The animation FPS can now
    exceed the renderer FPS (an unlikely scenario).
    * Fixed #122 (jitter with multiple animation objects). The shader
    animation parameters are now set every frame and in the correct spot
    (after glUseProgram).
    Remove mCurrentTime from animation classes
    
    Since it will always be refreshed when needed, there is no point in
    saving it.
    Add isPlaying() to animation objects
    Remove unused variable from animation objects
    Auto-format animation object classes
    Normalize line endings with .gitattributes
    Use a monotonic clock for timing purposes
    
    According to the Android Developer documentation, currentTimeMillis()
    is not suitable for keeping time. It is wall clock time and can
    potentially move backwards or forwards. uptimeMillis() is recommended
    for timing purposes, and does not include device sleep time.
    
    https://developer.android.com/reference/android/os/SystemClock.html
    MD5 intermediate commit. Not working yet!
    
    Just securing my work ;-) Need to solve a few unrelated issues before
    completing this.
    Fix for issue #55
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    MD2 parser almost complete.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    cleanup code
    Optimizes new buffer tracking to avoid per frame iteration.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Fixes issue #1005: Feature Request: Skeletal animation clone
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes bugs in MD5 animations caused by the double conversion.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added exceptions to skeletal animation classes and parsers.
    Skeletal animation transition blending fix. It didn't take into account different animation lengths.
    Added animation transition blending and blending for complete animation sequences.
    Reduced the creation of Quaternions and Vector3s on every frame as well. #774
    md5 parser cleanup. started adding transition methods as well. #774
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Revert "Revert "Also removes buffer util fix.""
    
    This reverts commit a1d746c00529ab67aab04f7e336a77b29e60dd24.
    Revert "Also removes buffer util fix."
    
    This reverts commit e3352a1637b9b288287c8bbff0b4a8a3582711d8.
    Also removes buffer util fix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Skeletal animation on resume bug fix. The buffers weren't recreated when resuming.
    Skeleton animation bug fix. Shouldn't call super.setShaderParams() because it is a container only.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Continuation of issue #335, fixed the remaining for-each instances and turned them into regular for loops.
    Update src/rajawali/animation/mesh/AnimationSkeleton.java
    
    AnimationSkeleton is a container for BoneAnimationObject3D objects.
    
    It calculates BoneMatrices by multiplying them with InverseBindPoseMatrices so that vertex bind pose positions can be used to calculate new vertex positions:
    
    boneMatrix = boneTranslation * boneRotation * mInverseBindPoseMatrix
    
    and
    
    position[i] = sum(weight[j] * boneMatrix[index[j]]) * bind_position
    MD5 GPU vertex skinning
    
    Added AnimationSkeleton class to serve as skeleton container for
    BoneAnimationObject3D objects.
    
    GPUSkinningMaterial extends PhongMaterial with vertex shader source
    which calculates vertex positions
    #1449 Adds FirstPersonCamera. Need to make updates to ATransformable3D to properly support it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Started rewrite of Quaternion class. Reordered and refactored some
    methods. Added some new methods from the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made UP/RIGHT/FORWARD static member vectors of Vector3 public instead of
    private and modified library code accordingly.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Fixed the ChaseCamera. The previous algorithm didn't give the desired effect.
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    several fixes
    
    chase camera fix, objparser fix, fpsupdatelistener addition
    Added a working chase camera
    ChaseCamera (not working yet)
    Fixes for issue #34
    
    Cloned objects that used short buffers instead of int buffers threw an
    error when the opengl context was restored.
    Texture out of memory errors are also fixed. Added an extra check in
    AMaterial that prevents identical textureinfo objects being added.
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Cube primitive bug fix
    Added basic code for post processing effects.
    Updated the particle material. It now uses camera distance to determine size.
    Added support for 2d rendering by moving the
    projection matrix calculation to the camera.
    Added a new camera (Camera2D) so that ortho
    rendering can be done. To render with 2d instead
    of with 3d simply use setCamera(new Camera2D())
    function in the constructor of your subclassed
    RajawaliRenderer.
    
    Also added a new direction paramater to the Plane
    class so that it can be created standing up on the y
    axiss, this makes creating a 2d plane that is visible
    by the 2d Camera by default easier.
    
    By default the 2d camera renders the scene without
    taking the aspect ratio into consideration, this is done
    so that it is as easy as possible to get a plane
    that covers the entire view (for live shader based wallpapers).
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Began converting to using Matrix4.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed a few outstanding issue presented in the pull request.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixed a overlooked bug in Orthographic camera where integer math needed
    a cast to double.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    The orthographic camera had a -z default value. This was a relic from the old coordinate system.
    OrthographicCamera fix
    Issue #217 Added orthographic camera. Usage:
    ```
    OrthographicCamera camera = new OrthographicCamera();
    camera.setZoom(1.0f);
    camera.setZoom(2.0f); // etc ...
    ```
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1624. Uses scratch members to prevent per-frame allocations for camera orientation and elliptical animation updates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added support for compressed textures in cube maps.
    Added an updatePerspective method.
    #1449 Implements orientation tracking. #1453 Adds local orientation to quaternions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug visualizer for cameras, lights and a grid floor.
    #1419 #1376 Fixes calculation of look at vectors to use proper direction, and attempts degenerate case of look and up vectors being in the same direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    Shadow mapping. Intermediate commit. First pass is mostly finished.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Fixes some code issues presented in pull request review by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Began converting to using Matrix4.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #898. This was previously fixed in the scenegraph branch likely
    for similar reasons as to its  discovery by @Ayrton81 in his fork
    regarding the terrain classes. Due to the time remaining before the
    scenegraph branch is merged in, I'm applying this fix directly.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added methods to allow for integration with augmented reality fameworks. A Rajawali-Vuforia template will be pushed to Github soon.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Fixes #714. Removed custom implimentation of 4x4 matrix invert from Camera.java. Replaced with android.opengl.Matrix.java
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #712.
    Added auto update of projection matrix when field of view, near plane or far plane are changed. Also made everything involving the cameras view and projection matrices thread safe (@jwoolston -ized) and cleaned up some unecessary `this.someMemberVariable` code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for issue #680 "RotateAnimation3D not working with cam?".
    The rotation wasn't set when using a quaternion as opposed to a rotation matrix.
    Introducing RajawaliScene!
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Converted Euler rotations to Quaternions
    
    Converted local Euler rotations to Quaternion based rotation to avoid
    gimbal lock.
    Support for localized pitch, yaw, and roll
    Normalize line endings with .gitattributes
    Issue #117 camera up axis setters
    Geometry3D bug fix & replaced Matrix.invertM with a newer version
    orient to spline fix
    Added fog
    Ray picking, work in progress
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added fast math functions and fixed issue #14 and possible issue #16 (although I can't test it because I don't have the device)
    Added quaternion rotation, animated sprites
    Added a catmull-rom spline class.
    Added bounding volumes: sphere and box
    Intersection test are up next.
    Also removed @Override for classes that implement interfaces.
    Added animation classes
    Camera transform updates
    Added rotation to the camera
    Updated the particle material. It now uses camera distance to determine size.
    Added support for 2d rendering by moving the
    projection matrix calculation to the camera.
    Added a new camera (Camera2D) so that ortho
    rendering can be done. To render with 2d instead
    of with 3d simply use setCamera(new Camera2D())
    function in the constructor of your subclassed
    RajawaliRenderer.
    
    Also added a new direction paramater to the Plane
    class so that it can be created standing up on the y
    axiss, this makes creating a 2d plane that is visible
    by the 2d Camera by default easier.
    
    By default the 2d camera renders the scene without
    taking the aspect ratio into consideration, this is done
    so that it is as easy as possible to get a plane
    that covers the entire view (for live shader based wallpapers).
    Incomplete bounding box, added support for layouts.
    Set skybox to always render in the background, ignore depth
    Added Skybox, cube.
    Moved fov, near and far planes from renderer to camera class.
    initial commit
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    #1449 Adds FirstPersonCamera. Need to make updates to ATransformable3D to properly support it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1449 Implements orientation tracking. #1453 Adds local orientation to quaternions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1449 Adds FirstPersonCamera. Need to make updates to ATransformable3D to properly support it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Android X
    adresses #1572 with a working override of ArcballCamera.resetCameraOrientation()
    fix lint warnings; code format
    added FloatRange to mScreenMapping
    added ScreenMappingRatio setter and getter to ArcballCamera, default value is 1,
    setting this ratio to -1 accomodates the use case of looking at all sides small object
    from the outside, without having an environment to give context to the camera movement.
    Values from -1 to 1 are accepted, setting to 0 locks the ArcballCamera at the current orientation.
    Small fix to support fragments as well.
    Added rotation around pivot. Just need to get the target translation in there.
    Added zoom to ArcballCamera
    Added arcball camera zooming
    Moved cameras into their own directory
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug bounding box visualizer.
    #1436 Adds ball to camera visualizer to show the actual camera position
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug visualizer for cameras, lights and a grid floor.
    cleanup code
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Refactors SurfaceView implementation slightly to allow for matching with TextureView needs.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a debug enabled renderer and a helper class for configuring the debug options. Also removes GL error check at the end of a normal frame as it provides little useful information.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug visualizer for cameras, lights and a grid floor.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug visualizer for cameras, lights and a grid floor.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - RajawaliRenderer now only cares that it is making GL calls. The destination of the calls does not matter.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Step 1, fixes a few missing overrides/bad method names.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects author of RajawaliDebugRenderer.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a debug enabled renderer and a helper class for configuring the debug options. Also removes GL error check at the end of a normal frame as it provides little useful information.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1513 Adjusts dimensions to be 1 unit on each axis, simplifying scale calculations.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1513. Task #1436. Adds coordinate axis trident. It can be scaled/positioned like any other object.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug visualizer for cameras, lights and a grid floor.
    cleanup code
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Small change to debug light
    Added a debug visualizer for cameras, lights and a grid floor.
    cleanup code
    corrected hitPoint calculation in RayPickingVisitor.getIntersection()
    and RayPickingVisitor.isInBox() when the intersecting ray is a non-unit length.
    
    addresses issues arising in  #2007
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Updated RayPickingVisitor to use Intersector
    
    Moved ray-sphere intersection code out to Intersector utility class.
    Add intersection for BoundingSphere
    
    Added support for detecting intersection between the ray and the
    bounding sphere. It is determined automatically by whether the
    BaseObject3D object has a bounding sphere. If it does not, it reverts to
    detecting intersection with the bounding box.
    Ray picking changes
    Ray picking, work in progress
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Ray picking, work in progress
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Ray picking, work in progress
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Introducing RajawaliScene!
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Introducing RajawaliScene!
    cleanup code
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Introducing RajawaliScene!
    cleanup code
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Convert library logging to use RajLog
    Add second shadow mapping pass. Started integrating it into the material framework.
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Introducing RajawaliScene!
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Initial commit for LensFlare plugin
    #1376  Fixes bug with degenerate quaternion look at for anti-parallel case. Rotation was between wrong vectors.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1419 #1376 Fixes calculation of look at vectors to use proper direction, and attempts degenerate case of look and up vectors being in the same direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1376 Makes Directional and Spot lights use orientation and look at system for direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes an old issue #226 "DirectionalLight should use underlying ATransformable3D for direction". Cleaned up DirectionalLight and SpotLight while at it.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Set light direction with setLookAt() method
    The DirectionalLight is now a real DirectionalLight. Also added a PointLight. Fixed some shaders as well.
    initial commit
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    The DirectionalLight is now a real DirectionalLight. Also added a PointLight. Fixed some shaders as well.
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixed a few outstanding issue presented in the pull request.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Introducing RajawaliScene!
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Added spot type light
    Optimization improvement for ALight.java
    Auto-format ALight.java
    Set light color from int (hex)
    The DirectionalLight is now a real DirectionalLight. Also added a PointLight. Fixed some shaders as well.
    More fbx parser code. Made good progress, but not there yet.
    Added quaternion rotation, animated sprites
    cloning BaseObject3D bug fix. See issue #14
    Added a catmull-rom spline class.
    Added support for multiple lights.
    Updated the obj parser. Supports material files now.
    test
    Performance optimisation. Removed unnecessary allocations.
    initial commit
    #1376 Makes Directional and Spot lights use orientation and look at system for direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes an old issue #226 "DirectionalLight should use underlying ATransformable3D for direction". Cleaned up DirectionalLight and SpotLight while at it.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Spot light model and shader calculations
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cleans up wallpaper engine implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Convert library logging to use RajLog
    #1038
    
    Implemented default wallpaper xOffset with override functionality. Change comes from @ravenfeld.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fix for #805 After setting wallpaper, opening a new preview instance causes the wallpaper instance to go black.
    Remove unused import
    Destroy renderer at original spot
    
    Destroying it in onSurfaceDestroyed() seemed to create some problems.
    Remove ContextFactory, use GLSurfaceView default
    
    ContextFactory is more or less identical to the internal
    DefaultContextFactory that GLSurfaceView uses by default.
    Init GLSurfaceView in onCreate(), not constructor
    Replace GLWallpaperService with a simpler method
    
    Android's GLSurfaceView is now used. GLWallpaperService (which was
    basically a carbon copy of GLSurfaceView anyway) has been removed.
    
    Implementation is from http://www.learnopengles.com
    Forward onVisibilityChanged() calls to renderer
    
    RajawaliRenderer had onVisibilityChanged() defined, but it was never
    being called from the WallpaperService.Engine subclass.
    Auto-format Wallpaper.java
    Added null checks on renderer member to avoid null pointer exceptions when the platform sends spurious events after destroying the engine
    Normalize line endings with .gitattributes
    Revert "Fix freeze after selecting "Set Wallpaper""
    
    This reverts commit b49252060eb8c19c3b46fe15a1245fd6d021f6cf.
    Fix freeze after selecting "Set Wallpaper"
    
    The GL context has already been lost by the time onDestroy() is called,
    which can be seen as an error in LogCat:
    
    > libEGL: call to OpenGL ES API with no current context (logged once per
    thread)
    
    According to the Android Developers documentation, explicit cleanup
    shouldn't be needed anyway:
    
    > Note that when the EGL context is lost, all OpenGL resources
    associated with that context will be automatically deleted. You do not
    need to call the corresponding "glDelete" methods such as
    glDeleteTextures to manually delete these lost resources.
    
    https://developer.android.com/reference/android/opengl/GLSurfaceView.Renderer.html
    
    Fixes MasDennis/RajawaliWallpaperTemplate#4
    #173 added setOffsetNotifications
    - setOffsetNotificationsEnabled has been added with backwards compatibility.
    - Tested on Galaxy Nexus (international) and Motorola Droid.
    Fix for issue #106 Very large optimisation: JNI floatbuffer put
    Fix for issue #105
    
    enable touch events in Wallpaper.java
    Issue #68 cleaning up resources
    re-added docs
    added multi sampling support
    Added some functions that can be used to change the filter in for example the settings screen of a live wallpaper.
    
    Added a function to the renderer that removes all children, is useful when settings have changed in a live wallpaper and the scene needs to be reloaded or perhaps when a new scene needs to be loaded in a game.
    Added a method that sets GLSurfaceView to be transparent
    added onTouchEvent() to RajawaliRenderer
    Implemented onOffetsChanged for use in Live Wallpapers.
    Bug fixes in the shaders.
    The light position is now correctly calculated in the shaders.
    Added default colors to the sphere and plane primitives and added some convenience methods.
    initial commit
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    initial commit
    cleanup code
    fix lint warnings; code format
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Worked on the lights shader a bit more.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    Added ability to parse via File to Max3DS parser.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    #348 Finished implementing ParserExceptions.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Normalize line endings with .gitattributes
    Fix for issue #131
    Update src/rajawali/parser/Max3DSParser.java
    
    y = 1-readFloat(buffer); instead of x=1-readFloat(buffer);
    Fix for issue #118 multiple files in .3ds files weren't supported
    
    Doesn't support materials -yet-. Feel free to add support for that ;-)
    Max3DSParser bug fix
    Issue #31 3DS parser.
    
    Still a work in progress, doesn't parse materials yet.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Fixes #1747. Texture names were not using sanitized file names resulting in variable names in the fragment shader which were not acceptable (containing periods).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    - Initial commit for async parsing. Everything works great up until the addChild call which causes a GL error on the next frame.
    added string/file constructors to AMesheLoader and ALoader;
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Implemented foundation for AWD parsing.
    Fixed bug caused by #705
    Updated parsers to support File as a parameter. This is necessary to support the Rajawali Serializer tool and allows for use of the assets folder should someone want to use that instead of resources or sdcard location.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Forgot this one.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Parsers now also take a String that specifies the path to the file on the SD Card. Fixes issue #30
    More fbx parser code. Made good progress, but not there yet.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    Updated the obj parser. Supports material files now.
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    cleanup code
    fix lint warnings; code format
    A few minor cleanup tweaks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1466 Temporary fix. When parsing scene block matrices, coordinate conversion is used, when parsing skeleton animation matrices it is not used. This is a dirty hack, but the issue will be revisited in the future.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1465 Implements a more mathematically robust conversion from left to right handed coordinates. No change yet for AWD skeleton parsing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1084 Reverses Z translation of AWD transform matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - fix bug in AWDProperties parsing: note data end position BEFORE
    advancing current position
    
    - fix bug in LittleEndianDataInputStream: calls to skip(long) fall
    through to InputStream and fail to update mPosition counter
    Load all AWD material attributes; specularity/specular map, normal map,
    diffuse and ambient textures/levels/colors, etc.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    =(
    Still having problems with the triangle geometry but I think I am closer to solving that now.
    Still moving forward
    Add AWD features
    - Update LittleEndianDataInputStream to support position tracking.
    - Clean up and format LittleEndianDataInputStream for consistency.
    - Implement UserAttributes and Properties reading.
    - Rename Matrix methods in AWD input stream.
    - Remove parser reference from block headers as unnecessary.
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Overhaul of the exporter.
    - Moved AWD, OBJ, and Serialization export methods into classes and created extensible framework for general exporting.
    - Removed superfluous serializeOBJ methods as they are redundant.
    - Added code examples and class documentation to AWD parsing and other related classes.
    - Updated class documentation for some of the various classes I have written.
    Implemented basic AWD parsing and exporting. Parsing and exporting is now functional for geometry only.
    Further progress made on the parser. Now parsing all mesh data which opens a new perplexing problem that the AWD exporter does not seem to export normals =/
    More progress on the AWD parsing, now successfully parsing the vertices but still having a few issues and not convinced yet that this is a solid design overall.
    Implemented foundation for AWD parsing.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Normalize line endings
    
    I am not sure why .gitattributes didn't handle this on the other end.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    initial commit
    cleanup code
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1467 - Makes LoaderSTL constructors match other loaders.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Overhaul of the exporter.
    - Moved AWD, OBJ, and Serialization export methods into classes and created extensible framework for general exporting.
    - Removed superfluous serializeOBJ methods as they are redundant.
    - Added code examples and class documentation to AWD parsing and other related classes.
    - Updated class documentation for some of the various classes I have written.
    Further progress made on the parser. Now parsing all mesh data which opens a new perplexing problem that the AWD exporter does not seem to export normals =/
    Implemented foundation for AWD parsing.
    Updated parsers to support File as a parameter. This is necessary to support the Rajawali Serializer tool and allows for use of the assets folder should someone want to use that instead of resources or sdcard location.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Cleaned up StlParser and made it more flexible to use. Also added helper methods for determining file type.
    Fixed two bugs.
    1) In AMeshParser mRootObject is automatically instantiated by one constructor and not by the other.
    2) StlParser assumed fileIn would not be null. This is not the case when loading from the SdCard.
    Created an STL Parser for ASCII and Binary STL types. Parser auto detects STL type so it should work as a fire and forget style parser. In my tests I used various models from Thingiverse and did not run into any issues though I am sure some exist.
    
    I am working towards further developments on this such as wireframe option and more testing.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    LoaderOBJ added alpha support & fixed group hierarchy
    added string/file constructors to AMesheLoader and ALoader;
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added support for specular textures to the obj parser.
    Updated parsers to support File as a parameter. This is necessary to support the Rajawali Serializer tool and allows for use of the assets folder should someone want to use that instead of resources or sdcard location.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Fixed two bugs.
    1) In AMeshParser mRootObject is automatically instantiated by one constructor and not by the other.
    2) StlParser assumed fileIn would not be null. This is not the case when loading from the SdCard.
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Parsers now also take a String that specifies the path to the file on the SD Card. Fixes issue #30
    More fbx parser code. Made good progress, but not there yet.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    Updated the obj parser. Supports material files now.
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    More Geometry3D updates and other bug fixes.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    fix md2 models orientation, change from read xzy fromat to xyz format points;
    Updated the loader classes. When a texture is applied the color influence is set to 0.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added specular map support. Also removed old materials.
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Updated parsers to support File as a parameter. This is necessary to support the Rajawali Serializer tool and allows for use of the assets folder should someone want to use that instead of resources or sdcard location.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Long animation names can exist without being cropped
    
    Animation names longer than 6 characters were cropped without this fix.
    #348 Finished implementing ParserExceptions.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Close [Buffered]InputStream in MD2 parser
    Auto-format MD2 parser
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Normalize line endings with .gitattributes
    Lots of bug fixes #114 #120
    
    Fixes a lot of issues that occurred when rebuilding the scene after the
    OpenGL context was lost.
    MD5 Parser. Not fully working yet. Committing so I don't lose anything.
    
    It parses the md5mesh file but not the md5anim file. Work in progress.
    Fix small resource leak because streams where not closed
    MD2 fixes. Fixes issue #43
    Updated Documentation
    Fix for issue #35: undefined material in md2 file
    
    The parser crashed when there was not material defined in the md2 file.
    Now it reports a RajLog message but continues without throwing an
    exception.
    Parsers now also take a String that specifies the path to the file on the SD Card. Fixes issue #30
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Big update, performance optimisation using vertex buffers. Also re-worked the animation structure. Calculations have been moved to a vertex shader.
    Finished MD2 animation.
    MD2 parser almost complete.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Normalize line endings
    
    I am not sure why .gitattributes didn't handle this on the other end.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Fixes #1747. Texture names were not using sanitized file names resulting in variable names in the fragment shader which were not acceptable (containing periods).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fix issue #1648
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    fix RajLog error
    Convert library logging to use RajLog
    
    Converting Log.x to RajLog.x
    Fog is back! Fixed some bugs and cleaned up along the way.
    LoaderOBJ added alpha support & fixed group hierarchy
    Fixed LoaderOBJ to match Wavefront spec
    Updated the loader classes. When a texture is applied the color influence is set to 0.
    shader bug fixes and additions
    Added specular map support. Also removed old materials.
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Fixes issue #707 "ObjParser does not like my OBJs". OBJ Groups weren't handled appropriately. This resulted in an OpenGL out of memory error.
    Added support for specular textures to the obj parser.
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Renamed bump map to normal map. Added compressed textures.
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Updated parsers to support File as a parameter. This is necessary to support the Rajawali Serializer tool and allows for use of the assets folder should someone want to use that instead of resources or sdcard location.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    #348 Finished implementing ParserExceptions.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Fix for issue #401 Specular color check in obj parser.
    Ignore #comments and empty lines while parsing .obj and .mtl files.
    
    There is no point in creating a StringTokenizer for a comment or an empty line.
    I noticed that SketchUp adds lots of comments to its .obj and .mtl files.
    This update should slightly speed up parsing by ignoring comments and empty
    lines at the very first opportunity.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Keep flipped UV coords in [0, 1] in OBJ parser
    
    Fixes #188
    Fix for issue #94
    
    The ObjParser now also accepts files that don't contain any texture
    coordinates.
    several fixes
    
    chase camera fix, objparser fix, fpsupdatelistener addition
    Parsers now also take a String that specifies the path to the file on the SD Card. Fixes issue #30
    Added touch ripple post processing filter
    Obj Parser now also supports quads
    More fbx parser code. Made good progress, but not there yet.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    Added javadoc to ObjParser
    Made the ObjParser more robust.
    Updated bumpmap material
    Added bump  map material
    Updated the obj parser. Supports material files now.
    Added object picking (color picking, sampled from a framebuffer). Not finished yet.
    Bug fixes in the shaders.
    The light position is now correctly calculated in the shaders.
    Added default colors to the sphere and plane primitives and added some convenience methods.
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Normalize line endings
    
    I am not sure why .gitattributes didn't handle this on the other end.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    cleanup code
    fix lint warnings; code format
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    added LoaderGCode - using Vector3 and big lines - tested with files up to 5.5MB;
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    initial commit
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Normalize line endings
    
    I am not sure why .gitattributes didn't handle this on the other end.
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Updated the loader classes. When a texture is applied the color influence is set to 0.
    fixes issue #894 Imported Md5 has wrong axis orientation
    A few more shader/material system bug fixes.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Added specular map support. Also removed old materials.
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes bugs in MD5 animations caused by the double conversion.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Updated Quaternion class to be more efficient and consistent. Also added methods based on the libGDX implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Added exceptions to skeletal animation classes and parsers.
    md5 parser cleanup. started adding transition methods as well. #774
    Skeletal animation system clean up. Also fixed a bug in Quaternion.slerp() along the way. Win.
    Still needs more cleaning up but it is getting more robust. Also added exceptions which will benefit the user.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    #348 Finished implementing ParserExceptions.
    Skeletal Animation code clean up. Also merged GPUSkinningMaterial into DiffuseMaterial and PhongMaterial. Changed the default to a non-glossy material.
    While doing this I've come to the conclusion that materials need a bit of an overhaul.
    Skeleton animation bug fix. Shouldn't call super.setShaderParams() because it is a container only.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Fix for issue #503 "toSerializedObject3D crash and possible fix"
    MD5 GPU vertex skinning
    
    Added AnimationSkeleton class to serve as skeleton container for
    BoneAnimationObject3D objects.
    
    GPUSkinningMaterial extends PhongMaterial with vertex shader source
    which calculates vertex positions
    First "working" version of MD5 Parser & skeletal animation.
    Data is parsed, the animation is playing but there's something weird
    going on with the normals. Ran out of time but will look at this later.
    Some calculations can be done on the GPU in a shader. Will work on that
    soon as well ;-)
    
    Usage:
                    MD5MeshParser meshParser = new MD5MeshParser(this, R.raw.hellknight);
    
                    BoneAnimationObject3D o =
    (BoneAnimationObject3D)meshParser.parse().getParsedAnimationObject();
                    o.setScale(.03f);
                    o.addLight(light);
                    o.setPosition(0, -1, 0);
                    o.setRotY(-90);
                    addChild(o);
    
                    MD5AnimParser animParser = new MD5AnimParser("Walk7", this,
    R.raw.roar1);
                    BoneAnimationSequence seq =
    (BoneAnimationSequence)animParser.parse().getParsedAnimationSequence();
                    o.setAnimationSequence(seq);
                    o.play();
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    Normalize line endings with .gitattributes
    MD5 intermediate commit. Not working yet!
    
    Just securing my work ;-) Need to solve a few unrelated issues before
    completing this.
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    MD5 Parser. Not fully working yet. Committing so I don't lose anything.
    
    It parses the md5mesh file but not the md5anim file. Work in progress.
    cleanup code
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    Still moving forward
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    - change 'l' to 'L' for clarity of intent in AWD BlockSimpleMaterial
    - add properties parsing in BlockMeshInstance; does the mesh cast a
    shadow?
    Load all AWD material attributes; specularity/specular map, normal map,
    diffuse and ambient textures/levels/colors, etc.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Working on calculating rotation. Individual rotations seem fine but rotation combined with scales is problematic.
    Corrected bugs in material parsing. Mistakingly used 0/255 instead of float values.
    Implemented BlockMeshInstance: texture/material parsing is now applied to the geometry =D
    Finished Texture and Material blocks (basically). One more block parser to go for texture wrapped models straight from AWD.
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1084 Reverses Z translation of AWD transform matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - change 'l' to 'L' for clarity of intent in AWD BlockSimpleMaterial
    - add properties parsing in BlockMeshInstance; does the mesh cast a
    shadow?
    Load all AWD material attributes; specularity/specular map, normal map,
    diffuse and ambient textures/levels/colors, etc.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Set names to objects in LoaderAWD
    Working on calculating rotation. Individual rotations seem fine but rotation combined with scales is problematic.
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Implemented BlockMeshInstance: texture/material parsing is now applied to the geometry =D
    Finished Texture and Material blocks (basically). One more block parser to go for texture wrapped models straight from AWD.
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    #1466 Temporary fix. When parsing scene block matrices, coordinate conversion is used, when parsing skeleton animation matrices it is not used. This is a dirty hack, but the issue will be revisited in the future.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1084 Reverses Z translation of AWD transform matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    cleanup code
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Bug fixes in Object3D, RajawaliSurfaceView and LoaderAWD (z axis was inverted)
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Set names to objects in LoaderAWD
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    =(
    Still having problems with the triangle geometry but I think I am closer to solving that now.
    Still moving forward
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Overhaul of the exporter.
    - Moved AWD, OBJ, and Serialization export methods into classes and created extensible framework for general exporting.
    - Removed superfluous serializeOBJ methods as they are redundant.
    - Added code examples and class documentation to AWD parsing and other related classes.
    - Updated class documentation for some of the various classes I have written.
    Implemented basic AWD parsing and exporting. Parsing and exporting is now functional for geometry only.
    Further progress made on the parser. Now parsing all mesh data which opens a new perplexing problem that the AWD exporter does not seem to export normals =/
    More progress on the AWD parsing, now successfully parsing the vertices but still having a few issues and not convinced yet that this is a solid design overall.
    Implemented foundation for AWD parsing.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Still moving forward
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Overhaul of the exporter.
    - Moved AWD, OBJ, and Serialization export methods into classes and created extensible framework for general exporting.
    - Removed superfluous serializeOBJ methods as they are redundant.
    - Added code examples and class documentation to AWD parsing and other related classes.
    - Updated class documentation for some of the various classes I have written.
    Further progress made on the parser. Now parsing all mesh data which opens a new perplexing problem that the AWD exporter does not seem to export normals =/
    More progress on the AWD parsing, now successfully parsing the vertices but still having a few issues and not convinced yet that this is a solid design overall.
    Implemented foundation for AWD parsing.
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    cleanup code
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    #1466 Temporary fix. When parsing scene block matrices, coordinate conversion is used, when parsing skeleton animation matrices it is not used. This is a dirty hack, but the issue will be revisited in the future.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1084 Reverses Z translation of AWD transform matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Implemented BlockMeshInstance: texture/material parsing is now applied to the geometry =D
    Still having problems with the triangle geometry but I think I am closer to solving that now.
    Still moving forward
    Add AWD features
    - Update LittleEndianDataInputStream to support position tracking.
    - Clean up and format LittleEndianDataInputStream for consistency.
    - Implement UserAttributes and Properties reading.
    - Rename Matrix methods in AWD input stream.
    - Remove parser reference from block headers as unnecessary.
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Implemented BlockMeshInstance: texture/material parsing is now applied to the geometry =D
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Still moving forward
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Overhaul of the exporter.
    - Moved AWD, OBJ, and Serialization export methods into classes and created extensible framework for general exporting.
    - Removed superfluous serializeOBJ methods as they are redundant.
    - Added code examples and class documentation to AWD parsing and other related classes.
    - Updated class documentation for some of the various classes I have written.
    Further progress made on the parser. Now parsing all mesh data which opens a new perplexing problem that the AWD exporter does not seem to export normals =/
    More progress on the AWD parsing, now successfully parsing the vertices but still having a few issues and not convinced yet that this is a solid design overall.
    Implemented foundation for AWD parsing.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    #1466 Temporary fix. When parsing scene block matrices, coordinate conversion is used, when parsing skeleton animation matrices it is not used. This is a dirty hack, but the issue will be revisited in the future.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1084 Reverses Z translation of AWD transform matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Parse skeletal animations from AWD files:
        - BlockTriangleGeometry builds BoneVertex[] and BoneWeight[] from
    AWD joint/weight streams, packages SkeletalAnimationChildObject3Ds
    meshes within SkeletalAnimationObject3D container
        - BlockSkeleton defines joint hierarchy and inverse-bind-poses
        - BlockSkeletonPose specifies transforms for a single
    SkeletalAnimationFrame
        - BlockSkeletalAnimation builds frames into a
    SkeletalAnimationSequence
        - BlockAnimationSet groups animation sequences together for
    application to a skeleton
        - BlockAnimator binds a skeleton to a mesh instance and assigns it
    an animation set
    
    Also implements some changes that are more conducive to the AWD parsing
    model, e.g. allow SkeletalAnimationObject3D to manage its own set of
    SkeletalAnimationSequences.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Still having problems with the triangle geometry but I think I am closer to solving that now.
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    Still moving forward
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Implemented BlockMeshInstance: texture/material parsing is now applied to the geometry =D
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some reorganization and partial implementations
    - SimpleMaterial partially implemented
    - BitmapTexture partially implemented
    - Meaning of life discovered
    - Add exceptions package for better organization
    - All blocks are now given the AWD version of the LittleEndianInputStream, not sure why I didn't do this from the start.
    - Renamed some blocks to match the latest specification naming.
    apply review suggestions
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1376 Makes Directional and Spot lights use orientation and look at system for direction.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1359 Cleared lint warnings
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Updated the loader classes. When a texture is applied the color influence is set to 0.
    A few more shader/material system bug fixes.
    shader bug fixes and additions
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added alpha mask textures and cleaned up
    Added specular map support. Also removed old materials.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Refactored all parser suffixes to loader prefixes. Resolves #798.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Worked on the lights shader a bit more.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    More AWD Implementation
    - Moved ParsingException to its own class for ease of access.
    - Began implementation of high and low precision models reading.
    - Created skeleton classes for all known block parsers.
    - Updated AWD documentation pointing to Away3D Github repo.
    Implemented basic AWD parsing and exporting. Parsing and exporting is now functional for geometry only.
    Update FBXParser.java
    
    Added implementation for camera and basic implementation for lights
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Updated parsers to support File as a parameter. This is necessary to support the Rajawali Serializer tool and allows for use of the assets folder should someone want to use that instead of resources or sdcard location.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    #348 Finished implementing ParserExceptions.
    #348 Implemented exception throwing in AParser to force proper handling of parser implementations. STLParser has been updated, the remaining parsers also need to be updated to throw the ParserException instead of using internal handling.
    Added some new parser interfaces to clean things up.
    MD5 animation support work in progress. Parses mesh but animation isn't
    working yet.
    Also fixed a bug in the gouraud shader.
    orient to spline fix
    Parsers now also take a String that specifies the path to the file on the SD Card. Fixes issue #30
    First working version of the FBX parser.
    More fbx parser code. Made good progress, but not there yet.
    Added an FBX parser. Still a work in progress though.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update FBXValues.java
    
    Added basic implementation for lights
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    More fbx parser code. Made good progress, but not there yet.
    Added an FBX parser. Still a work in progress though.
    cleanup code
    Fixes #1561
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1306 Adds special case for Y axis up planes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1306. Changes winding order of triangles to be counter clockwise.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Plane bug fix. When the plane's axis was Axis.Z it faced the wrong direction.
    Plane texture coordinates bug fix
    Plane winding order & normal direction bug fix
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Bug fix: uv coordinates were rotated when plane was facing up.
    Added methods to allow for integration with augmented reality fameworks. A Rajawali-Vuforia template will be pushed to Github soon.
    Added support for texture tiling on planes.
    Revert "Revert "Added an extra option to the constructor. the plane up axis can be specified now. the default axis is Axis.Z, looking at the camera. To create a ground plane use Axis.Y.""
    
    This reverts commit 2a749f4258be2026b074b50c32da73c56fd5e73f.
    Revert "Added an extra option to the constructor. the plane up axis can be specified now. the default axis is Axis.Z, looking at the camera. To create a ground plane use Axis.Y."
    
    This reverts commit 6c742cfb83eec9a1762b57d86ac4e4a42adbb4e5.
    Added an extra option to the constructor. the plane up axis can be specified now. the default axis is Axis.Z, looking at the camera. To create a ground plane use Axis.Y.
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Issue #591 Incorrect texture coordinates
    Fixed texture coordinates for the Plane primitive
    
    The texture coordinates for the plane was rotated by default causing
    PostProcessingRenderer to display the framebuffer texture incorrectly.
    Also, other general textures on the plane would appear rotated. This is
    a simple fix that corrects the texture coordinates.
    Fix planes that have more rows than columns
    
    Fixes #574
    
    The index calculations were not correct when rows outnumbered columns
    for a plane. That was fixed, along with other changes to the class:
    
    * Unused options (direction, texture coordinate rotation) and
    constructors were removed. If someone wishes the plane to be rotated a
    certain way, they can use the generic rotation methods.
    * Auto-formatting was applied to clean up whitespace issues.
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Fix for issue #445 "DirectionalLight bug?". When creating a
    "camera facing plane" instead of "y up plane" the normal was pointing in
    the wrong direction.
    Normalize line endings with .gitattributes
    Lots of bug fixes #114 #120
    
    Fixes a lot of issues that occurred when rebuilding the scene after the
    OpenGL context was lost.
    Added touch ripple post processing filter
    Memory optimisation for materials. Removed the default material on all objects because this is an unnecessary step most of the time.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Particle Material distance calculation bugfix.
    Updated the particle material. It now uses camera distance to determine size.
    Added support for 2d rendering by moving the
    projection matrix calculation to the camera.
    Added a new camera (Camera2D) so that ortho
    rendering can be done. To render with 2d instead
    of with 3d simply use setCamera(new Camera2D())
    function in the constructor of your subclassed
    RajawaliRenderer.
    
    Also added a new direction paramater to the Plane
    class so that it can be created standing up on the y
    axiss, this makes creating a 2d plane that is visible
    by the 2d Camera by default easier.
    
    By default the 2d camera renders the scene without
    taking the aspect ratio into consideration, this is done
    so that it is as easy as possible to get a plane
    that covers the entire view (for live shader based wallpapers).
    More optimisation. Removed float array instantiation in setModelMatrix()
    fixed the Plane class. The default position was flat. Changed it to upright.
    Bug fixes in the shaders.
    The light position is now correctly calculated in the shaders.
    Added default colors to the sphere and plane primitives and added some convenience methods.
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    #1057 Rewrites NPrism to correct all normal issues.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Added eccentricity option to NPrism.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed IllegalArguementException being thrown for sides > 3. Ooops.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made the cleanup suggested by @ToxicBakery. Also fixed an issue related to terminated cones due to me trying to get fancy with the math and dividing by 0.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added n-sided prism primitive
    Added a debug visualizer for cameras, lights and a grid floor.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    - Added get point method to Line3D.java
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Changed the way object colors work to reduce memory footprint and increase performance (slightly).
    `AMaterial`'s method `setUseColor(boolean useColor)` has been removed. There are two new methods that replace it:
    - `setUseSingleColor(boolean value)`: When the object uses a single color for the whole mesh use this. This way no color buffer will be created which reduces the memory footprint and increases performance, especially in big scenes.
    - `setUseVertexColors(boolean value)`: Use this when your mesh has multiple colors. This isn't applicable to textures, just vertex colors.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Memory optimisation for materials. Removed the default material on all objects because this is an unnecessary step most of the time.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added a catmull-rom spline class.
    Added Line3D
    Fix for issue #1445 SkyBox UV coordinates mirrored
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Removed an unused variable.
    Added support for cube sky textures.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixes issue #814: CubeMapTexture & SkyboxMaterial not rendering Textures for Cube primitive in current master branch
    single texture skybox bug fix
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Fix for issue #728. Cube map textures for non-skyboxes weren't supported (normals pointing inward).
    Homogenize Cube's vertex colors
    Remove double-sided triangles from Cube
    Normalize line endings with .gitattributes
    Cube texture coords fix
    Added single texture sky box
    Memory optimisation for materials. Removed the default material on all objects because this is an unnecessary step most of the time.
    The DirectionalLight is now a real DirectionalLight. Also added a PointLight. Fixed some shaders as well.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Cube primitive bug fix
    Updated the obj parser. Supports material files now.
    Added Skybox, cube.
    Moved fov, near and far planes from renderer to camera class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixed the messed up whitespace Android Studio added.
    Added RectangularPrism primitive
    Update Cylinder.java
    
    remove unused member
    Update Cylinder.java
    
    remove debug code (oops)
    Create Cylinder.java
    
    Cylinder primitive based on the Sphere primitive
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Added a point sprite. This is a plane that always face the camera.
    Update Torus.java
    Create Torus.java
    
    Torus primitive based on the Sphere primitive
    cleanup code
    fix for ScreenQuad texture mapping issues:
     - the Y axis of object textures is rotated CCW from the X axis
     - the Y axis of EffectsPass textures is rotated CW from the X axisx.
    UV orientation in ScreenQuad primitive now matches that of Plane.
    Fixing #1615
    
    Per the GL ES 2.0 spec: "The pixel ownership test, the scissor test, dithering, and the _buffer writemasks_ affect the operation of glClear."
    
    Prior optimization attempt was inccorrect; just making the depth testing config in Scene.doColorPicking() identical to Scene.render()...
    
    Also, duplicating fix for ScreenQuad orientation.
    Added segmentation to screen quads.
    So we can use custom vertex shaders to get wibbily wobbly timey wimey effects.
    Fixed screen quad texture coordinates.
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Intermediate commit for the new post processing framework. Not working yet.
    The ScreenQuad's texture coordinates were wrong. Up side down.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    shader bug fix. removed the or in the if statement.
    Added a Camera2D to ScreenQuad. The reason for this is that a screenquad never uses a different camera. Makes things simpler.
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    added textureCoords to PointShell
    implemented PointShell, a geometry primitive for point sprite effects
    implemented PointAperatureMaterialPlugin, a material primitive for point sprite effects
    
    adresses issue #2176
    Cleans up some extraneous code from Sphere primitive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added an option to mirror the U texture coordinates. Useful for VR spheres.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fixed UV order in Sphere
    
    The order of U was backwards and was set as negative to fix. It is now
    properly reversed.
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Sphere: Remove "double negative" z math
    Sphere: Replace hardcoded PI with Math.PI
    Sphere: Small normal length optimization
    Auto-format Sphere.java
    Memory optimisation for materials. Removed the default material on all objects because this is an unnecessary step most of the time.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added bump  map material
    Updated the obj parser. Supports material files now.
    test
    Bug fixes in the shaders.
    The light position is now correctly calculated in the shaders.
    Added default colors to the sphere and plane primitives and added some convenience methods.
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    Android X
    fix typo
    Forces a clone of the lights array when setting it on materials to help avoid thread safety issues.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Adds some task debugging messages.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    set the far plane equal to the median of the diameter of spheres
    inscribed and outscribed to the skybox.
    
    Get the camera any closer to the corners of the skybox than an
    inscribed sphere starts to look wierd anyways.
    addresses issues raised in #1904
    cleaned up skybox implementation, added ability to set skybox geometry
    Move depth test for color picking to per-object
    defers camera frustum farPanel control in setSkyBox,
    makes behavour of setSkyBox<>addAndSwitchCamera combos less surprising
    add updateSkybox(Bitmap[] bitmaps)
    
    Signed-off-by: Jamesjue <junjuew@cs.cmu.edu>
    Fixing #1615
    
    Per the GL ES 2.0 spec: "The pixel ownership test, the scissor test, dithering, and the _buffer writemasks_ affect the operation of glClear."
    
    Prior optimization attempt was inccorrect; just making the depth testing config in Scene.doColorPicking() identical to Scene.render()...
    
    Also, duplicating fix for ScreenQuad orientation.
    Misc fixes/improvements to color-picking (due to investigating #1615)
    
    * Scene.java:
      * moving glClearDepth() prior to glClear()!
    * Object3D.java:
      * eliminating unused parameters from renderColorPicking() signature
      * Comment clean-ups
    * ObjectColorPicker.java:
      * Improving thread safety of mObjectLookup list
      * Filtering out requests when there is no listener
      * Skipping picking if there is no listener, and avoiding conflicts with setOnObjectPickedListener()...
      * Guarding against holes in the index due to unregistered objects and so returning null in onObjectPicked()
    Fixes #1624. Uses scratch members to prevent per-frame allocations for camera orientation and elliptical animation updates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Minor improvements for color-picking (#1607)
    
    - Scene.mPickerInfo is now volatile
    - Scene.requestColorPicking() annotates its ColorPickerInfo parm as NonNull
    - ColorPickerInfo is now immutable, and no longer has the unsued ByteBuffer
    Implementing issue 1607 - combining object color picking and post-porcessing
    
    Scene.java
    - added doColorPicking() to isolate color-picking render from normal render() control flow
    - renamed requestColorPickingTexture() to requestColorPicking()
    Object3D.java
    - introduced UNPICKABLE color/index, made it a default value
    - updated setPickingColor(), removed getPickingColor()
    - eliminated mIsPickingEnabled, now check for UNPICKABLE
    - added renderColorPicking() for optimized/independent color-picking rendering of the Object3D and its children (per #1387)
    Fixes #1605. Camera projection matrix should be updated with the current viewport width and height, not default width/height.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixing preDraw count bug (no issue #)
    
    - wrong counter ("preCount" instead of "preRenderCount") used in preDraw for loop in render()
    - renamed counter to match callback ("preDrawCount") to minimize future confusion
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Removed unnecessary frame buffer reset. This prevented the VR project from rendering properly.
    Fixes #1466 - Adds ability to mark lighting dirty in a scene. When materials are added after scene initialization and when scene switching occurs it causes the materials to have their lighting updated.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes shadow mapping. The new task system was neglecting to add the plugins when adding children.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fixes lighting issue caused by new task queue. Lighting was not being marked as dirty.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a debug visualizer for cameras, lights and a grid floor.
    Adds an additional frame callback for after animations but before drawing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1279.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1272 - Adds a method to create a skybox from an array of Bitmaps.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds some more debugging code related to lighting. #1291
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 #1393 Moves async parsing responsibility to RajawaliRenderer as this makes more sense from the point of view of using it to create scenes in the background and sharing models across scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Configures rajawali to use a development branch.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1338 - The inexplicable code block pointed out by @sergedesmedt was a checking for null on the wrong object. Corrects this to check if a collection has been set instead to determine if clearing is merited.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1339 - Fixes copy and paste error causing add methods to be called when they should be calling remove methods for the task queue.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Causes RajawaliScene to update the camera frustrum when switching cameras.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Declares RajawaliScene internal collections as final, to protect the safety of synchronization blocks and enforce the intention.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Shadow mapping is working now. Bang.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Fog is back! Fixed some bugs and cleaned up along the way.
    #1219 Rewrote AnimationQueue and added AnimationGroup
    - AnimationGroup provides simple method of controlling one or more animations. Animations in a group will be played and paused at the same time. Animations in a group should not be registered to the scene, only the group itself.
    - AnimationQueue provides similar functionality to original queue in that animations are played sequentially. As AnimationQueue extends AnimationGroup, only the queue should be registered with the scene.
    #1219 Animation refactor
    - Heavy changes to animations. This will break a lot/all current implementations. Sorry mates!
    - Animation now controls basic implementation of logical animation states.
    - Animation3D extends Animation adding basic knowledge of transformable objects.
    - Many of the animation classes have been split up to simplify their usage. We really need to be more strict with constructors, I blame myself for the previous state of animations.
    - IAnimation provides a more convenient way of generically interacting with animations.
    - This commit brought to you by Kirin Ichiban; Brewed For Good Times.
    - Initial commit for async parsing. Everything works great up until the addChild call which causes a GL error on the next frame.
    - Fixed bug in renderer causing object picking to only select the first picked object.
    - Fixed bug in RenderTargetTexture causing NPE.
    - Optimized the renderer code for picking such that the color picking material is only referenced once now and the render has one less else clause now.
    - Cleaned up ObjectColorPicker quite a bit and changed the circular calls to a static call for readability:
    pickerInfo.getPicker().createColorPickingTexture(pickerInfo);
    Is now:
    ObjectColorPicker.createColorPickingTexture(pickerInfo);
    Fixes issues #1042 and #1041. Material.setColorInfluence() must now be set to 0 manually after a texture has been added to a material.
    I've also added a flag in Object3D that indicates whether the material's color should be overridden or not.
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Bug fixes & additions for the new material system.
    Added lights management to RajawaliScene
    Added support for cube sky textures.
    Started adding diffuse textures.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Began converting to using Matrix4.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    A small but potential fix for issue #909.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added methods to allow for integration with augmented reality fameworks. A Rajawali-Vuforia template will be pushed to Github soon.
    Fixes #826
    
    Added helper methods to `RajawaliRenderer` and `RajawaliScene` for
    `Plugin` addition/removal.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Removed the resetGLState() call from RajawaliScene's constructor to onSurfaceCreated() in RajawaliRenderer. The reason for this is the fact that it was called before the OpenGL context was created. This resulted in errors.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Fix for bounding boxes not displaying. Same issue as previous commit.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added default blend state.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #99 by providing a pre-multiplied view-projection matrix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added initial code for default gl state.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    removed duplicate
    getNumTriangles() and getNumObjects() to RajawaliScene
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Small change in the method signature of render method to accommodate
    specifying different render target.
    Introducing RajawaliScene!
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes bug with ASceneFrameCallback extending AFrameTask.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds an additional frame callback for after animations but before drawing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects time units in ASceneFrameCallback.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    implemented default CubeMap texture loading
    
    by default, CubeMap textures are now diffuse shaded,
    but pixel data is assigned using the textureCube mapping system
    
    adresses issue #2185
    added basic dynamic light mapping
    
    addresses issue #2163
    
    lightmaps are added after lighting and only to to the rgb channels,
    this approach leaves alpha mapping intact.
    Android X
    implements a simpler approach to lighting Dynamic Materials
    
    addresses #2112
    cleanup code
    made the InverseViewMatrix available to the Environmental Mapping Shader,
    and updated the shader to update the mapping with the camera position.
    Addressing issue #1784 (part 2):
    - Adding debug log notice to Material.setModleMatrix() for IllegalStateException
    - Adding ATransformable3D.isZeroScale()
    - Adding isZeroScale() check at beginning of Object3D.render(), and skipping render if true
    - Adding both isDestroyed() and isZeroScale() checks to Object3D.renderColorPicking() to match render()
    Addressing issue #1784:
    - adding throws IllegalStateException to Matrix4.setToNormal() as it depends on Matrix4.inverse()
    - putting call to setToNormal() in Material.setModelMatrix() in try/catch block, thus enabling continued rendering of degenerate/zero-scale Object3Ds (which have singular model matrices)
    Material improvements to allow shader plugins to specify pre-processor directives.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Remove redundant code
    Fixes #1466 - Adds ability to mark lighting dirty in a scene. When materials are added after scene initialization and when scene switching occurs it causes the materials to have their lighting updated.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Fixes NPE for skybox textures list.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for issue #1445 SkyBox UV coordinates mirrored
    Fixes #1374 - In Object3d the material was having its parameters set prior to the color, so each object was getting the color of the object before it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Minor formatting cleanup.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1376
    
    In LightsVertexShaderFragment, the `muLightDirection` array was being indexed by `lightAttCount` rather than `lightDirCount` as we would expect.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds some more debugging code related to lighting. #1291
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds error message for the case when the number of textures needs to be truncated.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds an option to materials for deferred checking of device capabilities (used for determining maximum texture count). If it is deferred and you add too many textures, an error message will be printed but the maximum possible number of textures will be used, going in list order. Along with this, an option has been added to allow a RajawaliRenderer implementation to register with the resource managers in its constructor rather than waiting until onSurfaceCreated(). If you register in the constructor, registration will not occur in the onSurfaceCreated callback.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1377 Added debug method to method for printing generated material shaders
    Converted project to Gradle and added automatic local maven deployment for snapshots
    fix dirty value
    Bug fixes.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Fixes issue #1083 Infinite recursion in Material.setAmbientIntensity(double, double, double)
    Fixes issues #1042 and #1041. Material.setColorInfluence() must now be set to 0 manually after a texture has been added to a material.
    I've also added a flag in Object3D that indicates whether the material's color should be overridden or not.
    Intermediate commit
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    A few changes to make raw shader file loading possible. Resurrected @ToxicBakery's RawMaterialLoader and renamed it to RawShaderLoader.
    The custom shaders should extend the VertexShader and FragmentShader and instances of these should be passed to the material constructor.
    I will add an example to the examples project as well.
    Commented out the shader string RajLog message.
    Materials documentation update
    More documentation
    Added comments.
    A few more shader/material system bug fixes.
    Bug fixes & additions for the new material system.
    shader bug fixes and additions
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added support for cube sky textures.
    Added alpha mask textures and cleaned up
    Added specular map support. Also removed old materials.
    cube map and sphere map environment shader fully working.
    cube map and sphere map. though not fully working yet.
    Added a normal map shader.
    Added support for multiple textures. The Texture class now also has an influence property. This is useful for texture blending.
    Started adding diffuse textures.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Added shader code for DiffuseMethod.Lambert
    Work in progress. Directional, point and spot light shader.
    More work on the light shader.
    Intermediate commit. Started adding lights.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    New shader system progress. Shader string uploading, program creation, getting attribute and uniform handles.
    More additions to the new shader system. Coming along nicely.
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes a few different issues with including #1336. Right now the renderers are being registered twice: on render constructor and in onSurfaceCreated. They are also re-added on subsequent calls to onSurfaceCreate.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Fix out of bounds exception in material manager
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fix for issue #916: Nullpointer in MaterialManager - taskReset(). Fixed this by adding a null check.
    Bug fixes & additions for the new material system.
    Added lights management to RajawaliScene
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Fix for #805 After setting wallpaper, opening a new preview instance causes the wallpaper instance to go black.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Android X
    fix lint warnings; code format
    Toon shader is now setting colors as expected.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More documentation
    Added comments.
    A few more shader/material system bug fixes.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added specular highlights. Only Phong for now but expect more in the future.
    Added shader code for DiffuseMethod.Lambert
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Materials documentation update
    Added comments.
    Added specular map support. Also removed old materials.
    Added specular highlights. Only Phong for now but expect more in the future.
    Added shader code for DiffuseMethod.Lambert
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Materials documentation update
    Added comments.
    Added shader code for DiffuseMethod.Lambert
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a specular intensity parameters to Phong shading.
    More documentation
    Added comments.
    Added specular map support. Also removed old materials.
    Started adding diffuse textures.
    Added specular highlights. Only Phong for now but expect more in the future.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added specular map support. Also removed old materials.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    cleanup code
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    - Missing fix from previous commit, fixes NPE in object picking
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    cleanup code
    Added a method to StreamingTexture that allows you to swap the media player.
    Changes VideoTexture to StreamingTexture, to better reflect what it actually does.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a normal map shader.
    Started adding diffuse textures.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Issue #764. Fixed WrapType issue with Compressed Textures. I've set the default WrapType to WrapType.REPEAT.
    Renamed bump map to normal map. Added compressed textures.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added support for cube sky textures.
    cube map and sphere map. though not fully working yet.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    missed a file in the #2116 checkin
    Forgot include ;)
    Fix for Issue #1355 -- Animated GIF & Alpha Channel. Clears before drawing the canvas.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes & additions for the new material system.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    I couldn't resist. Added AnimatedGIFTexture.java.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a normal map shader.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    added basic dynamic light mapping
    
    addresses issue #2163
    
    lightmaps are added after lighting and only to to the rgb channels,
    this approach leaves alpha mapping intact.
    Android X
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    fix lint warnings; code format
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1448 - Implements CubeMapTexture replace method.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Added texture offset and texture repeat
    Added a normal map shader.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Fixes issue #850: "MIP mapping or antialising/multi pass problem in Master branch". Mipmapping is now enabled by default. It was like this in v0.9.
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    VideoTexture is now working as well. This wraps up most of the texture manager overhaul.
    Now testing can begin ....
    Renamed bump map to normal map. Added compressed textures.
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    cleanup code
    Added support for compressed textures in cube maps.
    Big fixes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds support for ETC2 textures. The Etc2Texture class can also be passed ETC1 textures, making a convenient option for GLES 3.+ devices.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Issue #764. Fixed WrapType issue with Compressed Textures. I've set the default WrapType to WrapType.REPEAT.
    Renamed bump map to normal map. Added compressed textures.
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    CubeMapTexture compressed texture fix. The compressed textures weren't removed from gpu memory
    CubeMapTexture update texture bug fix.
    Added support for compressed textures in cube maps.
    Fixes #1448 - Implements CubeMapTexture replace method.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added support for cube sky textures.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    I couldn't resist. Added AnimatedGIFTexture.java.
    Magic file name fix. Boom!
    Git doesn't recognise the case change in the cubemaptexture file name. Will change the file name back in the next push.
    VideoTexture is now working as well. This wraps up most of the texture manager overhaul.
    Now testing can begin ....
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    Fixes #1589. Corrects inlined API lint issues and reduces click accessibility issue to informational only
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds support for ETC2 textures. The Etc2Texture class can also be passed ETC1 textures, making a convenient option for GLES 3.+ devices.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Started adding diffuse textures.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Typo fix in Texture.class
    
    Fixed a mistake in the Texture class by removing a hardcoded string in
    the constructor for atlases.
    added Texture constructor to support TextureAtlas
    Renamed bump map to normal map. Added compressed textures.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    added basic dynamic light mapping
    
    addresses issue #2163
    
    lightmaps are added after lighting and only to to the rgb channels,
    this approach leaves alpha mapping intact.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a normal map shader.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Fix Array index out of bounds exception in TextureManager
    Updates the documentation for adding a texture to reflect the intent.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Fix for #805 After setting wallpaper, opening a new preview instance causes the wallpaper instance to go black.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    VideoTexture is now working as well. This wraps up most of the texture manager overhaul.
    Now testing can begin ....
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    addresses #2097
    
    resetting InputStreams before extracting image data.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added texture packing and retrieval
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    Added support for compressed textures in cube maps.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Made ATexture methods add() remove() replace() reset() protected instead of package private.
    
    Wanted to create an animated WebP texture, but not contained within the package,
    as such a texture must depend upon an external libWebP library.
    
    addresses #2057
    Added support for compressed textures in cube maps.
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Convert library logging to use RajLog
    Fixes ETC1 Texture bugs. See issues #946 and #940
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added alpha mask textures and cleaned up
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Renamed bump map to normal map. Added compressed textures.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added texture packing and retrieval
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds support for ETC2 textures. The Etc2Texture class can also be passed ETC1 textures, making a convenient option for GLES 3.+ devices.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes dynamic vertex shader to generate highp code if supported. Also changes fragment shader to use high precision.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    made the InverseViewMatrix available to the Environmental Mapping Shader,
    and updated the shader to update the mapping with the camera position.
    Fixes #1374 - In Object3d the material was having its parameters set prior to the color, so each object was getting the color of the object before it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping is working now. Bang.
    More shadow mapping code. Getting very close now.
    Intermediate commit for the new post processing framework. Not working yet.
    Refactored the addPrecisionSpecifier to addPrecisionQualifier to comply with OpenGL jargon.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added support for cube sky textures.
    Added specular map support. Also removed old materials.
    cube map and sphere map environment shader fully working.
    cube map and sphere map. though not fully working yet.
    Added texture offset and texture repeat
    Added support for multiple textures. The Texture class now also has an influence property. This is useful for texture blending.
    Added specular highlights. Only Phong for now but expect more in the future.
    Intermediate commit. Started adding lights.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    New shader system progress. Shader string uploading, program creation, getting attribute and uniform handles.
    More additions to the new shader system. Coming along nicely.
    implemented stringifiers for GLES 2.0 functions gl_PointCoord and gl_PointSize
    
    addresses issue #2174
    Implemented a basic function declaration and definition mechanism.
    
    Addresses issue #2156
    implemented stringifiers for the GLSL abs function
    
    adresses issue #2161
    implements a simpler approach to lighting Dynamic Materials
    
    addresses #2112
    cleanup code
    not building a shaderstring when a shaderstring is provided
    Makes it possible for all shader fragment implementations to provide preprocessor directives.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Material improvements to allow shader plugins to specify pre-processor directives.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added support for compressed textures in cube maps.
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    Fixes #1376
    
    In LightsVertexShaderFragment, the `muLightDirection` array was being indexed by `lightAttCount` rather than `lightDirCount` as we would expect.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1378 Corrected castVec3 method to set value instead of name.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Added a few more GLSL functions to the shader classes.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Finally found time to work on post processing! Depth buffer isn't enabled yet though. Also about to commit 4 examples to the examples app.
    This commit is sponsored by Aberlour Scottish Single Malt, 12 Years Old, Sherry Cask Matured. Slàinte mhath!
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    A few changes to make raw shader file loading possible. Resurrected @ToxicBakery's RawMaterialLoader and renamed it to RawShaderLoader.
    The custom shaders should extend the VertexShader and FragmentShader and instances of these should be passed to the material constructor.
    I will add an example to the examples project as well.
    Some shader additions and bugfixes
    Added documentation the AShader class
    Materials documentation update
    Added comments.
    Bug fixes & additions for the new material system.
    shader bug fixes and additions
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added alpha mask textures and cleaned up
    Added specular map support. Also removed old materials.
    cube map and sphere map. though not fully working yet.
    Added a normal map shader.
    Started adding diffuse textures.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Added shader code for DiffuseMethod.Lambert
    Light shaders almost done. Time to move on to diffuse & specular methods.
    Work in progress. Directional, point and spot light shader.
    More work on the light shader.
    Worked on the lights shader a bit more.
    Intermediate commit. Started adding lights.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    New shader system progress. Shader string uploading, program creation, getting attribute and uniform handles.
    More additions to the new shader system. Coming along nicely.
    work-in-progress commit for the new shader system.
    Implemented a basic function declaration and definition mechanism.
    
    Addresses issue #2156
    Makes it possible for all shader fragment implementations to provide preprocessor directives.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Material improvements to allow shader plugins to specify pre-processor directives.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    More additions to the new shader system. Coming along nicely.
    Changes dynamic vertex shader to generate highp code if supported. Also changes fragment shader to use high precision.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    made the InverseViewMatrix available to the Environmental Mapping Shader,
    and updated the shader to update the mapping with the camera position.
    Material improvements to allow shader plugins to specify pre-processor directives.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for issue #1445 SkyBox UV coordinates mirrored
    Fixes #1374 - In Object3d the material was having its parameters set prior to the color, so each object was getting the color of the object before it.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Intermediate commit for the new post processing framework. Not working yet.
    Some shader additions and bugfixes
    Refactored the addPrecisionSpecifier to addPrecisionQualifier to comply with OpenGL jargon.
    Added comments.
    A few more shader/material system bug fixes.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added support for cube sky textures.
    cube map and sphere map environment shader fully working.
    cube map and sphere map. though not fully working yet.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    More work on the light shader.
    Intermediate commit. Started adding lights.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    New shader system progress. Shader string uploading, program creation, getting attribute and uniform handles.
    More additions to the new shader system. Coming along nicely.
    implemented stringifiers for GLES 2.0 functions gl_PointCoord and gl_PointSize
    
    addresses issue #2174
    cleanup code
    added more assignment methods
    corrected Vec2, Vec3 and Vec4 assignments
    made the InverseViewMatrix available to the Environmental Mapping Shader,
    and updated the shader to update the mapping with the camera position.
    fixed typo in comment section
    changed wxyz() to xyzw()
    added wxyz() and rgba() functions to RVect4, and fixed w() assignment.
    This addresses the issue raised in #1858
    Added support for compressed textures in cube maps.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    fix shadervar return type error
    Shadow mapping is working now. Bang.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Added a few more GLSL functions to the shader classes.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Some shader additions and bugfixes
    Materials documentation update
    Added comments.
    Bug fixes & additions for the new material system.
    shader bug fixes and additions
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added support for cube sky textures.
    Added alpha mask textures and cleaned up
    cube map and sphere map environment shader fully working.
    cube map and sphere map. though not fully working yet.
    Added texture offset and texture repeat
    Added a normal map shader.
    Added support for multiple textures. The Texture class now also has an influence property. This is useful for texture blending.
    Started adding diffuse textures.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Added shader code for DiffuseMethod.Lambert
    Light shaders almost done. Time to move on to diffuse & specular methods.
    Work in progress. Directional, point and spot light shader.
    More work on the light shader.
    Worked on the lights shader a bit more.
    Intermediate commit. Started adding lights.
    New shader system progress. Shader string uploading, program creation, getting attribute and uniform handles.
    More additions to the new shader system. Coming along nicely.
    work-in-progress commit for the new shader system.
    Fixes #1376
    
    In LightsVertexShaderFragment, the `muLightDirection` array was being indexed by `lightAttCount` rather than `lightDirCount` as we would expect.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fixes #1412 lights now work again
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Added shader code for DiffuseMethod.Lambert
    Light shaders almost done. Time to move on to diffuse & specular methods.
    Work in progress. Directional, point and spot light shader.
    Intermediate commit. Started adding lights.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    New shader system progress. Shader string uploading, program creation, getting attribute and uniform handles.
    More additions to the new shader system. Coming along nicely.
    work-in-progress commit for the new shader system.
    cleanup code
    Fixes #1376
    
    In LightsVertexShaderFragment, the `muLightDirection` array was being indexed by `lightAttCount` rather than `lightDirCount` as we would expect.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    A few more shader/material system bug fixes.
    Bug fixes & additions for the new material system.
    shader bug fixes and additions
    Vertex colors.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Added shader code for DiffuseMethod.Lambert
    Work in progress. Directional, point and spot light shader.
    More work on the light shader.
    Worked on the lights shader a bit more.
    Intermediate commit. Started adding lights.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping is working now. Bang.
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added a specular intensity parameters to Phong shading.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Added specular map support. Also removed old materials.
    Added specular highlights. Only Phong for now but expect more in the future.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping is working now. Bang.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Added specular highlights. Only Phong for now but expect more in the future.
    Diffuse Lambert shading now working with point, directional and spot lights. Next up is specular highlights and textures. Progress!
    Added shader code for DiffuseMethod.Lambert
    Light shaders almost done. Time to move on to diffuse & specular methods.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Added specular map support. Also removed old materials.
    cube map and sphere map. though not fully working yet.
    Added texture offset and texture repeat
    Added a normal map shader.
    fixed camera Z axis rotation issue
    converted GLSL strings to shadr vars, no change in functionality
    made the InverseViewMatrix available to the Environmental Mapping Shader,
    and updated the shader to update the mapping with the camera position.
    now normalizing reflected V_EYE_DIR after setting Z component.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    cube map and sphere map environment shader fully working.
    cube map and sphere map. though not fully working yet.
    added basic dynamic light mapping
    
    addresses issue #2163
    
    lightmaps are added after lighting and only to to the rgb channels,
    this approach leaves alpha mapping intact.
    added support of mixed (Image and Video) texture mapping.
    addresses issue #1966
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    cube map and sphere map. though not fully working yet.
    Added texture offset and texture repeat
    Added a normal map shader.
    Added support for multiple textures. The Texture class now also has an influence property. This is useful for texture blending.
    Started adding diffuse textures.
    Minor formatting cleanup.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Added support for cube sky textures.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Added alpha mask textures and cleaned up
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Added a normal map shader.
    implemented default CubeMap texture loading
    
    by default, CubeMap textures are now diffuse shaded,
    but pixel data is assigned using the textureCube mapping system
    
    adresses issue #2185
    added support of mixed (Image and Video) texture mapping.
    addresses issue #1966
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    cube map and sphere map. though not fully working yet.
    Added texture offset and texture repeat
    Added a normal map shader.
    Added support for multiple textures. The Texture class now also has an influence property. This is useful for texture blending.
    Started adding diffuse textures.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added comments.
    Bug fixes & additions for the new material system.
    Vertex colors.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added a spritesheet material plugin with play/pause methods. See issue #1039
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping is working now. Bang.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Materials documentation update
    Added comments.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Added comments.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    added EmissionMaterialPlugin, which augments surfaces with glowing textures, because cyberpunk...
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Materials documentation update
    Added comments.
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Add second shadow mapping pass. Started integrating it into the material framework.
    Fog is back! Fixed some bugs and cleaned up along the way.
    added a plugin that applies a 2D CbCr distance based chromakey to a specified texture
    added a Decal material plugin, addresses #2013, usage:
    
        Texture decal = new Texture("decal", R.drawable.decal);
        Material material = new Material();
        material.addPlugin(new DecalMaterialPlugin(decal));
    
        The following texture modifiers are implemented
        - Texture.setWrapType()
        - Texture.setRepeat()
        - Texture.offsetEnabled()
        - Texture.setOffset(), setOffsetU(), setOffsetV()
    Android X
    cleaned up interface,
    now multiplying alpha so plugin works as expected if the texture has alpha values other than 1.
    Added AlphaMaterialPlugin, provides runtime control of material transparency
    The fresnel equations are a versatile effect ofr improving the look of solids.
    Implements a simplified approximation of the Fresnel Equation
    
    addresses issue #2169
    missed the GLES20 import in VerticalGradientMaterialPlugin
    added a descriptive comment
    implementation of a Vertical Gradient Material Plugin,
    overlay color is transparent at the bottom and screened over background at the top.
    
    essentially (1-(1-a*(1-v))*(1-b*v)),
    where a is the existing material, b is the overlay,
    and v is the v axis value premultiplied by b opacity.
    
    addresses issue #2157
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    added PointOrbitalMaterialPlugin, a simple vertex animator for point clouds
    a plugin providing individual lifetimes for each particle.
    
    addresses issue #2187
    
    usage:
    
     IndividualMaterialPlugin(num_points, start, end, lifetime, randomness)
    
    where:
    
     num_points: number of vertices in the object
     start:      time to start activating particles
     end:        time when all particles are active
     lifetime:   particle active lifetime
     randomness: amount of randomness, 0=no ranndomness, 1=fully random
    Added AlphaMaskMaterialPlugin
    implemented PointShell, a geometry primitive for point sprite effects
    implemented PointAperatureMaterialPlugin, a material primitive for point sprite effects
    
    adresses issue #2176
    Toast instead of crash in EGL config
    #1773 Fixes some potential NPEs on Samsung devices due to an apparently different view lifecycle.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Fix for edit mode (design view)
    #1610 #1282 #1229 Adjusts order of calls during view detachment to ensure the renderer has its opportunity to clean up. Need to allow cleanup to happen before GL thread terminates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Real fix for #1620. The only place where thread safety of the renderer delegate matters is in the onSurfaceDestroyed method in which case we don't care about it anymore anyway. Rather than trying to synchronize calls, we simply ignore the exception.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1620 Adds a null check to onSurfaceDestroyed in SurfaceView and VRSurfaceView to deal with life cycle issues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for #1502
    Bug fixes in Object3D, RajawaliSurfaceView and LoaderAWD (z axis was inverted)
    Make sure we pick a suitable config (888) when background is transparent.
    - bugfix: TypedArray.get for custom styles takes attribute index, not
    array index
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds more configuration methods to IRajawaliSurface.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Bug fixes for view lifecycle.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - Adds XML attributes for frame rate and render mode to RajawaliSurfaceView and RajawaliTextureView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Refactors SurfaceView implementation slightly to allow for matching with TextureView needs.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Cleanup and documentation for step 1
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Step 1, fixes a few missing overrides/bad method names.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1580 Missed one class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Bug fixes for view lifecycle.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Causes all framework surface containers (fragments, activity and daydream) to request a GLES 3.0 surface if available so that 3.0 features can be used. If unavailable, GLES 2 will be chosen.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1366 Extracted EGL Config to its own class and updated RajawaliActivity.java, RajawaliDaydream.java, and RajawaliFragment.java implementations.
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added Day Dream support.
    ToxicBakery offered a better approach to the problem
    fixed "Type mismatch: inferred type is String? but String was expected" warnings
    Toast instead of crash in EGL config
    Toast without thread check
    Toast instead of crash
    Additional cleanup
    
    Signed-off-by: Hannes Achleitner <hannes.software@gmx.at>
    more review
    apply review suggestions
    TextureView Kotlin
    #1627 Updated examples app with new launcher screen.
    - Lint issue count is on the ridiculous side
    - All example name strings are now resource backed
    - Test paths are determined by packagename instead of requiring path to be provided
    - Updated github logo constructors to remove init() method
    - Split Vuforia into two separate variants for with or without support
    #1580 Missed one class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Bug fixes for view lifecycle.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    cleanup code
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds more configuration methods to IRajawaliSurface.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Refactors SurfaceView implementation slightly to allow for matching with TextureView needs.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Cleanup and documentation for step 1
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a method to retrieve the number of scenes associated with a renderer,
    for use as infrastructure to enable iterating through the scene list.
    Android X
    fix typo
    cleaned up screen to cartesian coordinate mapping in raypicker/renderer
    
    addresses issues arising in #2007
    Updates version string in prepartation for release.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Updates version string in prepartation for release.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Updates version string in prepartation for release.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Updates build number for new release.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates version number for release.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Updates version number for release.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Reverted to an Atomic Integer
    Get the first empty in the loader threads SparseArray and use it as ID for the new thread.
    Updates release build number.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to fix signing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates renderer startup message for release.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1652. Override/default viewport dimension are now checked when switching scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates changelog and Renderer start message for Bombshell development.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced GL10 with GLES20
    #1470 Let the Anchor Steam review begin!
    
    Fixes #794.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1466 - Adds ability to mark lighting dirty in a scene. When materials are added after scene initialization and when scene switching occurs it causes the materials to have their lighting updated.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds gl setting for RajLog.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    The new task system didn't create the render targets. Fixed this by adding a call to RenderTarget.create()
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cleans up wallpaper engine implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1446 #1430 Fixes viewport dimensions for shadow mapping pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Bug fixes for view lifecycle.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - Adds XML attributes for frame rate and render mode to RajawaliSurfaceView and RajawaliTextureView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - RajawaliRenderer now only cares that it is making GL calls. The destination of the calls does not matter.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Cleanup and documentation for step 1
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a debug enabled renderer and a helper class for configuring the debug options. Also removes GL error check at the end of a normal frame as it provides little useful information.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds an option to materials for deferred checking of device capabilities (used for determining maximum texture count). If it is deferred and you add too many textures, an error message will be printed but the maximum possible number of textures will be used, going in list order. Along with this, an option has been added to allow a RajawaliRenderer implementation to register with the resource managers in its constructor rather than waiting until onSurfaceCreated(). If you register in the constructor, registration will not occur in the onSurfaceCreated callback.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 #1393 Moves async parsing responsibility to RajawaliRenderer as this makes more sense from the point of view of using it to create scenes in the background and sharing models across scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #370 Async parsing now functions. In the words of @MasDennis....Boom!
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes scene and render target lists in RajawaliRender final for better thread safety.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1383 Correct GLES version parsing to work on the Nexus 6
    Fixes bug with frame delta time I introduced when adding frame callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    moved initialization of TextureManager and MaterialManager to onSurfaceCreated
    
    moved initialization of TextureManager and MaterialManager from
    onSurfaceChanged to onSurfaceCreated so Textures and Materials can be
    loaded in an override of this method (like google strongly advises in
    their developer presentations)
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Viewport sizing bug fixes and added support to PostProcessingManager for different viewport sizes. This is especially useful for render to texture.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Fixes #1167, removes convenience methods from RajawaliRenderer.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1208.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1175. A small fix. This is unfortunately somewhat fragile for non-compliant devices but the fact that it is needed at all leaves little other option. The GLES spec states that the number string portion should be alone, so the colon that this fixes simply shouldnt exist. As a precaution I have also added a check for a hyphen as that seems like the only other likely violation.
    - Initial commit for async parsing. Everything works great up until the addChild call which causes a GL error on the next frame.
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    A few changes to make raw shader file loading possible. Resurrected @ToxicBakery's RawMaterialLoader and renamed it to RawShaderLoader.
    The custom shaders should extend the VertexShader and FragmentShader and instances of these should be passed to the material constructor.
    I will add an example to the examples project as well.
    Fixes issue #1044.
    
    Added two missing brackets. Thanks to @chocomega for the discovery.
    shader bug fixes and additions
    Skeletal Animation shader.
    Also removed filters. This will be part of the task ahead. Post processing.
    Refactored FPSUpdateListener to OnFPSUpdateListener.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Made GLES version parameters static.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixed a bug preventing a surface from being properly identified as ES
    3.0 to RajawaliRenderer.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    work-in-progress commit for the new shader system.
    Adds initial support for OpenGL ES 3.0
    
    Prepares the way for Open GL ES 3.0 features.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Switched TimerTask for frame rendering to ScheduledThreadPoolExecutor
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #927. The case statements added in the texture manager rewrite
    were missing their break statements causing a fall through behavior. I
    am not certain but this may have some impact on #921.
    A small but potential fix for issue #909.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix for #805 After setting wallpaper, opening a new preview instance causes the wallpaper instance to go black.
    Added methods to allow for integration with augmented reality fameworks. A Rajawali-Vuforia template will be pushed to Github soon.
    Fixes #826
    
    Added helper methods to `RajawaliRenderer` and `RajawaliScene` for
    `Plugin` addition/removal.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Removed the resetGLState() call from RajawaliScene's constructor to onSurfaceCreated() in RajawaliRenderer. The reason for this is the fact that it was called before the OpenGL context was created. This resulted in errors.
    geometry and buffer optimisation. color, normal and texture coordinate buffers were created when they weren't used.
    added boolean parameters to primitives to indicate whether specific buffers should be created or not.
    also added a ScreenQuad primitive. this was done with a regular Plane before but this was very confusing.
    also added a bit of documentation to the primitive classes.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Added a new Capabilities class. This can be queried for OpenGL specific capabilities like maximum texture size, maximum viewport dimensions, etc.
    This has been added to RajLog.systemInformation() as well.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    TextureManager cleanup and bug fixes. Also added a CHANGELOG.md file which will help users transition from 'old' Rajawali to 'Anchor Steam'.
    Added OpenGL error reporting. This will be helpful in certain scenarios like the one in issue #716 ("Flickering problem"). The problem here is that the system is running out of memory. This was however not reported back to the user.
    This will catch all OpenGL errors and it returns GLU.gluErrorString() through RajLog.e().
    VideoTexture is now working as well. This wraps up most of the texture manager overhaul.
    Now testing can begin ....
    Merging went horribly wrong. Pushing a clean version.
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    Added maximum texture image unit information to logSystemInformation()
    Added EffectComposer to RajawaliRenderer
    Moved the system & opengl logging method to where it belongs: RajLog.
    Added a method named logSystemInformation(). This outputs hardware and OpenGL information to LogCat which should be helpful when people log issues.
    It should be called in RajawaliRenderer.initScene().
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Small change in the method signature of render method to accommodate
    specifying different render target.
    Introducing RajawaliScene!
    Added a check to only update when animation is playing
    Fixed concurrency bug
    
    mAnimations.size() needs to be evaluated at every iteration just like
    mChildren iteration loop below to ensure the size is updated right away
    when animations are unregistered dynamically.
    #578 Marking off some check marks.
    #578 Translate Animation is now working.
    #578 Started a rewrite of the animation framework.
    Changed addCamera() methods.
    
    They now return the index of the added
    camera. Also changed addCamera() methods which took an index as a
    parameter to replaceCamera() where the index is the camera to replace.
    This was done because it will still be the responsibility of the
    specific implementation to keep track of the Cameras in whichever way it
    sees fit and allowing the list to grow unexpectedly could compromise
    this. With this in mind, the semantic of placing a camera in the list at
    an existing index changes to replacing the camera already at that
    location.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #228 Let there be damn simple texture loading!
    
    This is mostly just a shortcut to the annoying bitmap loading. TextureManager now has access to the context passed by the renderer. Additionally this breaks implementations of the ETC1 loading as context is no longer required.
    #227 Added support for loading shaders from resources.
    Added support for multiple cameras.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    BIG UPDATE. A necessary change to prevent confusion and future problems.
    Rajawali's coordinate system has changed to conform to the OpenGL
    standard. The z axis has now been inverted. Either invert your camera's
    z coordinate or call mCamera.setLookAt(0, 0, 0); to restore your scene.
    #558 #505
    Fixes issue #543 for mChildren in RajawaliRender. For loops which
    iterate over mChildren now check the length on each cycle through the
    loop. I did not include this for mPlugins because I can see no reason
    why this would be changing at a frame by frame level.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Issue #294 Made it easier to update the skybox textures:
    In the renderer class:
    updateSkybox(R.drawable.single_texture)
    or
    setSkybox(R.drawable.posz, R.drawable.posx, R.drawable.negz,
    R.drawable.negx, R.drawable.posy, R.drawable.negy);
    Fix for issue #537 RajawaliRenderer.setCamera() didn't update the
    camera's view matrix.
    Converted to CopyOnWriteArrayList
    
    Converted mChildren, mPlugins, mFilters to Collections.synchronizedList
    wrapped CopyOnWriteArrayList and removed all synchronized statements
    related to these members in RajawaliRenderer.
    Added synchronization checks to all uses of mChildren and mPlugins
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Stopped reloading uninitialized PostProcessingRenderer
    
    If the PostProcessingRenderer has not been initialized and mTextureSize
    is still set to -1, attempting to reload it will raise a GL error.
    Added cleanup for plugins for onDestroy()
    Added methods to add/remove plugins
    Changes to accomodate plugin system
    Continuation of issue #335, fixed the remaining for-each instances and turned them into regular for loops.
    fixes #335
    Removed use of For-Each loops in methods called each from from most common base classes. Likely still more cases that NEED to be cleaned up. Code not called each frame is not as important for optimization but should likely be updated eventually for consistency.
    Replace GLWallpaperService with a simpler method
    
    Android's GLSurfaceView is now used. GLWallpaperService (which was
    basically a carbon copy of GLSurfaceView anyway) has been removed.
    
    Implementation is from http://www.learnopengles.com
    Allow subclasses to fiddle with mSceneInitialized
    Consider scene uninitialized after destroyScene()
    Fix incorrect glClearColor() parameters
    Normalize line endings with .gitattributes
    Simplify picking logic by using color as an index
    
    Remove loops searching for matches and random colors.
    Concurrency fixes
    Lots of bug fixes #114 #120
    
    Fixes a lot of issues that occurred when rebuilding the scene after the
    OpenGL context was lost.
    Fixes #140 Removed line that nulled mChildren causing issues on certain devices.
    Restart timer when setFrameRate() is called
    Set default frame rate to refresh rate
    
    mFrameRate was changed to a float to match the refresh rate type
    Add getRefreshRate()
    Replace mNumChildren with mChildren.size()
    
    Use enhanced loop syntax recommended by Android Best Practices:
    http://developer.android.com/guide/practices/performance.html#foreach
    Added single texture sky box
    Fixes for issue #112
    
    The problem was that when shaders, textures or buffers were created
    during a render cycle, opengl errors were thrown. Texture didn't update.
    This is now properly handled by the framework.
    Fix for issue #106 Very large optimisation: JNI floatbuffer put
    Issue #68 cleaning up resources
    Issue #72 getNumTriangles()
    OpenGL error fixes for issue #45
    Updated Documentation
    several fixes
    
    chase camera fix, objparser fix, fpsupdatelistener addition
    Added sphere map material
    re-added docs
    added multi sampling support
    Added an FBX parser. Still a work in progress though.
    Added some functions that can be used to change the filter in for example the settings screen of a live wallpaper.
    
    Added a function to the renderer that removes all children, is useful when settings have changed in a live wallpaper and the scene needs to be reloaded or perhaps when a new scene needs to be loaded in a game.
    Post processing bug fix. NPOT texture caused a black screen on Samsung Galaxy Nexus.
    Added new tutorial to README.md
    Added MaskedMaterial.java - thanks to Joel Styles
    Added Batch rendering optimisation.
    Updated zip
    Added fog
    Ray picking, work in progress
    Removed post processing code from RajawaliRenderer to PostProcessingRenderer
    Added view frustum culling (thanks http://www.fenicesoftware.com/)
    Added a method that sets GLSurfaceView to be transparent
    Object picking sluggishness fix (issue #17)
    added onTouchEvent() to RajawaliRenderer
    Implemented onOffetsChanged for use in Live Wallpapers.
    Added logging class with option to disable debugging messages. This is most useful when using lots of materials as the debugging in AMaterial can get a bit excessive.
    Added support for multiple lights.
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    post processing filter (temporary) bug fix. need to implement proper resource management to recover textures when the context is lost.
    Cube primitive bug fix
    Added post processing filters. Needs optimisation and resource management.
    Added basic code for post processing effects.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    Added a toon material
    Activity & Renderer cleanup code to prevent memory leaks :O
    Added animation classes
    added object picking
    Added object picking (color picking, sampled from a framebuffer). Not finished yet.
    Camera transform updates
    Added rotation to the camera
    Shader changes
    Added support for 2d rendering by moving the
    projection matrix calculation to the camera.
    Added a new camera (Camera2D) so that ortho
    rendering can be done. To render with 2d instead
    of with 3d simply use setCamera(new Camera2D())
    function in the constructor of your subclassed
    RajawaliRenderer.
    
    Also added a new direction paramater to the Plane
    class so that it can be created standing up on the y
    axiss, this makes creating a 2d plane that is visible
    by the 2d Camera by default easier.
    
    By default the 2d camera renders the scene without
    taking the aspect ratio into consideration, this is done
    so that it is as easy as possible to get a plane
    that covers the entire view (for live shader based wallpapers).
    Material bug fixes.
    Incomplete bounding box, added support for layouts.
    Set skybox to always render in the background, ignore depth
    Added Skybox, cube.
    Moved fov, near and far planes from renderer to camera class.
    Bug fix in the particle shader
    Clean up and added support for vertex colors in the diffuse material shader
    initial commit
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixed a bug where the size wasn't set properly when the orientation changed.
    A few tweaks and additions to the post processing framework
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Added RenderTargetCube class
    
    RenderTargetCube inherits from RenderTarget class with support for
    dynamic cubemapping.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cleans up wallpaper engine implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Step 1, fixes a few missing overrides/bad method names.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    fix typo
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Variable name cleanup, use doubles when appropriate and fix calculation
    Initial proposed version of PIP renderer
    Forces stack trace to be printed when a frame task fails.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    Introducing RajawaliScene!
    cleanup code
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cleans up wallpaper engine implementation.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Wraps up lifecycle from RajawaliFragment into the surface and texture views.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - Adds XML attributes for frame rate and render mode to RajawaliSurfaceView and RajawaliTextureView.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Step 3 - RajawaliRenderer now only cares that it is making GL calls. The destination of the calls does not matter.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 Cleanup and documentation for step 1
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects a bug in RenderTarget where removal did not correctly specify the number of targets to remove.
    
    Signed-off-by: Jared Woolston <Jared.Woolston@gmail.com>
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Render target bug fix. Textures are added directly to TextureManager in a thread safe manner.
    Added effects to the post processing framework. Also added new passes.
    A few tweaks and additions to the post processing framework
    Finally found time to work on post processing! Depth buffer isn't enabled yet though. Also about to commit 4 examples to the examples app.
    This commit is sponsored by Aberlour Scottish Single Malt, 12 Years Old, Sherry Cask Matured. Slàinte mhath!
    Post processing bug fix. The framebuffer texture was never bound. Also fixed the side by side renderer for VR applications.
    Updated the loader classes. When a texture is applied the color influence is set to 0.
    Intermediate commit
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Added clone() method for RenderTarget class
    Added RenderTarget class
    fix typo
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Post processing bug fix. The framebuffer texture was never bound. Also fixed the side by side renderer for VR applications.
    Intermediate commit for the new post processing framework. Not working yet.
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial proposed version of PIP renderer
    Initial proposed version of PIP renderer
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Introducing RajawaliScene!
    Added destroy() method
    Fixed typo that creeped in from LensFlare code
    Initial renderer plugin architecture
    cleanup code
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added destroy() method
    Initial renderer plugin architecture
    apply review suggestions
    fix lint warnings; code format
    Allows for new VBOs to be added to Geometry3D, allowing it to manage their life cycle rather than needing to do it externally.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Made initial conversion to using Matrix4 in the library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    Also removed GLES20 from default package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix breaking changes from changes in TextureManager
    Fixed a bug in the camera light angle calculation
    Shader performance improvement and bug fixes
    
    Added performance improvement for non-vertex texture version of fragment
    shader.
    
    Also fixes issues on Nvidia GPUs where GLES20.GL_FUNC_ADD is not
    properly supported.
    Initial commit for LensFlare plugin
    implements cubic bezier fix in a manner similar to quadratic curve fix
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Another integer math fix.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes an over looked integer math to double error causing fractional
    values to calculate incorrectly.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Added an option to close a Catmull Rom curve. The first and last control points will become points in the curve.
    Added reparametrization method for uniform point distribution along a curve. Will push an example as well.
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    #578 Added CatmullRomPath3D
    #578 Started a rewrite of the animation framework.
    Fixed array out of bounds bug
    
    Added index bound checking for AccelerateDecelerateInterpolator.
    orient to spline fix
    SerializedObject is now also possible for MD2 files. This means shorter load times bit bigger files ize.
    Optimisations & fix for issue #20 using int buffers instead of short
    buffers
    Added a catmull-rom spline class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes a few tweaks to the spiral paths, adds CoalesceAnimation3D.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Logarithmic and Archimedean spirals.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    #578 Marking off some check marks.
    #578 Started a rewrite of the animation framework.
    Added a catmull-rom spline class.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes a few tweaks to the spiral paths, adds CoalesceAnimation3D.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Logarithmic and Archimedean spirals.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updated the SVGPath class with the new bezier curves.
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    implements cubic bezier fix in a manner similar to quadratic curve fix
    forgot to normalize tangent result
    modified getCurrentTangent() to avoid clone() calls
    fixed tangent calculations, addresses issue #1928
    unit test and fix for uninitialized tmp variables
    
    fixes issue #1926 Unexpected NullPointerException in QuadraticBezierCurve3D
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes a few tweaks to the spiral paths, adds CoalesceAnimation3D.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Logarithmic and Archimedean spirals.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    ICurve3D was returning the same Vector3 which it took as a parameter and
    this led to some confusing and disjointed code in the library and
    examples. This commit fixes that.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolves method parameter order issue raised by @ToxicBakery.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced the methods that generate objects during the render
    Curves overhaul. Renamed classes and moved them into the "curves" sub package from the "animation" package.
    Also added a Quadratic Bezier Curve, a Linear Bezier Curve and a Compound Curve.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Ray picking, work in progress
    Android X
    fix lint warnings; code format
    Fixes #1743
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1589. Corrects inlined API lint issues and reduces click accessibility issue to informational only
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixing issue #1504 "createContext failed: EGL_BAD_ATTRIBUTE" exception on Samsung S3
    
    - In checkGLVersion(), tests show eglChooseConfig() ignores EGL_OPENGL_ES3_BIT_KHR on the S3, resulting in false positive matches
    - Instead, using eglGetConfigs to count/retrieve all available EGLConfigs, and then manually testing the EGL_RENDERABLE_TYPE attribute on each one for EGL_OPENGL_ES3_BIT_KHR
    - Open issue: the prior implementation also checked for 4-4-4 color bit sizes, is that still useful? If not, then that secondary check should be removed/modified.
    - Also moving eglTerminatDisplay() so it is always called before returning
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Causes all framework surface containers (fragments, activity and daydream) to request a GLES 3.0 surface if available so that 3.0 features can be used. If unavailable, GLES 2 will be chosen.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added a new Capabilities class. This can be queried for OpenGL specific capabilities like maximum texture size, maximum viewport dimensions, etc.
    This has been added to RajLog.systemInformation() as well.
    Do not remove item from array to maintain the consistency with the index.
    Misc fixes/improvements to color-picking (due to investigating #1615)
    
    * Scene.java:
      * moving glClearDepth() prior to glClear()!
    * Object3D.java:
      * eliminating unused parameters from renderColorPicking() signature
      * Comment clean-ups
    * ObjectColorPicker.java:
      * Improving thread safety of mObjectLookup list
      * Filtering out requests when there is no listener
      * Skipping picking if there is no listener, and avoiding conflicts with setOnObjectPickedListener()...
      * Guarding against holes in the index due to unregistered objects and so returning null in onObjectPicked()
    Fixes #1640 Adds a method to OnObjectPickedListener which is called when no object was detected.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Minor improvements for color-picking (#1607)
    
    - Scene.mPickerInfo is now volatile
    - Scene.requestColorPicking() annotates its ColorPickerInfo parm as NonNull
    - ColorPickerInfo is now immutable, and no longer has the unsued ByteBuffer
    Implementing issue 1607 - combining object color picking and post-porcessing
    
    Scene.java
    - added doColorPicking() to isolate color-picking render from normal render() control flow
    - renamed requestColorPickingTexture() to requestColorPicking()
    Object3D.java
    - introduced UNPICKABLE color/index, made it a default value
    - updated setPickingColor(), removed getPickingColor()
    - eliminated mIsPickingEnabled, now check for UNPICKABLE
    - added renderColorPicking() for optimized/independent color-picking rendering of the Object3D and its children (per #1387)
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fog is back! Fixed some bugs and cleaned up along the way.
    - Fixed bug in renderer causing object picking to only select the first picked object.
    - Fixed bug in RenderTargetTexture causing NPE.
    - Optimized the renderer code for picking such that the color picking material is only referenced once now and the render has one less else clause now.
    - Cleaned up ObjectColorPicker quite a bit and changed the circular calls to a static call for readability:
    pickerInfo.getPicker().createColorPickingTexture(pickerInfo);
    Is now:
    ObjectColorPicker.createColorPickingTexture(pickerInfo);
    started working on post processing.
    also added a side by side renderer for virtual reality glasses.
    Removed redundant materials. Added toon, video, vertex animation support.
    Removed particles for now. I am going to rewrite this and make it quad based instead of point based. Why not.
    This commit was sponsored by Thames water. What a disgrace. I even have a Newcastle in the fridge.
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    Added an unregisterObject() method to the color picker.
    Added a material manager and made materials thread safe.
    Also removed the bitwise parameters. They are replaced with appropriate getters and setters. #792
    Another intermediate update. Making good progress but not there yet.
    Still need to add compressed texture and a few others. I'm about to commit working examples as well.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Introducing RajawaliScene!
    Fix crash when picker has no registered objects
    
    With no registered objects, getMaterial() is never called and
    mPickerMaterial is never initialized. When reload() is called, a null
    exception is thrown. To fix this, mPickerMaterial will always be
    initialized in initialize().
    Prevent object picker from failing after rotation
    
    The object picker's buffers are now large enough to accommodate both
    portrait and landscape orientations. Before the change, the picker
    stopped after rotating the screen and logged the following error
    message: "Could not bind FrameBuffer for color picking."
    
    The downside is that more memory is being consumed. Ideally, the object
    picker code should be updated to detect resolution changes and then
    reinitialize or resize the buffers accordingly.
    Normalize line endings with .gitattributes
    Simplify picking logic by using color as an index
    
    Remove loops searching for matches and random colors.
    Auto-format ObjectColorPicker.java
    
    Changed spelling of "initialise" to "initialize" to be consistent with
    other areas of the library.
    Add depth to color picker rendering
    
    Implementation copied from PostProcessingRenderer.
    
    Fixes #160
    Lots of bug fixes #114 #120
    
    Fixes a lot of issues that occurred when rebuilding the scene after the
    OpenGL context was lost.
    OpenGL error fixes for issue #45
    Ray picking, work in progress
    Added logging class with option to disable debugging messages. This is most useful when using lots of materials as the debugging in AMaterial can get a bit excessive.
    HUGE UPDATE. I changed the way how resources are dealt with when the OpenGL context is lost. Basically all vertex, index, texture, etc data is stored for quick retrieval.
    There's a new method called initScene() in RajawaliRenderer where scene construction should occur.
    Also fixed bugs in the ObjParser.
    added object picking
    Added object picking (color picking, sampled from a framebuffer). Not finished yet.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Began rewrite of Matrix4 class. Modified constructors and set methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Replaced GL10 with GLES20
    Re-adds some of what was removed in #1464
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #1389
    - Added debug enabled checking in performance critical areas
    - Removed the noise from the logging class.
    #1394 Step one of cleanup. Re-organizes methods and removes some extraneous ones.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Some cleanup for RajLog
    
    Some cleanup for Rajlog, fixed some documentation typos. Refactored some variables for consistency.  Deprecated old methods.
    Update RajLog.java
    Update RajLog.java
    
    Updated all logging to respect whether logging is on/off.  Added support for displaying logs by min log level. Added method to display device memory characteristics standard/large heap per app, mem avail, total mem. Documented everything.
    Fog is back! Fixed some bugs and cleaned up along the way.
    AWD
     - Added MetaData parser.
     - Multiple object parsing is now supported.
     - Multiple textures/materials supported on a basic level, mostly untested and unimplemented.
    
    RajLog
     - For performance reasons it is useful to know if debugging is implemented before wastefully creating many strings.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added a new Capabilities class. This can be queried for OpenGL specific capabilities like maximum texture size, maximum viewport dimensions, etc.
    This has been added to RajLog.systemInformation() as well.
    Further progress made on the parser. Now parsing all mesh data which opens a new perplexing problem that the AWD exporter does not seem to export normals =/
    Moved the system & opengl logging method to where it belongs: RajLog.
    Fix RajLog.v() log level
    First working version of the FBX parser.
    More fbx parser code. Made good progress, but not there yet.
    Added logging class with option to disable debugging messages. This is most useful when using lots of materials as the debugging in AMaterial can get a bit excessive.
    now correctly setting and scaling hitPoint
    
    addresses Unexpected Intersector.intersectRaySphere() behavior #1932
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored a lot of static methods to manipulate their object directly
    and renamed methods to be more descriptive.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Fixed thread synchronization issues
    
    Fixed thread synchronization issues with the static method calls when
    using Number3D instances as arguments which caused GLThread to slow down
    dramatically and blank in and out when the method is called.
    Added Intersector utility class
    
    Added Intersector utility class with code adapted from libGDX. Currently
    supports ray-sphere, ray-triangle, and ray-plane intersection detection.
    Changed screengrab parameter from name into path to give the user more control.
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Issue #829: "Generalize screen grab methods". Didn't generalise them but changed getPixelsFromBuffer()'s visibility to public so users can do whatever they want :) Also throwing exceptions as per @ToxicBakery's suggestion.
    Added a screen grab class that saves the pixels from the buffer to a file on the sd card.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Implemented basic AWD parsing and exporting. Parsing and exporting is now functional for geometry only.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    A few changes to make raw shader file loading possible. Resurrected @ToxicBakery's RawMaterialLoader and renamed it to RawShaderLoader.
    The custom shaders should extend the VertexShader and FragmentShader and instances of these should be passed to the material constructor.
    I will add an example to the examples project as well.
    RayPicker now calling OnObjectPickedListener.onNoObjectPicked()
    
    issue arising from #2007
    cleaned up screen to cartesian coordinate mapping in raypicker/renderer
    
    addresses issues arising in #2007
    removed old comment
    RayPicker now implements a bounding sphere intersection test
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1394 Replaces task system with Runnable based queues.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Refactored the Number3D class into Vector3 and Vector2D into Vector2.
    A drastic change but necessary. See also issue #586
    Ray picking changes
    Ray picking, work in progress
    - fix bug in AWDProperties parsing: note data end position BEFORE
    advancing current position
    
    - fix bug in LittleEndianDataInputStream: calls to skip(long) fall
    through to InputStream and fail to update mPosition counter
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Finished Texture and Material blocks (basically). One more block parser to go for texture wrapped models straight from AWD.
    Fixed the triangle block parsing; bug caused by adding twice on precision reads such that int claimed to move the pointer 8 bytes and double 16 bytes.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    #1003 Fix reading of uint_32 type.
    =(
    Still moving forward
    Add AWD features
    - Update LittleEndianDataInputStream to support position tracking.
    - Clean up and format LittleEndianDataInputStream for consistency.
    - Implement UserAttributes and Properties reading.
    - Rename Matrix methods in AWD input stream.
    - Remove parser reference from block headers as unnecessary.
    Add AWD features
    - Add scene graph block header class, shared amongst scene graph blocks as a data type.
    - Fix unsigned little endian reading of uint.
    - Refactor some methods to be better located.
    - Add AWD version and revision to block header for handling changes in parser over time.
    - Add BlockContainer for top level container objects.
    More progress on the AWD parsing, now successfully parsing the vertices but still having a few issues and not convinced yet that this is a solid design overall.
    MD2 parser, animation interfaces and vertex animation classes. Work in progress, not working yet.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored FPSUpdateListener to OnFPSUpdateListener.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    several fixes
    
    chase camera fix, objparser fix, fpsupdatelistener addition
    Android X
    Fixes #1640 Adds a method to OnObjectPickedListener which is called when no object was detected.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    added object picking
    Toast instead of crash in EGL config
    Toast instead of crash
    Additional cleanup
    
    Signed-off-by: Hannes Achleitner <hannes.software@gmx.at>
    more review
    apply review suggestions
    TextureView Kotlin
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    fix typo
    Modifies post processing manager and render passes to allow for automatic super sampling.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Fog is back! Fixed some bugs and cleaned up along the way.
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Added APass and RenderPass classes.
    
    APass represents a rendering pass to be used by the EffectsComposer.
    These will be used for multiple rendering pass effects.
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    cleanup code
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    PostProcessingManager now correctly configures non-fullscreen read and write RenderTargets.
    
    This addresses issue #2181, and might be connected to issue #2179
    Android X
    fix typo
    fix for ScreenQuad texture mapping issues:
     - the Y axis of object textures is rotated CCW from the X axis
     - the Y axis of EffectsPass textures is rotated CW from the X axisx.
    Cleanup from PR suggestions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies post processing manager and render passes to allow for automatic super sampling.
    Fixes #1611. Adds a task call for resizing render target textures and updates the post processing manager to handle the size differences automatically.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Some more viewport fixes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Viewport sizing bug fixes and added support to PostProcessingManager for different viewport sizes. This is especially useful for render to texture.
    Render target bug fix. Textures are added directly to TextureManager in a thread safe manner.
    Added effects to the post processing framework. Also added new passes.
    A few tweaks and additions to the post processing framework
    Finally found time to work on post processing! Depth buffer isn't enabled yet though. Also about to commit 4 examples to the examples app.
    This commit is sponsored by Aberlour Scottish Single Malt, 12 Years Old, Sherry Cask Matured. Slàinte mhath!
    Intermediate commit
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    fix typo
    cleanup code
    Modifies post processing manager and render passes to allow for automatic super sampling.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    Playing with realtime non-photorealisting rendering (NPR) in Rajawali.
    Implemented a Sobel postprocessing filter, added a subtract mode to BlendPass,
    combined it all to create a simple OutlineEffect.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping is working now. Bang.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping is working now. Bang.
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Shadow mapping. Intermediate commit. First pass is mostly finished.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    fix typo
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for the new post processing framework. Not working yet.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Added ClearMaskPass which clears stencil test set by previous MaskPass
    render passes
    cleanup code
    Playing with realtime non-photorealisting rendering (NPR) in Rajawali.
    Implemented a Sobel postprocessing filter, added a subtract mode to BlendPass,
    combined it all to create a simple OutlineEffect.
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Android X
    fix typo
    Cleanup from PR suggestions.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies post processing manager and render passes to allow for automatic super sampling.
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1558
    
    - Stores texture handles in a hashmap keyed by texture name. This allows reusing textures between materials if the same names are used. An initial attempt to find the locations is made on first compiling a material but if the texture name is not known there (such as for post processing) then it will be cached on the first use.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Added effects to the post processing framework. Also added new passes.
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    Intermediate commit for the new post processing framework. Not working yet.
    fix typo
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added a depth pass for post processing.
    Added a scene material that can be used for all objects.
    fix typo
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for the new post processing framework. Not working yet.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Finished updating MaskPass with the new Scene render signature
    Initial commit for ShaderPass, MaskPass, and EffectComposer classes.
    Added VignettePass postprocessing effect.
    added RadialBlurPass postprocessing effect
    
    addresses issue  #2155
    
    because realtime volumetric effects are too costly for phones
    fix typo
    cleanup code
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Cleanup from previous commit which was forgotten.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1446 #1430 Fixes viewport dimensions for shadow mapping pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    #1404
     - Bug fixes for surface view
     - Some minor cleanup of RajawaliRenderer
     - Fixes #1370
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Shadow mapping. Working pretty good now. Started cleaning up. Just need to add a few parameters and then it should be good to go into the dev branch.
    More shadow mapping code. Getting very close now.
    Implemented a Kaleidoscope Postprocessing Pass
    
    adresses issue #2159
    
    multiplies the mapping angle to compress the image angularly,
    swaps u,v texture axis to maintaining vertical symmetry,
    allows wraparound to implement the kaleidoscope repetition
    Playing with realtime non-photorealisting rendering (NPR) in Rajawali.
    Implemented a Sobel postprocessing filter, added a subtract mode to BlendPass,
    combined it all to create a simple OutlineEffect.
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    Android X
    fix typo
    fix lint warnings; code format
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Bug fixes.
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Added effects to the post processing framework. Also added new passes.
    Added PixelatePass, a postprocessor pass that pixelates the image
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Added effects to the post processing framework. Also added new passes.
    Intermediate commit for the new post processing framework. Not working yet.
    fix typo
    Changes name of RajawaliScene to Scene. It was missed in the prior de-smurfing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1450 Moves cameras into "cameras" package.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Arcball changes
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a new render frame callback system, allowing user code to register for pre- frame and post-frame callbacks. These callbacks receive not only the frame delta time, but also the elapsed render time in nanoseconds, allowing for more complex physics and animations in an easy to plugin fashion. Implementations can register for pre only, post only or both callbacks.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    More shadow mapping code. Getting very close now.
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    A few tweaks and additions to the post processing framework
    Intermediate commit for the new post processing framework. Not working yet.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Another intermediate commit. Will do a pull after this to sync with @AndrewJo's EffectsComposer changes.
    The texture manager class has been deep cleaned. It integrates with @jwoolston's task queue on RajawaliRenderer.
    Also added the new Texture class with subclasses. Still need to add a few more textures like compressed textures, video textures, etc.
    Added Javadoc to the class and removed an unused constructor argument
    TextureManager update. This commit is just to store my changes. It is far from ready for prime ime.
    Accomodate changes in the render signature in the RajawaliScene class.
    Added APass and RenderPass classes.
    
    APass represents a rendering pass to be used by the EffectsComposer.
    These will be used for multiple rendering pass effects.
    Android X
    fix typo
    fix lint warnings; code format
    Fixes #1589. Corrects inlined API lint issues and reduces click accessibility issue to informational only
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Working version of FXAA pass.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Added effects to the post processing framework. Also added new passes.
    Added ScanlinePass postprocessing effect.
    Added VignettePass postprocessing effect.
    cleanup code
    Corrects bad resource package name.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Fixed a bug where the size wasn't set properly when the orientation changed.
    Added effects to the post processing framework. Also added new passes.
    Finally found time to work on post processing! Depth buffer isn't enabled yet though. Also about to commit 4 examples to the examples app.
    This commit is sponsored by Aberlour Scottish Single Malt, 12 Years Old, Sherry Cask Matured. Slàinte mhath!
    Basic post processing is working now. Had a massive fight with the depth textures though. To be continued.
    cleanup code
    Terrain Normals now match the direction of normals of other primitives
    addresses issue #1952
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Allows for lazy VBO creation, allowing objects to be constructed before an EGL context is available. This is useful if the RajawaliFragment is in a view pager, or if you need it in an app that will have multiple screens. This is the first step in allowing for completely creating a scene prior to initScene(), and thus asynchronously creating scenes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Removed log message from the TerrainGenerator class.
    New terrain classes. Thanks to Ivan Battistella (@Ayrton81) for this excellent contribution. A demo is in the making.
    cleanup code
    Converts the library to use quaternions only for orientation tracking. In
    the process numerous efficiency improvements to the model matrix
    calculation have been made.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Intermediate commit for shadow mapping. Not working yet but making good progress. Did some cleaning up as well.
    Fixes #1055. Adds a new method to SquareTerrain to retrieve the height matrix.
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    Initial conversion of entirety of library.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Worked on the lights shader a bit more.
    Inserted a lot of TODOs. But the most important thing is that I've managed to get something on the screen. Progress!
    Next tasks include adding diffuse methods and lights.
    - Finished adding documentation to existing methods of Vector3.
    - Added rajawali.math.vector package and moved Vector2 and Vector3 to
    it.
    - Added ImmutableVector3 which inherits from Vector3.
    - Refactored more methods and moved some static members to Matrix4.
    - Updated CHANGELOG.md
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Added a lot more documentation and reorganized the methods.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    New terrain classes. Thanks to Ivan Battistella (@Ayrton81) for this excellent contribution. A demo is in the making.
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Refactored BaseObject3D to Object3D
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Resolve #964
    Updated the license.
    Updated all of the classes to include the license.
    New terrain classes. Thanks to Ivan Battistella (@Ayrton81) for this excellent contribution. A demo is in the making.
    Add back basic code coverage
    cleanup code
    fix lint warnings; code format
    make tests build
    a few more unit tests
    first pass of a ScreenQuad unit test fixture
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    removed the use of toString() for checking the quaternion state
    and now using the internal state directly
    Quaternion.pow now works for non-unit quaternions
    fix for Quaternion.pow works only for unit Quaternions #1899
    added more pow() unit tests
    corrected division test to use inverse() instead of pow(-1)
    added identity tests
    added Quaternion commutativity, associativity, and distributivity unit tests
    added a division unit test commented out because it (unexpectedly) fails
    #628 Converts tests to Android Tests to collect coverage and configures build script for emulator usage.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #628 Completes Quaternion testing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    WIP: Coordinate system fix with unit testing
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    resolves NullPointerException in SlerpAnimation3D
    
    bug fix and unit test for issue  #2032
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    cleanup code
    make tests build
    corrected hitPoint calculation in RayPickingVisitor.getIntersection()
    and RayPickingVisitor.isInBox() when the intersecting ray is a non-unit length.
    
    addresses issues arising in  #2007
    first pass unit tests for RayPickingVisitor
    fix tests
    Android X
    Attempting to fix code coverage unification
    - Moved rajawali tests to the `test` folder to enable local runs
    - Added a real androidTest case
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    Completely reverts version number bump.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Artifact version number changes which were previously forgotten.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Re-adds build properties.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1595 Adds cardboard integration (which now includes 3d audio).
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fix #1580 This will break existing code.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates group id and root package to org.rajawali3d.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates .travis.yml and gradle.properties for Rajawali Organization.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    update libraries
    Android X
    Converted to CircleCI for builds
    Android Studio 3.2.1; api28
    #1637 Consolidated all build related versions to single gradle script
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds Vuforia Example and dynamic module build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates maven push script to repository root to allow for use by other modules.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1590 Changes lint config to not abort on error.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updating build scripts trying to get release signing working.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Update Gradle plugin to 1.3.1.
    Update target and compile sdk to 23.
    Fix Travis config.
    Revert accidental build.gradle mucking commit
    Variable name cleanup, use doubles when appropriate and fix calculation
    Makes sure the rajawali views check for null attributes.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes #1441 and improves EGL config selection.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1404 #1398 #1394 #1395 Step 1.
    
    - Removes RajawaliFragment, RajawaliSupportFragment, and RajawaliActivity.
    - Adds new interfaces, IRajawaliSurface, IRajawaliSurfaceRenderer
    - Converts RajawaliRenderer to use the new rendering system
    - Adds RajawaliSurfaceView and RajawaliTextureView as well as their delegates.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1406 Cleaned up the gradle scripts and simplified the complexity for building local releases.
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds logging to debug isTag function in gradle build.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Corrects isTag method in gradle script.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master or tag.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes gradle build to skip uploadArchives task if branch is not master.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Should be properly configured for maven now.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Fixes version name parsing.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Updates gradle build to handle all deployment activities.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Trying to get Travis CI to download support libraries.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Changes support library reference to v21.0.3.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Modifies RajawaliFragment to allow for proper handling when placed in a view pager. Also adds RajawaliSupportFragment which is identical to RajawaliFragment, but based on the android.support.v4.app.Fragment class.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    #1363 Updated build tools and sdk
    #1363 Updated build tools and sdk
    Converted project to Gradle and added automatic local maven deployment for snapshots
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Relocates examples app to be a module of the main project. Additionally, changes the package of the examples app to "org.rajawali3d.examples"
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds vuforia library module. Testing travis config.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Artifact version number changes which were previously forgotten.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a watch face sample as well.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Adds a wear library module and a very simple wear activity example.
    
    Signed-off-by: Jared Woolston <jwoolston@tenkiv.com>
    Add back basic code coverage
    Add back basic code coverage
